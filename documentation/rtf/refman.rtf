{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment BioCro  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
0.92 \par
}}BioCro}
{\comment Generated byDoxgyen. }
{\creatim \yr2015\mo4\dy3\hr15\min41\sec7}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 0.92\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b AnaerobicParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BioCroToCropcentParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b C13Parms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b c3_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b c3tree} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b c4_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Can_Str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b canopy} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b canopyEnv} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b canopyLeaf} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b canopyoutput} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b canopyparms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b carbon} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cenT_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b crop_phenology} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cropcentEnvironment} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b cropcentlayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b DailyAutoResp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dailyclimate} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dailyvec} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dbp_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dbp_sugarcane_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b management::emergenceparms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ErosionParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ET_Str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FILES_S} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FL_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FLAG_S} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b flow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b flow_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b flowrestriction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc1::Flux1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c2::Flux10} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c2::Flux11} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som3c::Flux12} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc2::Flux2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood1::Flux3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood2::Flux4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood3::Flux5} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc1::Flux6} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc2::Flux7} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c1::Flux8} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c1::Flux9} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b frostParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b respirationParms::growth} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b harvesting} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b management::harvestparms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b harvesting::input} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b InputToCropcent} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b lai_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LAYERPAR_S} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b leaf} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b littervec} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b respirationParms::maint} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b maize_dbp_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b management} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b minerals} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b crop_phenology::minerals1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b miscanthus} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Napplication} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nitroParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b OrgLeachParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b harvesting::output} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc1::parms1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c2::parms10} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c2::parms11} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som3c::parms12} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc2::parms2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood1::parms3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood2::parms4} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood3::parms5} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc1::parms6} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b metabc2::parms7} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c1::parms8} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c1::parms9} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PHParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b planting} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilprofile::profilefluxes} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilprofile::profilepools} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilprofile::profileproperties} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rd_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b respirationParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rhizome} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b root} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b senthermaltemp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b seqRD_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SITEPAR_S} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b siteparameters} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SOIL_S} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SoilEmissions} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilML_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilprofile} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b soilText_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SoilTexture} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SoilWaterEffectParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som1c2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som2c2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b som3c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b stem} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b strucc2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SymbNFixationParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TempEffectParms} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b wood3} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ws_str} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b /home/dlebauer/dev/biocro/src/{\b Assigncropcent.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b assignManagement.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxBioCro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxBioCro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxcaneGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxcaneGro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Auxcropcent.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxCropGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxMaizeGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxMaizeGro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxwillowGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b AuxwillowGro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b BioCro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b BioCro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3CanA.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3CanA.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3canopy.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3EvapoTrans.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3EvapoTrans.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3photo.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c3photo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c4photo.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b c4photo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Calculate_Soil_Layer_Temperature.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b CalculateBiogeochem.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b CanA.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b CanA.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b caneGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Century.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Century.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Copy_CropCent_To_DayCent_Structure.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Copy_SoilWater_BioCro_To_CropCent.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b createNULLc3tree.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b crocent.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b cropcent.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b CropGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b dailywillow.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b denitrify.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b diffusiv.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b eC4photo.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b Filling_BioCro_SoilStructure.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b function_prototype.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b getsoilprop.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b leachdly.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b maizeGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b maizeGro.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b management.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b methane.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b n2o_model.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b nitrify.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b nox_pulse.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b pi_funcs.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b printcropcentoutput.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b soilwater.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b swconst.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b tgmodel.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b tracegas.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b wfps.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b willowCent.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b /home/dlebauer/dev/biocro/src/{\b willowGro.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AnaerobicParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v AnaerobicParms}
{\xe \v AnaerobicParms}
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ANEREF1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ANEREF2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ANEREF3}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREF1\:AnaerobicParms}
{\xe \v AnaerobicParms\:ANEREF1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ANEREF1}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANEREF2\:AnaerobicParms}
{\xe \v AnaerobicParms\:ANEREF2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ANEREF2}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ANEREF3\:AnaerobicParms}
{\xe \v AnaerobicParms\:ANEREF3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ANEREF3}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BioCroToCropcentParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms}
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b structometaSLOPE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b structometaINTERCEP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfacedamrN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfacedamrP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfacedamrS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfacedamrK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soildamrN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soildamrP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soildamrS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soildamrK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mindamrN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mindamrP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mindamrS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mindamrK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pabres}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mindamrK\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:mindamrK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mindamrK}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mindamrN\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:mindamrN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mindamrN}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mindamrP\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:mindamrP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mindamrP}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mindamrS\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:mindamrS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mindamrS}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pabres\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:pabres}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pabres}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soildamrK\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:soildamrK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soildamrK}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soildamrN\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:soildamrN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soildamrN}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soildamrP\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:soildamrP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soildamrP}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soildamrS\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:soildamrS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soildamrS}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v structometaINTERCEP\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:structometaINTERCEP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double structometaINTERCEP}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v structometaSLOPE\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:structometaSLOPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double structometaSLOPE}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfacedamrK\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:surfacedamrK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfacedamrK}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfacedamrN\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:surfacedamrN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfacedamrN}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfacedamrP\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:surfacedamrP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfacedamrP}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfacedamrS\:BioCroToCropcentParms}
{\xe \v BioCroToCropcentParms\:surfacedamrS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfacedamrS}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
C13Parms Struct Reference\par \pard\plain 
{\tc\tcl2 \v C13Parms}
{\xe \v C13Parms}
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b DRESP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b DLIGDF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DLIGDF\:C13Parms}
{\xe \v C13Parms\:DLIGDF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double DLIGDF}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DRESP\:C13Parms}
{\xe \v C13Parms\:DRESP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double DRESP}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
c3_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v c3_str}
{\xe \v c3_str}
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
\par
{
{\f2 #include <c3photo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Assim}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Gs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ci}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GrossAssim}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Assim\:c3_str}
{\xe \v c3_str\:Assim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Assim}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ci\:c3_str}
{\xe \v c3_str\:Ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Ci}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GrossAssim\:c3_str}
{\xe \v c3_str\:GrossAssim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GrossAssim}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gs\:c3_str}
{\xe \v c3_str\:Gs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Gs}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c3photo.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
c3tree Struct Reference\par \pard\plain 
{\tc\tcl2 \v c3tree}
{\xe \v c3tree}
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for c3tree:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structc3tree__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b leaf} {\b leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b stem} {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b root} {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rhizome} {\b rhizome}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b leafvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b stemvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b rootvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b rhizomevec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DailyAutoResp} {\b autoresp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GPP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b NPP}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v autoresp\:c3tree}
{\xe \v c3tree\:autoresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b DailyAutoResp} autoresp}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GPP\:c3tree}
{\xe \v c3tree\:GPP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GPP}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaf\:c3tree}
{\xe \v c3tree\:leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b leaf} {\b leaf}}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leafvec\:c3tree}
{\xe \v c3tree\:leafvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec}* leafvec}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NPP\:c3tree}
{\xe \v c3tree\:NPP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double NPP}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizome\:c3tree}
{\xe \v c3tree\:rhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b rhizome} {\b rhizome}}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomevec\:c3tree}
{\xe \v c3tree\:rhizomevec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * rhizomevec}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:c3tree}
{\xe \v c3tree\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b root} {\b root}}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootvec\:c3tree}
{\xe \v c3tree\:rootvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * rootvec}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stem\:c3tree}
{\xe \v c3tree\:stem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b stem} {\b stem}}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemvec\:c3tree}
{\xe \v c3tree\:stemvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * stemvec}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
c4_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v c4_str}
{\xe \v c4_str}
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
\par
{
{\f2 #include <c4photo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Assim}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Gs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ci}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GrossAssim}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Assim\:c4_str}
{\xe \v c4_str\:Assim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Assim}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ci\:c4_str}
{\xe \v c4_str\:Ci}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Ci}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GrossAssim\:c4_str}
{\xe \v c4_str\:GrossAssim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GrossAssim}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Gs\:c4_str}
{\xe \v c4_str\:Gs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Gs}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c4photo.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Can_Str Struct Reference\par \pard\plain 
{\tc\tcl2 \v Can_Str}
{\xe \v Can_Str}
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Assim}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Trans}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GrossAssim}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Assim\:Can_Str}
{\xe \v Can_Str\:Assim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Assim}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GrossAssim\:Can_Str}
{\xe \v Can_Str\:GrossAssim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GrossAssim}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Trans\:Can_Str}
{\xe \v Can_Str\:Trans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Trans}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
canopy Struct Reference\par \pard\plain 
{\tc\tcl2 \v canopy}
{\xe \v canopy}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
\par
{
{\f2 #include <c3canopy.h>}}\par
Collaboration diagram for canopy:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcanopy__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Nlayers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Idirtop}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Idifftop}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CosZenithAngle}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LAItotal}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyEnv} * {\b ENV}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyLeaf} * {\b Leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyoutput} * {\b OUT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CosZenithAngle\:canopy}
{\xe \v canopy\:CosZenithAngle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CosZenithAngle}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ENV\:canopy}
{\xe \v canopy\:ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b canopyEnv}* ENV}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Idifftop\:canopy}
{\xe \v canopy\:Idifftop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Idifftop}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Idirtop\:canopy}
{\xe \v canopy\:Idirtop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Idirtop}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LAItotal\:canopy}
{\xe \v canopy\:LAItotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LAItotal}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Leaf\:canopy}
{\xe \v canopy\:Leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b canopyLeaf}* Leaf}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Nlayers\:canopy}
{\xe \v canopy\:Nlayers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Nlayers}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OUT\:canopy}
{\xe \v canopy\:OUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b canopyoutput}* OUT}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c3canopy.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
canopyEnv Struct Reference\par \pard\plain 
{\tc\tcl2 \v canopyEnv}
{\xe \v canopyEnv}
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\par
{
{\f2 #include <c3canopy.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Idir}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Idiff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Itotal}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b windspeed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Catm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Temp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Catm\:canopyEnv}
{\xe \v canopyEnv\:Catm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Catm}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Idiff\:canopyEnv}
{\xe \v canopyEnv\:Idiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Idiff}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Idir\:canopyEnv}
{\xe \v canopyEnv\:Idir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Idir}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Itotal\:canopyEnv}
{\xe \v canopyEnv\:Itotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Itotal}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RH\:canopyEnv}
{\xe \v canopyEnv\:RH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RH}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Temp\:canopyEnv}
{\xe \v canopyEnv\:Temp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Temp}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v windspeed\:canopyEnv}
{\xe \v canopyEnv\:windspeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double windspeed}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c3canopy.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
canopyLeaf Struct Reference\par \pard\plain 
{\tc\tcl2 \v canopyLeaf}
{\xe \v canopyLeaf}
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\par
{
{\f2 #include <c3canopy.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LAI}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pLeafsun}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pLeafshade}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b heightf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LeafN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v heightf\:canopyLeaf}
{\xe \v canopyLeaf\:heightf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double heightf}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LAI\:canopyLeaf}
{\xe \v canopyLeaf\:LAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LAI}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LeafN\:canopyLeaf}
{\xe \v canopyLeaf\:LeafN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LeafN}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pLeafshade\:canopyLeaf}
{\xe \v canopyLeaf\:pLeafshade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pLeafshade}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pLeafsun\:canopyLeaf}
{\xe \v canopyLeaf\:pLeafsun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pLeafsun}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c3canopy.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
canopyoutput Struct Reference\par \pard\plain 
{\tc\tcl2 \v canopyoutput}
{\xe \v canopyoutput}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
\par
{
{\f2 #include <c3canopy.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sunlittemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b shadedtemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TotalAnet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TotalAgross}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TotalTrans}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b shadedAnet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b shadedAgross}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sunlitAnet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sunlitAgross}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b shadedTemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sunlitTemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b shadedTranspiration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sunlitTranspiration}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v shadedAgross\:canopyoutput}
{\xe \v canopyoutput\:shadedAgross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double shadedAgross}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shadedAnet\:canopyoutput}
{\xe \v canopyoutput\:shadedAnet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double shadedAnet}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shadedtemp\:canopyoutput}
{\xe \v canopyoutput\:shadedtemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double shadedtemp}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shadedTemp\:canopyoutput}
{\xe \v canopyoutput\:shadedTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double shadedTemp}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shadedTranspiration\:canopyoutput}
{\xe \v canopyoutput\:shadedTranspiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double shadedTranspiration}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sunlitAgross\:canopyoutput}
{\xe \v canopyoutput\:sunlitAgross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sunlitAgross}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sunlitAnet\:canopyoutput}
{\xe \v canopyoutput\:sunlitAnet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sunlitAnet}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sunlittemp\:canopyoutput}
{\xe \v canopyoutput\:sunlittemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sunlittemp}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sunlitTemp\:canopyoutput}
{\xe \v canopyoutput\:sunlitTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sunlitTemp}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sunlitTranspiration\:canopyoutput}
{\xe \v canopyoutput\:sunlitTranspiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sunlitTranspiration}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TotalAgross\:canopyoutput}
{\xe \v canopyoutput\:TotalAgross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TotalAgross}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TotalAnet\:canopyoutput}
{\xe \v canopyoutput\:TotalAnet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TotalAnet}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TotalTrans\:canopyoutput}
{\xe \v canopyoutput\:TotalTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TotalTrans}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b c3canopy.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
canopyparms Struct Reference\par \pard\plain 
{\tc\tcl2 \v canopyparms}
{\xe \v canopyparms}
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SLA}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b remobFac}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafNsen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v kN\:canopyparms}
{\xe \v canopyparms\:kN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kN}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leafNsen\:canopyparms}
{\xe \v canopyparms\:leafNsen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafNsen}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remobFac\:canopyparms}
{\xe \v canopyparms\:remobFac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double remobFac}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SLA\:canopyparms}
{\xe \v canopyparms\:SLA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SLA}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carbon Struct Reference\par \pard\plain 
{\tc\tcl2 \v carbon}
{\xe \v carbon}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b totalC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b unlablTOlabl}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v totalC\:carbon}
{\xe \v carbon\:totalC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double totalC}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unlablTOlabl\:carbon}
{\xe \v carbon\:unlablTOlabl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double unlablTOlabl}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cenT_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v cenT_str}
{\xe \v cenT_str}
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
\par
{
{\f2 #include <Century.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SCs} [9]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SNs} [9]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b MinN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Resp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v MinN\:cenT_str}
{\xe \v cenT_str\:MinN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MinN}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Resp\:cenT_str}
{\xe \v cenT_str\:Resp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Resp}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SCs\:cenT_str}
{\xe \v cenT_str\:SCs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SCs[9]}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SNs\:cenT_str}
{\xe \v cenT_str\:SNs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SNs[9]}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b Century.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
crop_phenology Struct Reference\par \pard\plain 
{\tc\tcl2 \v crop_phenology}
{\xe \v crop_phenology}
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
Collaboration diagram for crop_phenology:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcrop__phenology__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals1}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_str} {\b DBP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology::minerals1} {\b leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology::minerals1} {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology::minerals1} {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology::minerals1} {\b rhiz}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DBP\:crop_phenology}
{\xe \v crop_phenology\:DBP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dbp_str} DBP}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaf\:crop_phenology}
{\xe \v crop_phenology\:leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b crop_phenology::minerals1} {\b leaf}}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhiz\:crop_phenology}
{\xe \v crop_phenology\:rhiz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b crop_phenology::minerals1} rhiz}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:crop_phenology}
{\xe \v crop_phenology\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b crop_phenology::minerals1} {\b root}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stem\:crop_phenology}
{\xe \v crop_phenology\:stem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b crop_phenology::minerals1} {\b stem}}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cropcentEnvironment Struct Reference\par \pard\plain 
{\tc\tcl2 \v cropcentEnvironment}
{\xe \v cropcentEnvironment}
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for cropcentEnvironment:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcropcent_environment__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newminN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newminP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newminS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newminK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ammonium}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfaceTEMP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soilTEMP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b surfaceRELWC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soilRELWC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b PET}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AWC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leachedWATER}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soilrad}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b drainage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nit_amt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilTexture} {\b SOILTEX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ErosionParms} {\b EROSION}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b OrgLeachParms} {\b ORGLECH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b C13Parms} {\b C13}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SymbNFixationParms} {\b NFIX}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BioCroToCropcentParms} {\b biocrotocentparms}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ammonium\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:ammonium}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ammonium}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AWC\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:AWC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AWC}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v biocrotocentparms\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:biocrotocentparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b BioCroToCropcentParms} biocrotocentparms}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C13\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:C13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b C13Parms} C13}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drainage\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:drainage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double drainage}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EROSION\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:EROSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ErosionParms} EROSION}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leachedWATER\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:leachedWATER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leachedWATER}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minK\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:minK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minK}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minN\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:minN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minN}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minP\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:minP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minP}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minS\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:minS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minS}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newminK\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:newminK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newminK}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newminN\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:newminN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newminN}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newminP\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:newminP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newminP}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newminS\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:newminS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newminS}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NFIX\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:NFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SymbNFixationParms} NFIX}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nit_amt\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:nit_amt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nit_amt}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ORGLECH\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:ORGLECH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b OrgLeachParms} ORGLECH}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PET\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:PET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double PET}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pH\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:pH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pH}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soilrad\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:soilrad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soilrad}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soilRELWC\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:soilRELWC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soilRELWC}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soilTEMP\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:soilTEMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soilTEMP}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SOILTEX\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:SOILTEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilTexture} SOILTEX}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfaceRELWC\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:surfaceRELWC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfaceRELWC}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surfaceTEMP\:cropcentEnvironment}
{\xe \v cropcentEnvironment\:surfaceTEMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double surfaceTEMP}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cropcentlayer Struct Reference\par \pard\plain 
{\tc\tcl2 \v cropcentlayer}
{\xe \v cropcentlayer}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for cropcentlayer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structcropcentlayer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1} {\b strucc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2} {\b strucc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1} {\b metabc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2} {\b metabc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1} {\b som1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2} {\b som1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1} {\b som2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2} {\b som2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c} {\b som3c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1} {\b wood1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2} {\b wood2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3} {\b wood3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cropcentEnvironment} {\b ENV}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BioCroToCropcentParms} {\b BcroTOCentParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile} {\b soilprofile}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b siteparameters} {\b sitepar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilEmissions} {\b Emission}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v BcroTOCentParms\:cropcentlayer}
{\xe \v cropcentlayer\:BcroTOCentParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b BioCroToCropcentParms} BcroTOCentParms}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Emission\:cropcentlayer}
{\xe \v cropcentlayer\:Emission}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilEmissions} Emission}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ENV\:cropcentlayer}
{\xe \v cropcentlayer\:ENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b cropcentEnvironment} ENV}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc1\:cropcentlayer}
{\xe \v cropcentlayer\:metabc1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc1} {\b metabc1}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc2\:cropcentlayer}
{\xe \v cropcentlayer\:metabc2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc2} {\b metabc2}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sitepar\:cropcentlayer}
{\xe \v cropcentlayer\:sitepar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b siteparameters} sitepar}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soilprofile\:cropcentlayer}
{\xe \v cropcentlayer\:soilprofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilprofile} {\b soilprofile}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c1\:cropcentlayer}
{\xe \v cropcentlayer\:som1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c1} {\b som1c1}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2\:cropcentlayer}
{\xe \v cropcentlayer\:som1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c2} {\b som1c2}}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c1\:cropcentlayer}
{\xe \v cropcentlayer\:som2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c1} {\b som2c1}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c2\:cropcentlayer}
{\xe \v cropcentlayer\:som2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c2} {\b som2c2}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som3c\:cropcentlayer}
{\xe \v cropcentlayer\:som3c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som3c} {\b som3c}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc1\:cropcentlayer}
{\xe \v cropcentlayer\:strucc1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc1} {\b strucc1}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc2\:cropcentlayer}
{\xe \v cropcentlayer\:strucc2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc2} {\b strucc2}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood1\:cropcentlayer}
{\xe \v cropcentlayer\:wood1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood1} {\b wood1}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood2\:cropcentlayer}
{\xe \v cropcentlayer\:wood2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood2} {\b wood2}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood3\:cropcentlayer}
{\xe \v cropcentlayer\:wood3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood3} {\b wood3}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
DailyAutoResp Struct Reference\par \pard\plain 
{\tc\tcl2 \v DailyAutoResp}
{\xe \v DailyAutoResp}
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafdarkresp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemgrowth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootgrowth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomegrowth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemmaint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootmaint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomemaint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b total}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v leafdarkresp\:DailyAutoResp}
{\xe \v DailyAutoResp\:leafdarkresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafdarkresp}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomegrowth\:DailyAutoResp}
{\xe \v DailyAutoResp\:rhizomegrowth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomegrowth}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomemaint\:DailyAutoResp}
{\xe \v DailyAutoResp\:rhizomemaint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomemaint}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootgrowth\:DailyAutoResp}
{\xe \v DailyAutoResp\:rootgrowth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootgrowth}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootmaint\:DailyAutoResp}
{\xe \v DailyAutoResp\:rootmaint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootmaint}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemgrowth\:DailyAutoResp}
{\xe \v DailyAutoResp\:stemgrowth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemgrowth}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemmaint\:DailyAutoResp}
{\xe \v DailyAutoResp\:stemmaint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemmaint}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v total\:DailyAutoResp}
{\xe \v DailyAutoResp\:total}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double total}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dailyclimate Struct Reference\par \pard\plain 
{\tc\tcl2 \v dailyclimate}
{\xe \v dailyclimate}
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b doy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b temp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b precip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b solar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b windspeed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rh}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minimumTemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b snow}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v doy\:dailyclimate}
{\xe \v dailyclimate\:doy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int doy}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumTemp\:dailyclimate}
{\xe \v dailyclimate\:minimumTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minimumTemp}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v precip\:dailyclimate}
{\xe \v dailyclimate\:precip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double precip}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rh\:dailyclimate}
{\xe \v dailyclimate\:rh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rh}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v snow\:dailyclimate}
{\xe \v dailyclimate\:snow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double snow}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v solar\:dailyclimate}
{\xe \v dailyclimate\:solar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double solar}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v temp\:dailyclimate}
{\xe \v dailyclimate\:temp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double temp}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v windspeed\:dailyclimate}
{\xe \v dailyclimate\:windspeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double windspeed}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dailyvec Struct Reference\par \pard\plain 
{\tc\tcl2 \v dailyvec}
{\xe \v dailyvec}
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newbiomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newlitter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ageinTT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ageinTT\:dailyvec}
{\xe \v dailyvec\:ageinTT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ageinTT}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newbiomass\:dailyvec}
{\xe \v dailyvec\:newbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newbiomass}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newlitter\:dailyvec}
{\xe \v dailyvec\:newlitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newlitter}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dbp_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v dbp_str}
{\xe \v dbp_str}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kLeaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kStem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kRoot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kRhiz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kGrain}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v kGrain\:dbp_str}
{\xe \v dbp_str\:kGrain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kGrain}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kLeaf\:dbp_str}
{\xe \v dbp_str\:kLeaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kLeaf}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kRhiz\:dbp_str}
{\xe \v dbp_str\:kRhiz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kRhiz}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kRoot\:dbp_str}
{\xe \v dbp_str\:kRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kRoot}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kStem\:dbp_str}
{\xe \v dbp_str\:kStem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kStem}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dbp_sugarcane_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str}
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
\par
{
{\f2 #include <AuxcaneGro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kLeaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kStem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kRoot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kSeedcane}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kSugar}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kFiber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kTassel}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v kFiber\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kFiber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kFiber}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kLeaf\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kLeaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kLeaf}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kRoot\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kRoot}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kSeedcane\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kSeedcane}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kSeedcane}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kStem\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kStem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kStem}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kSugar\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kSugar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kSugar}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kTassel\:dbp_sugarcane_str}
{\xe \v dbp_sugarcane_str\:kTassel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kTassel}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxcaneGro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
management::emergenceparms Struct Reference\par \pard\plain 
{\tc\tcl2 \v management::emergenceparms}
{\xe \v management::emergenceparms}
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b minimumdoy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b emergenceTemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b StoragetoLeaffraction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b StemtoLeaffraction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b plantingrate}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v emergenceTemp\:management::emergenceparms}
{\xe \v management::emergenceparms\:emergenceTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double emergenceTemp}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minimumdoy\:management::emergenceparms}
{\xe \v management::emergenceparms\:minimumdoy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int minimumdoy}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plantingrate\:management::emergenceparms}
{\xe \v management::emergenceparms\:plantingrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double plantingrate}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StemtoLeaffraction\:management::emergenceparms}
{\xe \v management::emergenceparms\:StemtoLeaffraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double StemtoLeaffraction}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StoragetoLeaffraction\:management::emergenceparms}
{\xe \v management::emergenceparms\:StoragetoLeaffraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double StoragetoLeaffraction}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ErosionParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v ErosionParms}
{\xe \v ErosionParms}
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LHZF} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b EDEPTH}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ENRICH}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v EDEPTH\:ErosionParms}
{\xe \v ErosionParms\:EDEPTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double EDEPTH}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ENRICH\:ErosionParms}
{\xe \v ErosionParms\:ENRICH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ENRICH}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LHZF\:ErosionParms}
{\xe \v ErosionParms\:LHZF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LHZF[3]}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ET_Str Struct Reference\par \pard\plain 
{\tc\tcl2 \v ET_Str}
{\xe \v ET_Str}
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TransR}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b EPenman}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b EPriestly}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Deltat}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LayerCond}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Deltat\:ET_Str}
{\xe \v ET_Str\:Deltat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Deltat}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EPenman\:ET_Str}
{\xe \v ET_Str\:EPenman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double EPenman}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EPriestly\:ET_Str}
{\xe \v ET_Str\:EPriestly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double EPriestly}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LayerCond\:ET_Str}
{\xe \v ET_Str\:LayerCond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LayerCond}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TransR\:ET_Str}
{\xe \v ET_Str\:TransR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TransR}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FILES_S Struct Reference\par \pard\plain 
{\tc\tcl2 \v FILES_S}
{\xe \v FILES_S}
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
\par
{
{\f2 #include <soilwater.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b wbname} [{\b FILEPATH_MAX}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_outf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_soiln}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_co2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_yearsum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_soilc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_tgmonth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_dN2lyr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_dN2Olyr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_cflows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b fp_yrcflows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_wb}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_co2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_soiln}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_swc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_wfps}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_soiltavg}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_soiltmin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_soiltmax}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_stempdx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_bio}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_wflux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_mresp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_yearsum}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_livec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_deadc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_soilc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_sysc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_tgmonth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_dN2lyr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_dN2Olyr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_gresp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_dels}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_dcsip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_harvest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_cflows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_yrcflows}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_psyn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v fp_cflows\:FILES_S}
{\xe \v FILES_S\:fp_cflows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_cflows}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_co2\:FILES_S}
{\xe \v FILES_S\:fp_co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_co2}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_dN2lyr\:FILES_S}
{\xe \v FILES_S\:fp_dN2lyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_dN2lyr}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_dN2Olyr\:FILES_S}
{\xe \v FILES_S\:fp_dN2Olyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_dN2Olyr}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_outf\:FILES_S}
{\xe \v FILES_S\:fp_outf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_outf}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_soilc\:FILES_S}
{\xe \v FILES_S\:fp_soilc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_soilc}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_soiln\:FILES_S}
{\xe \v FILES_S\:fp_soiln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_soiln}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_tgmonth\:FILES_S}
{\xe \v FILES_S\:fp_tgmonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_tgmonth}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_yearsum\:FILES_S}
{\xe \v FILES_S\:fp_yearsum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_yearsum}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fp_yrcflows\:FILES_S}
{\xe \v FILES_S\:fp_yrcflows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE* fp_yrcflows}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wbname\:FILES_S}
{\xe \v FILES_S\:wbname}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char wbname[{\b FILEPATH_MAX}]}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_bio\:FILES_S}
{\xe \v FILES_S\:write_bio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_bio}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_cflows\:FILES_S}
{\xe \v FILES_S\:write_cflows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_cflows}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_co2\:FILES_S}
{\xe \v FILES_S\:write_co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_co2}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_dcsip\:FILES_S}
{\xe \v FILES_S\:write_dcsip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_dcsip}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_deadc\:FILES_S}
{\xe \v FILES_S\:write_deadc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_deadc}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_dels\:FILES_S}
{\xe \v FILES_S\:write_dels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_dels}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_dN2lyr\:FILES_S}
{\xe \v FILES_S\:write_dN2lyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_dN2lyr}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_dN2Olyr\:FILES_S}
{\xe \v FILES_S\:write_dN2Olyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_dN2Olyr}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_gresp\:FILES_S}
{\xe \v FILES_S\:write_gresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_gresp}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_harvest\:FILES_S}
{\xe \v FILES_S\:write_harvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_harvest}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_livec\:FILES_S}
{\xe \v FILES_S\:write_livec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_livec}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_mresp\:FILES_S}
{\xe \v FILES_S\:write_mresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_mresp}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_psyn\:FILES_S}
{\xe \v FILES_S\:write_psyn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_psyn}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_soilc\:FILES_S}
{\xe \v FILES_S\:write_soilc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_soilc}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_soiln\:FILES_S}
{\xe \v FILES_S\:write_soiln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_soiln}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_soiltavg\:FILES_S}
{\xe \v FILES_S\:write_soiltavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_soiltavg}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_soiltmax\:FILES_S}
{\xe \v FILES_S\:write_soiltmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_soiltmax}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_soiltmin\:FILES_S}
{\xe \v FILES_S\:write_soiltmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_soiltmin}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_stempdx\:FILES_S}
{\xe \v FILES_S\:write_stempdx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_stempdx}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_swc\:FILES_S}
{\xe \v FILES_S\:write_swc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_swc}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_sysc\:FILES_S}
{\xe \v FILES_S\:write_sysc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_sysc}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_tgmonth\:FILES_S}
{\xe \v FILES_S\:write_tgmonth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_tgmonth}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_wb\:FILES_S}
{\xe \v FILES_S\:write_wb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_wb}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
! FILE *fp_snow; \par
}}
{\xe \v write_wflux\:FILES_S}
{\xe \v FILES_S\:write_wflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_wflux}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_wfps\:FILES_S}
{\xe \v FILES_S\:write_wfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_wfps}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_yearsum\:FILES_S}
{\xe \v FILES_S\:write_yearsum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_yearsum}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_yrcflows\:FILES_S}
{\xe \v FILES_S\:write_yrcflows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_yrcflows}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b soilwater.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FL_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v FL_str}
{\xe \v FL_str}
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
\par
{
{\f2 #include <Century.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Fm}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Lc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v Fm\:FL_str}
{\xe \v FL_str\:Fm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Fm}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Lc\:FL_str}
{\xe \v FL_str\:Lc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Lc}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b Century.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FLAG_S Struct Reference\par \pard\plain 
{\tc\tcl2 \v FLAG_S}
{\xe \v FLAG_S}
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
\par
{
{\f2 #include <soilwater.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b verbose}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b debug}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v debug\:FLAG_S}
{\xe \v FLAG_S\:debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int debug}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v verbose\:FLAG_S}
{\xe \v FLAG_S\:verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int verbose}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b soilwater.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
flow Struct Reference\par \pard\plain 
{\tc\tcl2 \v flow}
{\xe \v flow}
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for flow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structflow__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:flow}
{\xe \v flow\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:flow}
{\xe \v flow\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
flow_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v flow_str}
{\xe \v flow_str}
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
\par
{
{\f2 #include <Century.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Resp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b MinN}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v fC\:flow_str}
{\xe \v flow_str\:fC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fC}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MinN\:flow_str}
{\xe \v flow_str\:MinN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MinN}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Resp\:flow_str}
{\xe \v flow_str\:Resp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Resp}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SC\:flow_str}
{\xe \v flow_str\:SC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SC}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b Century.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
flowrestriction Struct Reference\par \pard\plain 
{\tc\tcl2 \v flowrestriction}
{\xe \v flowrestriction}
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxCN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxCP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxCS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxCK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minCN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minCP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minCS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minCK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minK}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v maxCK\:flowrestriction}
{\xe \v flowrestriction\:maxCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxCK}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxCN\:flowrestriction}
{\xe \v flowrestriction\:maxCN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxCN}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxCP\:flowrestriction}
{\xe \v flowrestriction\:maxCP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxCP}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxCS\:flowrestriction}
{\xe \v flowrestriction\:maxCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxCS}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minCK\:flowrestriction}
{\xe \v flowrestriction\:minCK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minCK}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minCN\:flowrestriction}
{\xe \v flowrestriction\:minCN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minCN}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minCP\:flowrestriction}
{\xe \v flowrestriction\:minCP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minCP}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minCS\:flowrestriction}
{\xe \v flowrestriction\:minCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minCS}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minK\:flowrestriction}
{\xe \v flowrestriction\:minK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minK}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minN\:flowrestriction}
{\xe \v flowrestriction\:minN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minN}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minP\:flowrestriction}
{\xe \v flowrestriction\:minP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minP}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minS\:flowrestriction}
{\xe \v flowrestriction\:minS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minS}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc1::Flux1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc1::Flux1}
{\xe \v strucc1::Flux1}
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for strucc1::Flux1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structstrucc1_1_1_flux1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc1TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc1TOsom2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc1TOstrucc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc1TOmetabc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:strucc1::Flux1}
{\xe \v strucc1::Flux1\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc1TOmetabc1\:strucc1::Flux1}
{\xe \v strucc1::Flux1\:strucc1TOmetabc1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc1TOmetabc1}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc1TOsom1c1\:strucc1::Flux1}
{\xe \v strucc1::Flux1\:strucc1TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc1TOsom1c1}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc1TOsom2c1\:strucc1::Flux1}
{\xe \v strucc1::Flux1\:strucc1TOsom2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc1TOsom2c1}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc1TOstrucc1\:strucc1::Flux1}
{\xe \v strucc1::Flux1\:strucc1TOstrucc1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc1TOstrucc1}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c2::Flux10 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c2::Flux10}
{\xe \v som1c2::Flux10}
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som1c2::Flux10:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom1c2_1_1_flux10__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c2TOsom2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c2TOsom3c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c2TOleachate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c2TOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:som1c2::Flux10}
{\xe \v som1c2::Flux10\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2TOleachate\:som1c2::Flux10}
{\xe \v som1c2::Flux10\:som1c2TOleachate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c2TOleachate}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2TOsom1c2\:som1c2::Flux10}
{\xe \v som1c2::Flux10\:som1c2TOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c2TOsom1c2}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2TOsom2c2\:som1c2::Flux10}
{\xe \v som1c2::Flux10\:som1c2TOsom2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c2TOsom2c2}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2TOsom3c\:som1c2::Flux10}
{\xe \v som1c2::Flux10\:som1c2TOsom3c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c2TOsom3c}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c2::Flux11 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c2::Flux11}
{\xe \v som2c2::Flux11}
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som2c2::Flux11:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom2c2_1_1_flux11__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c2TOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c2TOsom3c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c2TOsom2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:som2c2::Flux11}
{\xe \v som2c2::Flux11\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c2TOsom1c2\:som2c2::Flux11}
{\xe \v som2c2::Flux11\:som2c2TOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c2TOsom1c2}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c2TOsom2c2\:som2c2::Flux11}
{\xe \v som2c2::Flux11\:som2c2TOsom2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c2TOsom2c2}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c2TOsom3c\:som2c2::Flux11}
{\xe \v som2c2::Flux11\:som2c2TOsom3c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c2TOsom3c}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som3c::Flux12 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som3c::Flux12}
{\xe \v som3c::Flux12}
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som3c::Flux12:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom3c_1_1_flux12__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som3cTOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som3cTOsom3c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:som3c::Flux12}
{\xe \v som3c::Flux12\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som3cTOsom1c2\:som3c::Flux12}
{\xe \v som3c::Flux12\:som3cTOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som3cTOsom1c2}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som3cTOsom3c\:som3c::Flux12}
{\xe \v som3c::Flux12\:som3cTOsom3c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som3cTOsom3c}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc2::Flux2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc2::Flux2}
{\xe \v strucc2::Flux2}
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for strucc2::Flux2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structstrucc2_1_1_flux2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc2TOsom2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc2TOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b strucc2TOstrucc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:strucc2::Flux2}
{\xe \v strucc2::Flux2\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc2TOsom1c2\:strucc2::Flux2}
{\xe \v strucc2::Flux2\:strucc2TOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc2TOsom1c2}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc2TOsom2c2\:strucc2::Flux2}
{\xe \v strucc2::Flux2\:strucc2TOsom2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc2TOsom2c2}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strucc2TOstrucc2\:strucc2::Flux2}
{\xe \v strucc2::Flux2\:strucc2TOstrucc2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} strucc2TOstrucc2}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood1::Flux3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood1::Flux3}
{\xe \v wood1::Flux3}
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood1::Flux3:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood1_1_1_flux3__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood1TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood1TOsom2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood1TOwood1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:wood1::Flux3}
{\xe \v wood1::Flux3\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood1TOsom1c1\:wood1::Flux3}
{\xe \v wood1::Flux3\:wood1TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood1TOsom1c1}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood1TOsom2c1\:wood1::Flux3}
{\xe \v wood1::Flux3\:wood1TOsom2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood1TOsom2c1}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood1TOwood1\:wood1::Flux3}
{\xe \v wood1::Flux3\:wood1TOwood1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood1TOwood1}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood2::Flux4 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood2::Flux4}
{\xe \v wood2::Flux4}
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood2::Flux4:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood2_1_1_flux4__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood2TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood2TOsom2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood2TOwood2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:wood2::Flux4}
{\xe \v wood2::Flux4\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood2TOsom1c1\:wood2::Flux4}
{\xe \v wood2::Flux4\:wood2TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood2TOsom1c1}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood2TOsom2c1\:wood2::Flux4}
{\xe \v wood2::Flux4\:wood2TOsom2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood2TOsom2c1}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood2TOwood2\:wood2::Flux4}
{\xe \v wood2::Flux4\:wood2TOwood2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood2TOwood2}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood3::Flux5 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood3::Flux5}
{\xe \v wood3::Flux5}
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood3::Flux5:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood3_1_1_flux5__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood3TOsom2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood3TOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b wood3TOwood3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:wood3::Flux5}
{\xe \v wood3::Flux5\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood3TOsom1c2\:wood3::Flux5}
{\xe \v wood3::Flux5\:wood3TOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood3TOsom1c2}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood3TOsom2c2\:wood3::Flux5}
{\xe \v wood3::Flux5\:wood3TOsom2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood3TOsom2c2}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wood3TOwood3\:wood3::Flux5}
{\xe \v wood3::Flux5\:wood3TOwood3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} wood3TOwood3}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc1::Flux6 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc1::Flux6}
{\xe \v metabc1::Flux6}
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for metabc1::Flux6:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmetabc1_1_1_flux6__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b metabc1TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b metabc1TOmetabc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:metabc1::Flux6}
{\xe \v metabc1::Flux6\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc1TOmetabc1\:metabc1::Flux6}
{\xe \v metabc1::Flux6\:metabc1TOmetabc1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} metabc1TOmetabc1}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc1TOsom1c1\:metabc1::Flux6}
{\xe \v metabc1::Flux6\:metabc1TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} metabc1TOsom1c1}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc2::Flux7 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc2::Flux7}
{\xe \v metabc2::Flux7}
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for metabc2::Flux7:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmetabc2_1_1_flux7__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b metabc2TOsom1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b metabc2TOmetabc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:metabc2::Flux7}
{\xe \v metabc2::Flux7\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc2TOmetabc2\:metabc2::Flux7}
{\xe \v metabc2::Flux7\:metabc2TOmetabc2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} metabc2TOmetabc2}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v metabc2TOsom1c2\:metabc2::Flux7}
{\xe \v metabc2::Flux7\:metabc2TOsom1c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} metabc2TOsom1c2}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c1::Flux8 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c1::Flux8}
{\xe \v som1c1::Flux8}
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som1c1::Flux8:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom1c1_1_1_flux8__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c1TOsom2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som1c1TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:som1c1::Flux8}
{\xe \v som1c1::Flux8\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c1TOsom1c1\:som1c1::Flux8}
{\xe \v som1c1::Flux8\:som1c1TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c1TOsom1c1}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c1TOsom2c1\:som1c1::Flux8}
{\xe \v som1c1::Flux8\:som1c1TOsom2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som1c1TOsom2c1}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c1::Flux9 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c1::Flux9}
{\xe \v som2c1::Flux9}
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som2c1::Flux9:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom2c1_1_1_flux9__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c1TOsom1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c1TOsom2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b som2c1TOsom2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hetresp}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hetresp\:som2c1::Flux9}
{\xe \v som2c1::Flux9\:hetresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hetresp}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c1TOsom1c1\:som2c1::Flux9}
{\xe \v som2c1::Flux9\:som2c1TOsom1c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c1TOsom1c1}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c1TOsom2c1\:som2c1::Flux9}
{\xe \v som2c1::Flux9\:som2c1TOsom2c1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c1TOsom2c1}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som2c1TOsom2c2\:som2c1::Flux9}
{\xe \v som2c1::Flux9\:som2c1TOsom2c2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} som2c1TOsom2c2}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
frostParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v frostParms}
{\xe \v frostParms}
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
\par
{
{\f2 #include <AuxcaneGro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafT0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafT100}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemT0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemT100}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootT0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootT100}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomeT0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomeT100}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v leafT0\:frostParms}
{\xe \v frostParms\:leafT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafT0}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leafT100\:frostParms}
{\xe \v frostParms\:leafT100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafT100}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomeT0\:frostParms}
{\xe \v frostParms\:rhizomeT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomeT0}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomeT100\:frostParms}
{\xe \v frostParms\:rhizomeT100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomeT100}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootT0\:frostParms}
{\xe \v frostParms\:rootT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootT0}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootT100\:frostParms}
{\xe \v frostParms\:rootT100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootT100}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemT0\:frostParms}
{\xe \v frostParms\:stemT0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemT0}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemT100\:frostParms}
{\xe \v frostParms\:stemT100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemT100}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxcaneGro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
respirationParms::growth Struct Reference\par \pard\plain 
{\tc\tcl2 \v respirationParms::growth}
{\xe \v respirationParms::growth}
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizome}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v rhizome\:respirationParms::growth}
{\xe \v respirationParms::growth\:rhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b rhizome}}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:respirationParms::growth}
{\xe \v respirationParms::growth\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b root}}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stem\:respirationParms::growth}
{\xe \v respirationParms::growth\:stem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double {\b stem}}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
harvesting Struct Reference\par \pard\plain 
{\tc\tcl2 \v harvesting}
{\xe \v harvesting}
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
\par
{
{\f2 #include <management.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b output}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
management::harvestparms Struct Reference\par \pard\plain 
{\tc\tcl2 \v management::harvestparms}
{\xe \v management::harvestparms}
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b harvestdoy}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frleaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frleaflitter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frstem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frstemlitter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frdeadroot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frdeadrhizome}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v frdeadrhizome\:management::harvestparms}
{\xe \v management::harvestparms\:frdeadrhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frdeadrhizome}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frdeadroot\:management::harvestparms}
{\xe \v management::harvestparms\:frdeadroot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frdeadroot}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frleaf\:management::harvestparms}
{\xe \v management::harvestparms\:frleaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frleaf}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frleaflitter\:management::harvestparms}
{\xe \v management::harvestparms\:frleaflitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frleaflitter}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frstem\:management::harvestparms}
{\xe \v management::harvestparms\:frstem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frstem}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frstemlitter\:management::harvestparms}
{\xe \v management::harvestparms\:frstemlitter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frstemlitter}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v harvestdoy\:management::harvestparms}
{\xe \v management::harvestparms\:harvestdoy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int harvestdoy}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
harvesting::input Struct Reference\par \pard\plain 
{\tc\tcl2 \v harvesting::input}
{\xe \v harvesting::input}
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
\par
{
{\f2 #include <management.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberofharvest}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b dayofyear}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b stemfractionleft}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b leaffractionleft}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b stemlitterleft}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dayofyear\:harvesting::input}
{\xe \v harvesting::input\:dayofyear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* dayofyear}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaffractionleft\:harvesting::input}
{\xe \v harvesting::input\:leaffractionleft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* leaffractionleft}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberofharvest\:harvesting::input}
{\xe \v harvesting::input\:numberofharvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberofharvest}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemfractionleft\:harvesting::input}
{\xe \v harvesting::input\:stemfractionleft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* stemfractionleft}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemlitterleft\:harvesting::input}
{\xe \v harvesting::input\:stemlitterleft}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* stemlitterleft}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
InputToCropcent Struct Reference\par \pard\plain 
{\tc\tcl2 \v InputToCropcent}
{\xe \v InputToCropcent}
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for InputToCropcent:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_input_to_cropcent__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b surface}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b woody}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:InputToCropcent}
{\xe \v InputToCropcent\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:InputToCropcent}
{\xe \v InputToCropcent\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:InputToCropcent}
{\xe \v InputToCropcent\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v surface\:InputToCropcent}
{\xe \v InputToCropcent\:surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int surface}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v woody\:InputToCropcent}
{\xe \v InputToCropcent\:woody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int woody}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
lai_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v lai_str}
{\xe \v lai_str}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
\par
{
{\f2 #include <AuxMaizeGro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafarea} [{\b MAXLEAFNUMBER}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b totalLeafArea}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v leafarea\:lai_str}
{\xe \v lai_str\:leafarea}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafarea[{\b MAXLEAFNUMBER}]}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v totalLeafArea\:lai_str}
{\xe \v lai_str\:totalLeafArea}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double totalLeafArea}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxMaizeGro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LAYERPAR_S Struct Reference\par \pard\plain 
{\tc\tcl2 \v LAYERPAR_S}
{\xe \v LAYERPAR_S}
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
\par
{
{\f2 #include <soilwater.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b depth} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmn} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmx} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bulkd} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fieldc} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b wiltpt} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ecoeff} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tcoeff} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sandfrac} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clayfrac} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b orgfrac} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swclimit} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b satcond} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pH} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numlyrs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swcfc} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swcwp} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swc} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swcmin} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minpot} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b wfps} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sumecoeff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nelyrs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b thetas} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b thetas_bd} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b psis} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b binverse} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ubnd} [{\b CENTMAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lbnd} [{\b CENTMAXLYR}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v b\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v binverse\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:binverse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double binverse[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bulkd\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:bulkd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bulkd[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clayfrac\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:clayfrac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double clayfrac[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v depth\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double depth[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmn\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:dpthmn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmn[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmx\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:dpthmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmx[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ecoeff\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:ecoeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ecoeff[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fieldc\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:fieldc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fieldc[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lbnd\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:lbnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lbnd[{\b CENTMAXLYR}]}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minpot\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:minpot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minpot[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nelyrs\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:nelyrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nelyrs}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numlyrs\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:numlyrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numlyrs}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v orgfrac\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:orgfrac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double orgfrac[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pH\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:pH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pH[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v psis\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:psis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double psis[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sandfrac\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:sandfrac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sandfrac[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v satcond\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:satcond}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double satcond[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sumecoeff\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:sumecoeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sumecoeff}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swc\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:swc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swc[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swcfc\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:swcfc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swcfc[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swclimit\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:swclimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swclimit[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swcmin\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:swcmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swcmin[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swcwp\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:swcwp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swcwp[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tcoeff\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:tcoeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tcoeff[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v thetas\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:thetas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double thetas[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v thetas_bd\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:thetas_bd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double thetas_bd[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ubnd\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:ubnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ubnd[{\b CENTMAXLYR}]}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wfps\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:wfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double wfps[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double width[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wiltpt\:LAYERPAR_S}
{\xe \v LAYERPAR_S\:wiltpt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double wiltpt[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b soilwater.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
leaf Struct Reference\par \pard\plain 
{\tc\tcl2 \v leaf}
{\xe \v leaf}
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for leaf:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structleaf__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b biomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b litter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} biomassE {\b litterE}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v biomass\:leaf}
{\xe \v leaf\:biomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double biomass}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litter\:leaf}
{\xe \v leaf\:litter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double litter}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litterE\:leaf}
{\xe \v leaf\:litterE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} biomassE litterE}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
littervec Struct Reference\par \pard\plain 
{\tc\tcl2 \v littervec}
{\xe \v littervec}
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b biomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ageinTT}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ageinTT\:littervec}
{\xe \v littervec\:ageinTT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ageinTT}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v biomass\:littervec}
{\xe \v littervec\:biomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double biomass}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
respirationParms::maint Struct Reference\par \pard\plain 
{\tc\tcl2 \v respirationParms::maint}
{\xe \v respirationParms::maint}
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Qstem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mstem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Qroot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mroot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Qrhizome}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mrhizome}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v mrhizome\:respirationParms::maint}
{\xe \v respirationParms::maint\:mrhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mrhizome}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mroot\:respirationParms::maint}
{\xe \v respirationParms::maint\:mroot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mroot}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mstem\:respirationParms::maint}
{\xe \v respirationParms::maint\:mstem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mstem}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Qrhizome\:respirationParms::maint}
{\xe \v respirationParms::maint\:Qrhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Qrhizome}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Qroot\:respirationParms::maint}
{\xe \v respirationParms::maint\:Qroot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Qroot}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Qstem\:respirationParms::maint}
{\xe \v respirationParms::maint\:Qstem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Qstem}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
maize_dbp_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v maize_dbp_str}
{\xe \v maize_dbp_str}
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
\par
{
{\f2 #include <AuxMaizeGro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kLeaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kStem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kRoot}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kGrain}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v kGrain\:maize_dbp_str}
{\xe \v maize_dbp_str\:kGrain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kGrain}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kLeaf\:maize_dbp_str}
{\xe \v maize_dbp_str\:kLeaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kLeaf}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kRoot\:maize_dbp_str}
{\xe \v maize_dbp_str\:kRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kRoot}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kStem\:maize_dbp_str}
{\xe \v maize_dbp_str\:kStem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kStem}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxMaizeGro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
management Struct Reference\par \pard\plain 
{\tc\tcl2 \v management}
{\xe \v management}
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for management:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmanagement__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b emergenceparms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b harvestparms}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management::harvestparms} {\b harvestparms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management::emergenceparms} {\b emergenceparms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b planting} {\b planting}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b harvesting} {\b harvesting}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Napplication} {\b Napplication}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v emergenceparms\:management}
{\xe \v management\:emergenceparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b management::emergenceparms} {\b emergenceparms}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v harvesting\:management}
{\xe \v management\:harvesting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b harvesting} {\b harvesting}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v harvestparms\:management}
{\xe \v management\:harvestparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b management::harvestparms} {\b harvestparms}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Napplication\:management}
{\xe \v management\:Napplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Napplication} {\b Napplication}}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planting\:management}
{\xe \v management\:planting}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b planting} {\b planting}}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc1}
{\xe \v metabc1}
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for metabc1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmetabc1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms6}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1::Flux6} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1::parms6} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:metabc1}
{\xe \v metabc1\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:metabc1}
{\xe \v metabc1\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:metabc1}
{\xe \v metabc1\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc1::Flux6}  Flux}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:metabc1}
{\xe \v metabc1\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc1::parms6}  parms}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:metabc1}
{\xe \v metabc1\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:metabc1}
{\xe \v metabc1\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:metabc1}
{\xe \v metabc1\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc2}
{\xe \v metabc2}
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for metabc2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmetabc2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux7}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms7}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2::Flux7} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2::parms7} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:metabc2}
{\xe \v metabc2\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:metabc2}
{\xe \v metabc2\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:metabc2}
{\xe \v metabc2\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:metabc2}
{\xe \v metabc2\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc2::Flux7}  Flux}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:metabc2}
{\xe \v metabc2\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b metabc2::parms7}  parms}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:metabc2}
{\xe \v metabc2\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:metabc2}
{\xe \v metabc2\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:metabc2}
{\xe \v metabc2\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
minerals Struct Reference\par \pard\plain 
{\tc\tcl2 \v minerals}
{\xe \v minerals}
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CK}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CK\:minerals}
{\xe \v minerals\:CK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CK}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CN\:minerals}
{\xe \v minerals\:CN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CN}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CP\:minerals}
{\xe \v minerals\:CP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CP}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CS\:minerals}
{\xe \v minerals\:CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CS}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
crop_phenology::minerals1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v crop_phenology::minerals1}
{\xe \v crop_phenology::minerals1}
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CK}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CK\:crop_phenology::minerals1}
{\xe \v crop_phenology::minerals1\:CK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CK}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CN\:crop_phenology::minerals1}
{\xe \v crop_phenology::minerals1\:CN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CN}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CP\:crop_phenology::minerals1}
{\xe \v crop_phenology::minerals1\:CP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CP}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CS\:crop_phenology::minerals1}
{\xe \v crop_phenology::minerals1\:CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CS}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
miscanthus Struct Reference\par \pard\plain 
{\tc\tcl2 \v miscanthus}
{\xe \v miscanthus}
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for miscanthus:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmiscanthus__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b leaf} {\b leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b stem} {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rhizome} {\b rhizome}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b root} {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b leafvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b stemvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b rootvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec} * {\b rhizomevec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DailyAutoResp} {\b autoresp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GPP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b NPP}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LAI}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v autoresp\:miscanthus}
{\xe \v miscanthus\:autoresp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b DailyAutoResp} autoresp}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GPP\:miscanthus}
{\xe \v miscanthus\:GPP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GPP}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LAI\:miscanthus}
{\xe \v miscanthus\:LAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LAI}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaf\:miscanthus}
{\xe \v miscanthus\:leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b leaf} {\b leaf}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leafvec\:miscanthus}
{\xe \v miscanthus\:leafvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec}* leafvec}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NPP\:miscanthus}
{\xe \v miscanthus\:NPP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double NPP}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizome\:miscanthus}
{\xe \v miscanthus\:rhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b rhizome} {\b rhizome}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomevec\:miscanthus}
{\xe \v miscanthus\:rhizomevec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * rhizomevec}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:miscanthus}
{\xe \v miscanthus\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b root} {\b root}}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootvec\:miscanthus}
{\xe \v miscanthus\:rootvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * rootvec}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stem\:miscanthus}
{\xe \v miscanthus\:stem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b stem} {\b stem}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemvec\:miscanthus}
{\xe \v miscanthus\:stemvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dailyvec} * stemvec}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Napplication Struct Reference\par \pard\plain 
{\tc\tcl2 \v Napplication}
{\xe \v Napplication}
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
\par
{
{\f2 #include <management.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberofNapplication}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b dayofyear}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b method}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dayofyear\:Napplication}
{\xe \v Napplication\:dayofyear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* dayofyear}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v method\:Napplication}
{\xe \v Napplication\:method}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char method}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberofNapplication\:Napplication}
{\xe \v Napplication\:numberofNapplication}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberofNapplication}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rate\:Napplication}
{\xe \v Napplication\:rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rate}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Napplication}
{\xe \v Napplication\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char type}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nitroParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v nitroParms}
{\xe \v nitroParms}
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ileafN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kln}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Vmaxb1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Vmaxb0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alphab1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alphab0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Rdb1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Rdb0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kpLN}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lnb0}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lnb1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lnFun}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxln}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minln}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b daymaxln}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v alphab0\:nitroParms}
{\xe \v nitroParms\:alphab0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double alphab0}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alphab1\:nitroParms}
{\xe \v nitroParms\:alphab1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double alphab1}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v daymaxln\:nitroParms}
{\xe \v nitroParms\:daymaxln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double daymaxln}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ileafN\:nitroParms}
{\xe \v nitroParms\:ileafN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ileafN}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kln\:nitroParms}
{\xe \v nitroParms\:kln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kln}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kpLN\:nitroParms}
{\xe \v nitroParms\:kpLN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double kpLN}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lnb0\:nitroParms}
{\xe \v nitroParms\:lnb0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lnb0}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lnb1\:nitroParms}
{\xe \v nitroParms\:lnb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lnb1}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lnFun\:nitroParms}
{\xe \v nitroParms\:lnFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lnFun}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxln\:nitroParms}
{\xe \v nitroParms\:maxln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxln}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minln\:nitroParms}
{\xe \v nitroParms\:minln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double minln}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rdb0\:nitroParms}
{\xe \v nitroParms\:Rdb0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Rdb0}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rdb1\:nitroParms}
{\xe \v nitroParms\:Rdb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Rdb1}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vmaxb0\:nitroParms}
{\xe \v nitroParms\:Vmaxb0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Vmaxb0}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Vmaxb1\:nitroParms}
{\xe \v nitroParms\:Vmaxb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Vmaxb1}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
OrgLeachParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v OrgLeachParms}
{\xe \v OrgLeachParms}
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for OrgLeachParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct_org_leach_parms__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b DailyThresholdFlow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b OMLEACH} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b som1c2toleach}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v DailyThresholdFlow\:OrgLeachParms}
{\xe \v OrgLeachParms\:DailyThresholdFlow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double DailyThresholdFlow}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OMLEACH\:OrgLeachParms}
{\xe \v OrgLeachParms\:OMLEACH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double OMLEACH[3]}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v som1c2toleach\:OrgLeachParms}
{\xe \v OrgLeachParms\:som1c2toleach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} som1c2toleach}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
harvesting::output Struct Reference\par \pard\plain 
{\tc\tcl2 \v harvesting::output}
{\xe \v harvesting::output}
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
\par
{
{\f2 #include <management.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b rhizome}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double * {\b root}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v leaf\:harvesting::output}
{\xe \v harvesting::output\:leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* {\b leaf}}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizome\:harvesting::output}
{\xe \v harvesting::output\:rhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* {\b rhizome}}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:harvesting::output}
{\xe \v harvesting::output\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* {\b root}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stem\:harvesting::output}
{\xe \v harvesting::output\:stem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double* {\b stem}}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc1::parms1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc1::parms1}
{\xe \v strucc1::parms1}
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b strmx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pligst}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bioabsorp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rsplig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1co2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pmetabco2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxphoto}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bioabsorp\:strucc1::parms1}
{\xe \v strucc1::parms1\:bioabsorp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bioabsorp}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:strucc1::parms1}
{\xe \v strucc1::parms1\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxphoto\:strucc1::parms1}
{\xe \v strucc1::parms1\:maxphoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double maxphoto}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pligst\:strucc1::parms1}
{\xe \v strucc1::parms1\:pligst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pligst}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pmetabco2\:strucc1::parms1}
{\xe \v strucc1::parms1\:pmetabco2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pmetabco2}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1co2\:strucc1::parms1}
{\xe \v strucc1::parms1\:ps1co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1co2}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rsplig\:strucc1::parms1}
{\xe \v strucc1::parms1\:rsplig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rsplig}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strmx\:strucc1::parms1}
{\xe \v strucc1::parms1\:strmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double strmx}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:strucc1::parms1}
{\xe \v strucc1::parms1\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c2::parms10 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c2::parms10}
{\xe \v som1c2::parms10}
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b peftxa}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b peftxb}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p1co2a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p1co2b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1s3} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b animpt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v animpt\:som1c2::parms10}
{\xe \v som1c2::parms10\:animpt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double animpt}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:som1c2::parms10}
{\xe \v som1c2::parms10\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p1co2a\:som1c2::parms10}
{\xe \v som1c2::parms10\:p1co2a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p1co2a}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p1co2b\:som1c2::parms10}
{\xe \v som1c2::parms10\:p1co2b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p1co2b}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v peftxa\:som1c2::parms10}
{\xe \v som1c2::parms10\:peftxa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double peftxa}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v peftxb\:som1c2::parms10}
{\xe \v som1c2::parms10\:peftxb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double peftxb}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1s3\:som1c2::parms10}
{\xe \v som1c2::parms10\:ps1s3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1s3[2]}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:som1c2::parms10}
{\xe \v som1c2::parms10\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c2::parms11 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c2::parms11}
{\xe \v som2c2::parms11}
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p2co2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps2s3} [2]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b animpt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v animpt\:som2c2::parms11}
{\xe \v som2c2::parms11\:animpt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double animpt}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:som2c2::parms11}
{\xe \v som2c2::parms11\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p2co2\:som2c2::parms11}
{\xe \v som2c2::parms11\:p2co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p2co2}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps2s3\:som2c2::parms11}
{\xe \v som2c2::parms11\:ps2s3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps2s3[2]}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:som2c2::parms11}
{\xe \v som2c2::parms11\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som3c::parms12 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som3c::parms12}
{\xe \v som3c::parms12}
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p3co2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:som3c::parms12}
{\xe \v som3c::parms12\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p3co2\:som3c::parms12}
{\xe \v som3c::parms12\:p3co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p3co2}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:som3c::parms12}
{\xe \v som3c::parms12\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc2::parms2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc2::parms2}
{\xe \v strucc2::parms2}
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b strmx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pligst}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rsplig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1co2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:strucc2::parms2}
{\xe \v strucc2::parms2\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pligst\:strucc2::parms2}
{\xe \v strucc2::parms2\:pligst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pligst}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1co2\:strucc2::parms2}
{\xe \v strucc2::parms2\:ps1co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1co2}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rsplig\:strucc2::parms2}
{\xe \v strucc2::parms2\:rsplig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rsplig}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strmx\:strucc2::parms2}
{\xe \v strucc2::parms2\:strmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double strmx}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:strucc2::parms2}
{\xe \v strucc2::parms2\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood1::parms3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood1::parms3}
{\xe \v wood1::parms3}
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pligst}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rsplig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1co2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:wood1::parms3}
{\xe \v wood1::parms3\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pligst\:wood1::parms3}
{\xe \v wood1::parms3\:pligst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pligst}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1co2\:wood1::parms3}
{\xe \v wood1::parms3\:ps1co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1co2}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rsplig\:wood1::parms3}
{\xe \v wood1::parms3\:rsplig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rsplig}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:wood1::parms3}
{\xe \v wood1::parms3\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood2::parms4 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood2::parms4}
{\xe \v wood2::parms4}
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pligst}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rsplig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1co2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:wood2::parms4}
{\xe \v wood2::parms4\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pligst\:wood2::parms4}
{\xe \v wood2::parms4\:pligst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pligst}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1co2\:wood2::parms4}
{\xe \v wood2::parms4\:ps1co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1co2}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rsplig\:wood2::parms4}
{\xe \v wood2::parms4\:rsplig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rsplig}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:wood2::parms4}
{\xe \v wood2::parms4\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood3::parms5 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood3::parms5}
{\xe \v wood3::parms5}
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pligst}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rsplig}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ps1co2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:wood3::parms5}
{\xe \v wood3::parms5\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pligst\:wood3::parms5}
{\xe \v wood3::parms5\:pligst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pligst}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ps1co2\:wood3::parms5}
{\xe \v wood3::parms5\:ps1co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ps1co2}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rsplig\:wood3::parms5}
{\xe \v wood3::parms5\:rsplig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rsplig}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:wood3::parms5}
{\xe \v wood3::parms5\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc1::parms6 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc1::parms6}
{\xe \v metabc1::parms6}
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pmco2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a\:metabc1::parms6}
{\xe \v metabc1::parms6\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double a}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:metabc1::parms6}
{\xe \v metabc1::parms6\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:metabc1::parms6}
{\xe \v metabc1::parms6\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pmco2\:metabc1::parms6}
{\xe \v metabc1::parms6\:pmco2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pmco2}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:metabc1::parms6}
{\xe \v metabc1::parms6\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x1\:metabc1::parms6}
{\xe \v metabc1::parms6\:x1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x1}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x2\:metabc1::parms6}
{\xe \v metabc1::parms6\:x2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x2}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
metabc2::parms7 Struct Reference\par \pard\plain 
{\tc\tcl2 \v metabc2::parms7}
{\xe \v metabc2::parms7}
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pmco2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v k\:metabc2::parms7}
{\xe \v metabc2::parms7\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pmco2\:metabc2::parms7}
{\xe \v metabc2::parms7\:pmco2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pmco2}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:metabc2::parms7}
{\xe \v metabc2::parms7\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c1::parms8 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c1::parms8}
{\xe \v som1c1::parms8}
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p1co2a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p1co2b}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a\:som1c1::parms8}
{\xe \v som1c1::parms8\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double a}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:som1c1::parms8}
{\xe \v som1c1::parms8\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:som1c1::parms8}
{\xe \v som1c1::parms8\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p1co2a\:som1c1::parms8}
{\xe \v som1c1::parms8\:p1co2a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p1co2a}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p1co2b\:som1c1::parms8}
{\xe \v som1c1::parms8\:p1co2b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p1co2b}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:som1c1::parms8}
{\xe \v som1c1::parms8\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x1\:som1c1::parms8}
{\xe \v som1c1::parms8\:x1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x1}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x2\:som1c1::parms8}
{\xe \v som1c1::parms8\:x2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x2}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c1::parms9 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c1::parms9}
{\xe \v som2c1::parms9}
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b k}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timestep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b p2co2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mix}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a\:som2c1::parms9}
{\xe \v som2c1::parms9\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double a}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:som2c1::parms9}
{\xe \v som2c1::parms9\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:som2c1::parms9}
{\xe \v som2c1::parms9\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double k}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mix\:som2c1::parms9}
{\xe \v som2c1::parms9\:mix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double mix}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p2co2\:som2c1::parms9}
{\xe \v som2c1::parms9\:p2co2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double p2co2}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timestep\:som2c1::parms9}
{\xe \v som2c1::parms9\:timestep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timestep}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x1\:som2c1::parms9}
{\xe \v som2c1::parms9\:x1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x1}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x2\:som2c1::parms9}
{\xe \v som2c1::parms9\:x2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double x2}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PHParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v PHParms}
{\xe \v PHParms}
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b d}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a\:PHParms}
{\xe \v PHParms\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double a}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:PHParms}
{\xe \v PHParms\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v c\:PHParms}
{\xe \v PHParms\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double c}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v d\:PHParms}
{\xe \v PHParms\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double d}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
planting Struct Reference\par \pard\plain 
{\tc\tcl2 \v planting}
{\xe \v planting}
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
\par
{
{\f2 #include <management.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dayofyear}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rate}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dayofyear\:planting}
{\xe \v planting\:dayofyear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dayofyear}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rate\:planting}
{\xe \v planting\:rate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rate}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b management.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilprofile::profilefluxes Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes}
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b waterflux} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dN2lyr} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dN2Olyr} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frlechd} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stream} [{\b MAXSOILLAY}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dN2lyr\:soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes\:dN2lyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dN2lyr[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dN2Olyr\:soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes\:dN2Olyr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dN2Olyr[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frlechd\:soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes\:frlechd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frlechd[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stream\:soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stream[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v waterflux\:soilprofile::profilefluxes}
{\xe \v soilprofile::profilefluxes\:waterflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double waterflux[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilprofile::profilepools Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilprofile::profilepools}
{\xe \v soilprofile::profilepools}
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swc} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootbiomass} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b wfps} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nitrate} [{\b MAXSOILLAY}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v nitrate\:soilprofile::profilepools}
{\xe \v soilprofile::profilepools\:nitrate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nitrate[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootbiomass\:soilprofile::profilepools}
{\xe \v soilprofile::profilepools\:rootbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootbiomass[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swc\:soilprofile::profilepools}
{\xe \v soilprofile::profilepools\:swc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swc[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wfps\:soilprofile::profilepools}
{\xe \v soilprofile::profilepools\:wfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double wfps[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilprofile::profileproperties Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties}
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bulkd} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fieldc} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pH} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swclimit} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soiltavg} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmn} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmx} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stream} [{\b MAXSOILLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frlechd} [{\b MAXSOILLAY}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bulkd\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:bulkd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bulkd[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmn\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:dpthmn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmn[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmx\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:dpthmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmx[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fieldc\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:fieldc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fieldc[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frlechd\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:frlechd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double frlechd[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pH\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:pH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pH[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soiltavg\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:soiltavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soiltavg[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stream\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stream[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swclimit\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:swclimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swclimit[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:soilprofile::profileproperties}
{\xe \v soilprofile::profileproperties\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double width[{\b MAXSOILLAY}]}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rd_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v rd_str}
{\xe \v rd_str}
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootDist} [{\b MAXLAY}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v rootDist\:rd_str}
{\xe \v rd_str\:rootDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootDist[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
respirationParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v respirationParms}
{\xe \v respirationParms}
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for respirationParms:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structrespiration_parms__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b growth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b maint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b respirationParms::growth} {\b growth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b respirationParms::maint} {\b maint}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v growth\:respirationParms}
{\xe \v respirationParms\:growth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b respirationParms::growth} {\b growth}}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maint\:respirationParms}
{\xe \v respirationParms\:maint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b respirationParms::maint} {\b maint}}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rhizome Struct Reference\par \pard\plain 
{\tc\tcl2 \v rhizome}
{\xe \v rhizome}
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for rhizome:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structrhizome__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b biomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b litter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b carbohydratefraction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} biomassE {\b litterE}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v biomass\:rhizome}
{\xe \v rhizome\:biomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double biomass}}
\par
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v carbohydratefraction\:rhizome}
{\xe \v rhizome\:carbohydratefraction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double carbohydratefraction}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litter\:rhizome}
{\xe \v rhizome\:litter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double litter}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litterE\:rhizome}
{\xe \v rhizome\:litterE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} biomassE litterE}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
root Struct Reference\par \pard\plain 
{\tc\tcl2 \v root}
{\xe \v root}
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for root:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structroot__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b biomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b litter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} biomassE {\b litterE}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v biomass\:root}
{\xe \v root\:biomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double biomass}}
\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litter\:root}
{\xe \v root\:litter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double litter}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litterE\:root}
{\xe \v root\:litterE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} biomassE litterE}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
senthermaltemp Struct Reference\par \pard\plain 
{\tc\tcl2 \v senthermaltemp}
{\xe \v senthermaltemp}
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leafcriticalT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b leaffr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemcriticalT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stemfr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomecriticalT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rhizomefr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootcriticalT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootfr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v leafcriticalT\:senthermaltemp}
{\xe \v senthermaltemp\:leafcriticalT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leafcriticalT}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaffr\:senthermaltemp}
{\xe \v senthermaltemp\:leaffr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double leaffr}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomecriticalT\:senthermaltemp}
{\xe \v senthermaltemp\:rhizomecriticalT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomecriticalT}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rhizomefr\:senthermaltemp}
{\xe \v senthermaltemp\:rhizomefr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rhizomefr}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootcriticalT\:senthermaltemp}
{\xe \v senthermaltemp\:rootcriticalT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootcriticalT}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootfr\:senthermaltemp}
{\xe \v senthermaltemp\:rootfr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootfr}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemcriticalT\:senthermaltemp}
{\xe \v senthermaltemp\:stemcriticalT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemcriticalT}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stemfr\:senthermaltemp}
{\xe \v senthermaltemp\:stemfr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stemfr}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
seqRD_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v seqRD_str}
{\xe \v seqRD_str}
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootDepths} [{\b MAXLAY}+1]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v rootDepths\:seqRD_str}
{\xe \v seqRD_str\:rootDepths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootDepths[{\b MAXLAY}+1]}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SITEPAR_S Struct Reference\par \pard\plain 
{\tc\tcl2 \v SITEPAR_S}
{\xe \v SITEPAR_S}
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
\par
{
{\f2 #include <soilwater.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b usexdrvrs}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sublimscale}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b reflec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b albedo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fswcinit}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dmpflux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hours_rain}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b watertable} [{\b NMONTH}+1]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hpotdeep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ksatdeep}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rlatitude}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cldcov} [{\b NMONTH}+1]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b texture}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tbotmn}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tbotmx}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dmp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ncoeff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b drainlag}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b jdayStart}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b jdayEnd}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b N2Oadjust}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b elevation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b slope}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b aspect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ehoriz}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b whoriz}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v albedo\:SITEPAR_S}
{\xe \v SITEPAR_S\:albedo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double albedo}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v aspect\:SITEPAR_S}
{\xe \v SITEPAR_S\:aspect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double aspect}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cldcov\:SITEPAR_S}
{\xe \v SITEPAR_S\:cldcov}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cldcov[{\b NMONTH}+1]}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dmp\:SITEPAR_S}
{\xe \v SITEPAR_S\:dmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dmp}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dmpflux\:SITEPAR_S}
{\xe \v SITEPAR_S\:dmpflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dmpflux}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drainlag\:SITEPAR_S}
{\xe \v SITEPAR_S\:drainlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int drainlag}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ehoriz\:SITEPAR_S}
{\xe \v SITEPAR_S\:ehoriz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ehoriz}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v elevation\:SITEPAR_S}
{\xe \v SITEPAR_S\:elevation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double elevation}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fswcinit\:SITEPAR_S}
{\xe \v SITEPAR_S\:fswcinit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fswcinit}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hours_rain\:SITEPAR_S}
{\xe \v SITEPAR_S\:hours_rain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hours_rain}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hpotdeep\:SITEPAR_S}
{\xe \v SITEPAR_S\:hpotdeep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hpotdeep}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v jdayEnd\:SITEPAR_S}
{\xe \v SITEPAR_S\:jdayEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int jdayEnd}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v jdayStart\:SITEPAR_S}
{\xe \v SITEPAR_S\:jdayStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int jdayStart}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ksatdeep\:SITEPAR_S}
{\xe \v SITEPAR_S\:ksatdeep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ksatdeep}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v N2Oadjust\:SITEPAR_S}
{\xe \v SITEPAR_S\:N2Oadjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double N2Oadjust}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ncoeff\:SITEPAR_S}
{\xe \v SITEPAR_S\:Ncoeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Ncoeff}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reflec\:SITEPAR_S}
{\xe \v SITEPAR_S\:reflec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double reflec}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rlatitude\:SITEPAR_S}
{\xe \v SITEPAR_S\:rlatitude}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rlatitude}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v slope\:SITEPAR_S}
{\xe \v SITEPAR_S\:slope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double slope}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sublimscale\:SITEPAR_S}
{\xe \v SITEPAR_S\:sublimscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sublimscale}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tbotmn\:SITEPAR_S}
{\xe \v SITEPAR_S\:tbotmn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tbotmn}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tbotmx\:SITEPAR_S}
{\xe \v SITEPAR_S\:tbotmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tbotmx}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v texture\:SITEPAR_S}
{\xe \v SITEPAR_S\:texture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int texture}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v timlag\:SITEPAR_S}
{\xe \v SITEPAR_S\:timlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timlag}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v usexdrvrs\:SITEPAR_S}
{\xe \v SITEPAR_S\:usexdrvrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int usexdrvrs}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v watertable\:SITEPAR_S}
{\xe \v SITEPAR_S\:watertable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int watertable[{\b NMONTH}+1]}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v whoriz\:SITEPAR_S}
{\xe \v SITEPAR_S\:whoriz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double whoriz}}
\par
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b soilwater.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
siteparameters Struct Reference\par \pard\plain 
{\tc\tcl2 \v siteparameters}
{\xe \v siteparameters}
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ncoeff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b jdayStart}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b jdayEnd}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b N2Oadjust}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isagri}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isdecid}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b maxt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v isagri\:siteparameters}
{\xe \v siteparameters\:isagri}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int isagri}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isdecid\:siteparameters}
{\xe \v siteparameters\:isdecid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int isdecid}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v jdayEnd\:siteparameters}
{\xe \v siteparameters\:jdayEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double jdayEnd}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v jdayStart\:siteparameters}
{\xe \v siteparameters\:jdayStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double jdayStart}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxt\:siteparameters}
{\xe \v siteparameters\:maxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int maxt}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v N2Oadjust\:siteparameters}
{\xe \v siteparameters\:N2Oadjust}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double N2Oadjust}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ncoeff\:siteparameters}
{\xe \v siteparameters\:Ncoeff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Ncoeff}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SOIL_S Struct Reference\par \pard\plain 
{\tc\tcl2 \v SOIL_S}
{\xe \v SOIL_S}
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
\par
{
{\f2 #include <soilwater.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stmtemp} [{\b MAXSTLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soiltavg} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soiltmin} [{\b MAXLYR}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soiltmax} [{\b MAXLYR}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v soiltavg\:SOIL_S}
{\xe \v SOIL_S\:soiltavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soiltavg[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soiltmax\:SOIL_S}
{\xe \v SOIL_S\:soiltmax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soiltmax[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soiltmin\:SOIL_S}
{\xe \v SOIL_S\:soiltmin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soiltmin[{\b MAXLYR}]}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stmtemp\:SOIL_S}
{\xe \v SOIL_S\:stmtemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stmtemp[{\b MAXSTLYR}]}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b soilwater.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SoilEmissions Struct Reference\par \pard\plain 
{\tc\tcl2 \v SoilEmissions}
{\xe \v SoilEmissions}
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CH4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b NH4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Dn2flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Dn20flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inorglch}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stormf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nitamt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Nn20flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b NOflux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newCO2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b basef}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v basef\:SoilEmissions}
{\xe \v SoilEmissions\:basef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double basef}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CH4\:SoilEmissions}
{\xe \v SoilEmissions\:CH4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CH4}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Dn20flux\:SoilEmissions}
{\xe \v SoilEmissions\:Dn20flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Dn20flux}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Dn2flux\:SoilEmissions}
{\xe \v SoilEmissions\:Dn2flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Dn2flux}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inorglch\:SoilEmissions}
{\xe \v SoilEmissions\:inorglch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double inorglch}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newCO2\:SoilEmissions}
{\xe \v SoilEmissions\:newCO2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newCO2}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NH4\:SoilEmissions}
{\xe \v SoilEmissions\:NH4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double NH4}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nitamt\:SoilEmissions}
{\xe \v SoilEmissions\:nitamt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nitamt}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Nn20flux\:SoilEmissions}
{\xe \v SoilEmissions\:Nn20flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Nn20flux}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NOflux\:SoilEmissions}
{\xe \v SoilEmissions\:NOflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double NOflux}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stormf\:SoilEmissions}
{\xe \v SoilEmissions\:stormf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double stormf}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilML_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilML_str}
{\xe \v soilML_str}
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rcoefPhoto}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rcoefSpleaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cws} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b drainage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Nleach}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SoilEvapo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rootDist} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b hourlyWflux} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dailyWflux} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b width} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swclimit} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pH} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bulkd} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fieldc} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmx} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dpthmn} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b soiltavg} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sand} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b silt} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clay} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b Num_BioCro_soil_layers}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bulkd\:soilML_str}
{\xe \v soilML_str\:bulkd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bulkd[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clay\:soilML_str}
{\xe \v soilML_str\:clay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double clay[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cws\:soilML_str}
{\xe \v soilML_str\:cws}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double cws[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dailyWflux\:soilML_str}
{\xe \v soilML_str\:dailyWflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dailyWflux[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmn\:soilML_str}
{\xe \v soilML_str\:dpthmn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmn[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dpthmx\:soilML_str}
{\xe \v soilML_str\:dpthmx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dpthmx[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v drainage\:soilML_str}
{\xe \v soilML_str\:drainage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double drainage}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fieldc\:soilML_str}
{\xe \v soilML_str\:fieldc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fieldc[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hourlyWflux\:soilML_str}
{\xe \v soilML_str\:hourlyWflux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double hourlyWflux[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Nleach\:soilML_str}
{\xe \v soilML_str\:Nleach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Nleach}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Num_BioCro_soil_layers\:soilML_str}
{\xe \v soilML_str\:Num_BioCro_soil_layers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Num_BioCro_soil_layers}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pH\:soilML_str}
{\xe \v soilML_str\:pH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pH[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rcoefPhoto\:soilML_str}
{\xe \v soilML_str\:rcoefPhoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rcoefPhoto}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rcoefSpleaf\:soilML_str}
{\xe \v soilML_str\:rcoefSpleaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rcoefSpleaf}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rootDist\:soilML_str}
{\xe \v soilML_str\:rootDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rootDist[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sand\:soilML_str}
{\xe \v soilML_str\:sand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sand[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v silt\:soilML_str}
{\xe \v soilML_str\:silt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double silt[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SoilEvapo\:soilML_str}
{\xe \v soilML_str\:SoilEvapo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SoilEvapo}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v soiltavg\:soilML_str}
{\xe \v soilML_str\:soiltavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double soiltavg[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swclimit\:soilML_str}
{\xe \v soilML_str\:swclimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double swclimit[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width\:soilML_str}
{\xe \v soilML_str\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double width[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilprofile Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilprofile}
{\xe \v soilprofile}
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for soilprofile:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsoilprofile__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b profilefluxes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b profilepools}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b profileproperties}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b number_layers}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b MAXdepth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CH4depth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SOCdepth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b critflow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct \par
{\b soilprofile::profileproperties} {\b properties}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile::profilepools} {\b pools}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile::profilefluxes} {\b flux}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v CH4depth\:soilprofile}
{\xe \v soilprofile\:CH4depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CH4depth}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v critflow\:soilprofile}
{\xe \v soilprofile\:critflow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double critflow}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v flux\:soilprofile}
{\xe \v soilprofile\:flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilprofile::profilefluxes} flux}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXdepth\:soilprofile}
{\xe \v soilprofile\:MAXdepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MAXdepth}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v number_layers\:soilprofile}
{\xe \v soilprofile\:number_layers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int number_layers}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pools\:soilprofile}
{\xe \v soilprofile\:pools}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilprofile::profilepools} pools}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v properties\:soilprofile}
{\xe \v soilprofile\:properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilprofile::profileproperties}  properties}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SOCdepth\:soilprofile}
{\xe \v soilprofile\:SOCdepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SOCdepth}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
soilText_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v soilText_str}
{\xe \v soilText_str}
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b silt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sand}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b air_entry}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Ks}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b satur}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fieldc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b wiltp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bulkd}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v air_entry\:soilText_str}
{\xe \v soilText_str\:air_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double air_entry}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:soilText_str}
{\xe \v soilText_str\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bulkd\:soilText_str}
{\xe \v soilText_str\:bulkd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bulkd}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clay\:soilText_str}
{\xe \v soilText_str\:clay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double clay}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fieldc\:soilText_str}
{\xe \v soilText_str\:fieldc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fieldc}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Ks\:soilText_str}
{\xe \v soilText_str\:Ks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Ks}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sand\:soilText_str}
{\xe \v soilText_str\:sand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sand}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v satur\:soilText_str}
{\xe \v soilText_str\:satur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double satur}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v silt\:soilText_str}
{\xe \v soilText_str\:silt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double silt}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wiltp\:soilText_str}
{\xe \v soilText_str\:wiltp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double wiltp}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SoilTexture Struct Reference\par \pard\plain 
{\tc\tcl2 \v SoilTexture}
{\xe \v SoilTexture}
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sand}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b silt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fieldc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bulkd}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b avgwfps}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v avgwfps\:SoilTexture}
{\xe \v SoilTexture\:avgwfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double avgwfps}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bulkd\:SoilTexture}
{\xe \v SoilTexture\:bulkd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double bulkd}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clay\:SoilTexture}
{\xe \v SoilTexture\:clay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double clay}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fieldc\:SoilTexture}
{\xe \v SoilTexture\:fieldc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fieldc}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sand\:SoilTexture}
{\xe \v SoilTexture\:sand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sand}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v silt\:SoilTexture}
{\xe \v SoilTexture\:silt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double silt}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SoilWaterEffectParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v SoilWaterEffectParms}
{\xe \v SoilWaterEffectParms}
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b b}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b d}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v a\:SoilWaterEffectParms}
{\xe \v SoilWaterEffectParms\:a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double a}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v b\:SoilWaterEffectParms}
{\xe \v SoilWaterEffectParms\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double b}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v c\:SoilWaterEffectParms}
{\xe \v SoilWaterEffectParms\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double c}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v d\:SoilWaterEffectParms}
{\xe \v SoilWaterEffectParms\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double d}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c1}
{\xe \v som1c1}
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som1c1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom1c1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms8}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1::Flux8} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1::parms8} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction} {\b INFLOW}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:som1c1}
{\xe \v som1c1\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:som1c1}
{\xe \v som1c1\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:som1c1}
{\xe \v som1c1\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c1::Flux8}  Flux}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFLOW\:som1c1}
{\xe \v som1c1\:INFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flowrestriction} INFLOW}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:som1c1}
{\xe \v som1c1\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c1::parms8}  parms}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:som1c1}
{\xe \v som1c1\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:som1c1}
{\xe \v som1c1\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:som1c1}
{\xe \v som1c1\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som1c2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som1c2}
{\xe \v som1c2}
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som1c2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom1c2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms10}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2::Flux10} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2::parms10} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction} {\b INFLOW}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:som1c2}
{\xe \v som1c2\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:som1c2}
{\xe \v som1c2\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:som1c2}
{\xe \v som1c2\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:som1c2}
{\xe \v som1c2\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c2::Flux10}  Flux}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFLOW\:som1c2}
{\xe \v som1c2\:INFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flowrestriction} INFLOW}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:som1c2}
{\xe \v som1c2\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som1c2::parms10}  parms}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:som1c2}
{\xe \v som1c2\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:som1c2}
{\xe \v som1c2\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:som1c2}
{\xe \v som1c2\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c1}
{\xe \v som2c1}
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som2c1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom2c1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux9}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms9}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1::Flux9} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1::parms9} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction} {\b INFLOW}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:som2c1}
{\xe \v som2c1\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:som2c1}
{\xe \v som2c1\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:som2c1}
{\xe \v som2c1\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c1::Flux9}  Flux}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFLOW\:som2c1}
{\xe \v som2c1\:INFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flowrestriction} INFLOW}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:som2c1}
{\xe \v som2c1\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c1::parms9}  parms}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:som2c1}
{\xe \v som2c1\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:som2c1}
{\xe \v som2c1\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:som2c1}
{\xe \v som2c1\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som2c2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v som2c2}
{\xe \v som2c2}
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som2c2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom2c2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms11}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2::Flux11} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2::parms11} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction} {\b INFLOW}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:som2c2}
{\xe \v som2c2\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:som2c2}
{\xe \v som2c2\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:som2c2}
{\xe \v som2c2\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:som2c2}
{\xe \v som2c2\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c2::Flux11}  Flux}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFLOW\:som2c2}
{\xe \v som2c2\:INFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flowrestriction} INFLOW}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:som2c2}
{\xe \v som2c2\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som2c2::parms11}  parms}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:som2c2}
{\xe \v som2c2\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:som2c2}
{\xe \v som2c2\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:som2c2}
{\xe \v som2c2\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
som3c Struct Reference\par \pard\plain 
{\tc\tcl2 \v som3c}
{\xe \v som3c}
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for som3c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structsom3c__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms12}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c::Flux12} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c::parms12} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction} {\b INFLOW}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:som3c}
{\xe \v som3c\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:som3c}
{\xe \v som3c\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:som3c}
{\xe \v som3c\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:som3c}
{\xe \v som3c\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som3c::Flux12}  Flux}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INFLOW\:som3c}
{\xe \v som3c\:INFLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flowrestriction} INFLOW}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:som3c}
{\xe \v som3c\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b som3c::parms12}  parms}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:som3c}
{\xe \v som3c\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:som3c}
{\xe \v som3c\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:som3c}
{\xe \v som3c\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
stem Struct Reference\par \pard\plain 
{\tc\tcl2 \v stem}
{\xe \v stem}
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for stem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structstem__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b biomass}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b litter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} biomassE {\b litterE}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v biomass\:stem}
{\xe \v stem\:biomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double biomass}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litter\:stem}
{\xe \v stem\:litter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double litter}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litterE\:stem}
{\xe \v stem\:litterE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} biomassE litterE}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc1}
{\xe \v strucc1}
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for strucc1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structstrucc1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms1}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1::Flux1} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1::parms1} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:strucc1}
{\xe \v strucc1\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:strucc1}
{\xe \v strucc1\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:strucc1}
{\xe \v strucc1\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc1::Flux1}  Flux}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:strucc1}
{\xe \v strucc1\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:strucc1}
{\xe \v strucc1\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc1::parms1}  parms}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:strucc1}
{\xe \v strucc1\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:strucc1}
{\xe \v strucc1\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:strucc1}
{\xe \v strucc1\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
strucc2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v strucc2}
{\xe \v strucc2}
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for strucc2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structstrucc2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2::Flux2} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2::parms2} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:strucc2}
{\xe \v strucc2\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:strucc2}
{\xe \v strucc2\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:strucc2}
{\xe \v strucc2\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:strucc2}
{\xe \v strucc2\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc2::Flux2}  Flux}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:strucc2}
{\xe \v strucc2\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:strucc2}
{\xe \v strucc2\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b strucc2::parms2}  parms}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:strucc2}
{\xe \v strucc2\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:strucc2}
{\xe \v strucc2\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:strucc2}
{\xe \v strucc2\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SymbNFixationParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v SymbNFixationParms}
{\xe \v SymbNFixationParms}
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FXMCA}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FXMCB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FXMXS}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b FXNPB}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b NSNFIX}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contrl of P on non-symbiotic fixation rate on availability of top soil N rate when NSNFIX=1.0. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b NTSPM}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v FXMCA\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:FXMCA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FXMCA}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FXMCB\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:FXMCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FXMCB}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FXMXS\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:FXMXS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FXMXS}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FXNPB\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:FXNPB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FXNPB}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NSNFIX\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:NSNFIX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int NSNFIX}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Contrl of P on non-symbiotic fixation rate on availability of top soil N rate when NSNFIX=1.0. }}\par
}
{\xe \v NTSPM\:SymbNFixationParms}
{\xe \v SymbNFixationParms\:NTSPM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double NTSPM}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TempEffectParms Struct Reference\par \pard\plain 
{\tc\tcl2 \v TempEffectParms}
{\xe \v TempEffectParms}
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
\par
{
{\f2 #include <crocent.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b teff1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b teff2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b teff3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b teff4}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v teff1\:TempEffectParms}
{\xe \v TempEffectParms\:teff1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double teff1}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v teff2\:TempEffectParms}
{\xe \v TempEffectParms\:teff2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double teff2}}
\par
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v teff3\:TempEffectParms}
{\xe \v TempEffectParms\:teff3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double teff3}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v teff4\:TempEffectParms}
{\xe \v TempEffectParms\:teff4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double teff4}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood1 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood1}
{\xe \v wood1}
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood1:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood1__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms3}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1::Flux3} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1::parms3} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:wood1}
{\xe \v wood1\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:wood1}
{\xe \v wood1\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:wood1}
{\xe \v wood1\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood1::Flux3}  Flux}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:wood1}
{\xe \v wood1\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:wood1}
{\xe \v wood1\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood1::parms3}  parms}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:wood1}
{\xe \v wood1\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:wood1}
{\xe \v wood1\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:wood1}
{\xe \v wood1\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood2 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood2}
{\xe \v wood2}
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood2:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood2__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms4}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2::Flux4} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2::parms4} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v C\:wood2}
{\xe \v wood2\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:wood2}
{\xe \v wood2\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:wood2}
{\xe \v wood2\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood2::Flux4}  Flux}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:wood2}
{\xe \v wood2\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:wood2}
{\xe \v wood2\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood2::parms4}  parms}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:wood2}
{\xe \v wood2\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:wood2}
{\xe \v wood2\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:wood2}
{\xe \v wood2\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wood3 Struct Reference\par \pard\plain 
{\tc\tcl2 \v wood3}
{\xe \v wood3}
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
\par
{
{\f2 #include <crocent.h>}}\par
Collaboration diagram for wood3:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structwood3__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Flux5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parms5}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon} {\b C}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals} {\b E}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lignin}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3::Flux5} {\b Flux}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3::parms5} {\b parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms} {\b TEff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms} {\b SWEFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms} {\b ANEREFF}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms} {\b PHEFF}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v ANEREFF\:wood3}
{\xe \v wood3\:ANEREFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b AnaerobicParms} ANEREFF}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v C\:wood3}
{\xe \v wood3\:C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b carbon} C}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v E\:wood3}
{\xe \v wood3\:E}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b minerals} E}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Flux\:wood3}
{\xe \v wood3\:Flux}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood3::Flux5}  Flux}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lignin\:wood3}
{\xe \v wood3\:lignin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double lignin}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parms\:wood3}
{\xe \v wood3\:parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b wood3::parms5}  parms}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PHEFF\:wood3}
{\xe \v wood3\:PHEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b PHParms} PHEFF}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SWEFF\:wood3}
{\xe \v wood3\:SWEFF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b SoilWaterEffectParms} SWEFF}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEff\:wood3}
{\xe \v wood3\:TEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b TempEffectParms} TEff}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b crocent.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ws_str Struct Reference\par \pard\plain 
{\tc\tcl2 \v ws_str}
{\xe \v ws_str}
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
\par
{
{\f2 #include <AuxBioCro.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rcoefPhoto}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rcoefSpleaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b awc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b psim}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b runoff}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Nleach}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v awc\:ws_str}
{\xe \v ws_str\:awc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double awc}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Nleach\:ws_str}
{\xe \v ws_str\:Nleach}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Nleach}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v psim\:ws_str}
{\xe \v ws_str\:psim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double psim}}
\par
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rcoefPhoto\:ws_str}
{\xe \v ws_str\:rcoefPhoto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rcoefPhoto}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rcoefSpleaf\:ws_str}
{\xe \v ws_str\:rcoefSpleaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rcoefSpleaf}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v runoff\:ws_str}
{\xe \v ws_str\:runoff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double runoff}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
/home/dlebauer/dev/biocro/src/{\b AuxBioCro.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Assigncropcent.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Assigncropcent.c}
{\xe \v /home/dlebauer/dev/biocro/src/Assigncropcent.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Assigncropcent.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_assigncropcent_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignPools} (struct {\b cropcentlayer} *CROPCENT, double *sompoolsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignParms} (struct {\b cropcentlayer} *CROPCENT, double *somassignparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CROPCENTTimescaling} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignENV} (struct {\b cropcentlayer} *CROPCENT, double *getsoiltexturefromR, double *getcropcentstatevarfromR, double *getbiocrotocropcentparmsfromR, double *geterosionparmsfromR, double *getc13parmsfromR, double *getleachingparmsfromR, double *getsymbnfixationparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetCropCentStateVar} (struct {\b cropcentEnvironment} *ENV, double *getcropcentstatevarfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignFluxRatios} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetInFlowCERatio} (struct {\b flowrestriction} *INFLOWRESTRICT, struct {\b minerals} *output, struct {\b cropcentEnvironment} *ENV)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b replaceMineralStruct} (struct {\b minerals} *FROM, struct {\b minerals} *TO)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSymbNFixationParms} (struct {\b SymbNFixationParms} *temp, double *getsymbnfixationparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetLeachingParms} (struct {\b OrgLeachParms} *temp, double *getleachingparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetC13Parms} (struct {\b C13Parms} *temp, double *getc13parmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetErosionParms} (struct {\b ErosionParms} *temp, double *geterosionparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSoilTexture} (struct {\b SoilTexture} *temp, double *getsoiltexturefromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetBioCroToCropcentParms} (struct {\b BioCroToCropcentParms} *temp, double *getbiocrotocropcentparmsfromR)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v assignENV\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:assignENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignENV (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i getsoiltexturefromR}, double * {\i getcropcentstatevarfromR}, double * {\i getbiocrotocropcentparmsfromR}, double * {\i geterosionparmsfromR}, double * {\i getc13parmsfromR}, double * {\i getleachingparmsfromR}, double * {\i getsymbnfixationparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 436                                                                                                                                                               \{\par
437  \par
438   GetBioCroToCropcentParms(&CROPCENT->BcroTOCentParms,getbiocrotocropcentparmsfromR);\par
439   GetSymbNFixationParms(&CROPCENT->ENV.NFIX,getsymbnfixationparmsfromR);\par
440   GetLeachingParms(&CROPCENT->ENV.ORGLECH,getleachingparmsfromR);\par
441   GetC13Parms(&CROPCENT->ENV.C13,getc13parmsfromR);\par
442   GetErosionParms(&CROPCENT->ENV.EROSION,geterosionparmsfromR);\par
443   GetSoilTexture(&CROPCENT->ENV.SOILTEX,getsoiltexturefromR);\par
444   GetCropCentStateVar(&CROPCENT->ENV,getcropcentstatevarfromR);\par
445   return;\par
446 \}\par
}
}
{\xe \v assignFluxRatios\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:assignFluxRatios}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignFluxRatios (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 472 \{\par
473   struct minerals *tmp;\par
474   // Updating unlabl and labl C ratio in each flux component based on  source\par
475   CROPCENT->strucc1.Flux.strucc1TOsom1c1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
476   CROPCENT->strucc1.Flux.strucc1TOsom2c1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
477   CROPCENT->strucc1.Flux.strucc1TOstrucc1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
478   CROPCENT->strucc1.Flux.strucc1TOmetabc1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
479   replaceMineralStruct(&CROPCENT->strucc1.E,&CROPCENT->strucc1.Flux.strucc1TOstrucc1.E);\par
480   \par
481   CROPCENT->strucc2.Flux.strucc2TOsom1c2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
482   CROPCENT->strucc2.Flux.strucc2TOsom2c2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
483   CROPCENT->strucc2.Flux.strucc2TOstrucc2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
484    replaceMineralStruct(&CROPCENT->strucc2.E,&CROPCENT->strucc2.Flux.strucc2TOstrucc2.E);\par
485    \par
486 //    replaceMineralStruct(&CROPCENT->metabc1.E,&CROPCENT->metabc1.Flux.metabc1TOmetabc1.E); this is repeated\par
487 //    replaceMineralStruct(&CROPCENT->metabc2.E,&CROPCENT->metabc2.Flux.metabc2TOmetabc2.E); this is repeated\par
488     \par
489   CROPCENT->wood1.Flux.wood1TOsom1c1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
490   CROPCENT->wood1.Flux.wood1TOsom2c1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
491   CROPCENT->wood1.Flux.wood1TOwood1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
492   replaceMineralStruct(&CROPCENT->wood1.E,&CROPCENT->wood1.Flux.wood1TOwood1.E);\par
493   \par
494   CROPCENT->wood2.Flux.wood2TOsom1c1.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
495   CROPCENT->wood2.Flux.wood2TOsom2c1.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
496   CROPCENT->wood2.Flux.wood2TOwood2.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
497   replaceMineralStruct(&CROPCENT->wood2.E,&CROPCENT->wood2.Flux.wood2TOwood2.E);\par
498 \par
499   \par
500   CROPCENT->wood3.Flux.wood3TOsom1c2.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
501   CROPCENT->wood3.Flux.wood3TOsom2c2.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
502   CROPCENT->wood3.Flux.wood3TOwood3.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
503   replaceMineralStruct(&CROPCENT->wood3.E,&CROPCENT->wood3.Flux.wood3TOwood3.E);\par
504   \par
505   CROPCENT->metabc1.Flux.metabc1TOsom1c1.C.unlablTOlabl = CROPCENT->metabc1.C.unlablTOlabl;\par
506   CROPCENT->metabc1.Flux.metabc1TOmetabc1.C.unlablTOlabl = CROPCENT->metabc1.C.unlablTOlabl;\par
507   replaceMineralStruct(&CROPCENT->metabc1.E,&CROPCENT->metabc1.Flux.metabc1TOmetabc1.E);\par
508   \par
509   \par
510   CROPCENT->metabc2.Flux.metabc2TOsom1c2.C.unlablTOlabl = CROPCENT->metabc2.C.unlablTOlabl;\par
511   CROPCENT->metabc2.Flux.metabc2TOmetabc2.C.unlablTOlabl = CROPCENT->metabc2.C.unlablTOlabl;\par
512   replaceMineralStruct(&CROPCENT->metabc2.E,&CROPCENT->metabc2.Flux.metabc2TOmetabc2.E);\par
513   \par
514   CROPCENT->som1c1.Flux.som1c1TOsom2c1.C.unlablTOlabl = CROPCENT->som1c1.C.unlablTOlabl;\par
515   CROPCENT->som1c1.Flux.som1c1TOsom1c1.C.unlablTOlabl = CROPCENT->som1c1.C.unlablTOlabl;\par
516   replaceMineralStruct(&CROPCENT->som1c1.E,&CROPCENT->som1c1.Flux.som1c1TOsom1c1.E);\par
517   \par
518   CROPCENT->som2c1.Flux.som2c1TOsom1c1.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl;\par
519   CROPCENT->som2c1.Flux.som2c1TOsom2c2.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl; // due to mixing\par
520   CROPCENT->som2c1.Flux.som2c1TOsom2c1.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl;\par
521   replaceMineralStruct(&CROPCENT->som2c1.E,&CROPCENT->som2c1.Flux.som2c1TOsom2c1.E);\par
522   \par
523   CROPCENT->som1c2.Flux.som1c2TOsom2c2.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
524   CROPCENT->som1c2.Flux.som1c2TOsom3c.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
525   CROPCENT->som1c2.Flux.som1c2TOleachate.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
526   CROPCENT->som1c2.Flux.som1c2TOsom1c2.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
527   replaceMineralStruct(&CROPCENT->som1c2.E,&CROPCENT->som1c2.Flux.som1c2TOsom1c2.E);\par
528    \par
529   CROPCENT->som2c2.Flux.som2c2TOsom1c2.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
530   CROPCENT->som2c2.Flux.som2c2TOsom3c.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
531   CROPCENT->som2c2.Flux.som2c2TOsom2c2.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
532   replaceMineralStruct(&CROPCENT->som2c2.E,&CROPCENT->som2c2.Flux.som2c2TOsom2c2.E);\par
533   \par
534   CROPCENT->som3c.Flux.som3cTOsom1c2.C.unlablTOlabl = CROPCENT->som3c.C.unlablTOlabl;\par
535   CROPCENT->som3c.Flux.som3cTOsom3c.C.unlablTOlabl = CROPCENT->som3c.C.unlablTOlabl;\par
536   replaceMineralStruct(&CROPCENT->som3c.E,&CROPCENT->som3c.Flux.som3cTOsom3c.E);\par
537   \par
538   // updating CE ratio of each Flux based on Environmental condition and Restriction criteria\par
539   \par
540   // Cflow from strucc1 to metabc1 due to photodegradation\par
541   tmp=&CROPCENT->strucc1.E;\par
542   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOmetabc1.E);\par
543   \par
544   \par
545   // Lets focus on all the fluxes to pool som1c1\par
546   GetInFlowCERatio(&CROPCENT->som1c1.INFLOW, tmp, &CROPCENT->ENV);\par
547   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOsom1c1.E);\par
548   replaceMineralStruct(tmp,&CROPCENT->wood1.Flux.wood1TOsom1c1.E);\par
549   replaceMineralStruct(tmp,&CROPCENT->wood2.Flux.wood2TOsom1c1.E);\par
550   replaceMineralStruct(tmp,&CROPCENT->metabc1.Flux.metabc1TOsom1c1.E);\par
551   replaceMineralStruct(tmp,&CROPCENT->som2c1.Flux.som2c1TOsom1c1.E);\par
552    \par
553   // Get CE ratio of inflow to som2c1 pool and update all the fluxes E \par
554   GetInFlowCERatio(&CROPCENT->som2c1.INFLOW, tmp, &CROPCENT->ENV);\par
555   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOsom2c1.E);\par
556   replaceMineralStruct(tmp,&CROPCENT->wood1.Flux.wood1TOsom2c1.E);\par
557   replaceMineralStruct(tmp,&CROPCENT->wood2.Flux.wood2TOsom2c1.E);\par
558   replaceMineralStruct(tmp,&CROPCENT->som1c1.Flux.som1c1TOsom2c1.E);\par
559   \par
560   // Get CE ratio of inflow to som1c2 and update all the fluxes\par
561   GetInFlowCERatio(&CROPCENT->som1c2.INFLOW, tmp, &CROPCENT->ENV);\par
562   replaceMineralStruct(tmp,&CROPCENT->strucc2.Flux.strucc2TOsom1c2.E);\par
563   replaceMineralStruct(tmp,&CROPCENT->wood3.Flux.wood3TOsom1c2.E);\par
564   replaceMineralStruct(tmp,&CROPCENT->som2c2.Flux.som2c2TOsom1c2.E);\par
565   replaceMineralStruct(tmp,&CROPCENT->som3c.Flux.som3cTOsom1c2.E);\par
566   replaceMineralStruct(tmp,&CROPCENT->metabc2.Flux.metabc2TOsom1c2.E);\par
567   \par
568   // CE ratio of inflow to som2c2 and update all the fluxes\par
569   GetInFlowCERatio(&CROPCENT->som2c2.INFLOW, tmp, &CROPCENT->ENV);\par
570   replaceMineralStruct(tmp,&CROPCENT->strucc2.Flux.strucc2TOsom2c2.E);\par
571   replaceMineralStruct(tmp,&CROPCENT->wood3.Flux.wood3TOsom2c2.E);\par
572   replaceMineralStruct(tmp,&CROPCENT->som2c1.Flux.som2c1TOsom2c2.E); // due to mixing\par
573   replaceMineralStruct(tmp,&CROPCENT->som1c2.Flux.som1c2TOsom2c2.E); \par
574   \par
575   // CE ratio of inflow to som3c and update all the fluxes\par
576   GetInFlowCERatio(&CROPCENT->som3c.INFLOW, tmp, &CROPCENT->ENV);\par
577   replaceMineralStruct(tmp,&CROPCENT->som2c2.Flux.som2c2TOsom3c.E); \par
578   replaceMineralStruct(tmp,&CROPCENT->som1c2.Flux.som1c2TOsom3c.E); \par
579 \par
580   return;\par
581 \}\par
}
}
{\xe \v assignParms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:assignParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignParms (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i somassignparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90 \{//Rprintf("%f, %f, %f \\n", *somassignparmsfromR,*(somassignparmsfromR+1),*(somassignparmsfromR+2));\par
91   CROPCENT->strucc1.parms.k=3.9;\par
92   CROPCENT->strucc1.parms.timestep=1440.0;\par
93   CROPCENT->strucc1.parms.strmx=5000.0;\par
94   CROPCENT->strucc1.parms.pligst=3.0;\par
95   CROPCENT->strucc1.parms.bioabsorp=100.0;\par
96   CROPCENT->strucc1.parms.rsplig=0.3;\par
97   CROPCENT->strucc1.parms.ps1co2=0.45;\par
98   CROPCENT->strucc1.parms.pmetabco2=0.48;\par
99   CROPCENT->strucc1.parms.maxphoto=0.0;\par
100   CROPCENT->strucc1.TEff.teff1=15.4;\par
101   CROPCENT->strucc1.TEff.teff2=11.75;\par
102   CROPCENT->strucc1.TEff.teff3=29.7;\par
103   CROPCENT->strucc1.TEff.teff4=0.031;\par
104   CROPCENT->strucc1.SWEFF.a=1.0;\par
105   CROPCENT->strucc1.SWEFF.b=1.0;\par
106   CROPCENT->strucc1.SWEFF.c=30.0;\par
107   CROPCENT->strucc1.SWEFF.d=-9.0;\par
108   CROPCENT->strucc1.PHEFF.a=4.0;\par
109   CROPCENT->strucc1.PHEFF.b=0.5;\par
110   CROPCENT->strucc1.PHEFF.c=1.1;\par
111   CROPCENT->strucc1.PHEFF.d=0.7;\par
112  \par
113 \par
114   \par
115   \par
116   CROPCENT->strucc2.parms.k=4.9;\par
117   CROPCENT->strucc2.parms.timestep=1440.0;\par
118   CROPCENT->strucc2.parms.strmx=5000.0;\par
119   CROPCENT->strucc2.parms.pligst=3.0;\par
120   CROPCENT->strucc2.parms.rsplig=0.3;\par
121   CROPCENT->strucc2.parms.ps1co2=0.55;\par
122   CROPCENT->strucc2.TEff.teff1=15.4;\par
123   CROPCENT->strucc2.TEff.teff2=11.75;\par
124   CROPCENT->strucc2.TEff.teff3=29.7;\par
125   CROPCENT->strucc2.TEff.teff4=0.031;\par
126   CROPCENT->strucc2.SWEFF.a=1.0;\par
127   CROPCENT->strucc2.SWEFF.b=1.0;\par
128   CROPCENT->strucc2.SWEFF.c=30.0;\par
129   CROPCENT->strucc2.SWEFF.d=9.0;\par
130   CROPCENT->strucc2.PHEFF.a=4.0;\par
131   CROPCENT->strucc2.PHEFF.b=0.5;\par
132   CROPCENT->strucc2.PHEFF.c=1.1;\par
133   CROPCENT->strucc2.PHEFF.d=0.7;\par
134   CROPCENT->strucc2.ANEREFF.ANEREF1=1.5;\par
135   CROPCENT->strucc2.ANEREFF.ANEREF2=3.0;\par
136   CROPCENT->strucc2.ANEREFF.ANEREF3=0.3;\par
137   \par
138   \par
139   CROPCENT->metabc1.parms.k=14.8;\par
140   CROPCENT->metabc1.parms.timestep=1440.0;\par
141   CROPCENT->metabc1.parms.pmco2=0.55;\par
142   CROPCENT->metabc1.parms.a=1.0;\par
143   CROPCENT->metabc1.parms.b=0.2;\par
144   CROPCENT->metabc1.parms.x1=0.0;\par
145   CROPCENT->metabc1.parms.x2=30000.0;\par
146   CROPCENT->metabc1.TEff.teff1=15.4;\par
147   CROPCENT->metabc1.TEff.teff2=11.75;\par
148   CROPCENT->metabc1.TEff.teff3=29.7;\par
149   CROPCENT->metabc1.TEff.teff4=0.031;\par
150   CROPCENT->metabc1.SWEFF.a=1.0;\par
151   CROPCENT->metabc1.SWEFF.b=1.0;\par
152   CROPCENT->metabc1.SWEFF.c=30.0;\par
153   CROPCENT->metabc1.SWEFF.d=-9.0;\par
154   CROPCENT->metabc1.PHEFF.a=4.8;\par
155   CROPCENT->metabc1.PHEFF.b=0.5;\par
156   CROPCENT->metabc1.PHEFF.c=1.14;\par
157   CROPCENT->metabc1.PHEFF.d=0.7;\par
158   \par
159   \par
160   CROPCENT->metabc2.parms.k=18.5;\par
161   CROPCENT->metabc2.parms.timestep=1440.0;\par
162   CROPCENT->metabc2.parms.pmco2=0.55;\par
163   CROPCENT->metabc2.TEff.teff1=15.4;\par
164   CROPCENT->metabc2.TEff.teff2=11.75;\par
165   CROPCENT->metabc2.TEff.teff3=29.7;\par
166   CROPCENT->metabc2.TEff.teff4=0.031;\par
167   CROPCENT->metabc2.SWEFF.a=1.0;\par
168   CROPCENT->metabc2.SWEFF.b=1.0;\par
169   CROPCENT->metabc2.SWEFF.c=30.0;\par
170   CROPCENT->metabc2.SWEFF.d=9.0;\par
171   CROPCENT->metabc2.PHEFF.a=4.8;\par
172   CROPCENT->metabc2.PHEFF.b=0.5;\par
173   CROPCENT->metabc2.PHEFF.c=1.14;\par
174   CROPCENT->metabc2.PHEFF.d=0.7;\par
175   CROPCENT->metabc2.ANEREFF.ANEREF1=1.5;\par
176   CROPCENT->metabc2.ANEREFF.ANEREF2=3.0;\par
177   CROPCENT->metabc2.ANEREFF.ANEREF3=0.3;\par
178   \par
179   CROPCENT->wood1.parms.k=3.9;\par
180   CROPCENT->wood1.parms.timestep=1440.0;\par
181   CROPCENT->wood1.parms.pligst=3.0;\par
182   CROPCENT->wood1.parms.rsplig=0.3;\par
183   CROPCENT->wood1.parms.ps1co2=0.45;\par
184   CROPCENT->wood1.TEff.teff1=15.4;\par
185   CROPCENT->wood1.TEff.teff2=11.75;\par
186   CROPCENT->wood1.TEff.teff3=29.7;\par
187   CROPCENT->wood1.TEff.teff4=0.031;\par
188   CROPCENT->wood1.SWEFF.a=1.0;\par
189   CROPCENT->wood1.SWEFF.b=1.0;\par
190   CROPCENT->wood1.SWEFF.c=30.0;\par
191   CROPCENT->wood1.SWEFF.d=9.0;\par
192   CROPCENT->wood1.PHEFF.a=4.0;\par
193   CROPCENT->wood1.PHEFF.b=0.5;\par
194   CROPCENT->wood1.PHEFF.c=1.1;\par
195   CROPCENT->wood1.PHEFF.d=0.7;\par
196   \par
197   \par
198   CROPCENT->wood2.parms.k=3.9;\par
199   CROPCENT->wood2.parms.timestep=1440.0;\par
200   CROPCENT->wood2.parms.pligst=3.0;\par
201   CROPCENT->wood2.parms.rsplig=0.3;\par
202   CROPCENT->wood2.parms.ps1co2=0.45;\par
203   CROPCENT->wood2.TEff.teff1=15.4;\par
204   CROPCENT->wood2.TEff.teff2=11.75;\par
205   CROPCENT->wood2.TEff.teff3=29.7;\par
206   CROPCENT->wood2.TEff.teff4=0.031;\par
207   CROPCENT->wood2.SWEFF.a=1.0;\par
208   CROPCENT->wood2.SWEFF.b=1.0;\par
209   CROPCENT->wood2.SWEFF.c=30.0;\par
210   CROPCENT->wood2.SWEFF.d=-9.0;\par
211   CROPCENT->wood2.PHEFF.a=4.0;\par
212   CROPCENT->wood2.PHEFF.b=0.5;\par
213   CROPCENT->wood2.PHEFF.c=1.1;\par
214   CROPCENT->wood2.PHEFF.d=0.7;\par
215   \par
216   \par
217   CROPCENT->wood3.parms.k=4.9;\par
218   CROPCENT->wood3.parms.timestep=1440.0;\par
219   CROPCENT->wood3.parms.pligst=3.0;\par
220   CROPCENT->wood3.parms.rsplig=0.3;\par
221   CROPCENT->wood3.parms.ps1co2=0.55;\par
222   CROPCENT->wood3.TEff.teff1=15.4;\par
223   CROPCENT->wood3.TEff.teff2=11.75;\par
224   CROPCENT->wood3.TEff.teff3=29.7;\par
225   CROPCENT->wood3.TEff.teff4=0.031;\par
226   CROPCENT->wood3.SWEFF.a=1.0;\par
227   CROPCENT->wood3.SWEFF.b=1.0;\par
228   CROPCENT->wood3.SWEFF.c=30.0;\par
229   CROPCENT->wood3.SWEFF.d=-9.0;\par
230   CROPCENT->wood3.PHEFF.a=4.0;\par
231   CROPCENT->wood3.PHEFF.b=0.5;\par
232   CROPCENT->wood3.PHEFF.c=1.1;\par
233   CROPCENT->wood3.PHEFF.d=0.7;\par
234   CROPCENT->wood3.ANEREFF.ANEREF1=1.5;\par
235   CROPCENT->wood3.ANEREFF.ANEREF2=3.0;\par
236   CROPCENT->wood3.ANEREFF.ANEREF3=0.3;\par
237   \par
238   \par
239   CROPCENT->som1c1.parms.k=6.0;\par
240   CROPCENT->som1c1.parms.timestep=1440.0;\par
241   CROPCENT->som1c1.parms.p1co2a=0.6;\par
242   CROPCENT->som1c1.parms.p1co2b=0.0;\par
243   CROPCENT->som1c1.parms.a=1.0;\par
244   CROPCENT->som1c1.parms.b=5.0;\par
245   CROPCENT->som1c1.parms.x1=0.0;\par
246   CROPCENT->som1c1.parms.x2=30000.0;\par
247   CROPCENT->som1c1.TEff.teff1=15.4;\par
248   CROPCENT->som1c1.TEff.teff2=11.75;\par
249   CROPCENT->som1c1.TEff.teff3=29.7;\par
250   CROPCENT->som1c1.TEff.teff4=0.031;\par
251   CROPCENT->som1c1.SWEFF.a=1.0;\par
252   CROPCENT->som1c1.SWEFF.b=1.0;\par
253   CROPCENT->som1c1.SWEFF.c=30.0;\par
254   CROPCENT->som1c1.SWEFF.d=-9.0;\par
255   CROPCENT->som1c1.PHEFF.a=4.0;\par
256   CROPCENT->som1c1.PHEFF.b=0.5;\par
257   CROPCENT->som1c1.PHEFF.c=1.1;\par
258   CROPCENT->som1c1.PHEFF.d=0.7;\par
259   CROPCENT->som1c1.INFLOW.maxCN= 15.0;\par
260   CROPCENT->som1c1.INFLOW.minCN=  6.0; \par
261   CROPCENT->som1c1.INFLOW.minN=  1.0; \par
262   CROPCENT->som1c1.INFLOW.maxCP=  150.0; \par
263   CROPCENT->som1c1.INFLOW.minCP=  30.0; \par
264   CROPCENT->som1c1.INFLOW.minP=  2.0; \par
265   CROPCENT->som1c1.INFLOW.maxCS=  200.0; \par
266   CROPCENT->som1c1.INFLOW.minCS=  50.0; \par
267   CROPCENT->som1c1.INFLOW.minS=  2.0; \par
268   CROPCENT->som1c1.INFLOW.maxCK=  0.0; \par
269   CROPCENT->som1c1.INFLOW.minCK=  0.0; \par
270   CROPCENT->som1c1.INFLOW.minK=  0.0; \par
271   \par
272 \par
273   \par
274   CROPCENT->som2c1.parms.k=0.2;\par
275   CROPCENT->som2c1.parms.timestep=1440.0;\par
276   CROPCENT->som2c1.parms.p2co2=0.55;\par
277   CROPCENT->som2c1.parms.a=1.0;\par
278   CROPCENT->som2c1.parms.b=5.0;\par
279   CROPCENT->som2c1.parms.x1=0.0;\par
280   CROPCENT->som2c1.parms.x2=30000.0;\par
281   CROPCENT->som2c1.parms.mix=0.5;\par
282   CROPCENT->som2c1.TEff.teff1=15.4;\par
283   CROPCENT->som2c1.TEff.teff2=11.75;\par
284   CROPCENT->som2c1.TEff.teff3=29.7;\par
285   CROPCENT->som2c1.TEff.teff4=0.031;\par
286   CROPCENT->som2c1.SWEFF.a=1.0;\par
287   CROPCENT->som2c1.SWEFF.b=1.0;\par
288   CROPCENT->som2c1.SWEFF.c=30.0;\par
289   CROPCENT->som2c1.SWEFF.d=-9.0;\par
290   CROPCENT->som2c1.PHEFF.a=4.0;\par
291   CROPCENT->som2c1.PHEFF.b=0.5;\par
292   CROPCENT->som2c1.PHEFF.c=1.1;\par
293   CROPCENT->som2c1.PHEFF.d=0.7;\par
294   CROPCENT->som2c1.INFLOW .maxCN= 20.0;\par
295   CROPCENT->som2c1.INFLOW .minCN=  12.0;\par
296   CROPCENT->som2c1.INFLOW .minN=  1.0;\par
297   CROPCENT->som2c1.INFLOW .maxCP=  300.0;\par
298   CROPCENT->som2c1.INFLOW .minCP=  100.0;\par
299   CROPCENT->som2c1.INFLOW .minP=  2.0;\par
300   CROPCENT->som2c1.INFLOW .maxCS=  400.0; \par
301   CROPCENT->som2c1.INFLOW .minCS=  100.0; \par
302   CROPCENT->som2c1.INFLOW .minS=  2.0; \par
303   CROPCENT->som2c1.INFLOW .maxCK=  0.0; \par
304   CROPCENT->som2c1.INFLOW .minCK=  0.0; \par
305   CROPCENT->som2c1.INFLOW .minK=  0.0; \par
306   \par
307   \par
308   \par
309  \par
310   \par
311   CROPCENT->som1c2.parms.k=7.3;\par
312   CROPCENT->som1c2.parms.timestep=1440.0;\par
313   CROPCENT->som1c2.parms.peftxa=0.25;\par
314   CROPCENT->som1c2.parms.peftxb=0.75;\par
315   CROPCENT->som1c2.parms.p1co2a=0.17;\par
316   CROPCENT->som1c2.parms.p1co2b=0.68;\par
317   CROPCENT->som1c2.parms.ps1s3[0]=0.003;\par
318   CROPCENT->som1c2.parms.ps1s3[1]=0.032;\par
319   CROPCENT->som1c2.parms.animpt=5.0;\par
320   CROPCENT->som1c2.TEff.teff1=15.4;\par
321   CROPCENT->som1c2.TEff.teff2=11.75;\par
322   CROPCENT->som1c2.TEff.teff3=29.7;\par
323   CROPCENT->som1c2.TEff.teff4=0.031;\par
324   CROPCENT->som1c2.SWEFF.a=1.0;\par
325   CROPCENT->som1c2.SWEFF.b=1.0;\par
326   CROPCENT->som1c2.SWEFF.c=30.0;\par
327   CROPCENT->som1c2.SWEFF.d=-9.0;\par
328   CROPCENT->som1c2.PHEFF.a=4.0;\par
329   CROPCENT->som1c2.PHEFF.b=0.5;\par
330   CROPCENT->som1c2.PHEFF.c=1.1;\par
331   CROPCENT->som1c2.PHEFF.d=0.7;\par
332   CROPCENT->som1c2.ANEREFF.ANEREF1=1.5;\par
333   CROPCENT->som1c2.ANEREFF.ANEREF2=3.0;\par
334   CROPCENT->som1c2.ANEREFF.ANEREF3=0.3;\par
335   CROPCENT->som1c2.INFLOW .maxCN= 14.0;\par
336   CROPCENT->som1c2.INFLOW .minCN=  3.0; \par
337   CROPCENT->som1c2.INFLOW .minN=  2.0; \par
338   CROPCENT->som1c2.INFLOW .maxCP=  150.0; \par
339   CROPCENT->som1c2.INFLOW .minCP=  30.0; \par
340   CROPCENT->som1c2.INFLOW .minP=  2.0; \par
341   CROPCENT->som1c2.INFLOW .maxCS=  200.0; \par
342   CROPCENT->som1c2.INFLOW .minCS=  50.0; \par
343   CROPCENT->som1c2.INFLOW .minS=  2.0; \par
344   CROPCENT->som1c2.INFLOW .maxCK=  0.0; \par
345   CROPCENT->som1c2.INFLOW .minCK=  0.0; \par
346   CROPCENT->som1c2.INFLOW .minK=  0.0; \par
347   \par
348   \par
349    \par
350   CROPCENT->som2c2.parms.k=0.25;\par
351   CROPCENT->som2c2.parms.timestep=1440.0;\par
352   CROPCENT->som2c2.parms.p2co2=0.55;\par
353   CROPCENT->som2c2.parms.ps2s3[0]=0.003;\par
354   CROPCENT->som2c2.parms.ps2s3[1]=0.009;\par
355   CROPCENT->som2c2.parms.animpt=5.0;\par
356   CROPCENT->som2c2.TEff.teff1=15.4;\par
357   CROPCENT->som2c2.TEff.teff2=11.75;\par
358   CROPCENT->som2c2.TEff.teff3=29.7;\par
359   CROPCENT->som2c2.TEff.teff4=.031;\par
360   CROPCENT->som2c2.SWEFF.a=1.0;\par
361   CROPCENT->som2c2.SWEFF.b=1.0;\par
362   CROPCENT->som2c2.SWEFF.c=30.0;\par
363   CROPCENT->som2c2.SWEFF.d=-9.0;\par
364   CROPCENT->som2c2.PHEFF.a=4.0;\par
365   CROPCENT->som2c2.PHEFF.b=0.5;\par
366   CROPCENT->som2c2.PHEFF.c=1.1;\par
367   CROPCENT->som2c2.PHEFF.d=0.7;\par
368   CROPCENT->som2c2.ANEREFF.ANEREF1=1.5;\par
369   CROPCENT->som2c2.ANEREFF.ANEREF2=3.0;\par
370   CROPCENT->som2c2.ANEREFF.ANEREF3=0.3;\par
371   CROPCENT->som2c2.INFLOW .maxCN= 20.0;\par
372   CROPCENT->som2c2.INFLOW .minCN=  12.0; \par
373   CROPCENT->som2c2.INFLOW .minN=  2.0; \par
374   CROPCENT->som2c2.INFLOW .maxCP=  400.0; \par
375   CROPCENT->som2c2.INFLOW .minCP=  100.0; \par
376   CROPCENT->som2c2.INFLOW .minP=  2.0; \par
377   CROPCENT->som2c2.INFLOW .maxCS=  400.0; \par
378   CROPCENT->som2c2.INFLOW .minCS=  100.0; \par
379   CROPCENT->som2c2.INFLOW .minS=  2.0; \par
380   CROPCENT->som2c2.INFLOW .maxCK=  0.0; \par
381   CROPCENT->som2c2.INFLOW .minCK=  0.0; \par
382   CROPCENT->som2c2.INFLOW .minK=  0.0; \par
383   \par
384   \par
385   \par
386   CROPCENT->som3c.parms.k=0.0025;\par
387   CROPCENT->som3c.parms.timestep=1440.0;\par
388   CROPCENT->som3c.parms.p3co2=0.55;\par
389   CROPCENT->som3c.TEff.teff1=15.4;\par
390   CROPCENT->som3c.TEff.teff2=11.75;\par
391   CROPCENT->som3c.TEff.teff3=29.7;\par
392   CROPCENT->som3c.TEff.teff4=0.031;\par
393   CROPCENT->som3c.SWEFF.a=1.0;\par
394   CROPCENT->som3c.SWEFF.b=1.0;\par
395   CROPCENT->som3c.SWEFF.c=30.0;\par
396   CROPCENT->som3c.SWEFF.d=-9.0;\par
397   CROPCENT->som3c.PHEFF.a=3.0;\par
398   CROPCENT->som3c.PHEFF.b=0.5;\par
399   CROPCENT->som3c.PHEFF.c=1.10;\par
400   CROPCENT->som3c.PHEFF.d=0.7;\par
401   CROPCENT->som3c.ANEREFF.ANEREF1=1.5;\par
402   CROPCENT->som3c.ANEREFF.ANEREF2=3.0;\par
403   CROPCENT->som3c.ANEREFF.ANEREF3=0.3;\par
404   CROPCENT->som3c.INFLOW .maxCN= 8.0;\par
405   CROPCENT->som3c.INFLOW .minCN=  6.0; \par
406   CROPCENT->som3c.INFLOW .minN=  2.0; \par
407   CROPCENT->som3c.INFLOW .maxCP=  200.0; \par
408   CROPCENT->som3c.INFLOW .minCP=  50.0; \par
409   CROPCENT->som3c.INFLOW .minP=  2.0; \par
410   CROPCENT->som3c.INFLOW .maxCS=  200.0; \par
411   CROPCENT->som3c.INFLOW .minCS=  50.0; \par
412   CROPCENT->som3c.INFLOW .minS=  2.0; \par
413   CROPCENT->som3c.INFLOW .maxCK=  0.0; \par
414   CROPCENT->som3c.INFLOW .minCK=  0.0; \par
415   CROPCENT->som3c.INFLOW .minK=  0.0; \par
416   return;\par
417 \}\par
}
}
{\xe \v assignPools\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:assignPools}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignPools (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i sompoolsfromR})}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 \{\par
8   CROPCENT->strucc1.C.totalC=*(sompoolsfromR+0);\par
9   CROPCENT->strucc1.C.unlablTOlabl=*(sompoolsfromR+1);\par
10   CROPCENT->strucc1.E.CN=*(sompoolsfromR+2);\par
11   CROPCENT->strucc1.E.CP=*(sompoolsfromR+3);\par
12   CROPCENT->strucc1.E.CS=*(sompoolsfromR+4);\par
13   CROPCENT->strucc1.E.CK=*(sompoolsfromR+5);\par
14   CROPCENT->strucc1.lignin=*(sompoolsfromR+6);  \par
15   CROPCENT->strucc2.C.totalC=*(sompoolsfromR+7);\par
16   CROPCENT->strucc2.C.unlablTOlabl=*(sompoolsfromR+8);\par
17   CROPCENT->strucc2.E.CN=*(sompoolsfromR+9);\par
18   CROPCENT->strucc2.E.CP=*(sompoolsfromR+10);\par
19   CROPCENT->strucc2.E.CS=*(sompoolsfromR+11);\par
20   CROPCENT->strucc2.E.CK=*(sompoolsfromR+12);\par
21   CROPCENT->strucc2.lignin=*(sompoolsfromR+13);  \par
22   CROPCENT->metabc1.C.totalC=*(sompoolsfromR+14);\par
23   CROPCENT->metabc1.C.unlablTOlabl=*(sompoolsfromR+15);\par
24   CROPCENT->metabc1.E.CN=*(sompoolsfromR+16);\par
25   CROPCENT->metabc1.E.CP=*(sompoolsfromR+17);\par
26   CROPCENT->metabc1.E.CS=*(sompoolsfromR+18);\par
27   CROPCENT->metabc1.E.CK=*(sompoolsfromR+19);  \par
28   CROPCENT->metabc2.C.totalC=*(sompoolsfromR+20);\par
29   CROPCENT->metabc2.C.unlablTOlabl=*(sompoolsfromR+21);\par
30   CROPCENT->metabc2.E.CN=*(sompoolsfromR+22);\par
31   CROPCENT->metabc2.E.CP=*(sompoolsfromR+23);\par
32   CROPCENT->metabc2.E.CS=*(sompoolsfromR+24);\par
33   CROPCENT->metabc2.E.CK=*(sompoolsfromR+25);  \par
34   CROPCENT->wood1.C.totalC=*(sompoolsfromR+26);\par
35   CROPCENT->wood1.C.unlablTOlabl=*(sompoolsfromR+27);\par
36   CROPCENT->wood1.E.CN=*(sompoolsfromR+28);\par
37   CROPCENT->wood1.E.CP=*(sompoolsfromR+29);\par
38   CROPCENT->wood1.E.CS=*(sompoolsfromR+30);\par
39   CROPCENT->wood1.E.CK=*(sompoolsfromR+31);\par
40   CROPCENT->wood1.lignin=*(sompoolsfromR+32);  \par
41   CROPCENT->wood2.C.totalC=*(sompoolsfromR+33);\par
42   CROPCENT->wood2.C.unlablTOlabl=*(sompoolsfromR+34);\par
43   CROPCENT->wood2.E.CN=*(sompoolsfromR+35);\par
44   CROPCENT->wood2.E.CP=*(sompoolsfromR+36);\par
45   CROPCENT->wood2.E.CS=*(sompoolsfromR+37);\par
46   CROPCENT->wood2.E.CK=*(sompoolsfromR+38);\par
47   CROPCENT->wood2.lignin=*(sompoolsfromR+39);  \par
48   CROPCENT->wood3.C.totalC=*(sompoolsfromR+40);\par
49   CROPCENT->wood3.C.unlablTOlabl=*(sompoolsfromR+41);\par
50   CROPCENT->wood3.E.CN=*(sompoolsfromR+42);\par
51   CROPCENT->wood3.E.CP=*(sompoolsfromR+43);\par
52   CROPCENT->wood3.E.CS=*(sompoolsfromR+44);\par
53   CROPCENT->wood3.E.CK=*(sompoolsfromR+45);\par
54   CROPCENT->wood3.lignin=*(sompoolsfromR+46);  \par
55   CROPCENT->som1c1.C.totalC=*(sompoolsfromR+47);\par
56   CROPCENT->som1c1.C.unlablTOlabl=*(sompoolsfromR+48);\par
57   CROPCENT->som1c1.E.CN=*(sompoolsfromR+49);\par
58   CROPCENT->som1c1.E.CP=*(sompoolsfromR+50);\par
59   CROPCENT->som1c1.E.CS=*(sompoolsfromR+51);\par
60   CROPCENT->som1c1.E.CK=*(sompoolsfromR+52);  \par
61   CROPCENT->som1c2.C.totalC=*(sompoolsfromR+53);\par
62   CROPCENT->som1c2.C.unlablTOlabl=*(sompoolsfromR+54);\par
63   CROPCENT->som1c2.E.CN=*(sompoolsfromR+55);\par
64   CROPCENT->som1c2.E.CP=*(sompoolsfromR+56);\par
65   CROPCENT->som1c2.E.CS=*(sompoolsfromR+57);\par
66   CROPCENT->som1c2.E.CK=*(sompoolsfromR+58);  \par
67   CROPCENT->som2c1.C.totalC=*(sompoolsfromR+59);\par
68   CROPCENT->som2c1.C.unlablTOlabl=*(sompoolsfromR+60);\par
69   CROPCENT->som2c1.E.CN=*(sompoolsfromR+61);\par
70   CROPCENT->som2c1.E.CP=*(sompoolsfromR+62);\par
71   CROPCENT->som2c1.E.CS=*(sompoolsfromR+63);\par
72   CROPCENT->som2c1.E.CK=*(sompoolsfromR+64);  \par
73   CROPCENT->som2c2.C.totalC=*(sompoolsfromR+65);\par
74   CROPCENT->som2c2.C.unlablTOlabl=*(sompoolsfromR+66);\par
75   CROPCENT->som2c2.E.CN=*(sompoolsfromR+67);\par
76   CROPCENT->som2c2.E.CP=*(sompoolsfromR+68);\par
77   CROPCENT->som2c2.E.CS=*(sompoolsfromR+69);\par
78   CROPCENT->som2c2.E.CK=*(sompoolsfromR+70); \par
79   CROPCENT->som3c.C.totalC=*(sompoolsfromR+71);\par
80   CROPCENT->som3c.C.unlablTOlabl=*(sompoolsfromR+72);\par
81   CROPCENT->som3c.E.CN=*(sompoolsfromR+73);\par
82   CROPCENT->som3c.E.CP=*(sompoolsfromR+74);\par
83   CROPCENT->som3c.E.CS=*(sompoolsfromR+75);\par
84   CROPCENT->som3c.E.CK=*(sompoolsfromR+76);\par
85   return;\par
86 \}\par
}
}
{\xe \v CROPCENTTimescaling\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:CROPCENTTimescaling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CROPCENTTimescaling (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 419                                                         \{\par
420 CROPCENT->strucc1.parms.k= timescaling(CROPCENT->strucc1.parms.k,CROPCENT->strucc1.parms.timestep);\par
421 CROPCENT->strucc2.parms.k= timescaling(CROPCENT->strucc2.parms.k,CROPCENT->strucc2.parms.timestep);\par
422 CROPCENT->metabc1.parms.k= timescaling(CROPCENT->metabc1.parms.k,CROPCENT->metabc1.parms.timestep);\par
423 CROPCENT->metabc2.parms.k= timescaling(CROPCENT->metabc2.parms.k,CROPCENT->metabc2.parms.timestep);\par
424 CROPCENT->wood1.parms.k= timescaling(CROPCENT->wood1.parms.k,CROPCENT->wood1.parms.timestep);\par
425 CROPCENT->wood2.parms.k= timescaling(CROPCENT->wood2.parms.k,CROPCENT->wood2.parms.timestep);\par
426 CROPCENT->wood3.parms.k= timescaling(CROPCENT->wood3.parms.k,CROPCENT->wood3.parms.timestep);\par
427 CROPCENT->som1c1.parms.k= timescaling(CROPCENT->som1c1.parms.k,CROPCENT->som1c1.parms.timestep);\par
428 CROPCENT->som2c1.parms.k= timescaling(CROPCENT->som2c1.parms.k,CROPCENT->som2c1.parms.timestep);\par
429 CROPCENT->som1c2.parms.k= timescaling(CROPCENT->som1c2.parms.k,CROPCENT->som1c2.parms.timestep);\par
430 CROPCENT->som2c2.parms.k= timescaling(CROPCENT->som2c2.parms.k,CROPCENT->som2c2.parms.timestep);\par
431 CROPCENT->som3c.parms.k= timescaling(CROPCENT->som3c.parms.k,CROPCENT->som3c.parms.timestep);\par
432   return;\par
433 \}\par
}
}
{\xe \v GetBioCroToCropcentParms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetBioCroToCropcentParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetBioCroToCropcentParms (struct {\b BioCroToCropcentParms} * {\i temp}, double * {\i getbiocrotocropcentparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 674                                                                                                          \{\par
675   \par
676   temp->structometaSLOPE=-0.013;\par
677   temp->structometaINTERCEP=0.85;\par
678   temp->surfacedamrN=0.0;\par
679   temp->surfacedamrP=0.0;\par
680   temp->surfacedamrS=0.01;\par
681   temp->surfacedamrK=0.0;\par
682   temp->soildamrN=0.02;\par
683   temp->soildamrP=0.02;\par
684   temp->soildamrS=0.04;\par
685   temp->soildamrK=0.0;\par
686   temp->mindamrN=15.0;\par
687   temp->mindamrP=150.0;\par
688   temp->mindamrS=150.0;\par
689   temp->mindamrK=0.0;\par
690   temp->pabres=100;\par
691   return;\par
692 \}}
}
{\xe \v GetC13Parms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetC13Parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetC13Parms (struct {\b C13Parms} * {\i temp}, double * {\i getc13parmsfromR})}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 645 \{ \par
646   temp->DRESP=0.999; \par
647   temp->DLIGDF=-4.0;\par
648   return;\par
649 \}\par
}
}
{\xe \v GetCropCentStateVar\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetCropCentStateVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetCropCentStateVar (struct {\b cropcentEnvironment} * {\i ENV}, double * {\i getcropcentstatevarfromR})}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448                                                                                            \{\par
449   \par
450   ENV->minN=1e-6;\par
451   ENV->minP=5.0;\par
452   ENV->minS=5.0;\par
453   ENV->minK=5.0;\par
454   ENV->surfaceTEMP=25.0;\par
455   ENV->soilTEMP=25.0;\par
456   ENV->surfaceRELWC=0.3;\par
457   ENV->soilRELWC=0.3;\par
458   ENV->leachedWATER=0.0;\par
459   ENV->PET=0.8;\par
460   ENV->AWC=0.8;\par
461   ENV->soilrad=100.0; // check unit for this variable\par
462   ENV->pH=7.0;\par
463   ENV->drainage=0.5;\par
464   /***************************/\par
465   if(ENV->minN <1e-6) ENV->minN=1e-6;\par
466   /*****************************/\par
467   return;\par
468 \}\par
}
}
{\xe \v GetErosionParms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetErosionParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetErosionParms (struct {\b ErosionParms} * {\i temp}, double * {\i geterosionparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 651                                                                             \{\par
652   \par
653   temp->LHZF[0]=0.2; \par
654   temp->LHZF[1]=0.4;\par
655   temp->LHZF[2]=0.8;\par
656   temp->EDEPTH=0.2; \par
657   temp->ENRICH=2.0;\par
658   return;\par
659 \}\par
}
}
{\xe \v GetInFlowCERatio\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetInFlowCERatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetInFlowCERatio (struct {\b flowrestriction} * {\i INFLOWRESTRICT}, struct {\b minerals} * {\i output}, struct {\b cropcentEnvironment} * {\i ENV})}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 583                                                                                                                        \{\par
584   /****************************************\par
585    * Purpose:\par
586    * This function calculates CE ratio of the flow structure flow nased on cropcent environment and restriction critera\par
587    * Input\par
588    * cropcent Environment ENV\par
589    * flow restriction criteria input\par
590    * OUTPUT\par
591    * flow structure output\par
592    * **************************************/\par
593    double temp;\par
594 \par
595         if(ENV->minN <= 0.0) // when mineral N is too low in the crocent environment\par
596         \{\par
597           output->CN=INFLOWRESTRICT->maxCN;\par
598         \}\par
599         if((ENV->minN > 0.0)&&(ENV->minN < INFLOWRESTRICT->minN)) // when mineral N is sufficient but lower than required to obtain MINIMUM CN ratio of flow\par
600         \{\par
601           temp=(1.0-ENV->minN)/INFLOWRESTRICT->minN;\par
602           output->CN=temp*(INFLOWRESTRICT->maxCN-INFLOWRESTRICT->minCN)+INFLOWRESTRICT->minCN;\par
603         \}\par
604         if(ENV->minN >= INFLOWRESTRICT->minN)// when mineral N of crocent environment is greater than what is required for min CN ratio of INFLOWRESTRICT\par
605         \{\par
606           output->CN=INFLOWRESTRICT->minCN;\par
607         \}\par
608   return;\par
609 \}\par
}
}
{\xe \v GetLeachingParms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetLeachingParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetLeachingParms (struct {\b OrgLeachParms} * {\i temp}, double * {\i getleachingparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 632 \{\par
633   temp->DailyThresholdFlow=1.5;\par
634   temp->OMLEACH[0]=0.03;\par
635   temp->OMLEACH[1]=0.12;\par
636   temp->OMLEACH[2]=1.90; // is this same as threshold value of daily flow?\par
637   temp->som1c2toleach.CN=2.0;\par
638   temp->som1c2toleach.CP=35.0;\par
639   temp->som1c2toleach.CS=2.0;\par
640   temp->som1c2toleach.CK=2.0;// This need to be verified\par
641   return;\par
642 \}\par
}
}
{\xe \v GetSoilTexture\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetSoilTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetSoilTexture (struct {\b SoilTexture} * {\i temp}, double * {\i getsoiltexturefromR})}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 661                                                                            \{\par
662 /**************************************************************************\par
663 //  I am chaning it back to constant value to avoid error now as ther eis not pointer passed from R for now\par
664   temp->sand=*getsoiltexturefromR;\par
665   temp->silt=*(getsoiltexturefromR+1);\par
666   temp->clay=*(getsoiltexturefromR+2);\par
667   *************************************************************************/\par
668   temp->sand=0.33;\par
669   temp->silt=0.33;\par
670   temp->clay=0.34;\par
671   return;\par
672 \}\par
}
}
{\xe \v GetSymbNFixationParms\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:GetSymbNFixationParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetSymbNFixationParms (struct {\b SymbNFixationParms} * {\i temp}, double * {\i getsymbnfixationparmsfromR})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 621 \{//Rprintf("%f, %f, %f \\n", *getsymbnfixationparmsfromR,*(getsymbnfixationparmsfromR+1),*(getsymbnfixationparmsfromR+2));\par
622   temp->FXMCA=-0.125;\par
623   temp->FXMCB=0.005;\par
624   temp->FXMXS=0.35;\par
625   temp->FXNPB=7.0;\par
626   temp->NSNFIX=0;\par
627   temp->NTSPM=4.0;\par
628   return;\par
629 \}\par
}
}
{\xe \v replaceMineralStruct\:Assigncropcent.c}
{\xe \v Assigncropcent.c\:replaceMineralStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void replaceMineralStruct (struct {\b minerals} * {\i FROM}, struct {\b minerals} * {\i TO})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 611 \{\par
612   TO->CN=FROM->CN;\par
613   TO->CP=FROM->CP;\par
614   TO->CS=FROM->CS;\par
615   TO->CK=FROM->CK;\par
616   return;\par
617 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/assignManagement.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/assignManagement.c}
{\xe \v /home/dlebauer/dev/biocro/src/assignManagement.c}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for assignManagement.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "assign_management_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignManagement} (struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateafterharvest} (struct {\b miscanthus} *{\b miscanthus}, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateafteremergence} (struct {\b miscanthus} *{\b miscanthus}, struct {\b management} *{\b management})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v assignManagement\:assignManagement.c}
{\xe \v assignManagement.c\:assignManagement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignManagement (struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9 management->harvestparms.harvestdoy=300;\par
10 management->harvestparms.frleaf=1.0;\par
11 management->harvestparms.frleaflitter=0.0;\par
12 management->harvestparms.frstem=1.0;\par
13 management->harvestparms.frstemlitter=0.0;\par
14 management->harvestparms.frdeadroot=0.0;\par
15 management->harvestparms.frdeadrhizome=0.0;\par
16 \par
17 management->emergenceparms.minimumdoy=90;\par
18 management->emergenceparms.emergenceTemp=6.0;\par
19 management->emergenceparms.StoragetoLeaffraction=0.02;\par
20 management->emergenceparms.StemtoLeaffraction=0.02;\par
21 management->emergenceparms.plantingrate=20;\par
22 return;\par
23 \}\par
}
}
{\xe \v updateafteremergence\:assignManagement.c}
{\xe \v assignManagement.c\:updateafteremergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateafteremergence (struct {\b miscanthus} * {\i miscanthus}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42 \{\par
43   miscanthus->leaf.biomass=(management->emergenceparms.StoragetoLeaffraction)* miscanthus->rhizome.biomass;\par
44   miscanthus->rhizome.biomass= miscanthus->rhizome.biomass - miscanthus->leaf.biomass;\par
45   return;\par
46 \}}
}
{\xe \v updateafterharvest\:assignManagement.c}
{\xe \v assignManagement.c\:updateafterharvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateafterharvest (struct {\b miscanthus} * {\i miscanthus}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26 \{\par
27   miscanthus->leaf.biomass=(1-management->harvestparms.frleaf)*miscanthus->leaf.biomass;\par
28   miscanthus->leaf.litter=(1-management->harvestparms.frleaflitter)*miscanthus->leaf.litter;\par
29   \par
30   miscanthus->stem.biomass=(1-management->harvestparms.frstem)*miscanthus->stem.biomass;\par
31   miscanthus->stem.litter=(1-management->harvestparms.frstemlitter)*miscanthus->stem.litter;\par
32   \par
33   miscanthus->root.biomass=(1-management->harvestparms.frdeadroot)*miscanthus->root.biomass;\par
34   miscanthus->root.litter=management->harvestparms.frdeadroot*miscanthus->root.biomass;\par
35   \par
36   miscanthus->rhizome.biomass=(1-management->harvestparms.frdeadrhizome)*miscanthus->rhizome.biomass;\par
37   miscanthus->rhizome.litter=management->harvestparms.frdeadrhizome*miscanthus->rhizome.biomass;\par
38   return;\par
39 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxBioCro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxBioCro.c}
{\xe \v /home/dlebauer/dev/biocro/src/AuxBioCro.c}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c4photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "BioCro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for AuxBioCro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_aux_bio_cro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lightME} (double lat, int DOY, int td)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sunML} (double Idir, double Idiff, double LAI, int nlayers, double cosTheta, double kd, double chil, double heightf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WINDprof} (double WindSpeed, double LAI, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RHprof} (double RH, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LNprof} (double LeafN, double LAI, int nlayers, double kpLN)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToDdryA} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToLHV} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSFS} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSWVC} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str} {\b EvapoTrans} (double Rad, double Itot, double Airtemperature, double RH, double WindSpeed, double LeafAreaIndex, double CanopyHeight, double StomataWS, int ws, double vmax2, double alpha2, double kparm, double theta, double beta, double Rd2, double b02, double b12, double upperT, double lowerT, double Catm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SoilEvapo} (double LAI, double k, double AirTemp, double IRad, double awc, double fieldc, double wiltp, double winds, double RelH, double rsec)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Alpha, double Kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double StomataWS, int ws, double kd, double chil, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double upperT, double lowerT, struct {\b nitroParms} nitroP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ws_str} {\b watstr} (double precipit, double evapo, double cws, double soildepth, double fieldc, double wiltp, double phi1, double phi2, int soiltype, int wsFun)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilML_str} {\b soilML} (double precipit, double transp, double *cws, double soildepth, double *depths, double fieldc, double wiltp, double phi1, double phi2, struct {\b soilText_str} soTexS, int wsFun, int layers, double rootDB, double LAI, double k, double AirTemp, double IRad, double winds, double RelH, int hydrDist, double rfl, double rsec, double rsdf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resp} (double comp, double mrc, double temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_str} {\b sel_dbp_coef} (double coefs[25], double TherPrds[6], double TherTime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b seqRD_str} {\b seqRootDepth} (double to, int lengthOut)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rd_str} {\b rootDist} (int layer, double rootDepth, double *depthsp, double rfl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilText_str} {\b soilTchoose} (int soiltype)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b cropcent_dbp} (double coefs[25], double TherPrds[6], double TherTime, struct {\b crop_phenology} *cropdbp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CanAC\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Alpha}, double {\i Kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i StomataWS}, int {\i ws}, double {\i kd}, double {\i chil}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i upperT}, double {\i lowerT}, struct {\b nitroParms} {\i nitroP})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 545 \{\par
546 \par
547         struct ET_Str tmp5_ET, tmp6_ET;\par
548         struct Can_Str ans;\par
549         struct c4_str tmpc4;\par
550         struct c4_str tmpc42;\par
551 \par
552         int i;\par
553         double Idir, Idiff, cosTh;\par
554         double LAIc;\par
555         double IDir, IDiff, Itot, rh, WS;\par
556         double pLeafsun, pLeafshade;\par
557         double Leafsun, Leafshade;\par
558         double CanHeight;\par
559 \par
560         double vmax1, leafN_lay;\par
561         double TempIdir,TempIdiff,AssIdir,AssIdiff,GAssIdir,GAssIdiff;\par
562 \par
563         double CanopyA, CanopyT,GCanopyA;\par
564 \par
565         const double cf = 3600 * 1e-6 * 30 * 1e-6 * 10000;\par
566         const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
567 \par
568         /* For Assimilation */\par
569         /* 3600 converts seconds to hours */\par
570         /* 1e-6 converts micro mols to mols */\par
571         /* 30 is the grams in one mol of CO2 */\par
572         /* 1e-6 converts g to Mg */\par
573         /* 10000 scales from meter squared to hectare */\par
574 \par
575         /* For Transpiration */\par
576         /* 3600 converts seconds to hours */\par
577         /* 1e-3 converts mili mols to mols */\par
578         /* 18 is the grams in one mol of H20 */\par
579         /* 1e-6 converts g to Mg */\par
580         /* 10000 scales from meter squared to hectare */\par
581 \par
582         lightME(lat,DOY,hr);\par
583 \par
584         Idir = tmp1[0] * solarR;\par
585         Idiff = tmp1[1] * solarR;\par
586         cosTh = tmp1[2];\par
587     \par
588         sunML(Idir,Idiff,LAI,nlayers,cosTh, kd, chil, heightf);\par
589 \par
590         /* results from multilayer model */\par
591         LAIc = LAI / nlayers;\par
592         /* Next I need the RH and wind profile */\par
593         RHprof(RH,nlayers);\par
594         WINDprof(WindSpeed,LAI,nlayers);\par
595 \par
596         LNprof(leafN, LAI, nlayers, kpLN);\par
597         /* It populates tmp5 */\par
598 \par
599         /* Next use the EvapoTrans function */\par
600         CanopyA=0.0;\par
601         GCanopyA=0.0;\par
602         CanopyT=0.0;\par
603         for(i=0;i<nlayers;i++)\par
604         \{\par
605                 leafN_lay = tmp5[--tp5];\par
606                 if(lnfun == 0)\{\par
607                         vmax1 = Vmax;\par
608                 \}else\{\par
609                         vmax1=nitroP.Vmaxb1*leafN_lay+nitroP.Vmaxb0;\par
610                                               if(vmax1<0) vmax1=0.0;\par
611                                                       Alpha=nitroP.alphab1*leafN_lay+nitroP.alphab0;\par
612                                                        Rd=nitroP.Rdb1*leafN_lay+nitroP.Rdb0;\par
613                /* For now alpha is not affected by leaf nitrogen */\par
614                 \}\par
615 \par
616                 IDir = layIdir[--sp1];\par
617                 Itot = layItotal[--sp3];\par
618 \par
619                 rh = tmp4[--tp4];\par
620                 WS = tmp3[--tp3];\par
621                 pLeafsun = layFsun[--sp4];\par
622                 CanHeight = layHeight[--sp6];\par
623                 Leafsun = LAIc * pLeafsun;\par
624                 tmp5_ET = EvapoTrans(IDir,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
625                 TempIdir = Temp + tmp5_ET.Deltat;\par
626                 tmpc4 = c4photoC(IDir,TempIdir,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
627                 AssIdir = tmpc4.Assim;\par
628                 GAssIdir =tmpc4.GrossAssim;\par
629 \par
630                 IDiff = layIdiff[--sp2];\par
631                 pLeafshade = layFshade[--sp5];\par
632                 Leafshade = LAIc * pLeafshade;\par
633                 tmp6_ET = EvapoTrans(IDiff,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
634                 TempIdiff = Temp + tmp6_ET.Deltat;\par
635                 tmpc42 = c4photoC(IDiff,TempIdiff,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
636                 AssIdiff = tmpc42.Assim;\par
637                 GAssIdiff = tmpc42.GrossAssim;\par
638                 CanopyA += Leafsun * AssIdir + Leafshade * AssIdiff;\par
639                 GCanopyA += Leafsun * GAssIdir + Leafshade * GAssIdiff;\par
640 // I am evaluating CanopyT using Penman Method because it gives realistic results\par
641 // IN future canopyT needs to be fixed\par
642 //                CanopyT += Leafsun * tmp5_ET.TransR + Leafshade * tmp6_ET.TransR;\par
643                 CanopyT += Leafsun * tmp5_ET.EPenman + Leafshade * tmp6_ET.EPenman;\par
644         \}\par
645         /*## These are micro mols of CO2 per m2 per sec for Assimilation\par
646           ## and mili mols of H2O per m2 per sec for Transpiration\par
647           ## Need to convert to \par
648           ## 3600 converts seconds to hours\par
649           ## 10^-6 converts micro mols to mols\par
650           ## 30 converts mols of CO2 to grams\par
651           ## (1/10^6) converts grams to Mg\par
652           ## 10000 scales up to ha */\par
653 /* A similar conversion is made for water but\par
654    replacing 30 by 18 and mili mols are converted to\par
655    mols (instead of micro) */\par
656         ans.Assim = cf * CanopyA ;\par
657         ans.Trans = cf2 * CanopyT; \par
658         ans.GrossAssim=cf*GCanopyA;\par
659         return(ans);\par
660 \}\par
}
}
{\xe \v cropcent_dbp\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:cropcent_dbp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void cropcent_dbp (double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime}, struct {\b crop_phenology} * {\i cropdbp})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1346      \{     \par
1347         struct dbp_str tmp;\par
1348         // call old biomass partiitoning coefficient function\par
1349         tmp =sel_dbp_coef(coefs, TherPrds, TherTime);\par
1350         //assing it to the relevant sub structure of new cropdbp, to be retirned back to the main program\par
1351         cropdbp->DBP=tmp;\par
1352        // Here I must define what are CN ratios of different plant components under excess N fertilization\par
1353        \par
1354        \par
1355        // I can leave it empty for now\par
1356        return;\par
1357      \}\par
}
}
{\xe \v EvapoTrans\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:EvapoTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ET_Str} EvapoTrans (double {\i Rad}, double {\i Itot}, double {\i Airtemperature}, double {\i RH}, double {\i WindSpeed}, double {\i LeafAreaIndex}, double {\i CanopyHeight}, double {\i StomataWS}, int {\i ws}, double {\i vmax2}, double {\i alpha2}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd2}, double {\i b02}, double {\i b12}, double {\i upperT}, double {\i lowerT}, double {\i Catm})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 211 \{\par
212         /* creating the structure to return */\par
213         struct ET_Str tmp;\par
214         struct c4_str tmpc4;\par
215 \par
216         const double LeafWidth = 0.04;\par
217         const double kappa = 0.41;\par
218         const double WindSpeedHeight = 5;\par
219         const double dCoef = 0.77;\par
220         const double tau = 0.2;\par
221         const double ZetaCoef = 0.026;\par
222         const double ZetaMCoef = 0.13;\par
223         const double LeafReflectance = 0.2;\par
224         const double SpecificHeat = 1010;\par
225 \par
226         double Tair, WindSpeedTopCanopy;\par
227         double DdryA, LHV, SlopeFS, SWVC;\par
228         double LayerRelativeHumidity, LayerWindSpeed, totalradiation;\par
229         double LayerConductance, DeltaPVa, PsycParam, ga;\par
230         double BoundaryLayerThickness, DiffCoef,LeafboundaryLayer;\par
231         double d, Zeta, Zetam, ga0, ga1, ga2; \par
232         double Ja, Deltat;\par
233         double PhiN;\par
234         double TopValue, BottomValue;\par
235         double EPen, TransR,EPries; \par
236         double OldDeltaT, rlc, ChangeInLeafTemp; \par
237         int Counter;\par
238 \par
239         WindSpeedTopCanopy = WindSpeed;\par
240         Tair = Airtemperature;\par
241 \par
242         if(CanopyHeight < 0.1)\par
243                 CanopyHeight = 0.1; \par
244 \par
245         DdryA = TempToDdryA(Tair) ;\par
246         LHV = TempToLHV(Tair) * 1e6 ; \par
247         /* Here LHV is given in MJ kg-1 and this needs to be converted\par
248            to Joules kg-1  */\par
249         SlopeFS = TempToSFS(Tair) * 1e-3;\par
250         SWVC = TempToSWVC(Tair) * 1e-3;\par
251 \par
252         /* FIRST CALCULATIONS*/\par
253 \par
254         Zeta = ZetaCoef * CanopyHeight;\par
255         Zetam = ZetaMCoef * CanopyHeight;\par
256         d = dCoef * CanopyHeight;\par
257 \par
258         /* Relative Humidity is giving me a headache */\par
259         /* RH2 = RH * 1e2; A high value of RH makes the \par
260            difference of temperature between the leaf and the air huge.\par
261            This is what is causing the large difference in DeltaT at the \par
262            bottom of the canopy. I think it is very likely.  */\par
263         LayerRelativeHumidity = RH * 100;\par
264         if(LayerRelativeHumidity > 100) \par
265                 error("LayerRelativehumidity > 100"); \par
266 \par
267         if(WindSpeed < 0.5) WindSpeed = 0.5;\par
268 \par
269         LayerWindSpeed = WindSpeed;\par
270 \par
271         /*' Convert light assuming 1 \'B5mol PAR photons = 0.235 J/s Watts*/\par
272         totalradiation = Itot * 0.235;\par
273 \par
274         tmpc4 = c4photoC(Itot,Airtemperature,RH,vmax2,alpha2,kparm,theta,beta,Rd2,b02,b12,StomataWS, Catm, ws,upperT,lowerT); \par
275         LayerConductance = tmpc4.Gs;\par
276 \par
277         /* Convert mmoles/m2/s to moles/m2/s\par
278            LayerConductance = LayerConductance * 1e-3\par
279            Convert moles/m2/s to mm/s\par
280            LayerConductance = LayerConductance * 24.39\par
281            Convert mm/s to m/s\par
282            LayerConductance = LayerConductance * 1e-3 */\par
283 \par
284         LayerConductance = LayerConductance * 1e-6 * 24.39;  \par
285 \par
286         /* Thornley and Johnson use m s^-1 on page 418 */\par
287 \par
288         /* prevent errors due to extremely low Layer conductance */\par
289         if(LayerConductance <=0)\par
290                 LayerConductance = 0.01;\par
291 \par
292 \par
293         if(SWVC < 0)\par
294                 error("SWVC < 0");\par
295         /* Now RHprof returns relative humidity in the 0-1 range */\par
296         DeltaPVa = SWVC * (1 - LayerRelativeHumidity / 100);\par
297 \par
298         PsycParam =(DdryA * SpecificHeat) / LHV;\par
299 \par
300         /* Ja = (2 * totalradiation * ((1 - LeafReflectance - tau) / (1 - tau))) * LeafAreaIndex; */\par
301         /* It seems that it is not correct to multiply by the leaf area index. Thornley\par
302            and johnson pg. 400 suggest using (1-exp(-k*LAI) but note that for a full canopy\par
303            this is 1. so I'm using 1 as an approximation. */\par
304         Ja = (2 * totalradiation * ((1 - LeafReflectance - tau) / (1 - tau)));\par
305         /* Calculation of ga */\par
306         /* According to thornley and Johnson pg. 416 */\par
307         ga0 = pow(kappa,2) * LayerWindSpeed;\par
308         ga1 = log((WindSpeedHeight + Zeta - d)/Zeta);\par
309         ga2 = log((WindSpeedHeight + Zetam - d)/Zetam);\par
310         ga = ga0/(ga1*ga2);\par
311 \par
312         /*  Rprintf("ga: %.5f \\n", ga); */\par
313         if(ga < 0)\par
314                 error("ga is less than zero");\par
315 \par
316         DiffCoef = (2.126 * 1e-5) + ((1.48 * 1e-7) * Airtemperature);\par
317         BoundaryLayerThickness = 0.004 * sqrt(LeafWidth / LayerWindSpeed);\par
318         LeafboundaryLayer = DiffCoef / BoundaryLayerThickness;\par
319 \par
320         /* Temperature of the leaf according to Campbell and Norman (1998) Chp 4.*/\par
321         /* This version is non-iterative and an approximation*/\par
322         /* Stefan-Boltzmann law: B = sigma * T^4. where sigma is the Boltzmann\par
323            constant: 5.67 * 1e-8 W m^-2 K^-4. */\par
324 \par
325         /* From Table A.3 in the book we know that*/\par
326 \par
327         /*  rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat) * LeafAreaIndex;   */\par
328         /*  PhiN = Ja - rlc; */\par
329 \par
330         /*  dd = 0.72 * LeafWidth; */\par
331         /*  gHa = 1.4 * 0.135 * sqrt(LayerWindSpeed * 0.72 * LeafWidth);  */\par
332         /*  gva = 1.4 * 0.147 * sqrt(LayerWindSpeed * 0.72 * LeafWidth);  */\par
333 \par
334         /*  TopValue = Ja - (SWVC/7.28) * 5.67*1e-8 * pow(Airtemperature + 273.15,4) - LHV * LayerConductance * 1e-3 * DeltaPVa / 101.3; */\par
335         /* Here I divide SWVC by 7.28 to approximately change from g/m3 to kPa */\par
336         /* I'm also multiplying Layer conductance by 1e-3 since it should be in mol m^-2 s^-1 */\par
337 \par
338         /*  BottomValue = SpecificHeat * gHr + LHV * SlopeFS * LayerConductance * 1e-3;  */\par
339 \par
340         /*  Deltat = Airtemperature + TopValue/BottomValue; */\par
341 \par
342         /*  PhiN = TopValue; */\par
343 \par
344         /* This is the original from WIMOVAC*/\par
345         Deltat = 0.01;\par
346         ChangeInLeafTemp = 10;\par
347 \par
348         Counter = 0;\par
349         while( (ChangeInLeafTemp > 0.5) && (Counter <= 10))\par
350         \{\par
351                 OldDeltaT = Deltat;\par
352 \par
353                 /*         rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat) * LeafAreaIndex;   */\par
354                 rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat);  \par
355 \par
356                 PhiN = (Ja - rlc);\par
357 \par
358 \par
359                 TopValue = PhiN * (1 / ga + 1 / LayerConductance) - LHV * DeltaPVa;\par
360                 BottomValue = LHV * (SlopeFS + PsycParam * (1 + ga / LayerConductance));\par
361                 Deltat = TopValue / BottomValue;\par
362                 if(Deltat > 5)  Deltat = 5;\par
363                 if(Deltat < -5) Deltat = -5;\par
364 \par
365 \par
366                 ChangeInLeafTemp = OldDeltaT - Deltat;\par
367                 if(ChangeInLeafTemp <0)\par
368                         ChangeInLeafTemp = -ChangeInLeafTemp;\par
369                 Counter++;\par
370         \}\par
371 \par
372 \par
373         if(PhiN < 0)\par
374                 PhiN = 0;\par
375 \par
376         TransR = (SlopeFS * PhiN + (LHV * PsycParam * ga * DeltaPVa)) / (LHV * (SlopeFS + PsycParam * (1 + ga / LayerConductance)));\par
377 \par
378         EPries = 1.26 * ((SlopeFS * PhiN) / (LHV * (SlopeFS + PsycParam)));\par
379 \par
380         EPen = (((SlopeFS * PhiN) + LHV * PsycParam * ga * DeltaPVa)) / (LHV * (SlopeFS + PsycParam));\par
381 \par
382         /* This values need to be converted from Kg/m2/s to\par
383            mmol H20 /m2/s according to S Humphries */\par
384         /*res[1,1] = EPen * 10e6 / 18;*/\par
385         /*res[1,2] = EPries * 10e6 / 18;*/\par
386         /* 1e3 - kgrams to grams  */\par
387         /* 1e3 - mols to mmols */\par
388         /*  res[0] = ((TransR * 1e3) / 18) * 1e3 ; */\par
389         /*  res[1] = Deltat; */\par
390         /*  res[2] = LayerConductance; */\par
391         /* Let us return the structure now */\par
392 \par
393         tmp.TransR = TransR * 1e6 / 18; \par
394         tmp.EPenman = EPen * 1e6 / 18; \par
395         tmp.EPriestly = EPries * 1e6 / 18; \par
396         tmp.Deltat = Deltat;\par
397         tmp.LayerCond = LayerConductance * 1e6 * (1/24.39);   \par
398         /*    tmp.LayerCond = RH2;   */\par
399         /*   tmp.LayerCond = 0.7; */\par
400         return(tmp);\par
401 \}\par
}
}
{\xe \v lightME\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:lightME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lightME (double {\i lat}, int {\i DOY}, int {\i td})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28 \par
29         extern double tmp1[];\par
30         double *ip1;\par
31         ip1 = &tmp1[0];\par
32         double omega, delta0, delta, deltaR;\par
33         double tf, SSin, CCos, PPo;\par
34         double CosZenithAngle, CosHour;\par
35         double CosHourDeg;\par
36         double Idir, Idiff, propIdir, propIdiff;\par
37         const double DTR = M_PI/180;\par
38         const double tsn = 12.0;\par
39         const double alpha = 0.85;\par
40         const double SolarConstant = 2650;\par
41         const double atmP = 1e5;\par
42 \par
43         omega = lat * DTR;\par
44         delta0 = 360.0 * ((DOY + 10)/365.0);\par
45         delta = -23.5 * cos(delta0*DTR);\par
46         deltaR = delta * DTR;\par
47 \par
48         tf = (15.0*(td - tsn))*DTR;\par
49         SSin = sin(deltaR) * sin(omega);\par
50         CCos = cos(deltaR) * cos(omega);\par
51 \par
52         CosZenithAngle = SSin + CCos * cos(tf);\par
53         if(CosZenithAngle < pow(10,-10))\par
54                 CosZenithAngle = pow(10,-10);\par
55 \par
56         CosHour = -tan(omega) * tan(deltaR);\par
57         CosHourDeg = (1/DTR)*CosHour;\par
58         if(CosHourDeg < -57)\par
59                 CosHour = -0.994;\par
60 \par
61         PPo = 1e5 / atmP;\par
62         Idir = SolarConstant * (pow(alpha,(PPo/CosZenithAngle)));\par
63         Idiff = 0.3 * SolarConstant *(1 - pow(alpha,(PPo/CosZenithAngle))) * CosZenithAngle ;\par
64 \par
65         propIdir = Idir / (Idir + Idiff);\par
66         propIdiff = Idiff / (Idir + Idiff);\par
67 \par
68         *ip1 = propIdir;\par
69         *(ip1+1) = propIdiff;\par
70         *(ip1+2) = CosZenithAngle;\par
71         return;\par
72 \}\par
}
}
{\xe \v LNprof\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:LNprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LNprof (double {\i LeafN}, double {\i LAI}, int {\i nlayers}, double {\i kpLN})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 164 \{\par
165 \par
166         int i;\par
167         double leafNla, LI, CumLAI;\par
168 \par
169         LI  = LAI / nlayers;\par
170         for(i=0;i<nlayers;i++)\par
171         \{\par
172                 CumLAI = LI * (i + 1);\par
173                 leafNla = LeafN * exp(-kpLN * (CumLAI-LI));\par
174                 tmp5[tp5++] = leafNla;\par
175         \}\par
176 \par
177 \}\par
}
}
{\xe \v resp\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:resp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double resp (double {\i comp}, double {\i mrc}, double {\i temp})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1024                                                  \{\par
1025 \par
1026         double ans;\par
1027 \par
1028         ans = comp *  (1 - (mrc * pow(2,(temp/10.0))));\par
1029 \par
1030         if(ans <0) ans = 0;\par
1031 \par
1032         return(ans);\par
1033 \par
1034 \}\par
}
}
{\xe \v RHprof\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:RHprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RHprof (double {\i RH}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145 \{\par
146         int i;\par
147         double kh, hsla, j;\par
148 \par
149         kh = 1 - RH;\par
150         /* kh = 0.2; */\par
151         /*kh = log(1/RH);*/\par
152         for(i=0;i<nlayers;i++)\par
153         \{\par
154                 j = i + 1;\par
155                 hsla = RH * exp(kh * (j/nlayers));\par
156 //              /*hsla = RH * exp(-kh * (j/nlayers));  /*new simpler version from Joe Iverson*/\par
157                 if(hsla > 1) hsla = 0.99; \par
158                 tmp4[tp4++] = hsla;\par
159         \}\par
160         /* It should return values in the 0-1 range */\par
161 \}\par
}
}
{\xe \v rootDist\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:rootDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b rd_str} rootDist (int {\i layer}, double {\i rootDepth}, double * {\i depthsp}, double {\i rfl})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1123                                                                                 \{\par
1124 \par
1125         struct rd_str tmp;  \par
1126         int i, j, k;\par
1127         double layerDepth = 0.0;\par
1128         double CumLayerDepth = 0.0;\par
1129         double CumRootDist = 1.0;\par
1130         double rootDist[layer];\par
1131         double ca = 0.0, a = 0.0;\par
1132 \par
1133         for(i=0;i<layer;i++)\{\par
1134 \par
1135                 if(i == 0)\{\par
1136                         layerDepth = depthsp[1];\par
1137                 \}else\{\par
1138                         layerDepth = depthsp[i] - depthsp[i-1];\par
1139                 \}\par
1140 \par
1141                 CumLayerDepth += layerDepth;\par
1142 \par
1143                 if(rootDepth > CumLayerDepth)\{\par
1144                         CumRootDist++;\par
1145                 \}\par
1146         \}\par
1147 \par
1148         for(j=0;j<layer;j++)\{\par
1149                 if(j < CumRootDist)\{ \par
1150                         a = dpois(j+1,CumRootDist*rfl,0);\par
1151                         rootDist[j] = a;\par
1152                         ca += a;\par
1153                 \}else\{\par
1154                         rootDist[j] = 0;\par
1155                 \}\par
1156         \}\par
1157 \par
1158         for(k=0;k<layer;k++)\{\par
1159                 tmp.rootDist[k] = rootDist[k] / ca; \par
1160         \}\par
1161 \par
1162         return(tmp);\par
1163 \}\par
}
}
{\xe \v sel_dbp_coef\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:sel_dbp_coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dbp_str} sel_dbp_coef (double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1039                                                                                   \{\par
1040 \par
1041         struct dbp_str tmp;\par
1042 \par
1043         tmp.kLeaf = 0.0;\par
1044         tmp.kStem = 0.0;\par
1045         tmp.kRoot = 0.0;\par
1046         tmp.kRhiz = 0.0;\par
1047         tmp.kGrain = 0.0; /* kGrain is always zero except for the last thermal period */\par
1048 \par
1049         if(TherTime < TherPrds[0])\par
1050         \{\par
1051                 tmp.kStem = coefs[0];\par
1052                 tmp.kLeaf = coefs[1];\par
1053                 tmp.kRoot = coefs[2];\par
1054                 tmp.kRhiz = coefs[3];\par
1055 \par
1056         \} else\par
1057                 if( TherTime < TherPrds[1] )\par
1058                 \{\par
1059                         tmp.kStem = coefs[4];\par
1060                         tmp.kLeaf = coefs[5];\par
1061                         tmp.kRoot = coefs[6];\par
1062                         tmp.kRhiz = coefs[7];\par
1063 \par
1064                 \} else\par
1065                         if( TherTime < TherPrds[2])\par
1066                         \{\par
1067                                 tmp.kStem = coefs[8];\par
1068                                 tmp.kLeaf = coefs[9];\par
1069                                 tmp.kRoot = coefs[10];\par
1070                                 tmp.kRhiz = coefs[11];\par
1071 \par
1072                         \} else\par
1073                                 if(TherTime < TherPrds[3])\par
1074                                 \{\par
1075                                         tmp.kStem = coefs[12];\par
1076                                         tmp.kLeaf = coefs[13];\par
1077                                         tmp.kRoot = coefs[14];\par
1078                                         tmp.kRhiz = coefs[15];\par
1079 \par
1080                                 \} else\par
1081                                         if(TherTime < TherPrds[4])\par
1082                                         \{\par
1083                                                 tmp.kStem = coefs[16];\par
1084                                                 tmp.kLeaf = coefs[17];\par
1085                                                 tmp.kRoot = coefs[18];\par
1086                                                 tmp.kRhiz = coefs[19];\par
1087 \par
1088                                         \} else\{\par
1089                                                 \par
1090                                                         tmp.kStem = coefs[20];\par
1091                                                         tmp.kLeaf = coefs[21];\par
1092                                                         tmp.kRoot = coefs[22];\par
1093                                                         tmp.kRhiz = coefs[23];\par
1094                                                         tmp.kGrain = coefs[24];\par
1095                                                 \par
1096                                                 \}\par
1097 \par
1098 \par
1099         return(tmp);\par
1100 \par
1101 \}\par
}
}
{\xe \v seqRootDepth\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:seqRootDepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b seqRD_str} seqRootDepth (double {\i to}, int {\i lengthOut})}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1103                                                        \{\par
1104 \par
1105         struct seqRD_str tmp;\par
1106         int i;\par
1107         double by;\par
1108 \par
1109         /* This is because in this case from is always zero */\par
1110         by = to / lengthOut;\par
1111 \par
1112         for(i=0;i<=lengthOut;i++)\{\par
1113 \par
1114                 tmp.rootDepths[i] = i * by;\par
1115 \par
1116         \}\par
1117 \par
1118         return(tmp);\par
1119 \par
1120 \}\par
}
}
{\xe \v SoilEvapo\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:SoilEvapo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SoilEvapo (double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i IRad}, double {\i awc}, double {\i fieldc}, double {\i wiltp}, double {\i winds}, double {\i RelH}, double {\i rsec})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 413                                                                                                   \{\par
414 \par
415         double SoilArea;\par
416         double SoilTemp;\par
417         double Up; /*Maximum Dimensionless Uptake Rate */\par
418         double TotalRadiation;\par
419         double BoundaryLayerThickness, DiffCoef;\par
420         double SoilBoundaryLayer, Ja, rlc;\par
421         double PhiN, PsycParam, DeltaPVa;\par
422         double Evaporation = 0.0;  \par
423         double DdryA, LHV, SlopeFS, SWVC;\par
424 \par
425         double rawc; /* Relative available water content */\par
426 \par
427         int method = 1;\par
428 \par
429         /* some constants */\par
430         const double SoilClodSize = 0.04;\par
431         const double SoilReflectance = 0.2;\par
432         const double SoilTransmission = 0.01;\par
433         const double SpecificHeat = 1010;\par
434         const double StefanBoltzman = 5.67e-8; /* Stefan Boltzman Constant */\par
435 \par
436         const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
437 \par
438         /* For Transpiration */\par
439         /* 3600 converts seconds to hours */\par
440         /* 1e-3 converts mili mols to mols */\par
441         /* 18 is the grams in one mol of H20 */\par
442         /* 1e-6 converts g to Mg */\par
443         /* 10000 scales from meter squared to hectare */\par
444 \par
445         /* Let us assume a simple way of calculating the proportion of the\par
446            soil with direct radiation */\par
447         SoilArea = exp(-k * LAI);\par
448 \par
449         /* For now the temperature of the soil will be the same as the air.\par
450            At a later time this can be made more accurate. I looked at the\par
451            equations for this and the issue is that it is strongly dependent on\par
452            depth. Since the soil model now has a single layer, this cannot be\par
453            implemented correctly at the moment.  */\par
454 \par
455         SoilTemp = AirTemp;\par
456 \par
457         /* Let us use an idea of Campbell and Norman. Environmental\par
458            Biophysics. */\par
459         /* If relative available water content is */\par
460         rawc = (awc - wiltp)/(fieldc - wiltp);\par
461 \par
462         /* Page 142 */\par
463         /* Maximum Dimensionless Uptake Rate */\par
464         Up = 1 - pow((1 + 1.3 * rawc),-5);  \par
465         /* This is a useful idea because dry soils evaporate little water when dry*/\par
466 \par
467         /* Total Radiation */\par
468         /*' Convert light assuming 1 \'B5mol PAR photons = 0.235 J/s Watts*/\par
469         /* At the moment soil evaporation is grossly overestimated. In WIMOVAC\par
470            the light reaching the last layer of leaves is used. Here instead\par
471            of calculating this again, I will for now assume a 10% as a rough\par
472            estimate. Note that I could maybe get this since layIdir and\par
473            layIDiff in sunML are external variables.  Rprintf("IRad\par
474            %.5f",layIdir[0],"\\n"); Update: 03-13-2009. I tried printing this\par
475            value but it is still too high and will likely overestimate soil\par
476            evaporation. However, this is still a work in progress.\par
477         */\par
478         IRad *= rsec; /* Radiation soil evaporation coefficient */ \par
479 \par
480         TotalRadiation = IRad * 0.235;\par
481  \par
482         DdryA = TempToDdryA(AirTemp) ;\par
483         LHV = TempToLHV(AirTemp) * 1e6 ; \par
484 /* Here LHV is given in MJ kg-1 and this needs to be converted\par
485    to Joules kg-1  */\par
486         SlopeFS = TempToSFS(AirTemp) * 1e-3;\par
487         SWVC = TempToSWVC(AirTemp) * 1e-3;\par
488 \par
489         PsycParam = (DdryA * SpecificHeat) / LHV;\par
490         DeltaPVa = SWVC * (1 - RelH / 100);\par
491 \par
492         BoundaryLayerThickness = 4e-3 * sqrt(SoilClodSize / winds); \par
493         DiffCoef = 2.126e-5 * 1.48e-7 * SoilTemp;\par
494         SoilBoundaryLayer = DiffCoef / BoundaryLayerThickness;\par
495 \par
496         Ja = 2 * TotalRadiation * ((1 - SoilReflectance - SoilTransmission) / (1 - SoilTransmission));\par
497 \par
498         rlc = 4 * StefanBoltzman * pow((273 + SoilTemp),3) * 0.005;\par
499 /* the last term should be the difference between air temperature and\par
500    soil. This is not actually calculated at the moment. Since this is\par
501    mostly relevant to the first soil layer where the temperatures are\par
502    similar. I will leave it like this for now. */\par
503 \par
504         PhiN = Ja - rlc; /* Calculate the net radiation balance*/\par
505         if(PhiN < 0) PhiN = 1e-7;\par
506 \par
507         /* Priestly-Taylor */\par
508         if(method == 0)\{\par
509                 Evaporation = 1.26 * (SlopeFS * PhiN) / (LHV * (SlopeFS + PsycParam));\par
510         \}else\{\par
511                 /* Penman-Monteith */\par
512                 Evaporation = (SlopeFS * PhiN + LHV * PsycParam * SoilBoundaryLayer * DeltaPVa) / (LHV * (SlopeFS + PsycParam));\par
513         \}\par
514 /*  Report back the soil evaporation rate in Units mmoles/m2/s */\par
515 /*     Evaporation = Evaporation * 1000:   ' Convert Kg H20/m2/s to g H20/m2/s */\par
516 /*     Evaporation = Evaporation / 18:     ' Convert g H20/m2/s to moles H20/m2/s */\par
517 /*     Evaporation = Evaporation * 1000:   ' Convert moles H20/m2/s to mmoles H20/m2/s */\par
518     \par
519 /*     If Evaporation <= 0 Then Evaporation = 0.00001: \par
520        ' Prevent any odd looking values which might get through at very low light levels */\par
521 \par
522         Evaporation *= 1e6/18;\par
523         /* Adding the area dependence and the effect of drying */\par
524         /* Converting from m2 to ha (times 1e4) */\par
525         /* Converting to hour */\par
526         Evaporation *= SoilArea * Up * cf2; \par
527         if(Evaporation < 0) Evaporation = 1e-6;\par
528 \par
529         return(Evaporation);\par
530 \}\par
}
}
{\xe \v soilML\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:soilML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilML_str} soilML (double {\i precipit}, double {\i transp}, double * {\i cws}, double {\i soildepth}, double * {\i depths}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, struct {\b soilText_str} {\i soTexS}, int {\i wsFun}, int {\i layers}, double {\i rootDB}, double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i IRad}, double {\i winds}, double {\i RelH}, int {\i hydrDist}, double {\i rfl}, double {\i rsec}, double {\i rsdf})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 807                                                                                                                                                                                                                                                                                                                                                                   \{\par
808 \par
809         struct rd_str tmp4;\par
810         struct seqRD_str tmp3;\par
811         struct soilML_str tmp;\par
812         /* Constant */\par
813         /* const double G = 6.67428e-11;  m3 / (kg * s-2)  ##  http://en.wikipedia.org/wiki/Gravitational_constant */\par
814         const double g = 9.8; /* m / s-2  ##  http://en.wikipedia.org/wiki/Standard_gravity */\par
815         /* Variables */\par
816         double waterIn, oldWaterIn = 0.0;\par
817 /* Here is a convention aw is available water in volume and awc\par
818    is available water content as a fraction of the soil section being investigated.\par
819    paw is plant available water aw - wiltp */\par
820         double aw, paw, awc, awc2, Newpawha;\par
821         double drainage = 0.0;\par
822         double wsPhoto = 0.0, wsSpleaf = 0.0, phi10;\par
823         double wsPhotoCol = 0.0, wsSpleafCol = 0.0;\par
824         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
825         double Nleach = 0.0;\par
826         double layerDepth;\par
827         double diffw;\par
828         double rootATdepth, rootDepth;\par
829         double EvapoTra = 0.0, oldEvapoTra = 0.0, Sevap = 0.0, Ctransp = 0.0;\par
830         double psim1 = 0.0, psim2 = 0.0, K_psim = 0.0, J_w = 0.0, dPsim = 0.0;\par
831         double theta_s; /* This is the saturated soil water content. Larger than FieldC.*/\par
832         int i;\par
833         int j = layers - 1; \par
834 \par
835         /* Specify the soil type */\par
836 \par
837         if(fieldc < 0)\{\par
838                 fieldc = soTexS.fieldc;\par
839         \}\par
840         if(wiltp < 0)\{\par
841                 wiltp = soTexS.wiltp;\par
842         \}\par
843 \par
844         theta_s = soTexS.satur;\par
845         /* rooting depth */\par
846         /* Crude empirical relationship between root biomass and rooting depth*/\par
847         rootDepth = rootDB * rsdf;\par
848         if(rootDepth > soildepth) rootDepth = soildepth;\par
849 \par
850         tmp3 = seqRootDepth(rootDepth,layers);\par
851         tmp4 = rootDist(layers,rootDepth,&depths[0],rfl);\par
852 \par
853         /* unit conversion for precip */\par
854         waterIn = precipit * 1e-3; /* convert precip in mm to m*/\par
855 \par
856         for(j=0,i=layers-1;j<layers;j++,i--)\{\par
857         /* for(i=0;i<layers;i++)\{ */\par
858                 /* It decreases because I increase the water content due to precipitation in the last layer first*/\par
859 \par
860                 /* This supports unequal depths. */\par
861                 if(i == 0)\{\par
862                         layerDepth = depths[1];\par
863                 \}else\{\par
864                         layerDepth = depths[i] - depths[i-1];\par
865                 \}\par
866 \par
867 \par
868                 if(hydrDist > 0)\{\par
869                         /* For this section see Campbell and Norman "Environmental BioPhysics" Chapter 9*/\par
870                         /* First compute the matric potential */\par
871                         psim1 = soTexS.air_entry * pow((cws[i]/theta_s),-soTexS.b) ; /* This is matric potential of current layer */\par
872                         if(i > 0)\{\par
873                                 psim2 = soTexS.air_entry * pow((cws[i-1]/theta_s),-soTexS.b) ; /* This is matric potential of next layer */\par
874                                 dPsim = psim1 - psim2;\par
875                                 /* The substraction is from the layer i - (i-1). If this last term is positive then it will move upwards. If it is negative it will move downwards. Presumably this term is almost always positive. */\par
876                         \}else\{\par
877                                 dPsim = 0;\par
878                         \}\par
879                         K_psim = soTexS.Ks * pow((soTexS.air_entry/psim1),2+3/soTexS.b); /* This is hydraulic conductivity */\par
880                         J_w = K_psim * (dPsim/layerDepth) - g * K_psim ; /*  Campbell, pg 129 do not ignore the graviational effect*/\par
881                         /* Notice that K_psim is positive because my\par
882                             reference system is reversed */\par
883                         /* This last result should be in kg/(m2 * s)*/\par
884                          J_w *= 3600 * 0.9882 * 1e-3 ; /* This is flow in m3 / (m^2 * hr). */\par
885                         /* Rprintf("J_w %.10f \\n",J_w);  */\par
886                         if(i == (layers-1) && J_w < 0)\{\par
887                                         /* cws[i] = cws[i] + J_w /\par
888                                          * layerDepth; Although this\par
889                                          * should be done it drains\par
890                                          * the last layer too much.*/\par
891                                         drainage += J_w;\par
892                         \}else\{\par
893                                 if(i > 0)\{\par
894                                         cws[i] = cws[i] -  J_w / layerDepth;\par
895                                         cws[i - 1] =  cws[i-1] +  J_w / layerDepth;\par
896                                 \}else\{\par
897                                         cws[i] = cws[i] -  J_w / layerDepth;\par
898                                 \}\par
899                         \}\par
900                 \}\par
901 \par
902                  if(cws[i] > theta_s) cws[i] = theta_s; \par
903                 /* if(cws[i+1] > fieldc) cws[i+1] = fieldc; */\par
904                  if(cws[i] < wiltp) cws[i] = wiltp; \par
905                 /* if(cws[i+1] < wiltp) cws[i+1] = wiltp;  */\par
906 \par
907                 aw = cws[i] * layerDepth;\par
908 /* Available water (for this layer) is the current water status times the layer depth */\par
909 \par
910                 if(waterIn > 0)\{\par
911                         /* There is some rain. Need to add it.*/\par
912                         aw += waterIn / layers + oldWaterIn; /* They are both in meters so it works */\par
913                         /* Adding the same amount to water to each layer */\par
914                         /* In case there is overflow */\par
915                         diffw = fieldc * layerDepth - aw;\par
916 \par
917                         if(diffw < 0)\{\par
918                                 /* This means that precipitation exceeded the capacity of the first layer */\par
919                                 /* Save this amount of water for the next layer */\par
920                                 oldWaterIn = -diffw;\par
921                                 aw = fieldc * layerDepth;\par
922                         \}else\{\par
923                                 oldWaterIn = 0.0;\par
924                         \}\par
925                 \}\par
926 \par
927                 /* Root Biomass */\par
928                 rootATdepth = rootDB * tmp4.rootDist[i];\par
929                 tmp.rootDist[i] = rootATdepth;\par
930 /* Plant available water is only between current water status and permanent wilting point */\par
931                 /* Plant available water */\par
932                 paw = aw - wiltp * layerDepth;\par
933                 if(paw < 0) paw = 0; \par
934 \par
935                 if(i == 0)\{\par
936                         /* Only the first layer is affected by soil evaporation */\par
937                         awc2 = aw / layerDepth;\par
938                         /* SoilEvapo function needs soil water content  */\par
939                         Sevap = SoilEvapo(LAI,k,AirTemp,IRad,awc2,fieldc,wiltp,winds,RelH,rsec);\par
940                         /* I assume that crop transpiration is distributed simlarly to\par
941                            root density.  In other words the crop takes up water proportionally\par
942                            to the amount of root in each respective layer.*/\par
943                         Ctransp = transp*tmp4.rootDist[0];\par
944                         EvapoTra = Ctransp + Sevap;\par
945                         Newpawha = (paw * 1e4) - EvapoTra / 0.9982; /* See the watstr function for this last number 0.9882 */\par
946                         /* The first term in the rhs (paw * 1e4) is the m3 of water available in this layer.\par
947                            EvapoTra is the Mg H2O ha-1 of transpired and evaporated water. 1/0.9882 converts from Mg to m3 */\par
948                 \}else\{\par
949                         Ctransp = transp*tmp4.rootDist[i];\par
950                         EvapoTra = Ctransp;\par
951                         Newpawha = (paw * 1e4) - (EvapoTra + oldEvapoTra);\par
952                 \}\par
953 \par
954                 if(Newpawha < 0)\{\par
955 /* If the Demand is not satisfied by this layer. This will be stored and added to subsequent layers*/\par
956                         oldEvapoTra = -Newpawha;\par
957                          aw = wiltp * layerDepth; \par
958                 \}\par
959 \par
960                 paw = Newpawha / 1e4 ;\par
961                 awc = paw / layerDepth + wiltp;   \par
962 \par
963 /* This might look like a weird place to populate the structure, but is more convenient*/\par
964                 tmp.cws[i] = awc;\par
965                 tmp.hourlyWflux[i] =J_w;\par
966                 if(wsFun == 0)\{\par
967                         slp = 1/(fieldc - wiltp);\par
968                         intcpt = 1 - fieldc * slp;\par
969                         wsPhoto = slp * awc + intcpt ;\par
970                 \}else\par
971                 if(wsFun == 1)\{\par
972                         phi10 = (fieldc + wiltp)/2;\par
973                         wsPhoto = 1/(1 + exp((phi10 - awc)/ phi1));\par
974                 \}else\par
975                 if(wsFun == 2)\{\par
976                         slp = (1 - wiltp)/(fieldc - wiltp);\par
977                         intcpt = 1 - fieldc * slp;\par
978                         theta = slp * awc + intcpt ;\par
979                         wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
980                 \}else\par
981                 if(wsFun == 3)\{\par
982                         wsPhoto = 1;\par
983                 \}\par
984 \par
985                 if(wsPhoto <= 0 )\par
986                         wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
987 \par
988                 wsPhotoCol += wsPhoto;\par
989 \par
990                 wsSpleaf = pow(awc,phi2) * 1/pow(fieldc,phi2); \par
991                 if(wsFun == 3)\{ \par
992                         wsSpleaf = 1;\par
993                 \}\par
994                 wsSpleafCol += wsSpleaf;\par
995 \par
996         \}\par
997 \par
998         if(waterIn > 0)\{ \par
999                 drainage = waterIn;\par
1000                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
1001                 /* The data comes in mm/hr and it needs to be in cm/month */\par
1002                 Nleach = drainage * 0.1 * (1/24*30) / (18 * (0.2 + 0.7 * soTexS.sand));\par
1003         \}\par
1004 \par
1005 /* Apparently wsPhoto and wsSpleaf can be greater than 1 */\par
1006         if(wsPhoto > 1) wsPhoto = 1;\par
1007         if(wsSpleaf > 1) wsSpleaf = 1;\par
1008 \par
1009 /* returning the structure */\par
1010         tmp.rcoefPhoto = (wsPhotoCol/layers);\par
1011         tmp.drainage = drainage;\par
1012         tmp.Nleach = Nleach;\par
1013         tmp.rcoefSpleaf = (wsSpleafCol/layers);\par
1014         tmp.SoilEvapo = Sevap;\par
1015 \par
1016         return(tmp);\par
1017 \}\par
}
}
{\xe \v soilTchoose\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:soilTchoose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilText_str} soilTchoose (int {\i soiltype})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1166                                              \{\par
1167 \par
1168         /* This function is based on Campbell and Norman.\par
1169            Introduction to Environmental Biophysics. pg 130. */\par
1170        /* bulk density values are taken from function getsoilprop.c from Melanie (Colorado) */\par
1171         struct soilText_str tmp;\par
1172 \par
1173         tmp.silt = 0;\par
1174         tmp.clay = 0;\par
1175         tmp.sand = 0;\par
1176         tmp.air_entry = 0;\par
1177         tmp.b = 0;\par
1178         tmp.Ks = 0;\par
1179         tmp.satur = 0;\par
1180         tmp.fieldc = 0;\par
1181         tmp.wiltp = 0;\par
1182         tmp.bulkd= 0.0;\par
1183         if(soiltype == 0)\{\par
1184         /* sand soil */\par
1185         tmp.silt = 0.05;\par
1186         tmp.clay = 0.03;\par
1187         tmp.sand = 0.92;\par
1188         tmp.air_entry = -0.7;\par
1189         tmp.b = 1.7;\par
1190         tmp.Ks = 5.8e-3;\par
1191         tmp.satur = 0.87;\par
1192         tmp.fieldc = 0.09;\par
1193         tmp.wiltp = 0.03;\par
1194         tmp.bulkd= 0.01; // This value is zero/undefined for sandy soil I am assigning a low value [see getsoilprop.c]\par
1195         \} else\par
1196 \par
1197         if(soiltype == 1)\{\par
1198         /* loamy sand */\par
1199         tmp.silt = 0.12;\par
1200         tmp.clay = 0.07;\par
1201         tmp.sand = 0.81;\par
1202         tmp.air_entry = -0.9;\par
1203         tmp.b = 2.1;\par
1204         tmp.Ks = 1.7e-3;\par
1205         tmp.satur = 0.72;\par
1206         tmp.fieldc = 0.13;\par
1207         tmp.wiltp = 0.06;\par
1208         tmp.bulkd= 1.55;\par
1209         \} else\par
1210 \par
1211         if(soiltype == 2)\{\par
1212         /* sandy loam */\par
1213         tmp.silt = 0.25;\par
1214         tmp.clay = 0.10;\par
1215         tmp.sand = 0.65;\par
1216         tmp.air_entry = -1.5;\par
1217         tmp.b = 3.1;\par
1218         tmp.Ks = 7.2e-4;\par
1219         tmp.satur = 0.57;\par
1220         tmp.fieldc = 0.21;\par
1221         tmp.wiltp = 0.10;\par
1222         tmp.bulkd= 1.50;\par
1223         \} else\par
1224 \par
1225         if(soiltype == 3)\{\par
1226         /* loam */\par
1227         tmp.silt = 0.40;\par
1228         tmp.clay = 0.18;\par
1229         tmp.sand = 0.52;\par
1230         tmp.air_entry = -1.1;\par
1231         tmp.b = 4.5;\par
1232         tmp.Ks = 3.7e-4;\par
1233         tmp.satur = 0.57;\par
1234         tmp.fieldc = 0.27;\par
1235         tmp.wiltp = 0.12;\par
1236          tmp.bulkd= 1.43;\par
1237         \} else\par
1238 \par
1239         if(soiltype == 4)\{\par
1240         /* silt loam */\par
1241         tmp.silt = 0.65;\par
1242         tmp.clay = 0.15;\par
1243         tmp.sand = 0.20;\par
1244         tmp.air_entry = -2.1;\par
1245         tmp.b = 4.7;\par
1246         tmp.Ks = 1.9e-4;\par
1247         tmp.satur = 0.59;\par
1248         tmp.fieldc = 0.33;\par
1249         tmp.wiltp = 0.13;\par
1250         tmp.bulkd= 1.36;\par
1251         \} else\par
1252 \par
1253         if(soiltype == 5)\{\par
1254         /* sandy clay loam */\par
1255         tmp.silt = 0.13;\par
1256         tmp.clay = 0.27;\par
1257         tmp.sand = 0.60;\par
1258         tmp.air_entry = -2.8;\par
1259         tmp.b = 4;\par
1260         tmp.Ks = 1.2e-4;\par
1261         tmp.satur = 0.48;\par
1262         tmp.fieldc = 0.26;\par
1263         tmp.wiltp = 0.15;\par
1264          tmp.bulkd= 1.39;\par
1265         \} else\par
1266 \par
1267         if(soiltype == 6)\{\par
1268         /* clay loam */\par
1269         tmp.silt = 0.34;\par
1270         tmp.clay = 0.34;\par
1271         tmp.sand = 0.32;\par
1272         tmp.air_entry = -2.6;\par
1273         tmp.b = 5.2;\par
1274         tmp.Ks = 6.4e-5;\par
1275         tmp.satur = 0.52;\par
1276         tmp.fieldc = 0.32;\par
1277         tmp.wiltp = 0.20;\par
1278         tmp.bulkd= 1.35;\par
1279         \} else\par
1280 \par
1281         if(soiltype == 7)\{\par
1282         /* silty clay loam */\par
1283         tmp.silt = 0.58;\par
1284         tmp.clay = 0.33;\par
1285         tmp.sand = 0.09;\par
1286         tmp.air_entry = -3.3;\par
1287         tmp.b = 6.6;\par
1288         tmp.Ks = 4.2e-5;\par
1289         tmp.satur = 0.52;\par
1290         tmp.fieldc = 0.37;\par
1291         tmp.wiltp = 0.21; /* Correction from the book from here http://www.public.iastate.edu/~bkh/teaching/505/norman_book_corrections.pdf */\par
1292          tmp.bulkd= 1.24;\par
1293         \} else\par
1294 \par
1295         if(soiltype == 8)\{\par
1296         /* sandy clay */\par
1297         tmp.silt = 0.07;\par
1298         tmp.clay = 0.40;\par
1299         tmp.sand = 0.53;\par
1300         tmp.air_entry = -2.9;\par
1301         tmp.b = 6;\par
1302         tmp.Ks = 3.3e-5;\par
1303         tmp.satur = 0.51;\par
1304         tmp.fieldc = 0.34;\par
1305         tmp.wiltp = 0.24;\par
1306          tmp.bulkd= 1.30;\par
1307 \par
1308         \} else\par
1309 \par
1310         if(soiltype == 9)\{\par
1311         /* silty clay */\par
1312         tmp.silt = 0.45;\par
1313         tmp.clay = 0.45;\par
1314         tmp.sand = 0.10;\par
1315         tmp.air_entry = -3.4;\par
1316         tmp.b = 7.9;\par
1317         tmp.Ks = 2.5e-5;\par
1318         tmp.satur = 0.52;\par
1319         tmp.fieldc = 0.39;\par
1320         tmp.wiltp = 0.25;\par
1321         tmp.bulkd= 1.28;\par
1322         \} else\par
1323 \par
1324         if(soiltype == 10)\{\par
1325         /* clay */\par
1326         tmp.silt = 0.20;\par
1327         tmp.clay = 0.60;\par
1328         tmp.sand = 0.20;\par
1329         tmp.air_entry = -3.7;\par
1330         tmp.b = 7.6;\par
1331         tmp.Ks = 1.7e-5;\par
1332         tmp.satur = 0.53;\par
1333         tmp.fieldc = 0.4;\par
1334         tmp.wiltp = 0.27;\par
1335         tmp.bulkd= 1.19;\par
1336         \}\par
1337 \par
1338         return(tmp);\par
1339 \par
1340 \}\par
}
}
{\xe \v sunML\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:sunML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sunML (double {\i Idir}, double {\i Idiff}, double {\i LAI}, int {\i nlayers}, double {\i cosTheta}, double {\i kd}, double {\i chil}, double {\i heightf})}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76 \{\par
77         extern int sp1, sp2, sp3, sp4, sp5, sp6;\par
78         extern double layIdir[], layIdiff[], layItotal[], layFsun[], layFshade[], layHeight[];\par
79         double i;\par
80         double k0, k1, k;\par
81         double LAIi, CumLAI;\par
82         double Isolar, Idiffuse, Ibeam, Iscat, Itotal,alphascatter;\par
83         double Ls, Ld;\par
84         double Fsun, Fshade;\par
85         alphascatter=0.8;\par
86         k0 = sqrt(pow(chil ,2) + pow(tan(acos(cosTheta)),2));\par
87         k1 = chil + 1.744*pow((chil+1.183),-0.733);\par
88         k = k0/k1;\par
89         if(k<0)\par
90                 k = -k;\par
91 \par
92         LAIi = LAI / nlayers;\par
93 \par
94         for(i=0;i<nlayers;i++)\par
95         \{\par
96                 CumLAI = LAIi * (i+0.5);\par
97                 \par
98                 Ibeam=Idir*cosTheta;\par
99                 Iscat = Ibeam * exp(-k *sqrt(alphascatter)* CumLAI)-Ibeam * exp(-k * CumLAI);\par
100                 \par
101                 \par
102                 Isolar = Ibeam*k;\par
103                 Idiffuse = Idiff * exp(-kd * CumLAI) + Iscat;\par
104                 \par
105                 \par
106                 Ls = (1-exp(-k*LAIi))*exp(-k*CumLAI)/k;\par
107                 Ld=LAIi-Ls;\par
108 \par
109                 Fsun=Ls/(Ls+Ld);\par
110                 Fshade=Ld/(Ls+Ld);\par
111                 /*fraction intercepted*/\par
112                 Itotal =(Fsun*Isolar + Idiffuse) * (1-exp(-k*LAIi))/k;\par
113 \par
114                 /* collecting the results */\par
115                 layIdir[sp1++] = Isolar + Idiffuse;\par
116                 layIdiff[sp2++] = Idiffuse;\par
117                 layItotal[sp3++] = Itotal;\par
118                 layFsun[sp4++] = Fsun;\par
119                 layFshade[sp5++] = Fshade;\par
120                 layHeight[sp6++] = CumLAI/heightf;\par
121         \}\par
122 \}\par
}
}
{\xe \v TempToDdryA\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:TempToDdryA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToDdryA (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180 \{\par
181         double DdryA;\par
182         DdryA = 1.295163636 + -0.004258182 * Temp;\par
183         return(DdryA);\par
184 \}\par
}
}
{\xe \v TempToLHV\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:TempToLHV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToLHV (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 187 \{\par
188         double LHV;\par
189         LHV = 2.501 + -0.002372727 * Temp;\par
190         return(LHV);\par
191 \}\par
}
}
{\xe \v TempToSFS\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:TempToSFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSFS (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194 \{\par
195         double SlopeFS;\par
196         SlopeFS = 0.338376068 +  0.011435897 * Temp +  0.001111111 * pow(Temp,2);\par
197         return(SlopeFS);\par
198 \}\par
}
}
{\xe \v TempToSWVC\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:TempToSWVC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSWVC (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201 \{\par
202         double SWVC;\par
203         SWVC =  4.90820192 +   0.06387253 * Temp +    0.02745742 * pow(Temp,2);\par
204         return(SWVC);\par
205 \}\par
}
}
{\xe \v watstr\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:watstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ws_str} watstr (double {\i precipit}, double {\i evapo}, double {\i cws}, double {\i soildepth}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, int {\i soiltype}, int {\i wsFun})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 677 \{\par
678 \par
679         struct ws_str tmp;\par
680         struct soilText_str soTexS;\par
681         /* Variables */\par
682         double precipM;\par
683         /* available water and per hectare */\par
684         double aw, naw; \par
685         double pawha, Newpawha, npaw; /* new 04-27-2009 */\par
686         double runoff = 0.0, runoff2 = 0.0;\par
687         /* variable needed for calculation of water stress*/\par
688         double wsPhoto = 0.0, wsSpleaf, phi10;\par
689         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
690         double Nleach = 0.0;\par
691         /* Nleach is the NO3 leached and Ts is the sand content of the soil*/\par
692 \par
693         /* Specify the soil type */\par
694         soTexS = soilTchoose(soiltype);\par
695 /*   Ts = soTexS.sand; */\par
696 \par
697         if(fieldc < 0)\{\par
698                 fieldc = soTexS.fieldc;\par
699         \}\par
700         if(wiltp < 0)\{\par
701                 wiltp = soTexS.wiltp;\par
702         \}\par
703 \par
704         /* unit conversion for precip */\par
705         precipM = precipit * 1e-3; /* convert precip in mm to m*/\par
706 \par
707         /*    cws is current water status */\par
708         /*    available water */\par
709 \par
710         aw = precipM + cws;\par
711 \par
712         /* if(aw > soTexS.satur)\{  */\par
713         /*      runoff = aw - soTexS.satur; /\\* Here runoff is interpreted as water content exceeding saturation level *\\/ */\par
714         /*      /\\* Need to convert to units used in the Parton et al 1988 paper. *\\/ */\par
715         /*      /\\* The data comes in mm/hr and it needs to be in cm/month *\\/ */\par
716         /*      runoff2 = runoff * 0.10 * (1/24*30); */\par
717         /*      Nleach = runoff /18 * (0.2 + 0.7 * soTexS.sand); */\par
718         /*      aw = soTexS.satur; */\par
719         /* \} */\par
720 \par
721 /* These equations are not correct as runoff would only occur when it exceeds\par
722    saturation, but from the point of view of a crop only field capacity matters */\par
723 /* I'm not sure about what to do about this */\par
724 \par
725         if(aw > fieldc)\{ \par
726                 runoff = aw - fieldc; /* Here runoff is interpreted as water content exceeding saturation level */\par
727                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
728                 /* The data comes in mm/hr and it needs to be in cm/month */\par
729                 runoff2 = runoff * 0.10 * (1/24*30);\par
730                 Nleach = runoff /18 * (0.2 + 0.7 * soTexS.sand);\par
731                 aw = fieldc;\par
732         \}\par
733 \par
734 \par
735         /* Tipping bucket need to collect it if want to estimate runoff */ \par
736         /* plant available water per hectare (pawha) */\par
737         pawha = (aw - wiltp) * 1e4 * soildepth;\par
738         /* The density of water is 998.2 kg/m3 at 20 degrees Celsius */\par
739         /* or 0.9882 Mg/m3 */\par
740         /* pawha is plant available water (m3) per hectare */\par
741         /* evapo is demanded water (Mg) per hectare */\par
742 \par
743         Newpawha = pawha - evapo / 0.9882; /* New version 04-27-2009 */\par
744 \par
745         /*  Here both are in m3 of water per ha-1 so this */\par
746         /*  subtraction should be correct */\par
747         /* go back to original units of water in the profile */\par
748 \par
749         npaw = Newpawha * 1e-4 * (1/soildepth); /* New 04-27-2009 */\par
750 \par
751         if(npaw < 0) npaw = 0.0;\par
752 \par
753         naw = npaw + wiltp;\par
754 \par
755         /* Calculating the soil water potential based on equations from Norman and Campbell */\par
756         /* tmp.psim = soTexS.air_entry * pow((naw/soTexS.fieldc*1.1),-soTexS.b) ; */\par
757         /* New version of the soil water potential is based on\par
758          * "Dynamic Simulation of Water Deficit Effects upon Maize\par
759          * Yield" R. F. Grant Agricultural Systems. 33(1990) 13-39. */\par
760         tmp.psim = -exp(log(0.033) + ((log(fieldc) - log(naw))/(log(fieldc) - log(wiltp)) * (log(1.5) - log(0.033)))) * 1e3; /* This last term converts from MPa to kPa */\par
761 \par
762         /* three different type of equations for modeling the effect of water stress on vmax and leaf area expansion. \par
763            The equation for leaf area expansion is more severe than the one for vmax. */\par
764         if(wsFun == 0)\{ /* linear */\par
765                 slp = 1/(fieldc - wiltp);\par
766                 intcpt = 1 - fieldc * slp;\par
767                 wsPhoto = slp * naw + intcpt ;\par
768         \}else\par
769         if(wsFun == 1)\{\par
770                 phi10 = (fieldc + wiltp)/2;\par
771                 wsPhoto = 1/(1 + exp((phi10 - naw)/ phi1));\par
772         \}else\par
773         if(wsFun == 2)\{\par
774                 slp = (1 - wiltp)/(fieldc - wiltp);\par
775                 intcpt = 1 - fieldc * slp;\par
776                 theta = slp * naw + intcpt ;\par
777                 wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
778         \}else\par
779                 if(wsFun == 3)\{\par
780                         wsPhoto = 1;\par
781                 \}\par
782 \par
783         if(wsPhoto <= 0 )\par
784                 wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
785 \par
786         wsSpleaf = pow(naw,phi2) * 1/pow(fieldc,phi2); \par
787         if(wsFun == 3)\{ \par
788                 wsSpleaf = 1;\par
789         \}\par
790 \par
791 /* Apparently wsPhoto and wsSpleaf can be greater than 1 */\par
792         if(wsPhoto > 1) wsPhoto = 1;\par
793         if(wsSpleaf > 1) wsSpleaf = 1;\par
794 \par
795         /* returning the structure*/\par
796         tmp.rcoefPhoto = wsPhoto;\par
797         tmp.rcoefSpleaf = wsSpleaf;\par
798         tmp.awc = naw;\par
799         tmp.runoff = runoff;\par
800         tmp.Nleach = Nleach;\par
801         return(tmp);\par
802 \}\par
}
}
{\xe \v WINDprof\:AuxBioCro.c}
{\xe \v AuxBioCro.c\:WINDprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WINDprof (double {\i WindSpeed}, double {\i LAI}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129 \{\par
130         int i;\par
131         double k=0.7;\par
132         double LI, CumLAI;\par
133         double Wind;\par
134 \par
135         LI  = LAI / nlayers;\par
136         for(i=0;i<nlayers;i++)\par
137         \{\par
138                 CumLAI = LI * (i + 1);\par
139                 Wind = WindSpeed * exp(-k * (CumLAI-LI));\par
140                 tmp3[tp3++] = Wind;\par
141         \}\par
142 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxBioCro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxBioCro.h}
{\xe \v /home/dlebauer/dev/biocro/src/AuxBioCro.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_aux_bio_cro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ws_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilML_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilText_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b seqRD_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rd_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b nitroParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b crop_phenology::minerals1}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXLAY}\~ 200 /* Maximum number of layers */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilText_str} {\b soilTchoose} (int soiltype)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b seqRD_str} {\b seqRootDepth} (double to, int lengthOut)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rd_str} {\b rootDist} (int layer, double rootDepth, double *depths, double rfl)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sp6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tp3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tp4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b tp5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tmp1} [3]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layIdir} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layIdiff} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layItotal} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layFsun} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layFshade} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b layHeight} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tmp3} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tmp4} [{\b MAXLAY}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tmp5} [{\b MAXLAY}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAXLAY\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:MAXLAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXLAY\~ 200 /* Maximum number of layers */}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v rootDist\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:rootDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b rd_str} rootDist (int {\i layer}, double {\i rootDepth}, double * {\i depths}, double {\i rfl})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1123                                                                                 \{\par
1124 \par
1125         struct rd_str tmp;  \par
1126         int i, j, k;\par
1127         double layerDepth = 0.0;\par
1128         double CumLayerDepth = 0.0;\par
1129         double CumRootDist = 1.0;\par
1130         double rootDist[layer];\par
1131         double ca = 0.0, a = 0.0;\par
1132 \par
1133         for(i=0;i<layer;i++)\{\par
1134 \par
1135                 if(i == 0)\{\par
1136                         layerDepth = depthsp[1];\par
1137                 \}else\{\par
1138                         layerDepth = depthsp[i] - depthsp[i-1];\par
1139                 \}\par
1140 \par
1141                 CumLayerDepth += layerDepth;\par
1142 \par
1143                 if(rootDepth > CumLayerDepth)\{\par
1144                         CumRootDist++;\par
1145                 \}\par
1146         \}\par
1147 \par
1148         for(j=0;j<layer;j++)\{\par
1149                 if(j < CumRootDist)\{ \par
1150                         a = dpois(j+1,CumRootDist*rfl,0);\par
1151                         rootDist[j] = a;\par
1152                         ca += a;\par
1153                 \}else\{\par
1154                         rootDist[j] = 0;\par
1155                 \}\par
1156         \}\par
1157 \par
1158         for(k=0;k<layer;k++)\{\par
1159                 tmp.rootDist[k] = rootDist[k] / ca; \par
1160         \}\par
1161 \par
1162         return(tmp);\par
1163 \}\par
}
}
{\xe \v seqRootDepth\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:seqRootDepth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b seqRD_str} seqRootDepth (double {\i to}, int {\i lengthOut})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1103                                                        \{\par
1104 \par
1105         struct seqRD_str tmp;\par
1106         int i;\par
1107         double by;\par
1108 \par
1109         /* This is because in this case from is always zero */\par
1110         by = to / lengthOut;\par
1111 \par
1112         for(i=0;i<=lengthOut;i++)\{\par
1113 \par
1114                 tmp.rootDepths[i] = i * by;\par
1115 \par
1116         \}\par
1117 \par
1118         return(tmp);\par
1119 \par
1120 \}\par
}
}
{\xe \v soilTchoose\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:soilTchoose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilText_str} soilTchoose (int {\i soiltype})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1166                                              \{\par
1167 \par
1168         /* This function is based on Campbell and Norman.\par
1169            Introduction to Environmental Biophysics. pg 130. */\par
1170        /* bulk density values are taken from function getsoilprop.c from Melanie (Colorado) */\par
1171         struct soilText_str tmp;\par
1172 \par
1173         tmp.silt = 0;\par
1174         tmp.clay = 0;\par
1175         tmp.sand = 0;\par
1176         tmp.air_entry = 0;\par
1177         tmp.b = 0;\par
1178         tmp.Ks = 0;\par
1179         tmp.satur = 0;\par
1180         tmp.fieldc = 0;\par
1181         tmp.wiltp = 0;\par
1182         tmp.bulkd= 0.0;\par
1183         if(soiltype == 0)\{\par
1184         /* sand soil */\par
1185         tmp.silt = 0.05;\par
1186         tmp.clay = 0.03;\par
1187         tmp.sand = 0.92;\par
1188         tmp.air_entry = -0.7;\par
1189         tmp.b = 1.7;\par
1190         tmp.Ks = 5.8e-3;\par
1191         tmp.satur = 0.87;\par
1192         tmp.fieldc = 0.09;\par
1193         tmp.wiltp = 0.03;\par
1194         tmp.bulkd= 0.01; // This value is zero/undefined for sandy soil I am assigning a low value [see getsoilprop.c]\par
1195         \} else\par
1196 \par
1197         if(soiltype == 1)\{\par
1198         /* loamy sand */\par
1199         tmp.silt = 0.12;\par
1200         tmp.clay = 0.07;\par
1201         tmp.sand = 0.81;\par
1202         tmp.air_entry = -0.9;\par
1203         tmp.b = 2.1;\par
1204         tmp.Ks = 1.7e-3;\par
1205         tmp.satur = 0.72;\par
1206         tmp.fieldc = 0.13;\par
1207         tmp.wiltp = 0.06;\par
1208         tmp.bulkd= 1.55;\par
1209         \} else\par
1210 \par
1211         if(soiltype == 2)\{\par
1212         /* sandy loam */\par
1213         tmp.silt = 0.25;\par
1214         tmp.clay = 0.10;\par
1215         tmp.sand = 0.65;\par
1216         tmp.air_entry = -1.5;\par
1217         tmp.b = 3.1;\par
1218         tmp.Ks = 7.2e-4;\par
1219         tmp.satur = 0.57;\par
1220         tmp.fieldc = 0.21;\par
1221         tmp.wiltp = 0.10;\par
1222         tmp.bulkd= 1.50;\par
1223         \} else\par
1224 \par
1225         if(soiltype == 3)\{\par
1226         /* loam */\par
1227         tmp.silt = 0.40;\par
1228         tmp.clay = 0.18;\par
1229         tmp.sand = 0.52;\par
1230         tmp.air_entry = -1.1;\par
1231         tmp.b = 4.5;\par
1232         tmp.Ks = 3.7e-4;\par
1233         tmp.satur = 0.57;\par
1234         tmp.fieldc = 0.27;\par
1235         tmp.wiltp = 0.12;\par
1236          tmp.bulkd= 1.43;\par
1237         \} else\par
1238 \par
1239         if(soiltype == 4)\{\par
1240         /* silt loam */\par
1241         tmp.silt = 0.65;\par
1242         tmp.clay = 0.15;\par
1243         tmp.sand = 0.20;\par
1244         tmp.air_entry = -2.1;\par
1245         tmp.b = 4.7;\par
1246         tmp.Ks = 1.9e-4;\par
1247         tmp.satur = 0.59;\par
1248         tmp.fieldc = 0.33;\par
1249         tmp.wiltp = 0.13;\par
1250         tmp.bulkd= 1.36;\par
1251         \} else\par
1252 \par
1253         if(soiltype == 5)\{\par
1254         /* sandy clay loam */\par
1255         tmp.silt = 0.13;\par
1256         tmp.clay = 0.27;\par
1257         tmp.sand = 0.60;\par
1258         tmp.air_entry = -2.8;\par
1259         tmp.b = 4;\par
1260         tmp.Ks = 1.2e-4;\par
1261         tmp.satur = 0.48;\par
1262         tmp.fieldc = 0.26;\par
1263         tmp.wiltp = 0.15;\par
1264          tmp.bulkd= 1.39;\par
1265         \} else\par
1266 \par
1267         if(soiltype == 6)\{\par
1268         /* clay loam */\par
1269         tmp.silt = 0.34;\par
1270         tmp.clay = 0.34;\par
1271         tmp.sand = 0.32;\par
1272         tmp.air_entry = -2.6;\par
1273         tmp.b = 5.2;\par
1274         tmp.Ks = 6.4e-5;\par
1275         tmp.satur = 0.52;\par
1276         tmp.fieldc = 0.32;\par
1277         tmp.wiltp = 0.20;\par
1278         tmp.bulkd= 1.35;\par
1279         \} else\par
1280 \par
1281         if(soiltype == 7)\{\par
1282         /* silty clay loam */\par
1283         tmp.silt = 0.58;\par
1284         tmp.clay = 0.33;\par
1285         tmp.sand = 0.09;\par
1286         tmp.air_entry = -3.3;\par
1287         tmp.b = 6.6;\par
1288         tmp.Ks = 4.2e-5;\par
1289         tmp.satur = 0.52;\par
1290         tmp.fieldc = 0.37;\par
1291         tmp.wiltp = 0.21; /* Correction from the book from here http://www.public.iastate.edu/~bkh/teaching/505/norman_book_corrections.pdf */\par
1292          tmp.bulkd= 1.24;\par
1293         \} else\par
1294 \par
1295         if(soiltype == 8)\{\par
1296         /* sandy clay */\par
1297         tmp.silt = 0.07;\par
1298         tmp.clay = 0.40;\par
1299         tmp.sand = 0.53;\par
1300         tmp.air_entry = -2.9;\par
1301         tmp.b = 6;\par
1302         tmp.Ks = 3.3e-5;\par
1303         tmp.satur = 0.51;\par
1304         tmp.fieldc = 0.34;\par
1305         tmp.wiltp = 0.24;\par
1306          tmp.bulkd= 1.30;\par
1307 \par
1308         \} else\par
1309 \par
1310         if(soiltype == 9)\{\par
1311         /* silty clay */\par
1312         tmp.silt = 0.45;\par
1313         tmp.clay = 0.45;\par
1314         tmp.sand = 0.10;\par
1315         tmp.air_entry = -3.4;\par
1316         tmp.b = 7.9;\par
1317         tmp.Ks = 2.5e-5;\par
1318         tmp.satur = 0.52;\par
1319         tmp.fieldc = 0.39;\par
1320         tmp.wiltp = 0.25;\par
1321         tmp.bulkd= 1.28;\par
1322         \} else\par
1323 \par
1324         if(soiltype == 10)\{\par
1325         /* clay */\par
1326         tmp.silt = 0.20;\par
1327         tmp.clay = 0.60;\par
1328         tmp.sand = 0.20;\par
1329         tmp.air_entry = -3.7;\par
1330         tmp.b = 7.6;\par
1331         tmp.Ks = 1.7e-5;\par
1332         tmp.satur = 0.53;\par
1333         tmp.fieldc = 0.4;\par
1334         tmp.wiltp = 0.27;\par
1335         tmp.bulkd= 1.19;\par
1336         \}\par
1337 \par
1338         return(tmp);\par
1339 \par
1340 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v layFshade\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layFshade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layFshade[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layFsun\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layFsun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layFsun[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layHeight\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layHeight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layHeight[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layIdiff\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layIdiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layIdiff[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layIdir\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layIdir}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layIdir[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layItotal\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:layItotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double layItotal[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp1\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp1}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp2\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp2}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp3\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp3}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp4\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp4}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp5\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp5}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sp6\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:sp6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int sp6}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tmp1\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tmp1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tmp1[3]}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tmp3\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tmp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tmp3[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tmp4\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tmp4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tmp4[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tmp5\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tmp5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tmp5[{\b MAXLAY}]}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tp3\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tp3}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tp4\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tp4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tp4}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tp5\:AuxBioCro.h}
{\xe \v AuxBioCro.h\:tp5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int tp5}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxcaneGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxcaneGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/AuxcaneGro.c}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "c4photo.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for AuxcaneGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_auxcane_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilML_str} {\b soilML_rootfront} (double precipit, double transp, double *cws, double soildepth, double *depths, double fieldc, double wiltp, double phi1, double phi2, struct {\b soilText_str} soTexS, int wsFun, int layers, double rootDB, double LAI, double k, double AirTemp, double IRad, double winds, double RelH, int hydrDist, double rfl, double rsec, double rsdf, int optiontocalculaterootdepth, double rootfrontvelocity, double dap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_sugarcane_str} {\b SUGARCANE_DBP_CUADRA} (double TT, double TT0, double TTseed, double Tmaturity, double Rd, double Alm, double Arm, double Clstem, double Ilstem, double Cestem, double Iestem, double Clsuc, double Ilsuc, double Cesuc, double Iesuc, double Temperature)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GrowthRespiration} (double CanopyA, double fraction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b MRespiration} (double W, double Q, double m, double T, double deltime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b seasonal} (double maxLN, double minLN, double day, double daymaxLN, double dayinyear, double lat)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v GrowthRespiration\:AuxcaneGro.c}
{\xe \v AuxcaneGro.c\:GrowthRespiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GrowthRespiration (double {\i CanopyA}, double {\i fraction})}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 335 \{\par
336         CanopyA=CanopyA*(1.0-fraction);\par
337         return(CanopyA);\par
338 \}\par
}
}
{\xe \v MRespiration\:AuxcaneGro.c}
{\xe \v AuxcaneGro.c\:MRespiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MRespiration (double {\i W}, double {\i Q}, double {\i m}, double {\i T}, double {\i deltime})}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 343 \{\par
344         double result,ttemp;\par
345         /* change m from per day basis to per hr basis for deltime=1 hr */\par
346         m=m*deltime/24;  \par
347         ttemp=(T-25.0)/10.0;\par
348         result=W*m*pow(Q,ttemp);\par
349         return(result);\par
350                 \}\par
}
}
{\xe \v seasonal\:AuxcaneGro.c}
{\xe \v AuxcaneGro.c\:seasonal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double seasonal (double {\i maxLN}, double {\i minLN}, double {\i day}, double {\i daymaxLN}, double {\i dayinyear}, double {\i lat})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 355 \{\par
356         \par
357         double temp,leafN;  // temporary variable to calculate cyclic variation\par
358               \par
359          temp = sin (2*3.1415*((day-(daymaxLN))/(dayinyear)+0.25));\par
360          leafN=(maxLN+minLN)*0.5+(maxLN-minLN)*temp*0.5;  \par
361 \par
362         return (leafN);\par
363                  \par
364  \} \par
}
}
{\xe \v soilML_rootfront\:AuxcaneGro.c}
{\xe \v AuxcaneGro.c\:soilML_rootfront}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilML_str} soilML_rootfront (double {\i precipit}, double {\i transp}, double * {\i cws}, double {\i soildepth}, double * {\i depths}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, struct {\b soilText_str} {\i soTexS}, int {\i wsFun}, int {\i layers}, double {\i rootDB}, double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i IRad}, double {\i winds}, double {\i RelH}, int {\i hydrDist}, double {\i rfl}, double {\i rsec}, double {\i rsdf}, int {\i optiontocalculaterootdepth}, double {\i rootfrontvelocity}, double {\i dap})}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                                                                                                                                                                                                                                                                                                                                                                                                                  \{\par
25 \par
26         struct rd_str tmp4;\par
27         struct seqRD_str tmp3;\par
28         struct soilML_str tmp;\par
29         /* Constant */\par
30         /* const double G = 6.67428e-11;  m3 / (kg * s-2)  ##  http://en.wikipedia.org/wiki/Gravitational_constant */\par
31         const double g = 9.8; /* m / s-2  ##  http://en.wikipedia.org/wiki/Standard_gravity */\par
32         /* Variables */\par
33         double waterIn, oldWaterIn = 0.0;\par
34 /* Here is a convention aw is available water in volume and awc\par
35    is available water content as a fraction of the soil section being investigated.\par
36    paw is plant available water aw - wiltp */\par
37         double aw, paw, awc, awc2, Newpawha;\par
38         double drainage = 0.0;\par
39         double wsPhoto = 0.0, wsSpleaf = 0.0, phi10;\par
40         double wsPhotoCol = 0.0, wsSpleafCol = 0.0;\par
41         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
42         double Nleach = 0.0;\par
43         double layerDepth;\par
44         double diffw;\par
45         double rootATdepth, rootDepth;\par
46         double EvapoTra = 0.0, oldEvapoTra = 0.0, Sevap = 0.0, Ctransp = 0.0;\par
47         double psim1 = 0.0, psim2 = 0.0, K_psim = 0.0, J_w = 0.0, dPsim = 0.0;\par
48         double theta_s; /* This is the saturated soil water content. Larger than FieldC.*/\par
49         int i;\par
50         int j = layers - 1; \par
51 \par
52         /* Specify the soil type */\par
53 \par
54         if(fieldc < 0)\{\par
55                 fieldc = soTexS.fieldc;\par
56         \}\par
57         if(wiltp < 0)\{\par
58                 wiltp = soTexS.wiltp;\par
59         \}\par
60 \par
61         theta_s = soTexS.satur;\par
62         /* rooting depth */\par
63         /* Crude empirical relationship between root biomass and rooting depth*/\par
64                    if (optiontocalculaterootdepth==1) \{\par
65                                             rootDepth = rootDB * rsdf;\par
66                                            \}\par
67 \par
68                                       else \{\par
69                                               rootDepth = rootfrontvelocity*dap*0.01;// to convert root depth from cm to meter\par
70                                            \}\par
71 \par
72         if(rootDepth > soildepth) rootDepth = soildepth;\par
73 \par
74         tmp3 = seqRootDepth(rootDepth,layers);\par
75         tmp4 = rootDist(layers,rootDepth,&depths[0],rfl);\par
76 \par
77         /* unit conversion for precip */\par
78         waterIn = precipit * 1e-3; /* convert precip in mm to m*/\par
79 \par
80         for(j=0,i=layers-1;j<layers;j++,i--)\{\par
81         /* for(i=0;i<layers;i++)\{ */\par
82                 /* It decreases because I increase the water content due to precipitation in the last layer first*/\par
83 \par
84                 /* This supports unequal depths. */\par
85                 if(i == 0)\{\par
86                         layerDepth = depths[1];\par
87                 \}else\{\par
88                         layerDepth = depths[i] - depths[i-1];\par
89                 \}\par
90 \par
91 \par
92                 if(hydrDist > 0)\{\par
93                         /* For this section see Campbell and Norman "Environmental BioPhysics" Chapter 9*/\par
94                         /* First compute the matric potential */\par
95                         psim1 = soTexS.air_entry * pow((cws[i]/theta_s),-soTexS.b) ; /* This is matric potential of current layer */\par
96                         if(i > 0)\{\par
97                                 psim2 = soTexS.air_entry * pow((cws[i-1]/theta_s),-soTexS.b) ; /* This is matric potential of next layer */\par
98                                 dPsim = psim1 - psim2;\par
99                                 /* The substraction is from the layer i - (i-1). If this last term is positive then it will move upwards. If it is negative it will move downwards. Presumably this term is almost always positive. */\par
100                         \}else\{\par
101                                 dPsim = 0;\par
102                         \}\par
103                         K_psim = soTexS.Ks * pow((soTexS.air_entry/psim1),2+3/soTexS.b); /* This is hydraulic conductivity */\par
104                         J_w = K_psim * (dPsim/layerDepth) - g * K_psim ; /*  Campbell, pg 129 do not ignore the graviational effect*/\par
105                         /* Notice that K_psim is positive because my\par
106                             reference system is reversed */\par
107                         /* This last result should be in kg/(m2 * s)*/\par
108                          J_w *= 3600 * 0.9882 * 1e-3 ; /* This is flow in m3 / (m^2 * hr). */\par
109                         /* Rprintf("J_w %.10f \\n",J_w);  */\par
110                         if(i == (layers-1) && J_w < 0)\{\par
111                                         /* cws[i] = cws[i] + J_w /\par
112                                          * layerDepth; Although this\par
113                                          * should be done it drains\par
114                                          * the last layer too much.*/\par
115                                         drainage += J_w;\par
116                         \}else\{\par
117                                 if(i > 0)\{\par
118                                         cws[i] = cws[i] -  J_w / layerDepth;\par
119                                         cws[i - 1] =  cws[i-1] +  J_w / layerDepth;\par
120                                 \}else\{\par
121                                         cws[i] = cws[i] -  J_w / layerDepth;\par
122                                 \}\par
123                         \}\par
124                 \}\par
125 \par
126                  if(cws[i] > fieldc) cws[i] = fieldc; \par
127                 /* if(cws[i+1] > fieldc) cws[i+1] = fieldc; */\par
128                  if(cws[i] < wiltp) cws[i] = wiltp; \par
129                 /* if(cws[i+1] < wiltp) cws[i+1] = wiltp;  */\par
130 \par
131                 aw = cws[i] * layerDepth;\par
132 /* Available water (for this layer) is the current water status times the layer depth */\par
133 \par
134                 if(waterIn > 0)\{\par
135                         /* There is some rain. Need to add it.*/\par
136                         aw += waterIn / layers + oldWaterIn; /* They are both in meters so it works */\par
137                         /* Adding the same amount to water to each layer */\par
138                         /* In case there is overflow */\par
139                         diffw = fieldc * layerDepth - aw;\par
140 \par
141                         if(diffw < 0)\{\par
142                                 /* This means that precipitation exceeded the capacity of the first layer */\par
143                                 /* Save this amount of water for the next layer */\par
144                                 oldWaterIn = -diffw;\par
145                                 aw = fieldc * layerDepth;\par
146                         \}else\{\par
147                                 oldWaterIn = 0.0;\par
148                         \}\par
149                 \}\par
150 \par
151                 /* Root Biomass */\par
152                 rootATdepth = rootDB * tmp4.rootDist[i];\par
153                 tmp.rootDist[i] = rootATdepth;\par
154 /* Plant available water is only between current water status and permanent wilting point */\par
155                 /* Plant available water */\par
156                 paw = aw - wiltp * layerDepth;\par
157                 if(paw < 0) paw = 0; \par
158 \par
159                 if(i == 0)\{\par
160                         /* Only the first layer is affected by soil evaporation */\par
161                         awc2 = aw / layerDepth;\par
162                         /* SoilEvapo function needs soil water content  */\par
163                         Sevap = SoilEvapo(LAI,k,AirTemp,IRad,awc2,fieldc,wiltp,winds,RelH,rsec);\par
164                         /* I assume that crop transpiration is distributed simlarly to\par
165                            root density.  In other words the crop takes up water proportionally\par
166                            to the amount of root in each respective layer.*/\par
167                         Ctransp = transp*tmp4.rootDist[0];\par
168                         EvapoTra = Ctransp + Sevap;\par
169                         Newpawha = (paw * 1e4) - EvapoTra / 0.9982; /* See the watstr function for this last number 0.9882 */\par
170                         /* The first term in the rhs (paw * 1e4) is the m3 of water available in this layer.\par
171                            EvapoTra is the Mg H2O ha-1 of transpired and evaporated water. 1/0.9882 converts from Mg to m3 */\par
172                 \}else\{\par
173                         Ctransp = transp*tmp4.rootDist[i];\par
174                         EvapoTra = Ctransp;\par
175                         Newpawha = (paw * 1e4) - (EvapoTra + oldEvapoTra);\par
176                 \}\par
177 \par
178                 if(Newpawha < 0)\{\par
179 /* If the Demand is not satisfied by this layer. This will be stored and added to subsequent layers*/\par
180                         oldEvapoTra = -Newpawha;\par
181                          aw = wiltp * layerDepth; \par
182                 \}\par
183 \par
184                 paw = Newpawha / 1e4 ;\par
185                 awc = paw / layerDepth + wiltp;   \par
186 \par
187 /* This might look like a weird place to populate the structure, but is more convenient*/\par
188                 tmp.cws[i] = awc;\par
189 \par
190                 if(wsFun == 0)\{\par
191                         slp = 1/(fieldc - wiltp);\par
192                         intcpt = 1 - fieldc * slp;\par
193                         wsPhoto = slp * awc + intcpt ;\par
194                 \}else\par
195                 if(wsFun == 1)\{\par
196                         phi10 = (fieldc + wiltp)/2;\par
197                         wsPhoto = 1/(1 + exp((phi10 - awc)/ phi1));\par
198                 \}else\par
199                 if(wsFun == 2)\{\par
200                         slp = (1 - wiltp)/(fieldc - wiltp);\par
201                         intcpt = 1 - fieldc * slp;\par
202                         theta = slp * awc + intcpt ;\par
203                         wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
204                 \}else\par
205                 if(wsFun == 3)\{\par
206                         wsPhoto = 1;\par
207                 \}\par
208 \par
209                 if(wsPhoto <= 0 )\par
210                         wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
211 \par
212                 wsPhotoCol += wsPhoto;\par
213 \par
214                 wsSpleaf = pow(awc,phi2)/pow(fieldc,phi2); \par
215                 if(wsFun == 3)\{ \par
216                         wsSpleaf = 1;\par
217                 \}\par
218                 wsSpleafCol += wsSpleaf;\par
219         \}\par
220 \par
221         if(waterIn > 0)\{ \par
222                 drainage = waterIn;\par
223                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
224                 /* The data comes in mm/hr and it needs to be in cm/month */\par
225                 Nleach = drainage * 0.1 * (1/24*30) / (18 * (0.2 + 0.7 * soTexS.sand));\par
226         \}\par
227 \par
228 \par
229 /* returning the structure */\par
230         tmp.rcoefPhoto = (wsPhotoCol/layers);\par
231         tmp.drainage = drainage;\par
232         tmp.Nleach = Nleach;\par
233         tmp.rcoefSpleaf = (wsSpleafCol/layers);\par
234         tmp.SoilEvapo = Sevap;\par
235 \par
236         return(tmp);\par
237 \}\par
}
}
{\xe \v SUGARCANE_DBP_CUADRA\:AuxcaneGro.c}
{\xe \v AuxcaneGro.c\:SUGARCANE_DBP_CUADRA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dbp_sugarcane_str} SUGARCANE_DBP_CUADRA (double {\i TT}, double {\i TT0}, double {\i TTseed}, double {\i Tmaturity}, double {\i Rd}, double {\i Alm}, double {\i Arm}, double {\i Clstem}, double {\i Ilstem}, double {\i Cestem}, double {\i Iestem}, double {\i Clsuc}, double {\i Ilsuc}, double {\i Cesuc}, double {\i Iesuc}, double {\i Temperature})}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241 \{\par
242         struct dbp_sugarcane_str dbp;\par
243         double F1, F2, F3, F4;\par
244         double Aa,Astem,Al,Ar,Asuc,Astuc,Afib;\par
245         double RM;\par
246         double cutemp1,cutemp2,RM0;\par
247         \par
248 /* Germination Phase */\par
249         \par
250         if(TT < TT0)\par
251         \{\par
252                 \par
253                 dbp.kLeaf=0.001;\par
254                 dbp.kStem=0.7;\par
255                 dbp.kRoot=0.299;\par
256                 dbp.kSeedcane=(-1)*0.693*(0.0053*Temperature-0.0893);\par
257                 dbp.kSugar=0.0;\par
258                 dbp.kFiber=0.0;\par
259                 return(dbp);            \par
260         \}\par
261         else\par
262         \par
263 \par
264         dbp.kSeedcane=0;\par
265         /* Calculate Relative Maturity and correct it for germination phase* */\par
266         /* Now reference thermal time has changed from 0 to TT0 */\par
267         RM=(TT-TT0)*100.0/Tmaturity;\par
268 /*      RM0=TT0*100.0/Tmaturity;\par
269         RM=RM-RM0;   */\par
270 \par
271         /* Criteria for linear increase in stem biomass*/\par
272         F1=RM*Clstem-Ilstem*Clstem;\par
273 \par
274         /*Criteria for log increase in stem biomass */\par
275         F2=1-exp((RM*Cestem)-(Iestem*Cestem));\par
276 \par
277         /* Fraction of aerial biomass */\par
278         cutemp1=(1-exp((-1)*Rd*RM));\par
279         Aa=(1.0-Arm)*((cutemp1<1.0) ? cutemp1 :1.0);\par
280 \par
281         /*Fraction of stem biomass */\par
282         cutemp1=(1.0-Alm-Arm);\par
283         if ((F1<=0)&&(F2<=0))\par
284         \{\par
285                 cutemp2=0.0;\par
286         \}\par
287         else\par
288         \{\par
289                 cutemp2=Aa*((F1>F2)?F1:F2);\par
290         \}\par
291         Astem = (cutemp2<cutemp1)?cutemp2:cutemp1;\par
292 \par
293         /* Fraction of leaf biomass */\par
294         Al=Aa-Astem;\par
295         /* Fraction of root biomass */\par
296         Ar=1-Aa;\par
297 \par
298         /* Partiitoning of stem between structural and sugar component */\par
299 \par
300         /* Criteria for linear increase */\par
301         F3=RM*Clsuc-Ilsuc*Clsuc;\par
302 \par
303         /*Criteria for log increase */\par
304         F4=1-exp((RM*Cesuc)-(Iesuc*Cesuc));\par
305   \par
306        /*fraction of sucrose with respective to total stem allocation */ \par
307         cutemp2=0;\par
308         if ((F3<=0)&&(F4<=0))\par
309         \{\par
310                 cutemp2=0;\par
311         \}\par
312         else\par
313         \{\par
314                 cutemp2=Astem*((F3>F4)?F3:F4);\par
315         \}\par
316         Asuc=cutemp2;\par
317         Afib=Astem-Asuc;\par
318 \par
319         /*fraction of structural component of stem */\par
320         Astuc=Astem-Asuc;\par
321 \par
322                 dbp.kLeaf=Al;\par
323                 dbp.kStem=Astem;\par
324                 dbp.kRoot=Ar;\par
325                 dbp.kSugar=Asuc;\par
326                 dbp.kFiber=Astuc;\par
327 //              dbp.kSeedcane=-0.00005; \par
328         return(dbp);\par
329 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxcaneGro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxcaneGro.h}
{\xe \v /home/dlebauer/dev/biocro/src/AuxcaneGro.h}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_auxcane_gro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_sugarcane_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b frostParms}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b MRespiration} (double W, double Q, double m, double T, double deltime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GrowthRespiration} (double CanopyA, double fraction)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_sugarcane_str} {\b SUGARCANE_DBP_CUADRA} (double TT, double TT0, double TTseed, double Tmaturity, double Rd, double Alm, double Arm, double Clstem, double Ilstem, double Cestem, double Iestem, double Clsuc, double Ilsuc, double Cesuc, double Iesuc, double Temperature)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b seasonal} (double maxLN, double minLN, double day, double daymaxLN, double dayinyear, double lat)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilML_str} {\b soilML_rootfront} (double precipit, double transp, double *cws, double soildepth, double *depths, double fieldc, double wiltp, double phi1, double phi2, struct {\b soilText_str} soTexS, int wsFun, int layers, double rootDB, double LAI, double k, double AirTemp, double IRad, double winds, double RelH, int hydrDist, double rfl, double rsec, double rsdf, int optiontocalculaterootdepth, double rootfrontvelocity, double dap)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getFrostdamage} (double T0, double T100, double T, double biomass)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getFrostdamage\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:getFrostdamage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getFrostdamage (double {\i T0}, double {\i T100}, double {\i T}, double {\i biomass})}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241 \{\par
242    /*************************************\par
243    * Purpose\par
244    * To calculate senescence as a fraction of exisiting biomass due to frost\par
245    * Input:\par
246    * T0: This is maximum temperature when frost damage occurs, This also represent Temperature \par
247    * damage will be zero percentage of exisiting biomass\par
248    * T100: This is minimum temperature where all the existing biomass senescee (i.e. 100% senescence)\par
249    * biomass: Exisiting biomass\par
250    *\par
251    * Output:\par
252    * \par
253    * Returns senesced biomass\par
254    * \par
255    * **********************************/\par
256   double temp,fraction;\par
257   fraction = (T0-T)/(T0-T100);\par
258   temp = fraction>1.0? 1.0:(fraction <0.0? 0.0:fraction);\par
259   return(temp*biomass);\par
260 \}\par
}
}
{\xe \v GrowthRespiration\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:GrowthRespiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GrowthRespiration (double {\i CanopyA}, double {\i fraction})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 335 \{\par
336         CanopyA=CanopyA*(1.0-fraction);\par
337         return(CanopyA);\par
338 \}\par
}
}
{\xe \v MRespiration\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:MRespiration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double MRespiration (double {\i W}, double {\i Q}, double {\i m}, double {\i T}, double {\i deltime})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 343 \{\par
344         double result,ttemp;\par
345         /* change m from per day basis to per hr basis for deltime=1 hr */\par
346         m=m*deltime/24;  \par
347         ttemp=(T-25.0)/10.0;\par
348         result=W*m*pow(Q,ttemp);\par
349         return(result);\par
350                 \}\par
}
}
{\xe \v seasonal\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:seasonal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double seasonal (double {\i maxLN}, double {\i minLN}, double {\i day}, double {\i daymaxLN}, double {\i dayinyear}, double {\i lat})}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 355 \{\par
356         \par
357         double temp,leafN;  // temporary variable to calculate cyclic variation\par
358               \par
359          temp = sin (2*3.1415*((day-(daymaxLN))/(dayinyear)+0.25));\par
360          leafN=(maxLN+minLN)*0.5+(maxLN-minLN)*temp*0.5;  \par
361 \par
362         return (leafN);\par
363                  \par
364  \} \par
}
}
{\xe \v soilML_rootfront\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:soilML_rootfront}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilML_str} soilML_rootfront (double {\i precipit}, double {\i transp}, double * {\i cws}, double {\i soildepth}, double * {\i depths}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, struct {\b soilText_str} {\i soTexS}, int {\i wsFun}, int {\i layers}, double {\i rootDB}, double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i IRad}, double {\i winds}, double {\i RelH}, int {\i hydrDist}, double {\i rfl}, double {\i rsec}, double {\i rsdf}, int {\i optiontocalculaterootdepth}, double {\i rootfrontvelocity}, double {\i dap})}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                                                                                                                                                                                                                                                                                                                                                                                                                  \{\par
25 \par
26         struct rd_str tmp4;\par
27         struct seqRD_str tmp3;\par
28         struct soilML_str tmp;\par
29         /* Constant */\par
30         /* const double G = 6.67428e-11;  m3 / (kg * s-2)  ##  http://en.wikipedia.org/wiki/Gravitational_constant */\par
31         const double g = 9.8; /* m / s-2  ##  http://en.wikipedia.org/wiki/Standard_gravity */\par
32         /* Variables */\par
33         double waterIn, oldWaterIn = 0.0;\par
34 /* Here is a convention aw is available water in volume and awc\par
35    is available water content as a fraction of the soil section being investigated.\par
36    paw is plant available water aw - wiltp */\par
37         double aw, paw, awc, awc2, Newpawha;\par
38         double drainage = 0.0;\par
39         double wsPhoto = 0.0, wsSpleaf = 0.0, phi10;\par
40         double wsPhotoCol = 0.0, wsSpleafCol = 0.0;\par
41         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
42         double Nleach = 0.0;\par
43         double layerDepth;\par
44         double diffw;\par
45         double rootATdepth, rootDepth;\par
46         double EvapoTra = 0.0, oldEvapoTra = 0.0, Sevap = 0.0, Ctransp = 0.0;\par
47         double psim1 = 0.0, psim2 = 0.0, K_psim = 0.0, J_w = 0.0, dPsim = 0.0;\par
48         double theta_s; /* This is the saturated soil water content. Larger than FieldC.*/\par
49         int i;\par
50         int j = layers - 1; \par
51 \par
52         /* Specify the soil type */\par
53 \par
54         if(fieldc < 0)\{\par
55                 fieldc = soTexS.fieldc;\par
56         \}\par
57         if(wiltp < 0)\{\par
58                 wiltp = soTexS.wiltp;\par
59         \}\par
60 \par
61         theta_s = soTexS.satur;\par
62         /* rooting depth */\par
63         /* Crude empirical relationship between root biomass and rooting depth*/\par
64                    if (optiontocalculaterootdepth==1) \{\par
65                                             rootDepth = rootDB * rsdf;\par
66                                            \}\par
67 \par
68                                       else \{\par
69                                               rootDepth = rootfrontvelocity*dap*0.01;// to convert root depth from cm to meter\par
70                                            \}\par
71 \par
72         if(rootDepth > soildepth) rootDepth = soildepth;\par
73 \par
74         tmp3 = seqRootDepth(rootDepth,layers);\par
75         tmp4 = rootDist(layers,rootDepth,&depths[0],rfl);\par
76 \par
77         /* unit conversion for precip */\par
78         waterIn = precipit * 1e-3; /* convert precip in mm to m*/\par
79 \par
80         for(j=0,i=layers-1;j<layers;j++,i--)\{\par
81         /* for(i=0;i<layers;i++)\{ */\par
82                 /* It decreases because I increase the water content due to precipitation in the last layer first*/\par
83 \par
84                 /* This supports unequal depths. */\par
85                 if(i == 0)\{\par
86                         layerDepth = depths[1];\par
87                 \}else\{\par
88                         layerDepth = depths[i] - depths[i-1];\par
89                 \}\par
90 \par
91 \par
92                 if(hydrDist > 0)\{\par
93                         /* For this section see Campbell and Norman "Environmental BioPhysics" Chapter 9*/\par
94                         /* First compute the matric potential */\par
95                         psim1 = soTexS.air_entry * pow((cws[i]/theta_s),-soTexS.b) ; /* This is matric potential of current layer */\par
96                         if(i > 0)\{\par
97                                 psim2 = soTexS.air_entry * pow((cws[i-1]/theta_s),-soTexS.b) ; /* This is matric potential of next layer */\par
98                                 dPsim = psim1 - psim2;\par
99                                 /* The substraction is from the layer i - (i-1). If this last term is positive then it will move upwards. If it is negative it will move downwards. Presumably this term is almost always positive. */\par
100                         \}else\{\par
101                                 dPsim = 0;\par
102                         \}\par
103                         K_psim = soTexS.Ks * pow((soTexS.air_entry/psim1),2+3/soTexS.b); /* This is hydraulic conductivity */\par
104                         J_w = K_psim * (dPsim/layerDepth) - g * K_psim ; /*  Campbell, pg 129 do not ignore the graviational effect*/\par
105                         /* Notice that K_psim is positive because my\par
106                             reference system is reversed */\par
107                         /* This last result should be in kg/(m2 * s)*/\par
108                          J_w *= 3600 * 0.9882 * 1e-3 ; /* This is flow in m3 / (m^2 * hr). */\par
109                         /* Rprintf("J_w %.10f \\n",J_w);  */\par
110                         if(i == (layers-1) && J_w < 0)\{\par
111                                         /* cws[i] = cws[i] + J_w /\par
112                                          * layerDepth; Although this\par
113                                          * should be done it drains\par
114                                          * the last layer too much.*/\par
115                                         drainage += J_w;\par
116                         \}else\{\par
117                                 if(i > 0)\{\par
118                                         cws[i] = cws[i] -  J_w / layerDepth;\par
119                                         cws[i - 1] =  cws[i-1] +  J_w / layerDepth;\par
120                                 \}else\{\par
121                                         cws[i] = cws[i] -  J_w / layerDepth;\par
122                                 \}\par
123                         \}\par
124                 \}\par
125 \par
126                  if(cws[i] > fieldc) cws[i] = fieldc; \par
127                 /* if(cws[i+1] > fieldc) cws[i+1] = fieldc; */\par
128                  if(cws[i] < wiltp) cws[i] = wiltp; \par
129                 /* if(cws[i+1] < wiltp) cws[i+1] = wiltp;  */\par
130 \par
131                 aw = cws[i] * layerDepth;\par
132 /* Available water (for this layer) is the current water status times the layer depth */\par
133 \par
134                 if(waterIn > 0)\{\par
135                         /* There is some rain. Need to add it.*/\par
136                         aw += waterIn / layers + oldWaterIn; /* They are both in meters so it works */\par
137                         /* Adding the same amount to water to each layer */\par
138                         /* In case there is overflow */\par
139                         diffw = fieldc * layerDepth - aw;\par
140 \par
141                         if(diffw < 0)\{\par
142                                 /* This means that precipitation exceeded the capacity of the first layer */\par
143                                 /* Save this amount of water for the next layer */\par
144                                 oldWaterIn = -diffw;\par
145                                 aw = fieldc * layerDepth;\par
146                         \}else\{\par
147                                 oldWaterIn = 0.0;\par
148                         \}\par
149                 \}\par
150 \par
151                 /* Root Biomass */\par
152                 rootATdepth = rootDB * tmp4.rootDist[i];\par
153                 tmp.rootDist[i] = rootATdepth;\par
154 /* Plant available water is only between current water status and permanent wilting point */\par
155                 /* Plant available water */\par
156                 paw = aw - wiltp * layerDepth;\par
157                 if(paw < 0) paw = 0; \par
158 \par
159                 if(i == 0)\{\par
160                         /* Only the first layer is affected by soil evaporation */\par
161                         awc2 = aw / layerDepth;\par
162                         /* SoilEvapo function needs soil water content  */\par
163                         Sevap = SoilEvapo(LAI,k,AirTemp,IRad,awc2,fieldc,wiltp,winds,RelH,rsec);\par
164                         /* I assume that crop transpiration is distributed simlarly to\par
165                            root density.  In other words the crop takes up water proportionally\par
166                            to the amount of root in each respective layer.*/\par
167                         Ctransp = transp*tmp4.rootDist[0];\par
168                         EvapoTra = Ctransp + Sevap;\par
169                         Newpawha = (paw * 1e4) - EvapoTra / 0.9982; /* See the watstr function for this last number 0.9882 */\par
170                         /* The first term in the rhs (paw * 1e4) is the m3 of water available in this layer.\par
171                            EvapoTra is the Mg H2O ha-1 of transpired and evaporated water. 1/0.9882 converts from Mg to m3 */\par
172                 \}else\{\par
173                         Ctransp = transp*tmp4.rootDist[i];\par
174                         EvapoTra = Ctransp;\par
175                         Newpawha = (paw * 1e4) - (EvapoTra + oldEvapoTra);\par
176                 \}\par
177 \par
178                 if(Newpawha < 0)\{\par
179 /* If the Demand is not satisfied by this layer. This will be stored and added to subsequent layers*/\par
180                         oldEvapoTra = -Newpawha;\par
181                          aw = wiltp * layerDepth; \par
182                 \}\par
183 \par
184                 paw = Newpawha / 1e4 ;\par
185                 awc = paw / layerDepth + wiltp;   \par
186 \par
187 /* This might look like a weird place to populate the structure, but is more convenient*/\par
188                 tmp.cws[i] = awc;\par
189 \par
190                 if(wsFun == 0)\{\par
191                         slp = 1/(fieldc - wiltp);\par
192                         intcpt = 1 - fieldc * slp;\par
193                         wsPhoto = slp * awc + intcpt ;\par
194                 \}else\par
195                 if(wsFun == 1)\{\par
196                         phi10 = (fieldc + wiltp)/2;\par
197                         wsPhoto = 1/(1 + exp((phi10 - awc)/ phi1));\par
198                 \}else\par
199                 if(wsFun == 2)\{\par
200                         slp = (1 - wiltp)/(fieldc - wiltp);\par
201                         intcpt = 1 - fieldc * slp;\par
202                         theta = slp * awc + intcpt ;\par
203                         wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
204                 \}else\par
205                 if(wsFun == 3)\{\par
206                         wsPhoto = 1;\par
207                 \}\par
208 \par
209                 if(wsPhoto <= 0 )\par
210                         wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
211 \par
212                 wsPhotoCol += wsPhoto;\par
213 \par
214                 wsSpleaf = pow(awc,phi2)/pow(fieldc,phi2); \par
215                 if(wsFun == 3)\{ \par
216                         wsSpleaf = 1;\par
217                 \}\par
218                 wsSpleafCol += wsSpleaf;\par
219         \}\par
220 \par
221         if(waterIn > 0)\{ \par
222                 drainage = waterIn;\par
223                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
224                 /* The data comes in mm/hr and it needs to be in cm/month */\par
225                 Nleach = drainage * 0.1 * (1/24*30) / (18 * (0.2 + 0.7 * soTexS.sand));\par
226         \}\par
227 \par
228 \par
229 /* returning the structure */\par
230         tmp.rcoefPhoto = (wsPhotoCol/layers);\par
231         tmp.drainage = drainage;\par
232         tmp.Nleach = Nleach;\par
233         tmp.rcoefSpleaf = (wsSpleafCol/layers);\par
234         tmp.SoilEvapo = Sevap;\par
235 \par
236         return(tmp);\par
237 \}\par
}
}
{\xe \v SUGARCANE_DBP_CUADRA\:AuxcaneGro.h}
{\xe \v AuxcaneGro.h\:SUGARCANE_DBP_CUADRA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dbp_sugarcane_str} SUGARCANE_DBP_CUADRA (double {\i TT}, double {\i TT0}, double {\i TTseed}, double {\i Tmaturity}, double {\i Rd}, double {\i Alm}, double {\i Arm}, double {\i Clstem}, double {\i Ilstem}, double {\i Cestem}, double {\i Iestem}, double {\i Clsuc}, double {\i Ilsuc}, double {\i Cesuc}, double {\i Iesuc}, double {\i Temperature})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241 \{\par
242         struct dbp_sugarcane_str dbp;\par
243         double F1, F2, F3, F4;\par
244         double Aa,Astem,Al,Ar,Asuc,Astuc,Afib;\par
245         double RM;\par
246         double cutemp1,cutemp2,RM0;\par
247         \par
248 /* Germination Phase */\par
249         \par
250         if(TT < TT0)\par
251         \{\par
252                 \par
253                 dbp.kLeaf=0.001;\par
254                 dbp.kStem=0.7;\par
255                 dbp.kRoot=0.299;\par
256                 dbp.kSeedcane=(-1)*0.693*(0.0053*Temperature-0.0893);\par
257                 dbp.kSugar=0.0;\par
258                 dbp.kFiber=0.0;\par
259                 return(dbp);            \par
260         \}\par
261         else\par
262         \par
263 \par
264         dbp.kSeedcane=0;\par
265         /* Calculate Relative Maturity and correct it for germination phase* */\par
266         /* Now reference thermal time has changed from 0 to TT0 */\par
267         RM=(TT-TT0)*100.0/Tmaturity;\par
268 /*      RM0=TT0*100.0/Tmaturity;\par
269         RM=RM-RM0;   */\par
270 \par
271         /* Criteria for linear increase in stem biomass*/\par
272         F1=RM*Clstem-Ilstem*Clstem;\par
273 \par
274         /*Criteria for log increase in stem biomass */\par
275         F2=1-exp((RM*Cestem)-(Iestem*Cestem));\par
276 \par
277         /* Fraction of aerial biomass */\par
278         cutemp1=(1-exp((-1)*Rd*RM));\par
279         Aa=(1.0-Arm)*((cutemp1<1.0) ? cutemp1 :1.0);\par
280 \par
281         /*Fraction of stem biomass */\par
282         cutemp1=(1.0-Alm-Arm);\par
283         if ((F1<=0)&&(F2<=0))\par
284         \{\par
285                 cutemp2=0.0;\par
286         \}\par
287         else\par
288         \{\par
289                 cutemp2=Aa*((F1>F2)?F1:F2);\par
290         \}\par
291         Astem = (cutemp2<cutemp1)?cutemp2:cutemp1;\par
292 \par
293         /* Fraction of leaf biomass */\par
294         Al=Aa-Astem;\par
295         /* Fraction of root biomass */\par
296         Ar=1-Aa;\par
297 \par
298         /* Partiitoning of stem between structural and sugar component */\par
299 \par
300         /* Criteria for linear increase */\par
301         F3=RM*Clsuc-Ilsuc*Clsuc;\par
302 \par
303         /*Criteria for log increase */\par
304         F4=1-exp((RM*Cesuc)-(Iesuc*Cesuc));\par
305   \par
306        /*fraction of sucrose with respective to total stem allocation */ \par
307         cutemp2=0;\par
308         if ((F3<=0)&&(F4<=0))\par
309         \{\par
310                 cutemp2=0;\par
311         \}\par
312         else\par
313         \{\par
314                 cutemp2=Astem*((F3>F4)?F3:F4);\par
315         \}\par
316         Asuc=cutemp2;\par
317         Afib=Astem-Asuc;\par
318 \par
319         /*fraction of structural component of stem */\par
320         Astuc=Astem-Asuc;\par
321 \par
322                 dbp.kLeaf=Al;\par
323                 dbp.kStem=Astem;\par
324                 dbp.kRoot=Ar;\par
325                 dbp.kSugar=Asuc;\par
326                 dbp.kFiber=Astuc;\par
327 //              dbp.kSeedcane=-0.00005; \par
328         return(dbp);\par
329 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Auxcropcent.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Auxcropcent.c}
{\xe \v /home/dlebauer/dev/biocro/src/Auxcropcent.c}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Auxcropcent.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_auxcropcent_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatecropcentpools} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BiocroToCrocent} (double *stdedbc, double fallrate, double lignin, struct {\b minerals} *E, double isotoperatio, int surface, int woody, struct {\b InputToCropcent} *INCROCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateCropcentPoolsFromBioCro} (struct {\b cropcentlayer} *CROPCENT, struct {\b InputToCropcent} *INCROPCENT)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BiocroToCrocent\:Auxcropcent.c}
{\xe \v Auxcropcent.c\:BiocroToCrocent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BiocroToCrocent (double * {\i stdedbc}, double {\i fallrate}, double {\i lignin}, struct {\b minerals} * {\i E}, double {\i isotoperatio}, int {\i surface}, int {\i woody}, struct {\b InputToCropcent} * {\i INCROCENT})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149 \{\par
150   /***************************************************************\par
151   *   Purpose:\par
152   *   Purpose of this function is to take the daily output of BioCro\par
153   *   and create structure InputToCrocent that contains information\par
154   *   about characteristics of the litter and this structure can be used to\par
155   *   update Crocent pools\par
156   *   Note that we are not reducing standing biomass due to photodecomposition\par
157   *   we are only letting it fall based on fallrate to contribute to \par
158   *   appropriate soilpools\par
159   *  \par
160   * \par
161   *   Arguments\par
162   *   (1)  *stdedbc - This is a pointe to standing dead biomass. We are using\par
163   *         ponters here because we would like to update it after accouting for\par
164   *         reduction in fall rate\par
165   *   (2)  fallrate - This represents fraction of standing deadbiomasss\par
166   *         that will contribute to soil pools\par
167   *   (3)   lignin - This represents lignin content of the dead biomass\par
168   *   (4)   E representes CN,CP,CS, CK- represents nutrient:C ratio for the dead biomass\par
169   *   (5)   isotopratio - represents ratio of unlabled and labled C in \par
170   *          the dead biomass\par
171   *   (6)   surface = 1 for surface input and 0 for below ground input \par
172   *   (7)   woody =0 for non woody material and\par
173   *        woody =1 for branches\par
174   *        woody =2 for large wood\par
175   *        woody =3 for coarse roots\par
176   * \par
177   *   We also need some environmental variables to evaluate photodegradation of\par
178   *   the standing biomass\par
179   * **********************************************************/\par
180       double temp;\par
181       if(fallrate>1.0) \par
182       \{\par
183         error("Fall rate is greather than 1.0");\par
184       \}\par
185       \par
186       temp=(*stdedbc)*fallrate;  // Find how much litter goes to ground\par
187       (*stdedbc)=(*stdedbc)-temp; // update standing litter\par
188        \par
189        temp=temp*40; // unit conversion for Mg biomass/ha  to gram C/m2 for non woody\par
190       \par
191       INCROCENT->C.totalC =temp;\par
192       INCROCENT->C.unlablTOlabl = isotoperatio;\par
193       INCROCENT->E.CN= E->CN;\par
194       INCROCENT->E.CP= E->CP;\par
195       INCROCENT->E.CS= E->CS;\par
196       INCROCENT->E.CK= E->CK;\par
197       INCROCENT->lignin=lignin;\par
198       INCROCENT->surface=surface;\par
199       INCROCENT->woody=woody;\par
200       return;                                  \par
201 \}\par
}
}
{\xe \v updatecropcentpools\:Auxcropcent.c}
{\xe \v Auxcropcent.c\:updatecropcentpools}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatecropcentpools (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9   double delN, delP, delS,delK;\par
10   double out, in;\par
11   \par
12   delN=0.0;\par
13   delP=0.0;\par
14   delS=0.0;\par
15   delK=0.0;\par
16   CROPCENT->ENV.newminN=0.0;\par
17   CROPCENT->ENV.newminP=0.0;\par
18   CROPCENT->ENV.newminS=0.0;\par
19   CROPCENT->ENV.newminK=0.0;\par
20   \par
21   // updating strucc1 flux [only source is self-negative outflow]\par
22   // step 1: chnage in mineral N of CropCENT layer due to flow from strucc1\par
23   out=(CROPCENT->strucc1.Flux.strucc1TOstrucc1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOstrucc1.E.CN); // This is always negative\par
24   in=(CROPCENT->strucc1.Flux.strucc1TOmetabc1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOmetabc1.E.CN)\par
25       +(CROPCENT->strucc1.Flux.strucc1TOsom1c1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOsom1c1.E.CN)\par
26       +(CROPCENT->strucc1.Flux.strucc1TOsom2c1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOsom2c1.E.CN); // This is always positive\par
27   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
28   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
29   CROPCENT->ENV.newminN+=delN;\par
30   // now update CN ratioi snot required as all outflow CE ratio is same as of source pool\par
31   // finally update C structure of the pool\par
32   updateCarbonStructure(&CROPCENT->strucc1.C, CROPCENT->strucc1.Flux.strucc1TOstrucc1.C);\par
33   updateCarbonStructure(&CROPCENT->metabc1.C, CROPCENT->strucc1.Flux.strucc1TOmetabc1.C);\par
34   updateMineralStructure(&CROPCENT->metabc1.C, &CROPCENT->metabc1.E, CROPCENT->strucc1.Flux.strucc1TOmetabc1.C, CROPCENT->strucc1.Flux.strucc1TOmetabc1.E);\par
35   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->strucc1.Flux.strucc1TOsom1c1.C);\par
36   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->strucc1.Flux.strucc1TOsom1c1.C, CROPCENT->strucc1.Flux.strucc1TOsom1c1.E);\par
37   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->strucc1.Flux.strucc1TOsom2c1.C);\par
38   updateMineralStructure(&CROPCENT->som2c1.C, &CROPCENT->som2c1.E, CROPCENT->strucc1.Flux.strucc1TOsom2c1.C, CROPCENT->strucc1.Flux.strucc1TOsom2c1.E);\par
39 \par
40   // updating strucc2 flux [ only source is self-negative outflow]\par
41   out=(CROPCENT->strucc2.Flux.strucc2TOstrucc2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOstrucc2.E.CN); // This is always negative\par
42   in= (CROPCENT->strucc2.Flux.strucc2TOsom1c2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOsom1c2.E.CN)\par
43       +(CROPCENT->strucc2.Flux.strucc2TOsom2c2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOsom2c2.E.CN); // This is always positive\par
44   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
45   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
46   CROPCENT->ENV.newminN+=delN;\par
47   // now update CN ratio, which does not change because outflow CE is same as CE of pool. Only CE ratio of receiving flux changes\par
48   // finally update C structure of the pool\par
49   updateCarbonStructure(&CROPCENT->strucc2.C, CROPCENT->strucc2.Flux.strucc2TOstrucc2.C);\par
50   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->strucc2.Flux.strucc2TOsom1c2.C);\par
51   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->strucc2.Flux.strucc2TOsom1c2.C, CROPCENT->strucc2.Flux.strucc2TOsom1c2.E);\par
52   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->strucc2.Flux.strucc2TOsom2c2.C);\par
53   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->strucc2.Flux.strucc2TOsom2c2.C, CROPCENT->strucc2.Flux.strucc2TOsom2c2.E);\par
54   \par
55   // updating metabc1 flux [source is self -negative outflow and from strucc1]\par
56   out=(CROPCENT->metabc1.Flux.metabc1TOmetabc1.C.totalC)/(CROPCENT->metabc1.Flux.metabc1TOmetabc1.E.CN); \par
57   in=(CROPCENT->metabc1.Flux.metabc1TOsom1c1.C.totalC)/(CROPCENT->metabc1.Flux.metabc1TOsom1c1.E.CN); \par
58   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
59   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
60   CROPCENT->ENV.newminN+=delN;\par
61   updateCarbonStructure(&CROPCENT->metabc1.C, CROPCENT->metabc1.Flux.metabc1TOmetabc1.C);\par
62   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->metabc1.Flux.metabc1TOsom1c1.C);\par
63   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->metabc1.Flux.metabc1TOsom1c1.C, CROPCENT->metabc1.Flux.metabc1TOsom1c1.E);\par
64   \par
65   // updating metabc2 flux [source is self -negative outflow and from strucc1]\par
66   out=(CROPCENT->metabc2.Flux.metabc2TOmetabc2.C.totalC)/(CROPCENT->metabc2.Flux.metabc2TOmetabc2.E.CN); \par
67   in=(CROPCENT->metabc2.Flux.metabc2TOsom1c2.C.totalC)/(CROPCENT->metabc2.Flux.metabc2TOsom1c2.E.CN); \par
68   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
69   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
70   CROPCENT->ENV.newminN+=delN;\par
71   updateCarbonStructure(&CROPCENT->metabc2.C, CROPCENT->metabc2.Flux.metabc2TOmetabc2.C);\par
72   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->metabc2.Flux.metabc2TOsom1c2.C);\par
73   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->metabc2.Flux.metabc2TOsom1c2.C, CROPCENT->metabc2.Flux.metabc2TOsom1c2.E);\par
74   \par
75   // updating som1c1 Fluxes\par
76   out=(CROPCENT->som1c1.Flux.som1c1TOsom1c1.C.totalC)/(CROPCENT->som1c1.Flux.som1c1TOsom1c1.E.CN); \par
77   in=(CROPCENT->som1c1.Flux.som1c1TOsom2c1.C.totalC)/(CROPCENT->som1c1.Flux.som1c1TOsom2c1.E.CN); \par
78   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
79   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
80   CROPCENT->ENV.newminN+=delN;\par
81   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->som1c1.Flux.som1c1TOsom1c1.C);\par
82   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->som1c1.Flux.som1c1TOsom2c1.C);\par
83   updateMineralStructure(&CROPCENT->som2c1.C, &CROPCENT->som2c1.E, CROPCENT->som1c1.Flux.som1c1TOsom2c1.C, CROPCENT->som1c1.Flux.som1c1TOsom2c1.E);\par
84   \par
85   \par
86   // updating som2c1 Fluxes\par
87   out=(CROPCENT->som2c1.Flux.som2c1TOsom2c1.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom2c1.E.CN); \par
88   in=(CROPCENT->som2c1.Flux.som2c1TOsom1c1.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom1c1.E.CN)\par
89     +(CROPCENT->som2c1.Flux.som2c1TOsom2c2.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom2c2.E.CN); \par
90   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
91   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
92   CROPCENT->ENV.newminN+=delN;\par
93   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->som2c1.Flux.som2c1TOsom2c1.C);\par
94   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->som2c1.Flux.som2c1TOsom1c1.C);\par
95   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->som2c1.Flux.som2c1TOsom1c1.C, CROPCENT->som2c1.Flux.som2c1TOsom1c1.E);\par
96   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c1.Flux.som2c1TOsom2c2.C);\par
97   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som2c1.Flux.som2c1TOsom2c2.C, CROPCENT->som2c1.Flux.som2c1TOsom2c2.E);\par
98   \par
99   \par
100   // updating som1c2 Fluxes\par
101   out=(CROPCENT->som1c2.Flux.som1c2TOsom1c2.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom1c2.E.CN); \par
102   in=(CROPCENT->som1c2.Flux.som1c2TOsom2c2.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom2c2.E.CN)\par
103     +(CROPCENT->som1c2.Flux.som1c2TOsom3c.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom3c.E.CN)\par
104     +(CROPCENT->som1c2.Flux.som1c2TOleachate.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOleachate.E.CN);\par
105   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
106   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
107   CROPCENT->ENV.newminN+=delN;\par
108   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som1c2.Flux.som1c2TOsom1c2.C);\par
109   // remember here we need to modify CN ratio of the som1c2 pool because CN ratio of leachate loss is much larger\par
110   // This modified ratio can be obtained in th below function\par
111   updateCEafterleachate(&CROPCENT->som1c2);\par
112  \par
113   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som1c2.Flux.som1c2TOsom2c2.C);\par
114   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som1c2.Flux.som1c2TOsom2c2.C, CROPCENT->som1c2.Flux.som1c2TOsom2c2.E);\par
115    \par
116   updateCarbonStructure(&CROPCENT->som3c.C, CROPCENT->som1c2.Flux.som1c2TOsom3c.C);\par
117   updateMineralStructure(&CROPCENT->som3c.C, &CROPCENT->som3c.E, CROPCENT->som1c2.Flux.som1c2TOsom3c.C, CROPCENT->som1c2.Flux.som1c2TOsom3c.E);\par
118   \par
119   \par
120   // updating som2c2 Fluxes\par
121   out=(CROPCENT->som2c2.Flux.som2c2TOsom2c2.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom2c2.E.CN); \par
122   in=(CROPCENT->som2c2.Flux.som2c2TOsom3c.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom3c.E.CN)\par
123     +(CROPCENT->som2c2.Flux.som2c2TOsom1c2.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom1c2.E.CN); \par
124   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
125   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
126   CROPCENT->ENV.newminN+=delN;\par
127   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c2.Flux.som2c2TOsom2c2.C);\par
128   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som2c2.Flux.som2c2TOsom1c2.C);\par
129   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->som2c2.Flux.som2c2TOsom1c2.C, CROPCENT->som2c2.Flux.som2c2TOsom1c2.E);\par
130   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c2.Flux.som2c2TOsom3c.C);\par
131   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som2c2.Flux.som2c2TOsom3c.C, CROPCENT->som2c2.Flux.som2c2TOsom3c.E);\par
132  \par
133  // updating som3c Fluxes\par
134   out=(CROPCENT->som3c.Flux.som3cTOsom3c.C.totalC)/(CROPCENT->som3c.Flux.som3cTOsom3c.E.CN); \par
135   in=(CROPCENT->som3c.Flux.som3cTOsom1c2.C.totalC)/(CROPCENT->som3c.Flux.som3cTOsom1c2.E.CN);\par
136    \par
137   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
138   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
139   CROPCENT->ENV.newminN+=delN;\par
140   updateCarbonStructure(&CROPCENT->som3c.C, CROPCENT->som3c.Flux.som3cTOsom3c.C);\par
141   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som3c.Flux.som3cTOsom1c2.C);\par
142   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->som3c.Flux.som3cTOsom1c2.C, CROPCENT->som3c.Flux.som3cTOsom1c2.E);\par
143   \par
144   CROPCENT->ENV.newminN=(-1)*CROPCENT->ENV.newminN; // Because negative value represents mineralization and net mineralization is postiive for trace gas calculations\par
145   return;\par
146 \}\par
}
}
{\xe \v UpdateCropcentPoolsFromBioCro\:Auxcropcent.c}
{\xe \v Auxcropcent.c\:UpdateCropcentPoolsFromBioCro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateCropcentPoolsFromBioCro (struct {\b cropcentlayer} * {\i CROPCENT}, struct {\b InputToCropcent} * {\i INCROPCENT})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxCropGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxCropGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/AuxCropGro.c}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for AuxCropGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_aux_crop_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createNULLmiscanthus} (struct {\b miscanthus} *{\b miscanthus}, int vecsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThermaltime} (double temp, double Tbase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThermalSenescence} (double criticalTT, double currentTT, double biomass, double dailyfractionalloss)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getFrostdamage} (double T0, double T100, double T, double biomass)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b canopyNsenescence} (struct {\b leaf} *{\b leaf}, double SLA, double kN, double leafNsen)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getLeafSenescence} (struct {\b leaf} *{\b leaf}, double criticalTT, double senefraction, double Temp, struct {\b frostParms} *frostparms, double TT, struct {\b canopyparms} *canopyparm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getStemSenescence} (struct {\b stem} *{\b stem}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getRootSenescence} (struct {\b root} *{\b root}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getRhizomeSenescence} (struct {\b rhizome} *{\b rhizome}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatedailyvec} (struct {\b dailyvec} *{\b dailyvec}, double {\b newbiomass}, double newlitter, int N, double delTT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatebiomass} (double *res, double toadd, double toremove)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newbiomass} (double AcanopyNet, double k, double GrowthRespCoeff)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getfrostparms} (struct {\b frostParms} *frostparms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getsenescenceparms} (struct {\b senthermaltemp} *senparms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculateGrowthResp} (double {\b newbiomass}, double growthRespCoeff)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailymiscanthus} (struct {\b miscanthus} *{\b miscanthus}, double coefs[25], double TherPrds[6], double TherTime, double Temp, double dailynetassim, struct {\b senthermaltemp} *senparms, struct {\b canopyparms} *{\b canopyparms}, struct {\b frostParms} *frostparms, int N, double delTT, struct {\b respirationParms} *RESP, int emergence)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingbiomass} (double *standing, double {\b newbiomass})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingLeaf} (struct {\b leaf} *{\b leaf}, double {\b newbiomass}, double deadleaf, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingStem} (struct {\b stem} *{\b stem}, double {\b newbiomass}, double deadstem, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingRoot} (struct {\b root} *{\b root}, double {\b newbiomass}, double deadroot, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingRhizome} (struct {\b rhizome} *{\b rhizome}, double {\b newbiomass}, double deadrhizome, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CheckEmergence} (struct {\b dailyclimate} *{\b dailyclimate}, double EmergTemperature)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getdailyclimate} (struct {\b dailyclimate} *{\b dailyclimate}, int *doy, double *solar, double *temp, double *rh, double *windspeed, double *precip, int currenthour, int vecsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailymiscanthusupdate} (struct {\b miscanthus} *{\b miscanthus}, struct {\b miscanthus} *deltamiscanthus)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatedormantstage} (struct {\b miscanthus} *{\b miscanthus})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CalculateGrowthResp\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:CalculateGrowthResp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CalculateGrowthResp (double {\i newbiomass}, double {\i growthRespCoeff})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 457 \{\par
458   double tmp;\par
459   tmp=(newbiomass>0.0)?newbiomass*growthRespCoeff:0.0;\par
460   return(tmp);\par
461 \}\par
}
}
{\xe \v canopyNsenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:canopyNsenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double canopyNsenescence (struct {\b leaf} * {\i leaf}, double {\i SLA}, double {\i kN}, double {\i leafNsen})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 263 \{\par
264   /*****************************************************\par
265    * Purpose:\par
266    * \par
267    * Purpose of this function is to calculate additional N senescence due to N deficiency\par
268    * It uses current value of average canopy N, use this and an exponential coefficient to\par
269    * determine vertical distribution of leaf N canopy.\par
270    * If this vertical distrbution results in leaf N of lower canopy which is less than a threshold value\par
271    *  then an leaf biomass (equivalent to LAI which is having lower than threshold leaf N conc.) is senesced\par
272    * Input\par
273    * leaf: pointer to leaf structure\par
274    * SLA: specific leaf area (in ha/Mg)\par
275    * kN:  coefficient determining exponentially declining leaf N conc (dimensionless)\par
276    * leafNsen: any leaf with leaf N conc lower than leafNsen will be senesced (mmol N m-2)\par
277    * Output/return\par
278    * Senesced leaf biomass (Mg/ha)\par
279    * ***************************************************/\par
280   double tmp;\par
281   double laimax,laicurrent;\par
282   double leafN;\par
283   leafN=leaf->biomassE.CN;\par
284   laimax=(1/kN)*log(1+(kN*leafN/leafNsen));\par
285   laicurrent=leaf->biomass*SLA;\par
286   if(laicurrent<=laimax)\par
287   \{\par
288     tmp=0.0;\par
289   \}\par
290   else\par
291   \{\par
292     tmp=(laicurrent-laimax)/SLA;\par
293   \}\par
294   return(tmp);\par
295 \}\par
}
}
{\xe \v CheckEmergence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:CheckEmergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CheckEmergence (struct {\b dailyclimate} * {\i dailyclimate}, double {\i EmergTemperature})}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 674 \{\par
675   int flag;\par
676   if(((dailyclimate->minimumTemp)>EmergTemperature)&&((dailyclimate->doy)>90)&&((dailyclimate->doy)<270))\{\par
677     flag =1;\par
678   \}\par
679   else\par
680   \{\par
681     flag = 0;\par
682   \}\par
683   return(flag);\par
684 \}\par
}
}
{\xe \v createNULLmiscanthus\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:createNULLmiscanthus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createNULLmiscanthus (struct {\b miscanthus} * {\i miscanthus}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13    int i;\par
14    miscanthus->leafvec=malloc((vecsize+1)*sizeof(*miscanthus->leafvec));\par
15    miscanthus->stemvec=malloc((vecsize+1)*sizeof(*miscanthus->stemvec));\par
16    miscanthus->rootvec=malloc((vecsize+1)*sizeof(*miscanthus->rootvec));\par
17    miscanthus->rhizomevec=malloc((vecsize+1)*sizeof(*miscanthus->rhizomevec));\par
18   \par
19    for (i = 0; i<=vecsize;i++)\par
20    \{\par
21       miscanthus->leafvec[i].newbiomass=0.0;\par
22       miscanthus->leafvec[i].newlitter=0.0;\par
23        miscanthus->leafvec[i].ageinTT=0.0;\par
24        miscanthus->stemvec[i].newbiomass=0.0;\par
25       miscanthus->stemvec[i].newlitter=0.0;\par
26        miscanthus->stemvec[i].ageinTT=0.0;\par
27        miscanthus->rootvec[i].newbiomass=0.0;\par
28       miscanthus->rootvec[i].newlitter=0.0;\par
29        miscanthus->rootvec[i].ageinTT=0.0;\par
30        miscanthus->rhizomevec[i].newbiomass=0.0;\par
31       miscanthus->rhizomevec[i].newlitter=0.0;\par
32        miscanthus->rhizomevec[i].ageinTT=0.0;\par
33        \par
34    \}\par
35    \par
36    miscanthus->leaf.biomass=0.0;\par
37    miscanthus->stem.biomass=0.0;\par
38    miscanthus->root.biomass=0.0;\par
39    miscanthus->rhizome.biomass=0.0;\par
40    miscanthus->leaf.litter=0.0;\par
41    miscanthus->stem.litter=0.0;\par
42    miscanthus->root.litter=0.0;\par
43    miscanthus->rhizome.litter=0.0;\par
44    miscanthus->rhizome.carbohydratefraction=0.6; // Lets assume that in the beginning carbohydrate fraction of dry biomass is  60%\par
45    return;\par
46 \}\par
}
}
{\xe \v dailymiscanthus\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:dailymiscanthus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailymiscanthus (struct {\b miscanthus} * {\i miscanthus}, double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime}, double {\i Temp}, double {\i dailynetassim}, struct {\b senthermaltemp} * {\i senparms}, struct {\b canopyparms} * {\i canopyparms}, struct {\b frostParms} * {\i frostparms}, int {\i N}, double {\i delTT}, struct {\b respirationParms} * {\i RESP}, int {\i emergence})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 467 \{\par
468 \par
469   double remobStem,remobRoot,remobRhiz;\par
470   remobStem=canopyparms->remobFac;\par
471   remobRoot=canopyparms->remobFac;\par
472   remobRhiz=canopyparms->remobFac;\par
473   double deadleaf,deadstem,deadroot,deadrhiz;\par
474   double dailysenesced;\par
475   double remobilized;\par
476   double totalassimilate;\par
477   struct crop_phenology cropdbp;\par
478   double newleaf,newstem,newrhiz,newroot;\par
479   double kLeaf,kStem,kRoot,kRhizome;\par
480   double newLeaf,newStem,newRhizome,newRoot;\par
481   double newLeaflitter,newStemlitter,newRhizomelitter,newRootlitter;\par
482   double totalmaintenance;\par
483   double RemobilizedFromLitter,RemobilizedFromRhizome;\par
484   double SumofKpart,Dailybalance;\par
485 \par
486 // double getStemSenescence(struct stem *stem, struct littervec *littervec, double criticalTT, double Temp, double remobfa, struct frostParms *frostparms, int N)\par
487  // calculate senescing biomass for today based on Thermal Time, N conce. and Frost conditions \par
488  \par
489    getfrostparms(frostparms);\par
490    getsenescenceparms(senparms);\par
491    \par
492    \par
493    if(emergence ==1)\par
494    \{\par
495           cropcent_dbp(coefs,TherPrds,TherTime, &cropdbp);\par
496           kLeaf = cropdbp.DBP.kLeaf;\par
497           kStem = cropdbp.DBP.kStem;\par
498           kRoot = cropdbp.DBP.kRoot;\par
499           kRhizome = cropdbp.DBP.kRhiz;\par
500 \par
501            // calculate senescence, Remobilization due to senescece will contribute to growth of new plant organs\par
502           deadleaf=getLeafSenescence(&miscanthus->leaf,senparms->leafcriticalT,senparms->leaffr, Temp, frostparms,TherTime,canopyparms);\par
503           deadstem=getStemSenescence(&miscanthus->stem,senparms->stemcriticalT,senparms->stemfr, Temp, frostparms,TherTime);\par
504           deadroot=getRootSenescence(&miscanthus->root, senparms->rootcriticalT,senparms->rootfr, Temp, frostparms,TherTime);\par
505           deadrhiz=getRhizomeSenescence(&miscanthus->rhizome,senparms->rhizomecriticalT,senparms->rhizomefr, Temp, frostparms,TherTime);    \par
506           dailysenesced=deadleaf+deadstem+deadroot+deadrhiz;\par
507           //Calculate how much of dead biomass is remobilized based on a remobilization factor\par
508           RemobilizedFromLitter = dailysenesced*canopyparms->remobFac; // assuming all the dead organs remobilizes same fraction\par
509          \par
510          // Check and calculate whether carbohydrate in Rhizome is being remobilized baksed on K(negative value of partitioning coefficient)\par
511          if(kRhizome>=0)\par
512           \{\par
513             RemobilizedFromRhizome=0;          \par
514           \}\par
515           else\par
516           \{\par
517             // I need to multiply by (-1) because kRhizome is negative\par
518             RemobilizedFromRhizome=(-1)*kRhizome*miscanthus->rhizome.biomass;\par
519           \}\par
520           \par
521           // Total maintenance respiration, which is a temperature dependet function of existing biomass\par
522           totalmaintenance=miscanthus->autoresp.stemmaint+miscanthus->autoresp.rootmaint+miscanthus->autoresp.rhizomemaint;\par
523           // Total assimilate includes net canopy assimilation and remobilization from litter and rhizome, also it must satisfy total maintenance respiration\par
524           totalassimilate=dailynetassim+RemobilizedFromLitter+RemobilizedFromRhizome-totalmaintenance;\par
525           \par
526           // If total assimilate for growth (& growth respiration) is negative then this is provided by rhizome only (storage carb.) leaving other parts intacts\par
527           if(totalassimilate<=0.0)\par
528           \{\par
529           newLeaf=0.0;\par
530           miscanthus->autoresp.stemgrowth=0.0;\par
531           newStem=0.0;\par
532           miscanthus->autoresp.rootgrowth=0.0;\par
533           newRoot=0.0;\par
534           miscanthus->autoresp.rhizomegrowth=0.0;\par
535           // New rhizome must provide for total negative assimilate. Also we need to update remobilization\par
536           newRhizome=totalassimilate+RemobilizedFromRhizome;\par
537           miscanthus->autoresp.rhizomegrowth=0.0;\par
538           \}\par
539           else\par
540           \{\par
541           SumofKpart=((kLeaf>0)?kLeaf:0)+((kStem>0)?kStem:0)+((kRoot>0)?kRoot:0)+((kRhizome>0)?kRhizome:0);\par
542             if(SumofKpart!=1)\par
543             \{\par
544             error("Sum of Positive partitioning coefficient is not one");\par
545             \}\par
546           newLeaf=newbiomass(totalassimilate,kLeaf,0.0);          \par
547           newStem=newbiomass(totalassimilate,kStem,RESP->growth.stem);\par
548           miscanthus->autoresp.stemgrowth=CalculateGrowthResp(newStem,RESP->growth.stem);\par
549           newRoot=newbiomass(totalassimilate,kRoot,RESP->growth.root);\par
550           miscanthus->autoresp.rootgrowth=CalculateGrowthResp(newRoot,RESP->growth.stem);\par
551           // Make sure that remobilization termis taken care of in the calculation of newRhizome\par
552           newRhizome=(kRhizome>0)?newbiomass(totalassimilate,kRhizome,RESP->growth.rhizome):(-1)*RemobilizedFromRhizome;\par
553           \par
554           miscanthus->autoresp.rhizomegrowth=CalculateGrowthResp(newRhizome,RESP->growth.stem);\par
555           \}\par
556            \par
557          // Now we know growth respiration of each component & we can update total autotrophic respiration\par
558           miscanthus->autoresp.total=miscanthus->autoresp.leafdarkresp+totalmaintenance+miscanthus->autoresp.stemgrowth+miscanthus->autoresp.rootgrowth+miscanthus->autoresp.rhizomegrowth;\par
559          // Here, we are updating net primary productivity\par
560          miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
561           \par
562         // Here, we are evaluating new litter, This is fraction of dead biomass which was not remobilized  \par
563           newLeaflitter=(deadleaf>0)?deadleaf*(1-canopyparms->remobFac):0.0;\par
564           newStemlitter=(deadleaf>0)?deadstem*(1-canopyparms->remobFac):0.0;\par
565           newRootlitter=(deadroot>0)?deadroot*(1-canopyparms->remobFac):0.0;\par
566           newRhizomelitter=(deadrhiz>0)?deadrhiz*(1-canopyparms->remobFac):0.0;\par
567           \par
568 \par
569           Dailybalance=newLeaf- deadleaf+newRoot- deadroot+newStem- deadstem+newRhizome- deadrhiz+newLeaflitter+newStemlitter+newRootlitter + newRhizomelitter;\par
570          Dailybalance=Dailybalance-miscanthus->NPP;\par
571          if(Dailybalance>1e-10)\par
572           \{\par
573           Rprintf("\\nNPP and Daily Change inBiomass is not matching & difference is %f\\n", Dailybalance);\par
574           Rprintf("Thermal Time = %f, GPP = %f, Autotrophic Respiration = %f, NPP = %f, Remobilized from Litter = %f, Remobilized from Rhizome = %f \\n", TherTime,miscanthus->GPP, miscanthus->autoresp.total,miscanthus->NPP,RemobilizedFromLitter,RemobilizedFromRhizome);\par
575           Rprintf("kLeaf=%f, kstem=%f, kRoot=%f, kRhizome=%f \\n", kLeaf, kStem, kRoot,kRhizome);\par
576           Rprintf("NewLeaf = %f Dead Leaf=%f, newLeafLitter=%f\\n",newLeaf, deadleaf,newLeaflitter); \par
577           Rprintf("NewStem = %f Dead Stem=%f, newStemLitter=%f\\n",newStem, deadstem,newStemlitter);\par
578           Rprintf("NewRoot = %f Dead Root=%f, newRootLitter=%f\\n",newRoot, deadroot,newRootlitter);\par
579           Rprintf("NewRhizome = %f Dead Rhizome=%f, newRhizomeLitter=%f\\n",newRhizome, deadrhiz,newRhizomelitter);\par
580           Rprintf("LeafDarkResp=%f, Total maintenance (ExceptLeaf) = %f, StemGrowthResp=%f, RootGrowthResp=%f, RhizGrowthResp=%f\\n",miscanthus->autoresp.leafdarkresp,totalmaintenance,miscanthus->autoresp.stemgrowth,miscanthus->autoresp.rootgrowth,miscanthus->autoresp.rhizomegrowth);\par
581               Rprintf("Daily Biomas Balance Gain = %f", Dailybalance);\par
582               Rprintf("--------Emergence= %i-, N= %i---------------------\\n",emergence, N);\par
583           \}\par
584 \par
585           // Adding new biomass of green components\par
586           UpdateStandingbiomass(&miscanthus->leaf.biomass, newLeaf);\par
587           UpdateStandingbiomass(&miscanthus->stem.biomass, newStem);\par
588           UpdateStandingbiomass(&miscanthus->root.biomass, newRoot);\par
589           UpdateStandingbiomass(&miscanthus->rhizome.biomass, newRhizome);\par
590           \par
591           // Subtracting dead biomass from the green components\par
592           // before thant I must multiply all the dead leaf components by -1, so I can still use \par
593           // Updatestandingbiomass function for SUBTRACTING instead of ADDING\par
594           \par
595           deadleaf*=(-1);\par
596           deadstem*=(-1);\par
597           deadroot*=(-1);\par
598           deadrhiz*=(-1);\par
599           \par
600           UpdateStandingbiomass(&miscanthus->leaf.biomass, deadleaf);\par
601           UpdateStandingbiomass(&miscanthus->stem.biomass, deadstem);\par
602           UpdateStandingbiomass(&miscanthus->root.biomass, deadroot);\par
603           UpdateStandingbiomass(&miscanthus->rhizome.biomass, deadrhiz);\par
604           \par
605           \par
606           // Updating standing biomass of litter  components\par
607           UpdateStandingbiomass(&miscanthus->leaf.litter, newLeaflitter);\par
608           UpdateStandingbiomass(&miscanthus->stem.litter, newStemlitter);\par
609           UpdateStandingbiomass(&miscanthus->root.litter, newRootlitter);\par
610           UpdateStandingbiomass(&miscanthus->rhizome.litter, newRhizomelitter);\par
611           \par
612         \par
613           \par
614    \}\par
615    else // Dormant stange simulation, where rhizome provides for respiration loss\par
616    \{\par
617           miscanthus->stem.biomass=0.0;\par
618           miscanthus->autoresp.stemgrowth=0;\par
619           miscanthus->leaf.biomass=0.0;\par
620           miscanthus->autoresp.leafdarkresp=0.0;\par
621           \par
622           //Perhaps I can implement senescence rate of belowground components during dormant stage?\par
623 //          miscanthus->root.biomass=0.0;\par
624           miscanthus->autoresp.rootgrowth=0;\par
625 //          miscanthus->rhizome.biomass=0.0;\par
626           miscanthus->autoresp.rhizomegrowth=0;\par
627           \par
628           totalmaintenance=miscanthus->autoresp.stemmaint+miscanthus->autoresp.rootmaint+miscanthus->autoresp.rhizomemaint;\par
629           miscanthus->autoresp.total=miscanthus->autoresp.leafdarkresp+totalmaintenance+miscanthus->autoresp.stemgrowth+miscanthus->autoresp.rootgrowth+miscanthus->autoresp.rhizomegrowth;\par
630           miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
631           newRhizome=(-1)* miscanthus->autoresp.total;\par
632           UpdateStandingbiomass(&miscanthus->rhizome.biomass, newRhizome);\par
633           if(miscanthus->rhizome.biomass <0)error("rhizome has become negative");\par
634    \} \par
635     return;\par
636 \}\par
}
}
{\xe \v dailymiscanthusupdate\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:dailymiscanthusupdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailymiscanthusupdate (struct {\b miscanthus} * {\i miscanthus}, struct {\b miscanthus} * {\i deltamiscanthus})}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 730 \{\par
731   double toadd,toremove;\par
732   \par
733   toadd=deltamiscanthus->leaf.biomass;\par
734   toremove=deltamiscanthus->leaf.litter;\par
735   updatebiomass(&miscanthus->leaf.biomass,toadd,toremove);\par
736   updatebiomass(&miscanthus->leaf.litter,toremove,0.0);\par
737   \par
738   toadd=deltamiscanthus->stem.biomass;\par
739   toremove=deltamiscanthus->stem.litter;\par
740   updatebiomass(&miscanthus->stem.biomass,toadd,toremove);\par
741   updatebiomass(&miscanthus->stem.litter,toremove,0.0);\par
742   \par
743   toadd=deltamiscanthus->root.biomass;\par
744   toremove=deltamiscanthus->root.litter;\par
745   updatebiomass(&miscanthus->root.biomass,toadd,toremove);\par
746   updatebiomass(&miscanthus->root.litter,toremove,0.0);\par
747   \par
748   toadd=deltamiscanthus->rhizome.biomass;\par
749   toremove=deltamiscanthus->rhizome.litter;\par
750   updatebiomass(&miscanthus->rhizome.biomass,toadd,toremove);\par
751   updatebiomass(&miscanthus->rhizome.litter,toremove,0.0);\par
752    return;\par
753 \}\par
}
}
{\xe \v getdailyclimate\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getdailyclimate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getdailyclimate (struct {\b dailyclimate} * {\i dailyclimate}, int * {\i doy}, double * {\i solar}, double * {\i temp}, double * {\i rh}, double * {\i windspeed}, double * {\i precip}, int {\i currenthour}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 688 \{\par
689   //For the first hour after planting\par
690   int i,indx;\par
691   if ((currenthour==0)||(currenthour==vecsize))\par
692       \{\par
693          dailyclimate->doy=*(doy+currenthour);\par
694          dailyclimate->solar=*(solar+currenthour);\par
695          dailyclimate->temp=*(temp+currenthour);\par
696          dailyclimate->rh=*(rh+currenthour);\par
697          dailyclimate->windspeed=*(windspeed+currenthour);\par
698          dailyclimate->precip=*(precip+currenthour);\par
699          dailyclimate->minimumTemp=*(temp+currenthour);\par
700       \}\par
701    else\par
702       \{\par
703         dailyclimate->solar=0.0;\par
704         dailyclimate->temp=0.0;\par
705         dailyclimate->minimumTemp=*(temp+currenthour);\par
706         dailyclimate->rh=0.0;\par
707         dailyclimate->windspeed=0.0;\par
708         dailyclimate->precip=0.0;\par
709           for(i=1;i<=24;i++)\par
710             \{\par
711               indx = currenthour-i+1;      \par
712               dailyclimate->solar+=*(solar+indx);\par
713               dailyclimate->temp+=*(temp+indx);\par
714               dailyclimate->rh+=*(rh+indx);\par
715               dailyclimate->windspeed+=*(windspeed+indx);\par
716               dailyclimate->precip+=*(precip+indx);\par
717               dailyclimate->minimumTemp=(dailyclimate->minimumTemp>(*(temp+indx)))?(*(temp+indx)):dailyclimate->minimumTemp;\par
718             \}\par
719             dailyclimate->solar=dailyclimate->solar/24.0;\par
720             dailyclimate->temp=dailyclimate->temp/24.0;\par
721             dailyclimate->rh=dailyclimate->rh/24.0;\par
722             dailyclimate->windspeed= dailyclimate->windspeed/24.0;\par
723             dailyclimate->doy=*(doy+currenthour);\par
724       \}\par
725      return;     \par
726 \}\par
}
}
{\xe \v getFrostdamage\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getFrostdamage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getFrostdamage (double {\i T0}, double {\i T100}, double {\i T}, double {\i biomass})}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241 \{\par
242    /*************************************\par
243    * Purpose\par
244    * To calculate senescence as a fraction of exisiting biomass due to frost\par
245    * Input:\par
246    * T0: This is maximum temperature when frost damage occurs, This also represent Temperature \par
247    * damage will be zero percentage of exisiting biomass\par
248    * T100: This is minimum temperature where all the existing biomass senescee (i.e. 100% senescence)\par
249    * biomass: Exisiting biomass\par
250    *\par
251    * Output:\par
252    * \par
253    * Returns senesced biomass\par
254    * \par
255    * **********************************/\par
256   double temp,fraction;\par
257   fraction = (T0-T)/(T0-T100);\par
258   temp = fraction>1.0? 1.0:(fraction <0.0? 0.0:fraction);\par
259   return(temp*biomass);\par
260 \}\par
}
}
{\xe \v getfrostparms\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getfrostparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getfrostparms (struct {\b frostParms} * {\i frostparms})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 431 \{\par
432    frostparms->leafT0=0.0;\par
433    frostparms->leafT100=-5.0;\par
434    frostparms->stemT0=0.0;\par
435    frostparms->stemT100=-10.0;\par
436    frostparms->rootT0=-200.0;\par
437    frostparms->rootT100=-200.0;\par
438    frostparms->rhizomeT0=-200.0;\par
439    frostparms->rhizomeT100=-200.0;\par
440    return;\par
441 \}\par
}
}
{\xe \v getLeafSenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getLeafSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getLeafSenescence (struct {\b leaf} * {\i leaf}, double {\i criticalTT}, double {\i senefraction}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT}, struct {\b canopyparms} * {\i canopyparm})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 299 \{\par
300   /******************************************************\par
301    * Purpose:\par
302    * This function calculates Leaf Senescence\par
303    * \par
304    * Input Arguments:\par
305    * stem : is a pointer to stem structure\par
306    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
307    * Temp: minimum daily temperature\par
308    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
309    * TT: is current [daily] value of accumutaed thermal time\par
310    * \par
311    * Output/Returns\par
312    * Biomass  to be semesced due to aging (thermal time) and frost, together\par
313    * ****************************************************/\par
314   double ttsen, frostsen, Nsen;\par
315   double totalsen;\par
316   Nsen=0.0;\par
317   ttsen=getThermalSenescence(criticalTT,TT,leaf->biomass,senefraction);\par
318 //  Rprintf("TSEN=%f,critcalT=%f, TT=%f, biomass=%f, senfraction=%f \\n",ttsen,criticalTT, TT,leaf->biomass,senefraction);\par
319   frostsen=getFrostdamage(frostparms->leafT0,frostparms->leafT100, Temp,leaf->biomass);\par
320   // Nsen=canopyNsenescence(leaf, canopyparm->SLA, canopyparm->kN,canopyparm->leafNsen);\par
321   totalsen=ttsen+frostsen+Nsen;\par
322   totalsen= (totalsen>(leaf->biomass))?(leaf->biomass):totalsen;\par
323   return(totalsen);\par
324 \}\par
}
}
{\xe \v getRhizomeSenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getRhizomeSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getRhizomeSenescence (struct {\b rhizome} * {\i rhizome}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 379 \{\par
380   /******************************************************\par
381    * Purpose:\par
382    * This function calculates Root Senescence\par
383    * \par
384    * Input Arguments:\par
385    * stem : is a pointer to stem structure\par
386    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
387    * Temp: minimum daily temperature\par
388    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
389    * TT: is current [daily] value of accumutaed thermal time\par
390    * \par
391    * Output/Returns\par
392    * Biomass  to be senesced due to aging (thermal time) and frost, together\par
393    * ****************************************************/\par
394   double ttsen, frostsen;\par
395   double totalsen;\par
396   frostsen=0.0;\par
397   ttsen=getThermalSenescence(criticalTT,TT,rhizome->biomass,senefracion);\par
398   frostsen=getFrostdamage(frostparms->rhizomeT0, frostparms->rhizomeT100, Temp,rhizome->biomass);\par
399   totalsen=ttsen+frostsen;\par
400   totalsen= (totalsen>(rhizome->biomass))?(rhizome->biomass):totalsen;\par
401   return(totalsen);\par
402 \}\par
}
}
{\xe \v getRootSenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getRootSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getRootSenescence (struct {\b root} * {\i root}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353 \{\par
354   /******************************************************\par
355    * Purpose:\par
356    * This function calculates Root Senescence\par
357    * \par
358    * Input Arguments:\par
359    * stem : is a pointer to stem structure\par
360    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
361    * Temp: minimum daily temperature\par
362    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
363    * TT: is current [daily] value of accumutaed thermal time\par
364    * \par
365    * Output/Returns\par
366    * Biomassto be semesced due to aging (thermal time) and frost, together\par
367    * ****************************************************/\par
368   double ttsen, frostsen;\par
369   double totalsen;\par
370   frostsen=0.0;\par
371   ttsen=getThermalSenescence(criticalTT,TT,root->biomass,senefracion);\par
372   frostsen=getFrostdamage(frostparms->rootT0, frostparms->rootT100, Temp,root->biomass);\par
373   totalsen=ttsen+frostsen;\par
374   totalsen= (totalsen>(root->biomass))?(root->biomass):totalsen;\par
375   return(totalsen);\par
376 \}\par
}
}
{\xe \v getsenescenceparms\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getsenescenceparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getsenescenceparms (struct {\b senthermaltemp} * {\i senparms})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 443 \{\par
444     senparms->leafcriticalT = 3600;\par
445     senparms->leaffr=0.05;\par
446     senparms->stemcriticalT = 3600;\par
447     senparms->stemfr=0.02;\par
448     senparms->rootcriticalT = 3600;\par
449     senparms->rootfr=0.05;\par
450     senparms->rhizomecriticalT = 3600;\par
451     senparms->rhizomefr=0.001;\par
452   return;\par
453 \}\par
}
}
{\xe \v getStemSenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getStemSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getStemSenescence (struct {\b stem} * {\i stem}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327 \{\par
328   /******************************************************\par
329    * Purpose:\par
330    * This function calculates Stem Senescence\par
331    * \par
332    * Input Arguments:\par
333    * stem : is a pointer to stem structure\par
334    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
335    * Temp: minimum daily temperature\par
336    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
337    * TT: is current [daily] value of accumutaed thermal time\par
338    * \par
339    * Output/Returns\par
340    * Biomass to be semesced due to aging (thermal time) and frost, together\par
341    * ****************************************************/\par
342   double ttsen, frostsen;\par
343   double totalsen;\par
344   frostsen=0.0;\par
345   ttsen=getThermalSenescence(criticalTT,TT,stem->biomass,senefracion);\par
346   frostsen=getFrostdamage(frostparms->stemT0, frostparms->stemT100, Temp,stem->biomass);\par
347   totalsen=ttsen+frostsen;\par
348   totalsen= (totalsen>(stem->biomass))?(stem->biomass):totalsen;\par
349   return(totalsen);\par
350 \}\par
}
}
{\xe \v getThermalSenescence\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getThermalSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getThermalSenescence (double {\i criticalTT}, double {\i currentTT}, double {\i biomass}, double {\i dailyfractionalloss})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214 \{\par
215   /*************************************\par
216    * Purpose\par
217    * To calculate senescence as a constant fraction of exisiting biomass after a critical threshold temperature\par
218    * Input:\par
219    * criticalTT: This is critical Thermal temperature, beyond which senescence begins\par
220    * currentTT: Current thermal TT or phenological stage\par
221    * biomass: Exisiting biomass\par
222    * dailyfractionalloss: Fraction of biomass which will be lost\par
223    * Output:\par
224    * \par
225    * Returns senesced biomass\par
226    * \par
227    * **********************************/\par
228    double tmp;\par
229   if(currentTT <= criticalTT)\par
230   \{\par
231    tmp=0.0;\par
232   \}\par
233   else\par
234   \{\par
235    tmp=biomass*dailyfractionalloss;\par
236   \}\par
237   return(tmp);\par
238 \}\par
}
}
{\xe \v getThermaltime\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:getThermaltime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getThermaltime (double {\i temp}, double {\i Tbase})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206 \{\par
207   double res;\par
208   res =(temp<=Tbase)? 0.0:(temp-Tbase);\par
209   return(res);\par
210 \}\par
}
}
{\xe \v newbiomass\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:newbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newbiomass (double {\i AcanopyNet}, double {\i k}, double {\i GrowthRespCoeff})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 423 \{\par
424   double tmp;\par
425   \par
426   tmp=(k>=0.0)?AcanopyNet*k/(1+GrowthRespCoeff):0.0;\par
427   return(tmp);\par
428 \}\par
}
}
{\xe \v updatebiomass\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:updatebiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatebiomass (double * {\i res}, double {\i toadd}, double {\i toremove})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 417 \{\par
418   *res=*res+toadd-toremove;\par
419   return;\par
420 \}\par
}
}
{\xe \v updatedailyvec\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:updatedailyvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatedailyvec (struct {\b dailyvec} * {\i dailyvec}, double {\i newbiomass}, double {\i newlitter}, int {\i N}, double {\i delTT})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 405 \{\par
406   int i;\par
407   for (i=0; i<=N;i++)\par
408   \{\par
409      dailyvec[i].ageinTT+=delTT;\par
410   \}\par
411   dailyvec[N].newbiomass=newbiomass;\par
412   dailyvec[N].newlitter=newlitter;\par
413   return;\par
414 \}\par
}
}
{\xe \v updatedormantstage\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:updatedormantstage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatedormantstage (struct {\b miscanthus} * {\i miscanthus})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 759 \{\par
760   double LostinRespiration,availablecarb,newcarb;\par
761   LostinRespiration=miscanthus->autoresp.stemmaint + miscanthus->autoresp.rootmaint +  miscanthus->autoresp.rhizomemaint;\par
762   // This loss will occur at the expense of carbohydrate fraction of rhizome, resulting in change in the carbohydrate fraction of the rhizome\par
763   availablecarb= miscanthus->rhizome.biomass*miscanthus->rhizome.carbohydratefraction;\par
764   newcarb=availablecarb-LostinRespiration;\par
765   miscanthus->rhizome.biomass= miscanthus->rhizome.biomass- LostinRespiration;\par
766  \par
767   if((miscanthus->rhizome.carbohydratefraction)<0.05)miscanthus->rhizome.carbohydratefraction=0.05;\par
768   if(miscanthus->rhizome.biomass <0)error("rhizome has become negative");\par
769 \par
770 \par
771   miscanthus->autoresp.stemgrowth=0;\par
772   miscanthus->autoresp.rootgrowth=0;\par
773   miscanthus->autoresp.rhizomegrowth=0;\par
774   miscanthus->autoresp.leafdarkresp=0.0;\par
775   miscanthus->autoresp.total= LostinRespiration;\par
776   miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
777   // Do i need to specify root death rate ? or probably Ican simply kill the roots at the time of harvest\par
778   \par
779 \}\par
}
}
{\xe \v UpdateStandingbiomass\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:UpdateStandingbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingbiomass (double * {\i standing}, double {\i newbiomass})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 639 \{\par
640   *standing= *standing +newbiomass;\par
641    return;\par
642 \}\par
}
}
{\xe \v UpdateStandingLeaf\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:UpdateStandingLeaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingLeaf (struct {\b leaf} * {\i leaf}, double {\i newbiomass}, double {\i deadleaf}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 646 \{\par
647   leaf->biomass+=newbiomass-deadleaf;\par
648   leaf->litter+=deadleaf*(1-remobFactor);\par
649   return;\par
650 \}\par
}
}
{\xe \v UpdateStandingRhizome\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:UpdateStandingRhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingRhizome (struct {\b rhizome} * {\i rhizome}, double {\i newbiomass}, double {\i deadrhizome}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 667 \{\par
668   rhizome->biomass+=newbiomass-deadrhizome;\par
669   rhizome->litter+=deadrhizome*(1-remobFactor);\par
670   return;\par
671 \}\par
}
}
{\xe \v UpdateStandingRoot\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:UpdateStandingRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingRoot (struct {\b root} * {\i root}, double {\i newbiomass}, double {\i deadroot}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 660 \{\par
661   root->biomass+=newbiomass-deadroot;\par
662   root->litter+=deadroot*(1-remobFactor);\par
663   return;\par
664 \}\par
}
}
{\xe \v UpdateStandingStem\:AuxCropGro.c}
{\xe \v AuxCropGro.c\:UpdateStandingStem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingStem (struct {\b stem} * {\i stem}, double {\i newbiomass}, double {\i deadstem}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 653 \{\par
654   stem->biomass+=newbiomass-deadstem;\par
655   stem->litter+=deadstem*(1-remobFactor);\par
656   return;\par
657 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxMaizeGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxMaizeGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/AuxMaizeGro.c}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include "AuxMaizeGro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for AuxMaizeGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_aux_maize_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiLizasoFun} (double thermalt, double phenostage, double phyllochron1, double phyllochron2, double Ax, double LT, double k0, double a1, double a2, double L0, double LLx, double Lx, double LNl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiBirchdiscontinuousFun} (double phenostage, double LT, double Amax, double c1, double c2, double c3, double c4)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiBirchcontinuousFun} (double phenostage, double a, double b, double Amax, double x0, double f, double g, double TT, double LT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Aei} (double leafnumber, double Ax, double LNx, double a1, double a2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Alogistic} (double time, double A, double kei, double tei)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b maize_dbp_str} {\b maize_sel_dbp_coef} (double dbpCoefs[13], double phenoStage)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Aei\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:Aei}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Aei (double {\i leafnumber}, double {\i Ax}, double {\i LNx}, double {\i a1}, double {\i a2})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206                                             \{\par
207 /* Eq 4 in Lizaso 2003 */\par
208 \par
209         double res1, res2, res3, res;\par
210 \par
211         res1 = (leafnumber - LNx)/(LNx - 1);\par
212         res2 = res1 * res1;\par
213         res3 = res2 * res1;\par
214 \par
215         res = Ax * exp(a1 * res2 + a2 * res3);\par
216 \par
217         return(res);\par
218 \par
219 \}\par
}
}
{\xe \v Alogistic\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:Alogistic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Alogistic (double {\i time}, double {\i A}, double {\i kei}, double {\i tei})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 221                                                                \{\par
222 /* Eq 2 in Lizaso 2003 */\par
223         double ans;\par
224 \par
225         ans = A / (1 + exp(-kei * (time - tei)));\par
226 \par
227         return ans;\par
228 \par
229 \}\par
}
}
{\xe \v laiBirchcontinuousFun\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:laiBirchcontinuousFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiBirchcontinuousFun (double {\i phenostage}, double {\i a}, double {\i b}, double {\i Amax}, double {\i x0}, double {\i f}, double {\i g}, double {\i TT}, double {\i LT})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143                                                \{\par
144         struct lai_str tmp;\par
145         double leafnumber = 0.0, totalLAI = 0.0, SLA = 0.0, TPLAmax = 0.0;\par
146 \par
147         int i, i2, i3, ln, ln2;\par
148 \par
149         for(i2 = 0; i2 < MAXLEAFNUMBER; i2++)\{\par
150                 tmp.leafarea[i2] = 0.0;\par
151         \}\par
152 \par
153         if (phenostage <= 0) \{\par
154           leafnumber = 0;\par
155         \}else\{\par
156           if (phenostage < 1)\{\par
157             leafnumber = phenostage* 100;\par
158           \}else\{\par
159             leafnumber = LT;\par
160           \}\par
161         \}         \par
162         if (Amax == -1)\{\par
163                 /* Eq 13 in Birch*/\par
164                 Amax = 1000 * exp(-1.17 + 0.047 * LT);\par
165         \}\par
166         if (a == -1)\{\par
167                 /* Eq 18 in Birch */\par
168                 a = -0.009 - exp(-0.2 * LT);\par
169         \}\par
170         if (b == -1)\{\par
171                 /* Eq 19 in Birch */\par
172                 b = 0.0006 - exp(-0.43 * LT);\par
173         \}\par
174         if (x0 == -1)\{\par
175                 /* Eq 14 in Birch */\par
176                 x0 = 0.67 * LT;\par
177         \}\par
178         if (g == -1)\{\par
179                 /* Eq 20 in Birch */\par
180                 g = 107.9 * LT - 327;\par
181         \}\par
182 \par
183         for(i3 = 0; i3 < LT; i3++)\{\par
184                 ln2 = i3 + 1;\par
185                 TPLAmax += Amax * exp(a * (ln2 - x0) * (ln2 - x0) + b *\par
186                              (ln2 - x0) * (ln2 - x0) * (ln2 - x0));\par
187         \}\par
188 \par
189         /* Birch Eq 11*/\par
190         SLA = TPLAmax / (1 + exp(-f * (TT - g)));\par
191 \par
192         for (i = 0; i < leafnumber; i++)\{\par
193           ln = i + 1;\par
194           tmp.leafarea[i] = Amax * exp(a * (ln - x0) * (ln - x0) + b *\par
195                              (ln - x0) * (ln - x0) * (ln - x0));\par
196 \par
197            totalLAI += tmp.leafarea[i];\par
198          \}\par
199          tmp.totalLeafArea = totalLAI - SLA;\par
200          return (tmp);\par
201 \}\par
}
}
{\xe \v laiBirchdiscontinuousFun\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:laiBirchdiscontinuousFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiBirchdiscontinuousFun (double {\i phenostage}, double {\i LT}, double {\i Amax}, double {\i c1}, double {\i c2}, double {\i c3}, double {\i c4})}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                              \{\par
100         struct lai_str tmp;\par
101         double leafnumber, totalLAI = 0.0;\par
102         if (phenostage <= 0) \{\par
103           leafnumber = 0;\par
104         \}else\{\par
105           if (phenostage < 1)\{\par
106             leafnumber = phenostage* 100;\par
107           \}else\{\par
108             leafnumber = LT;\par
109           \}\par
110         \}         \par
111         if (Amax == -1)\{\par
112           /* Eq 13 in Birch*/\par
113           Amax = 1000 * exp(-1.17 + 0.047 * LT);\par
114         \}\par
115         int i, i2, ln;\par
116         for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
117           tmp.leafarea[i2] = 0.0;\par
118         \}\par
119         for (i = 0; i<leafnumber; i++)\{\par
120           ln = i + 1;\par
121           if (ln <= 3)\{\par
122             /* Eq 14 in Birch */\par
123             tmp.leafarea[i] = c1 * ln;\par
124           \}else\{\par
125             if (ln <= 11)\{\par
126               /* Eq 15 in Birch */\par
127               tmp.leafarea[i] = c2* ln * ln;\par
128             \}else\{\par
129               /* Eq 16 in Birch */\par
130               tmp.leafarea[i] = c3 * Amax + c4 * ln * ln;\par
131             \}\par
132           \}\par
133           totalLAI += tmp.leafarea[i];\par
134         \}\par
135         tmp.totalLeafArea = totalLAI;\par
136         return (tmp);\par
137 \}\par
}
}
{\xe \v laiLizasoFun\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:laiLizasoFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiLizasoFun (double {\i thermalt}, double {\i phenostage}, double {\i phyllochron1}, double {\i phyllochron2}, double {\i Ax}, double {\i LT}, double {\i k0}, double {\i a1}, double {\i a2}, double {\i L0}, double {\i LLx}, double {\i Lx}, double {\i LNl})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                                     \{\par
14 \par
15         struct lai_str tmp;\par
16         double A, kei, tei;\par
17         double LNx = 0.67 * LT;\par
18         double te1 = 25;\par
19         double te2 = 50;\par
20         double tti;\par
21         double tsi;\par
22         double leafnumber ;\par
23         double totalLAI = 0.0;\par
24 \par
25         if (phenostage <= 0) \{\par
26           leafnumber = 0;\par
27         \}else\{\par
28           if (phenostage < 1)\{\par
29             leafnumber = phenostage* 100;\par
30           \}else\{\par
31             leafnumber = LT;\par
32           \}\par
33         \}\par
34 \par
35 /* Longevity */\par
36 \par
37         /* Eq 11 in Lisazo 2003 */\par
38         if (LNl == -1)\{ \par
39             LNl = 3.59 + 0.498 * LT;\par
40         \}\par
41         /* Eq 12 in Lisazo 2003 */\par
42         /* double Wl = 0.333333 * LT; not used ? */\par
43         double LLi;\par
44 \par
45         double Wk = LT / 8.18;\par
46 \par
47         int i, i2, ln = 0;\par
48 \par
49         for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
50                 tmp.leafarea[i2] = 0.0;\par
51         \}\par
52 \par
53         for(i=0;i<leafnumber;i++)\{\par
54 \par
55                 /* Eq 7 in Lizaso 2003 */\par
56                 ln = i + 1;\par
57                 tti = (ln - 2) * phyllochron1 + te2;\par
58 \par
59                 /* Eq 8 in Lizaso 2003 */\par
60                 kei = k0 + 0.174 * exp( - ((ln - 1)*(ln - 1))/(2 * Wk * Wk));\par
61 \par
62                 /* Eq 10 in Lizaso 2003 */\par
63                 LLi = L0 + Lx * exp( - (ln - LNl)*(ln - LNl)/ (2*Wk*Wk));\par
64                 \par
65 \par
66                 /* Eq 6 in Lizaso 2003 */\par
67                 if(ln == 1) tei = te1;\par
68                 if(ln == 2)\{\par
69                         tei = te2;\par
70                 \}else\{\par
71                         tei = tti + (2.197 /kei);\par
72                 \}\par
73                 \par
74                 /* calculating time of 50% senescence from time of 50%\par
75                  * expansion and leaf longevity */\par
76                 tsi = LLi + tei;\par
77 \par
78                 /* Applying Eq 4 in Lizaso 2003 */\par
79                 A = Aei(ln, Ax, LNx, a1, a2);\par
80 \par
81                 /* Applying Eq 2 in Lizaso 2003 */\par
82                 tmp.leafarea[i] = Alogistic(thermalt, A, kei, tei);\par
83 \par
84                 /* calculating senesced area for this leaf */\par
85                 tmp.leafarea[i] -= Alogistic(thermalt, A, kei, tsi);\par
86 \par
87                 /* Rprintf("leaf area %.1f \\n", tmp.leafarea[i]);  */\par
88                 totalLAI += tmp.leafarea[i];\par
89         \}\par
90 \par
91         tmp.totalLeafArea = totalLAI;\par
92         return(tmp);\par
93 \par
94 \par
95 \}\par
}
}
{\xe \v maize_sel_dbp_coef\:AuxMaizeGro.c}
{\xe \v AuxMaizeGro.c\:maize_sel_dbp_coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b maize_dbp_str} maize_sel_dbp_coef (double {\i dbpCoefs}[13], double {\i phenoStage})}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 231                                                                                \{\par
232 \par
233         struct maize_dbp_str tmp;\par
234 \par
235         tmp.kLeaf = 0.0;\par
236         tmp.kStem = 0.0;\par
237         tmp.kRoot = 0.0;\par
238         tmp.kGrain = 0.0;\par
239 \par
240         if(phenoStage < 0.06)\{\par
241 /* For now there is one set of coefficients for V6 */\par
242                 tmp.kStem = dbpCoefs[0];\par
243                 tmp.kLeaf = dbpCoefs[1];\par
244                 tmp.kRoot = dbpCoefs[2];\par
245         \}else\par
246         if(phenoStage < 0.12)\{\par
247 /* For now there is one set of coefficients until V12 */\par
248                 tmp.kStem = dbpCoefs[3];\par
249                 tmp.kLeaf = dbpCoefs[4];\par
250                 tmp.kRoot = dbpCoefs[5];\par
251         \}else\par
252         if(phenoStage < 1)\{\par
253 /* For now there is one set of coefficients after V12 but before R1*/\par
254                 tmp.kStem = dbpCoefs[6];\par
255                 tmp.kLeaf = dbpCoefs[7];\par
256                 tmp.kRoot = dbpCoefs[8];\par
257         \}else\par
258                 if(phenoStage >= 1)\{\par
259 /* For now there is one set of coefficients after R1*/\par
260                         tmp.kStem = dbpCoefs[9];\par
261                         tmp.kLeaf = dbpCoefs[10];\par
262                         tmp.kRoot = dbpCoefs[11];\par
263                         tmp.kGrain = dbpCoefs[12];\par
264                 \}\par
265 \par
266         return(tmp);\par
267 \par
268 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxMaizeGro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxMaizeGro.h}
{\xe \v /home/dlebauer/dev/biocro/src/AuxMaizeGro.h}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_aux_maize_gro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b maize_dbp_str}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXLEAFNUMBER}\~ 30\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Aei} (double leafnumber, double Ax, double LNx, double a1, double a2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Alogistic} (double time, double A, double kei, double tei)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b maize_dbp_str} {\b maize_sel_dbp_coef} (double dbpCoefs[13], double phenoStage)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAXLEAFNUMBER\:AuxMaizeGro.h}
{\xe \v AuxMaizeGro.h\:MAXLEAFNUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXLEAFNUMBER\~ 30}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Aei\:AuxMaizeGro.h}
{\xe \v AuxMaizeGro.h\:Aei}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Aei (double {\i leafnumber}, double {\i Ax}, double {\i LNx}, double {\i a1}, double {\i a2})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206                                             \{\par
207 /* Eq 4 in Lizaso 2003 */\par
208 \par
209         double res1, res2, res3, res;\par
210 \par
211         res1 = (leafnumber - LNx)/(LNx - 1);\par
212         res2 = res1 * res1;\par
213         res3 = res2 * res1;\par
214 \par
215         res = Ax * exp(a1 * res2 + a2 * res3);\par
216 \par
217         return(res);\par
218 \par
219 \}\par
}
}
{\xe \v Alogistic\:AuxMaizeGro.h}
{\xe \v AuxMaizeGro.h\:Alogistic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Alogistic (double {\i time}, double {\i A}, double {\i kei}, double {\i tei})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 221                                                                \{\par
222 /* Eq 2 in Lizaso 2003 */\par
223         double ans;\par
224 \par
225         ans = A / (1 + exp(-kei * (time - tei)));\par
226 \par
227         return ans;\par
228 \par
229 \}\par
}
}
{\xe \v maize_sel_dbp_coef\:AuxMaizeGro.h}
{\xe \v AuxMaizeGro.h\:maize_sel_dbp_coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b maize_dbp_str} maize_sel_dbp_coef (double {\i dbpCoefs}[13], double {\i phenoStage})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 231                                                                                \{\par
232 \par
233         struct maize_dbp_str tmp;\par
234 \par
235         tmp.kLeaf = 0.0;\par
236         tmp.kStem = 0.0;\par
237         tmp.kRoot = 0.0;\par
238         tmp.kGrain = 0.0;\par
239 \par
240         if(phenoStage < 0.06)\{\par
241 /* For now there is one set of coefficients for V6 */\par
242                 tmp.kStem = dbpCoefs[0];\par
243                 tmp.kLeaf = dbpCoefs[1];\par
244                 tmp.kRoot = dbpCoefs[2];\par
245         \}else\par
246         if(phenoStage < 0.12)\{\par
247 /* For now there is one set of coefficients until V12 */\par
248                 tmp.kStem = dbpCoefs[3];\par
249                 tmp.kLeaf = dbpCoefs[4];\par
250                 tmp.kRoot = dbpCoefs[5];\par
251         \}else\par
252         if(phenoStage < 1)\{\par
253 /* For now there is one set of coefficients after V12 but before R1*/\par
254                 tmp.kStem = dbpCoefs[6];\par
255                 tmp.kLeaf = dbpCoefs[7];\par
256                 tmp.kRoot = dbpCoefs[8];\par
257         \}else\par
258                 if(phenoStage >= 1)\{\par
259 /* For now there is one set of coefficients after R1*/\par
260                         tmp.kStem = dbpCoefs[9];\par
261                         tmp.kLeaf = dbpCoefs[10];\par
262                         tmp.kRoot = dbpCoefs[11];\par
263                         tmp.kGrain = dbpCoefs[12];\par
264                 \}\par
265 \par
266         return(tmp);\par
267 \par
268 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxwillowGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxwillowGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/AuxwillowGro.c}
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c3photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxwillowGro.h"}\par
{\f2 #include "c3canopy.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for AuxwillowGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_auxwillow_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createCanopy} (struct {\b canopy} *{\b canopy}, int Nlayers, double LAItotal)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b discretizeCanopy} (struct {\b canopy} *{\b canopy})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getcanopylightme} (struct {\b canopy} *{\b canopy}, double lat, double DOY, int td, double solarR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getCanopysunML} (struct {\b canopy} *{\b canopy}, double kd, double chil, double heightf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getcanopyWINDprofile} (struct {\b canopy} *{\b canopy}, double WindSpeed)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getcanopyRHprof} (struct {\b canopy} *{\b canopy}, double RH)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getcanopyLNprof} (struct {\b canopy} *{\b canopy}, double LeafN, double kpLN)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freecanopy} (struct {\b canopy} *{\b canopy})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b c3CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Jmax, double Rd, double Catm, double o2, double b0, double b1, double theta, double kd, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double StomWS, int ws)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3CanAC\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:c3CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} c3CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Jmax}, double {\i Rd}, double {\i Catm}, double {\i o2}, double {\i b0}, double {\i b1}, double {\i theta}, double {\i kd}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v createCanopy\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:createCanopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createCanopy (struct {\b canopy} * {\i canopy}, int {\i Nlayers}, double {\i LAItotal})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40 \{\par
41   /**********************************************\par
42    * Purpose:\par
43    * creare a NULL canopy structure\par
44    * allocate memory based on number of layers\par
45    * initialize all the components of canopy structure\par
46    * ***********************************************/\par
47   int i;\par
48   canopy->Nlayers=Nlayers;\par
49   canopy->Idirtop=0.0;\par
50   canopy->Idifftop=0.0;\par
51   canopy->CosZenithAngle =0.0;\par
52   canopy->LAItotal= LAItotal;\par
53   canopy->ENV =  malloc((Nlayers+1)*sizeof(*canopy->ENV));\par
54   canopy->Leaf = malloc((Nlayers+1)*sizeof(*canopy->Leaf));\par
55   canopy->OUT = malloc((Nlayers+1)*sizeof(*canopy->OUT));\par
56   for (i =0; i<Nlayers; i++)\par
57   \{\par
58       canopy->ENV[i].Idir=0.0;\par
59       canopy->ENV[i].Idiff=0.0;\par
60       canopy->ENV[i].Itotal=0.0;\par
61       canopy->ENV[i].RH=0.0;\par
62       canopy->ENV[i].windspeed=0.0;\par
63       canopy->ENV[i].Catm=0.0;\par
64       canopy->ENV[i].Temp=0.0;   \par
65     \par
66       canopy->Leaf[i].LAI=0.0;\par
67       canopy->Leaf[i].LeafN=0.0;\par
68       canopy->Leaf[i].pLeafsun=0.0;\par
69       canopy->Leaf[i].pLeafshade=0.0;   \par
70       canopy->Leaf[i].heightf=0.0;  \par
71 \par
72       canopy->OUT[i].sunlittemp=0.0;\par
73       canopy->OUT[i].shadedtemp=0.0;\par
74       canopy->OUT[i].TotalAnet=0.0;\par
75       canopy->OUT[i].TotalAgross=0.0;\par
76       canopy->OUT[i].TotalTrans=0.0;\par
77       canopy->OUT[i].shadedAnet=0.0;\par
78       canopy->OUT[i].shadedAgross=0.0;\par
79       canopy->OUT[i].sunlitAnet=0.0;\par
80       canopy->OUT[i].sunlitAgross=0.0;\par
81       canopy->OUT[i].shadedTemp=0.0;\par
82       canopy->OUT[i].sunlitTemp=0.0;\par
83       canopy->OUT[i].shadedTranspiration=0.0;\par
84       canopy->OUT[i].sunlitTranspiration=0.0;\par
85   \}\par
86   return;\par
87 \}\par
}
}
{\xe \v discretizeCanopy\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:discretizeCanopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void discretizeCanopy (struct {\b canopy} * {\i canopy})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90 \{\par
91   /******************************************************************************\par
92    * Purpose:\par
93    * This function discretize the canopy  by assigning total LAI into each canopy layer equally\par
94    * In Future, this function can be changed to accomodate Leaf Area Density\par
95    ******************************************************************************/\par
96   int i;\par
97   \par
98   for (i=0;i<(canopy->Nlayers);i++)\par
99   \{\par
100     canopy->Leaf[i].LAI=canopy->LAItotal/canopy->Nlayers;\par
101   \}\par
102   return;\par
103 \}\par
}
}
{\xe \v freecanopy\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:freecanopy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void freecanopy (struct {\b canopy} * {\i canopy})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 288 \{\par
289   free(canopy->ENV);\par
290   free(canopy->Leaf);\par
291   free(canopy->OUT);\par
292   return;\par
293 \}\par
}
}
{\xe \v getcanopylightme\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:getcanopylightme}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getcanopylightme (struct {\b canopy} * {\i canopy}, double {\i lat}, double {\i DOY}, int {\i td}, double {\i solarR})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 106 \{\par
107   \par
108   /***********************************************************************\par
109    * Purpose: To calculate direct and diffused sunlight at the top of the canopy\par
110    * Input\par
111    * lat:- Latitude\par
112    * DOY:- Day of Year\par
113    * td= Time of day\par
114    * solarR :- Incoming Solar Radiation\par
115    * Output:\par
116    * canopy structure is updated for the following variables\par
117    * Idirtop :- direct light at the top of the canopy\par
118    * Idifftop:- Diffused light at the top of the canopy\par
119    * CosZenithAngle:- Zenith Angle, to be used in the subsequent calculations\par
120    * Reference:\par
121    * Humphries Thesis\par
122    * page 51\par
123    * ***********************************************************************/\par
124         double omega, delta0, delta, deltaR;\par
125         double tf, SSin, CCos, PPo;\par
126         double CosZenithAngle, CosHour;\par
127         double CosHourDeg;\par
128         double Idir, Idiff, propIdir, propIdiff;\par
129         const double DTR = M_PI/180;\par
130         const double tsn = 12.0;\par
131         const double alpha = 0.85;\par
132         const double SolarConstant = 2650;\par
133         const double atmP = 1e5;\par
134 \par
135         omega = lat * DTR;\par
136         delta0 = 360.0 * ((DOY + 10)/365.0);\par
137         delta = -23.5 * cos(delta0*DTR);\par
138         deltaR = delta * DTR;\par
139 \par
140         tf = (15.0*(td - tsn))*DTR;\par
141         SSin = sin(deltaR) * sin(omega);\par
142         CCos = cos(deltaR) * cos(omega);\par
143 \par
144         CosZenithAngle = SSin + CCos * cos(tf);\par
145         if(CosZenithAngle < pow(10,-10))\par
146                 CosZenithAngle = pow(10,-10);\par
147 \par
148         CosHour = -tan(omega) * tan(deltaR);\par
149         CosHourDeg = (1/DTR)*CosHour;\par
150         if(CosHourDeg < -57)\par
151                 CosHour = -0.994;\par
152 \par
153         PPo = 1e5 / atmP;\par
154         Idir = SolarConstant * (pow(alpha,(PPo/CosZenithAngle)));\par
155         Idiff = 0.3 * SolarConstant *(1 - pow(alpha,(PPo/CosZenithAngle))) * CosZenithAngle ;\par
156 \par
157         propIdir = Idir / (Idir + Idiff);\par
158         propIdiff = Idiff / (Idir + Idiff);\par
159         \par
160         canopy->Idirtop=propIdir*solarR;\par
161         canopy->Idifftop= propIdiff*solarR ;\par
162         canopy->CosZenithAngle =CosZenithAngle;\par
163         return;\par
164 \}\par
}
}
{\xe \v getcanopyLNprof\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:getcanopyLNprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getcanopyLNprof (struct {\b canopy} * {\i canopy}, double {\i LeafN}, double {\i kpLN})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264 \{\par
265   /*******************************************************************\par
266    * This function calculates Leaf N distrivution of different canopy layers\par
267    * Leaf N will subsequently be used in calculation of photosynthesis parameters\par
268    * Input parameters\par
269    * Leaf N: Leaf N at the top of the canopy\par
270    * kpLN: Extinction coefficient for exponential decline in leaf N with LAI\par
271    * ************************************************************************/\par
272    \par
273    \par
274         int i;\par
275         double leafNla,CumLAI;\par
276 \par
277         CumLAI=0.0;\par
278         for(i=0;i<(canopy->Nlayers);i++)\par
279         \{\par
280                 canopy->Leaf[i].LeafN= LeafN * exp(-kpLN * CumLAI);\par
281                 CumLAI = CumLAI+canopy->Leaf[i].LAI;\par
282         \}\par
283         return;\par
284 \}\par
}
}
{\xe \v getcanopyRHprof\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:getcanopyRHprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getcanopyRHprof (struct {\b canopy} * {\i canopy}, double {\i RH})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 245 \{\par
246        int i;\par
247         double kh, hsla, j;\par
248 \par
249         kh = 1 - RH;\par
250        \par
251         for(i=0;i<(canopy->Nlayers);i++)\par
252         \{\par
253                 j = i + 1;\par
254                 hsla = RH * exp(kh * (j/canopy->Nlayers));\par
255 //              /*hsla = RH * exp(-kh * (j/nlayers));  /*new simpler version from Joe Iverson*/\par
256                 if(hsla > 1) hsla = 0.99; \par
257                 canopy->ENV[i].RH = hsla;\par
258         \}\par
259         return;\par
260 \}\par
}
}
{\xe \v getCanopysunML\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:getCanopysunML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getCanopysunML (struct {\b canopy} * {\i canopy}, double {\i kd}, double {\i chil}, double {\i heightf})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168 \{\par
169   /****************************************************************************************************\par
170    * Purpose:\par
171    * Calculate fraction of shaded and sunlit leaves  in each of the canopy layers\par
172    * Also, Calculate Direct, diffused and Scattered Light for each of the canopy layer\par
173    * \par
174    * Input\par
175    * Direct Sun Light at the Top of the Canopy\par
176    * Diffused Light at the TOp of the Canopy\par
177    * LAI Total Leaf Area Index of the Canopy\par
178    * Nlayers Number of Canopy Layers\par
179    * cosTheta: Cosine of Zenith Angel\par
180    * Chil: Factor determining leaf angle distribtion of the canopy\par
181    * heightF: Height Factor of the Canopy\par
182    * \par
183    * Output\par
184    * Fraction of Sunlit Leaves in Each Layer\par
185    * Fraction of Shaded leaves in Each layer\par
186    * Amount of Light (Direct + Diffuses+Scattered) on the sunlit leaves of each layer\par
187    * Amount of Light (Diffused+Scattered) on the shaded leaves of each layer\par
188    * *****************************************************************************************/\par
189         int i;\par
190         double k0, k1, k;\par
191         double LAIi, CumLAI;\par
192         double Isolar, Idiffuse, Ibeam, Iscat, Itotal,alphascatter;\par
193         double Ls, Ld;\par
194         double Fsun, Fshade;\par
195         alphascatter=0.8;\par
196         k0 = sqrt(pow(chil ,2) + pow(tan(acos(canopy->CosZenithAngle)),2));\par
197         k1 = chil + 1.744*pow((chil+1.183),-0.733);\par
198         k = k0/k1;\par
199         if(k<0)\par
200                 k = -k;\par
201 \par
202         LAIi = canopy->LAItotal / canopy->Nlayers;\par
203 \par
204         for(i=0;i<canopy->Nlayers;i++)\par
205         \{\par
206                 CumLAI = LAIi * (i+0.5);          \par
207                 Ibeam=canopy->Idirtop*canopy->CosZenithAngle;\par
208                 Iscat = Ibeam * exp(-k *sqrt(alphascatter)* CumLAI)-Ibeam * exp(-k * CumLAI);     \par
209                 Isolar = Ibeam*k;\par
210                 Idiffuse = canopy->Idifftop * exp(-kd * CumLAI) + Iscat;                \par
211                 Ls = (1-exp(-k*LAIi))*exp(-k*CumLAI)/k;\par
212                 Ld=LAIi-Ls;\par
213                 Fsun=Ls/(Ls+Ld);\par
214                 Fshade=Ld/(Ls+Ld);\par
215                 canopy->Leaf[i].pLeafsun=Fsun;\par
216                 canopy->Leaf[i].pLeafshade=Fshade;\par
217                 canopy->Leaf[i].heightf = CumLAI/heightf;\par
218                 /*fraction intercepted*/\par
219                 Itotal =(Fsun*Isolar + Idiffuse) * (1-exp(-k*LAIi))/k;\par
220                 /* collecting the results */\par
221                 canopy->ENV[i].Idir= Isolar+Idiffuse ;\par
222                 canopy->ENV[i].Idiff = Idiffuse;\par
223                 canopy->ENV[i].Itotal = Itotal;                \par
224         \}\par
225         return;\par
226 \}\par
}
}
{\xe \v getcanopyWINDprofile\:AuxwillowGro.c}
{\xe \v AuxwillowGro.c\:getcanopyWINDprofile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getcanopyWINDprofile (struct {\b canopy} * {\i canopy}, double {\i WindSpeed})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 230 \{\par
231         int i;\par
232         double k=0.7;\par
233         double CumLAI;\par
234         \par
235           CumLAI=0.0;\par
236         for(i=0;i<(canopy->Nlayers);i++)\par
237         \{\par
238                canopy->ENV[i].windspeed= WindSpeed * exp(-k * CumLAI);\par
239                CumLAI+=canopy->Leaf[i].LAI;\par
240         \}\par
241         return;\par
242 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/AuxwillowGro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/AuxwillowGro.h}
{\xe \v /home/dlebauer/dev/biocro/src/AuxwillowGro.h}
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_auxwillow_gro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXLAY}\~ 50 /* Maximum number of layers */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str} {\b c3EvapoTrans} (double Rad, double Itot, double Airtemperature, double RH, double WindSpeed, double LeafAreaIndex, double CanopyHeight, double vcmax2, double jmax2, double Rd2, double b02, double b12, double Catm2, double O2, double theta2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAXLAY\:AuxwillowGro.h}
{\xe \v AuxwillowGro.h\:MAXLAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXLAY\~ 50 /* Maximum number of layers */}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3EvapoTrans\:AuxwillowGro.h}
{\xe \v AuxwillowGro.h\:c3EvapoTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ET_Str} c3EvapoTrans (double {\i Rad}, double {\i Itot}, double {\i Airtemperature}, double {\i RH}, double {\i WindSpeed}, double {\i LeafAreaIndex}, double {\i CanopyHeight}, double {\i vcmax2}, double {\i jmax2}, double {\i Rd2}, double {\i b02}, double {\i b12}, double {\i Catm2}, double {\i O2}, double {\i theta2})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/BioCro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/BioCro.c}
{\xe \v /home/dlebauer/dev/biocro/src/BioCro.c}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for BioCro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_bio_cro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b MisGro} (SEXP LAT, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP KD, SEXP CHILHF, SEXP NLAYERS, SEXP RHIZOME, SEXP IRTL, SEXP SENCOEFS, SEXP TIMESTEP, SEXP VECSIZE, SEXP SPLEAF, SEXP SPD, SEXP DBPCOEFS, SEXP THERMALP, SEXP VMAX, SEXP ALPHA, SEXP KPARM, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP WS, SEXP SOILCOEFS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP WSFUN, SEXP CENTCOEFS, SEXP CENTTIMESTEP, SEXP CENTKS, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP NNITROP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b SABioGro} (SEXP oTHERMAL, SEXP oSTEM, SEXP oLEAF, SEXP oROOT, SEXP oRHIZOME, SEXP oGRAIN, SEXP oLAI, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP DBPCOEF, SEXP VECSIZE, SEXP LAT, SEXP NLAYERS, SEXP RHIZOMEIRTL, SEXP SENESCTIME, SEXP TIMESTEP, SEXP VMAX, SEXP ALPHA, SEXP KPARM, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP SOILCOEFS, SEXP WSFUN, SEXP WS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP CENTCOEFS, SEXP CENTKS, SEXP CENTTIMESTEP, SEXP KD, SEXP CHILHF, SEXP SP, SEXP SPD, SEXP THERMALP, SEXP INDEX, SEXP NDATA, SEXP N1DAT, SEXP NITER, SEXP NITER2, SEXP SATEMP, SEXP COOLSAMP, SEXP SCALE, SEXP SD, SEXP PHEN, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP NCOEFS, SEXP LNFUN, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP NNITROP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RSS_BG} (double oStem[], double oLeaf[], double oRoot[], double oRhizome[], double oGrain[], double oLAI[], double sStem[], double sLeaf[], double sRoot[], double sRhizome[], double sGrain[], double sLAI[], int N1Dat)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BioGro} (double lat, int doy[], int hr[], double solar[], double temp[], double rh[], double windspeed[], double precip[], double kd, double chil, double heightf, int nlayers, double iRhizome, double irtl, double sencoefs[], int timestep, int vecsize, double Sp, double SpD, double dbpcoefs[25], double thermalp[], double vmax1, double alpha1, double kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double soilcoefs[], double ileafn, double kLN, double vmaxb1, double alphab1, double mresp[], int soilType, int wsFun, int ws, double centcoefs[], double centks[], int centTimestep, int soilLayers, double soilDepths[], double cws[], int hydrDist, double secs[], double kpLN, double lnb0, double lnb1, int lnfun, double upperT, double lowerT, struct {\b nitroParms} nitroP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sel_phen} (int phen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v BioGro\:BioCro.c}
{\xe \v BioCro.c\:BioGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BioGro (double {\i lat}, int {\i doy}[], int {\i hr}[], double {\i solar}[], double {\i temp}[], double {\i rh}[], double {\i windspeed}[], double {\i precip}[], double {\i kd}, double {\i chil}, double {\i heightf}, int {\i nlayers}, double {\i iRhizome}, double {\i irtl}, double {\i sencoefs}[], int {\i timestep}, int {\i vecsize}, double {\i Sp}, double {\i SpD}, double {\i dbpcoefs}[25], double {\i thermalp}[], double {\i vmax1}, double {\i alpha1}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i soilcoefs}[], double {\i ileafn}, double {\i kLN}, double {\i vmaxb1}, double {\i alphab1}, double {\i mresp}[], int {\i soilType}, int {\i wsFun}, int {\i ws}, double {\i centcoefs}[], double {\i centks}[], int {\i centTimestep}, int {\i soilLayers}, double {\i soilDepths}[], double {\i cws}[], int {\i hydrDist}, double {\i secs}[], double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i upperT}, double {\i lowerT}, struct {\b nitroParms} {\i nitroP})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1880 \{\par
1881 \par
1882         extern double CanopyAssim[8760] ;\par
1883         extern double Leafy[8760] ;\par
1884         extern double Stemy[8760] ;\par
1885         extern double Rooty[8760] ;\par
1886         extern double Rhizomey[8760] ;\par
1887         extern double Grainy[8760] ;\par
1888         extern double LAIc[8760] ;\par
1889 \par
1890         double newLeafcol[8760];\par
1891         double newStemcol[8760];\par
1892         double newRootcol[8760];\par
1893         double newRhizomecol[8760];\par
1894 \par
1895         int i, i3;\par
1896 \par
1897         double Leaf, Stem, Root, Rhizome, LAI, Grain = 0.0;\par
1898         double TTc = 0.0;\par
1899         double kLeaf = 0.0, kStem = 0.0, kRoot = 0.0, kRhizome = 0.0, kGrain = 0.0;\par
1900         double newLeaf, newStem = 0.0, newRoot, newRhizome = 0.0, newGrain = 0.0;\par
1901 \par
1902         double litter[4];\par
1903         litter[0] = centcoefs[19];\par
1904         litter[1] = centcoefs[20];\par
1905         litter[2] = centcoefs[21];\par
1906         litter[3] = centcoefs[22];\par
1907 \par
1908         /* Variables needed for collecting litter */\par
1909         double LeafLitter = litter[0], StemLitter = litter[1];\par
1910         double RootLitter = litter[2], RhizomeLitter = litter[3];\par
1911         double LeafLitter_d = 0.0, StemLitter_d = 0.0;\par
1912         double RootLitter_d = 0.0, RhizomeLitter_d = 0.0;\par
1913         double ALitter = 0.0, BLitter = 0.0;\par
1914 \par
1915         double *sti , *sti2, *sti3, *sti4; \par
1916         double Remob;\par
1917         int k = 0, q = 0, m = 0, n = 0;\par
1918         int ri = 0;\par
1919 \par
1920         double StomWS = 1, LeafWS = 1;\par
1921         double CanopyA, CanopyT;\par
1922         double vmax, alpha;\par
1923         double LeafN_0 = ileafn;\par
1924         double LeafN = ileafn; /* Need to set it because it is used by CanA before it is computed */\par
1925         double iSp = Sp;\par
1926         vmax = vmax1;\par
1927         alpha = alpha1;\par
1928 \par
1929         /* Century */\par
1930         double MinNitro = centcoefs[18];\par
1931         double SCCs[9];\par
1932         double Resp;\par
1933 \par
1934         const double mrc1 = mresp[0];\par
1935         const double mrc2 = mresp[1];\par
1936 \par
1937         struct Can_Str Canopy;\par
1938         struct ws_str WaterS;\par
1939         struct dbp_str dbpS;\par
1940         struct cenT_str centS;\par
1941         struct soilML_str soilMLS;\par
1942         struct soilText_str soTexS; /* , *soTexSp = &soTexS; */\par
1943         soTexS = soilTchoose(soilType);\par
1944 \par
1945         Rhizome = iRhizome;\par
1946         Leaf = Rhizome * irtl;\par
1947         Stem = Rhizome * 0.001;\par
1948         Root = Rhizome * 0.001;\par
1949         LAI = Leaf * Sp;\par
1950 \par
1951         const double FieldC = soilcoefs[0];\par
1952         const double WiltP = soilcoefs[1];\par
1953         const double phi1 = soilcoefs[2];\par
1954         const double phi2 = soilcoefs[3];\par
1955         const double soilDepth = soilcoefs[4];\par
1956         double waterCont = soilcoefs[5];\par
1957         double soilEvap, TotEvap;\par
1958 \par
1959         const double SeneLeaf = sencoefs[0];\par
1960         const double SeneStem = sencoefs[1];\par
1961         const double SeneRoot = sencoefs[2];\par
1962         const double SeneRhizome = sencoefs[3];\par
1963 \par
1964         SCCs[0] = centcoefs[0];\par
1965         SCCs[1] = centcoefs[1];\par
1966         SCCs[2] = centcoefs[2];\par
1967         SCCs[3] = centcoefs[3];\par
1968         SCCs[4] = centcoefs[4];\par
1969         SCCs[5] = centcoefs[5];\par
1970         SCCs[6] = centcoefs[6];\par
1971         SCCs[7] = centcoefs[7];\par
1972         SCCs[8] = centcoefs[8];\par
1973 \par
1974 \par
1975         /* Creation of pointers outside the loop */\par
1976         sti = &newLeafcol[0]; /* This creates sti to be a pointer to the position 0\par
1977                                  in the newLeafcol vector */\par
1978         sti2 = &newStemcol[0];\par
1979         sti3 = &newRootcol[0];\par
1980         sti4 = &newRhizomecol[0];\par
1981 \par
1982         for(i=0;i<vecsize;i++)\par
1983         \{\par
1984                 /* First calculate the elapsed Thermal Time*/\par
1985                 TTc += (temp[i] / (24/timestep));\par
1986 \par
1987                 /* Do the magic! Calculate growth*/\par
1988 \par
1989                 Canopy = CanAC(LAI,doy[i],hr[i],\par
1990                                solar[i],temp[i],rh[i],windspeed[i],\par
1991                                lat,nlayers,vmax,alpha,kparm,theta,beta,\par
1992                                Rd,Catm,b0,b1,StomWS,ws,kd, chil,\par
1993                                heightf, LeafN, kpLN, lnb0, lnb1, lnfun,upperT,lowerT,nitroP);\par
1994 \par
1995 \par
1996 \par
1997                 CanopyA = Canopy.Assim * timestep;\par
1998                 CanopyT = Canopy.Trans * timestep;\par
1999 \par
2000                 if(ISNAN(CanopyA))\{\par
2001                         Rprintf("LAI %.2f \\n",LAI); \par
2002                         Rprintf("Leaf %.2f \\n",Leaf);\par
2003                         Rprintf("irtl %.2f \\n",irtl);\par
2004                         Rprintf("Rhizome %.2f \\n",Rhizome);\par
2005                         Rprintf("Sp %.2f \\n",Sp);   \par
2006                         Rprintf("doy[i] %.i %.i \\n",i,doy[i]); \par
2007                         Rprintf("hr[i] %.i %.i \\n",i,hr[i]); \par
2008                         Rprintf("solar[i] %.i %.2f \\n",i,solar[i]); \par
2009                         Rprintf("temp[i] %.i %.2f \\n",i,temp[i]); \par
2010                         Rprintf("rh[i] %.i %.2f \\n",i,rh[i]); \par
2011                         Rprintf("windspeed[i] %.i %.2f \\n",i,windspeed[i]);\par
2012                         Rprintf("lat %.i %.2f \\n",i,lat);\par
2013                         Rprintf("nlayers %.i %.i \\n",i,nlayers);   \par
2014                 \}\par
2015 \par
2016                 if(soilLayers > 1)\{\par
2017                         soilMLS = soilML(precip[i], CanopyT, &cws[0], soilDepth, soilDepths, FieldC, WiltP,\par
2018                                          phi1, phi2, soTexS, wsFun, soilLayers, Root,\par
2019                                          LAI, 0.68, temp[i], solar[i], windspeed[i], rh[i], hydrDist,\par
2020                                          secs[0], secs[1], secs[2]);\par
2021 \par
2022                         StomWS = soilMLS.rcoefPhoto;\par
2023                         LeafWS = soilMLS.rcoefSpleaf;\par
2024                         soilEvap = soilMLS.SoilEvapo;\par
2025                         for(i3=0;i3<soilLayers;i3++)\{\par
2026                                 cws[i3] = soilMLS.cws[i3];\par
2027                         \}\par
2028 \par
2029                 \}else\{\par
2030 \par
2031                         soilEvap = SoilEvapo(LAI, 0.68, temp[i], solar[i], waterCont, FieldC, WiltP, windspeed[i], rh[i], secs[1]);\par
2032                         TotEvap = soilEvap + CanopyT;\par
2033                         WaterS = watstr(precip[i],TotEvap,waterCont,soilDepth,FieldC,WiltP,phi1,phi2,soilType, wsFun);   \par
2034                         waterCont = WaterS.awc;\par
2035                         StomWS = WaterS.rcoefPhoto ;\par
2036                         LeafWS = WaterS.rcoefSpleaf;\par
2037                 \}\par
2038 \par
2039                 /* Picking the dry biomass partitioning coefficients */\par
2040                 dbpS = sel_dbp_coef(dbpcoefs, thermalp, TTc);\par
2041 \par
2042                 kLeaf = dbpS.kLeaf;\par
2043                 kStem = dbpS.kStem;\par
2044                 kRoot = dbpS.kRoot;\par
2045                 kRhizome = dbpS.kRhiz;\par
2046                 kGrain = dbpS.kGrain;\par
2047 \par
2048                 if(ISNAN(kRhizome) || ISNAN(kLeaf) || ISNAN(kRoot) || ISNAN(kStem) || ISNAN(kGrain))\{\par
2049                         Rprintf("kLeaf %.2f, kStem %.2f, kRoot %.2f, kRhizome %.2f, kGrain %.2f \\n",kLeaf,kStem,kRoot,kRhizome,kGrain);\par
2050                         Rprintf("iter %i \\n",i);\par
2051                 \}\par
2052 \par
2053                 if(i % 24*centTimestep == 0)\{\par
2054                         LeafLitter_d = LeafLitter * ((0.1/30)*centTimestep);\par
2055                         StemLitter_d = StemLitter * ((0.1/30)*centTimestep);\par
2056                         RootLitter_d = RootLitter * ((0.1/30)*centTimestep);\par
2057                         RhizomeLitter_d = RhizomeLitter * ((0.1/30)*centTimestep);\par
2058        \par
2059                         LeafLitter -= LeafLitter_d;\par
2060                         StemLitter -= StemLitter_d;\par
2061                         RootLitter -= RootLitter_d;\par
2062                         RhizomeLitter -= RhizomeLitter_d;\par
2063        \par
2064                         centS = Century(&LeafLitter_d,&StemLitter_d,&RootLitter_d,&RhizomeLitter_d,\par
2065                                         waterCont,temp[i],centTimestep,SCCs,WaterS.runoff,\par
2066                                         centcoefs[17], /* N fertilizer*/\par
2067                                         MinNitro, /* initial Mineral nitrogen */\par
2068                                         precip[i], /* precipitation */\par
2069                                         centcoefs[9], /* Leaf litter lignin */\par
2070                                         centcoefs[10], /* Stem litter lignin */\par
2071                                         centcoefs[11], /* Root litter lignin */\par
2072                                         centcoefs[12], /* Rhizome litter lignin */\par
2073                                         centcoefs[13], /* Leaf litter N */\par
2074                                         centcoefs[14], /* Stem litter N */\par
2075                                         centcoefs[15],  /* Root litter N */\par
2076                                         centcoefs[16],   /* Rhizome litter N */\par
2077                                         soilType, centks);\par
2078                 \}\par
2079 \par
2080                 /* Here I can insert the code for Nitrogen limitations on photosynthesis\par
2081                    parameters. This is taken From Harley et al. (1992) Modelling cotton under\par
2082                    elevated CO2. PCE. This is modeled as a simple linear relationship between\par
2083                    leaf nitrogen and vmax and alpha. Leaf Nitrogen should be modulated by N\par
2084                    availability and possibly by the Thermal time accumulated.*/\par
2085 \par
2086                 MinNitro = centS.MinN;\par
2087                 Resp = centS.Resp;\par
2088      \par
2089                 SCCs[0] = centS.SCs[0];\par
2090                 SCCs[1] = centS.SCs[1];\par
2091                 SCCs[2] = centS.SCs[2];\par
2092                 SCCs[3] = centS.SCs[3];\par
2093                 SCCs[4] = centS.SCs[4];\par
2094                 SCCs[5] = centS.SCs[5];\par
2095                 SCCs[6] = centS.SCs[6];\par
2096                 SCCs[7] = centS.SCs[7];\par
2097                 SCCs[8] = centS.SCs[8];\par
2098 \par
2099                 LeafN = LeafN_0 * exp(-kLN * TTc); \par
2100                 vmax = (LeafN_0 - LeafN) * vmaxb1 + vmax1;\par
2101                 alpha = (LeafN_0 - LeafN) * alphab1 + alpha1;\par
2102 \par
2103                 if(kLeaf > 0)\par
2104                 \{\par
2105                         newLeaf = CanopyA * kLeaf * LeafWS ; \par
2106                         /*  The major effect of water stress is on leaf expansion rate. See Boyer (1970)\par
2107                             Plant. Phys. 46, 233-235. For this the water stress coefficient is different\par
2108                             for leaf and vmax. */\par
2109                         /* Tissue respiration. See Amthor (1984) PCE 7, 561-*/ \par
2110                         /* The 0.02 and 0.03 are constants here but vary depending on species\par
2111                            as pointed out in that reference. */\par
2112                         newLeaf = resp(newLeaf, mrc1, temp[i]);\par
2113 \par
2114                         *(sti+i) = newLeaf; /* This populates the vector newLeafcol. It makes sense\par
2115                                                to use i because when kLeaf is negative no new leaf is\par
2116                                                being accumulated and thus would not be subjected to senescence */\par
2117                 \}else\{\par
2118 \par
2119                         newLeaf = Leaf * kLeaf ;\par
2120                         Rhizome += kRhizome * -newLeaf * 0.9; /* 0.9 is the efficiency of retranslocation */\par
2121                         Stem += kStem * -newLeaf   * 0.9;\par
2122                         Root += kRoot * -newLeaf * 0.9;\par
2123                         Grain += kGrain * -newLeaf * 0.9;\par
2124                 \}\par
2125 \par
2126                 if(TTc < SeneLeaf)\{\par
2127 \par
2128                         Leaf += newLeaf;\par
2129 \par
2130                 \}else\{\par
2131     \par
2132                         Leaf += newLeaf - *(sti+k); /* This means that the new value of leaf is\par
2133                                                        the previous value plus the newLeaf\par
2134                                                        (Senescence might start when there is\par
2135                                                        still leaf being produced) minus the leaf\par
2136                                                        produced at the corresponding k.*/\par
2137                         Remob = *(sti+k) * 0.6 ;\par
2138                         LeafLitter += *(sti+k) * 0.4; /* Collecting the leaf litter */ \par
2139                         Rhizome += kRhizome * Remob;\par
2140                         Stem += kStem * Remob; \par
2141                         Root += kRoot * Remob;\par
2142                         Grain += kGrain * Remob;\par
2143                         k++;\par
2144                 \}\par
2145 \par
2146                 /* The specific leaf area declines with the growing season at least in\par
2147                    Miscanthus.  See Danalatos, Nalianis and Kyritsis "Growth and Biomass\par
2148                    Productivity of Miscanthus sinensis "Giganteus" under optimum cultural\par
2149                    management in north-eastern greece*/\par
2150 \par
2151                 if(i%24 == 0)\{\par
2152                         Sp = iSp - (doy[i] - doy[0]) * SpD;\par
2153                 \}\par
2154 \par
2155                 /* Rprintf("Sp %.2f \\n", Sp); */\par
2156 \par
2157                 LAI = Leaf * Sp ;\par
2158 \par
2159                 /* New Stem*/\par
2160                 if(kStem > 0)\par
2161                 \{\par
2162                         newStem = CanopyA * kStem ;\par
2163                         newStem = resp(newStem, mrc1, temp[i]);\par
2164                         *(sti2+i) = newStem;\par
2165                 \}\par
2166 \par
2167                 if(TTc < SeneStem)\{\par
2168 \par
2169                         Stem += newStem;\par
2170 \par
2171                 \}else\{\par
2172 \par
2173                         Stem += newStem - *(sti2+q);\par
2174                         StemLitter += *(sti2+q);\par
2175                         q++;\par
2176 \par
2177                 \}\par
2178 \par
2179                 if(kRoot > 0)\par
2180                 \{\par
2181                         newRoot = CanopyA * kRoot ;\par
2182                         newRoot = resp(newRoot, mrc2, temp[i]);\par
2183                         *(sti3+i) = newRoot;\par
2184                 \}else\{\par
2185 \par
2186                         newRoot = Root * kRoot ;\par
2187                         Rhizome += kRhizome * -newRoot * 0.9;\par
2188                         Stem += kStem * -newRoot       * 0.9;\par
2189                         Leaf += kLeaf * -newRoot * 0.9;\par
2190                         Grain += kGrain * -newRoot * 0.9;\par
2191                 \}\par
2192 \par
2193                 if(TTc < SeneRoot)\{\par
2194 \par
2195                         Root += newRoot;\par
2196 \par
2197                 \}else\{\par
2198 \par
2199                         Root += newRoot - *(sti3+m);\par
2200                         RootLitter += *(sti3+m);\par
2201                         m++;\par
2202 \par
2203                 \}\par
2204 \par
2205                 if(kRhizome > 0)\par
2206                 \{\par
2207                         newRhizome = CanopyA * kRhizome ;\par
2208                         newRhizome = resp(newRhizome, mrc2, temp[i]);\par
2209                         *(sti4+ri) = newRhizome;\par
2210                         /* Here i will not work because the rhizome goes from being a source\par
2211                            to a sink. I need its own index. Let's call it rhizome's i or ri.*/\par
2212                         ri++;\par
2213                 \}else\{\par
2214 \par
2215                         if(Rhizome < 0)\{\par
2216                                 Rhizome = 1e-4;\par
2217                                 warning("Rhizome became negative");\par
2218                         \}\par
2219 \par
2220                         newRhizome = Rhizome * kRhizome;\par
2221                         Root += kRoot * -newRhizome ;\par
2222                         Stem += kStem * -newRhizome ;\par
2223                         Leaf += kLeaf * -newRhizome ;\par
2224                         Grain += kGrain * -newRhizome;\par
2225                 \}\par
2226 \par
2227                 if(TTc < SeneRhizome)\{\par
2228 \par
2229                         Rhizome += newRhizome;\par
2230 \par
2231                 \}else \{\par
2232 \par
2233                         Rhizome += newRhizome - *(sti4+n);\par
2234                         RhizomeLitter += *(sti4+n);\par
2235                         n++;\par
2236 \par
2237                 \}\par
2238 \par
2239                 if((kGrain < 1e-10) || (TTc < thermalp[4]))\{\par
2240                         newGrain = 0.0;\par
2241                         Grain += newGrain;\par
2242                 \}else\{\par
2243                         newGrain = CanopyA * kGrain;\par
2244                         /* No respiration for grain at the moment */\par
2245                         /* No senescence either */\par
2246                         Grain += newGrain;  \par
2247                 \}\par
2248 \par
2249                 ALitter += LeafLitter + StemLitter;\par
2250                 BLitter += RootLitter + RhizomeLitter;\par
2251 \par
2252                 CanopyAssim[i] =  CanopyA;\par
2253                 Leafy[i] = Leaf;\par
2254                 Stemy[i] = Stem;\par
2255                 Rooty[i] =  Root;\par
2256                 Rhizomey[i] = Rhizome;\par
2257                 Grainy[i] = Grain;\par
2258                 LAIc[i] = LAI;\par
2259         \}\par
2260 \}\par
}
}
{\xe \v MisGro\:BioCro.c}
{\xe \v BioCro.c\:MisGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP MisGro (SEXP {\i LAT}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i NLAYERS}, SEXP {\i RHIZOME}, SEXP {\i IRTL}, SEXP {\i SENCOEFS}, SEXP {\i TIMESTEP}, SEXP {\i VECSIZE}, SEXP {\i SPLEAF}, SEXP {\i SPD}, SEXP {\i DBPCOEFS}, SEXP {\i THERMALP}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i KPARM}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i WS}, SEXP {\i SOILCOEFS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i WSFUN}, SEXP {\i CENTCOEFS}, SEXP {\i CENTTIMESTEP}, SEXP {\i CENTKS}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i NNITROP})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68 \{\par
69   \par
70    /*********** CROCENT VARIABLES***********************/\par
71    struct cropcentlayer CROPCENT;\par
72    //assignParms(&CROPCENT);\par
73    CROPCENTTimescaling(&CROPCENT);\par
74 //   assignPools(&CROPCENT);\par
75    struct InputToCropcent *leaflitter,*stemlitter,*rootlitter,*rhizomelitter;\par
76    /****************************************************/\par
77         double newLeafcol[8760];\par
78         double newStemcol[8760];\par
79         double newRootcol[8760];\par
80         double newRhizomecol[8760];\par
81 \par
82         /* This creates vectors which will collect the senesced plant\par
83            material. This is needed to calculate litter and therefore carbon\par
84            in the soil and then N in the soil. */\par
85 \par
86          double upperT=REAL(UPPERTEMP)[0];\par
87          double lowerT=REAL(LOWERTEMP)[0];\par
88 /*Reading NitroP Variables */\par
89         struct nitroParms nitroparms;\par
90         double TEMPdoubletoint;\par
91         nitroparms.ileafN=REAL(NNITROP)[0];\par
92   nitroparms.kln=REAL(NNITROP)[1];\par
93         nitroparms.Vmaxb1=REAL(NNITROP)[2];\par
94         nitroparms.Vmaxb0=REAL(NNITROP)[3];\par
95         nitroparms.alphab1=REAL(NNITROP)[4];\par
96         nitroparms.alphab0=REAL(NNITROP)[5];\par
97   nitroparms.Rdb1=REAL(NNITROP)[6];\par
98         nitroparms.Rdb0=REAL(NNITROP)[7];\par
99         nitroparms.kpLN=REAL(NNITROP)[8];\par
100         nitroparms.lnb0=REAL(NNITROP)[9];\par
101         nitroparms.lnb1=REAL(NNITROP)[10];\par
102         TEMPdoubletoint=REAL(NNITROP)[11];\par
103         nitroparms.lnFun=(int)TEMPdoubletoint;\par
104         nitroparms.maxln=REAL(NNITROP)[12];\par
105         nitroparms.minln=REAL(NNITROP)[13];\par
106         nitroparms.daymaxln=REAL(NNITROP)[14];\par
107 \par
108 \par
110   double iSp, Sp , propLeaf;\par
111         int i, i2, i3;\par
112         int vecsize ;\par
113 \par
114         double vmax1;\par
115         double alpha1;\par
116         double kparm1;\par
117         double theta;\par
118         double beta;\par
119         double Rd1, Ca;\par
120         double b01, b11;\par
121 \par
122         double Leaf, Stem, Root, LAI, Grain = 0.0;\par
123         double TTc = 0.0;\par
124         double kLeaf = 0.0, kStem = 0.0, kRoot = 0.0, kRhizome = 0.0, kGrain = 0.0;\par
125         double newLeaf, newStem = 0.0, newRoot, newRhizome, newGrain = 0.0;\par
126 \par
127         /* Variables needed for collecting litter */\par
128         double LeafLitter = REAL(CENTCOEFS)[20], StemLitter = REAL(CENTCOEFS)[21];\par
129         double RootLitter = REAL(CENTCOEFS)[22], RhizomeLitter = REAL(CENTCOEFS)[23];\par
130         double LeafLitter_d = 0.0, StemLitter_d = 0.0;\par
131         double RootLitter_d = 0.0, RhizomeLitter_d = 0.0;\par
132         double ALitter = 0.0, BLitter = 0.0;\par
133         /* Maintenance respiration */\par
134 \par
135         double mrc1 = REAL(MRESP)[0];\par
136         double mrc2 = REAL(MRESP)[1]; \par
137 \par
138         double waterCont;\par
139         double StomWS = 1, LeafWS = 1;\par
140         int timestep;\par
141         double CanopyA, CanopyT;\par
142 \par
143         double Rhizome;\par
144 \par
145         /* Soil Parameters*/\par
146         double FieldC, WiltP, phi1, phi2, soilDepth;\par
147         int soilType, wsFun;\par
148         double LeafN, LeafN_0, kLN;\par
149         double soilEvap, TotEvap;\par
150         int soillayers = INTEGER(SOILLAYERS)[0];\par
151         double cwsVec[soillayers];\par
152         for(i2=0;i2<soillayers;i2++)\{\par
153                 cwsVec[i2] = REAL(CWS)[i2];\par
154         \}\par
155         double cwsVecSum = 0.0;\par
156         /* Some soil related empirical coefficients */\par
157         double rfl = REAL(SECS)[0];  /* root factor lambda */\par
158         double rsec = REAL(SECS)[1]; /* radiation soil evaporation coefficient */\par
159         double rsdf = REAL(SECS)[2]; /* root soil depth factor */\par
160         double scsf = REAL(SOILCOEFS)[6]; /* stomatal conductance sensitivity factor */ /* Rprintf("scsf %.2f",scsf); */\par
161         double transpRes = REAL(SOILCOEFS)[7]; /* Resistance to transpiration from soil to leaf */\par
162         double leafPotTh = REAL(SOILCOEFS)[8]; /* Leaf water potential threshold */\par
163 \par
164         /* Parameters for calculating leaf water potential */\par
165         double LeafPsim = 0.0;\par
166 \par
167         /* Effect of Nitrogen */\par
168         double kpLN = REAL(KPLN)[0];\par
169         double lnb0 = REAL(LNB0)[0]; \par
170         double lnb1 = REAL(LNB1)[0];\par
171         int lnfun = INTEGER(LNFUN)[0];\par
172 \par
173         /* Century */\par
174         double MinNitro = REAL(CENTCOEFS)[19];\par
175         int doyNfert = REAL(CENTCOEFS)[18];\par
176         double Nfert;\par
177         double SCCs[9];\par
178         double Resp = 0.0;\par
179         int centTimestep = INTEGER(CENTTIMESTEP)[0];\par
180 \par
181         double SeneLeaf, SeneStem, SeneRoot = 0.0, SeneRhizome = 0.0 ;\par
182         double *sti , *sti2, *sti3, *sti4; \par
183         double Remob;\par
184         int k = 0, q = 0, m = 0, n = 0;\par
185         int ri = 0;\par
186 \par
187         struct Can_Str Canopy;\par
188         struct ws_str WaterS;\par
189         struct dbp_str dbpS;\par
190         struct cenT_str centS; \par
191         struct soilML_str soilMLS;\par
192         struct soilText_str soTexS; /* , *soTexSp = &soTexS; */\par
193         soTexS = soilTchoose(INTEGER(SOILTYPE)[0]);\par
194 \par
195         centS.SCs[0] = 0.0;\par
196         centS.SCs[1] = 0.0;\par
197         centS.SCs[2] = 0.0;\par
198         centS.SCs[3] = 0.0;\par
199         centS.SCs[4] = 0.0;\par
200         centS.SCs[5] = 0.0;\par
201         centS.SCs[6] = 0.0;\par
202         centS.SCs[7] = 0.0;\par
203         centS.SCs[8] = 0.0;\par
204         centS.Resp = 0.0;\par
205 \par
206         SEXP lists, names;\par
207 \par
208         SEXP DayofYear;\par
209         SEXP Hour;\par
210         SEXP CanopyAssim;\par
211         SEXP CanopyTrans;\par
212         SEXP Leafy;\par
213         SEXP Stemy;\par
214         SEXP Rooty;\par
215         SEXP Rhizomey;\par
216         SEXP Grainy;\par
217         SEXP LAIc;\par
218         SEXP TTTc;\par
219         SEXP SoilWatCont;\par
220         SEXP StomatalCondCoefs;\par
221         SEXP LeafReductionCoefs;\par
222         SEXP LeafNitrogen;\par
223         SEXP AboveLitter;\par
224         SEXP BelowLitter;\par
225         SEXP VmaxVec;\par
226         SEXP AlphaVec;\par
227         SEXP SpVec;\par
228         SEXP MinNitroVec;\par
229         SEXP RespVec;\par
230         SEXP SoilEvaporation;\par
231         SEXP cwsMat;\par
232         SEXP psimMat; /* Holds the soil water potential */\par
233         SEXP rdMat;\par
234         SEXP SCpools;\par
235         SEXP SNpools;\par
236         SEXP LeafPsimVec;\par
237 \par
238         vecsize = length(DOY);\par
239         PROTECT(lists = allocVector(VECSXP,29));\par
240         PROTECT(names = allocVector(STRSXP,29));\par
241 \par
242         PROTECT(DayofYear = allocVector(REALSXP,vecsize));\par
243         PROTECT(Hour = allocVector(REALSXP,vecsize));\par
244         PROTECT(CanopyAssim = allocVector(REALSXP,vecsize));\par
245         PROTECT(CanopyTrans = allocVector(REALSXP,vecsize));\par
246         PROTECT(Leafy = allocVector(REALSXP,vecsize));\par
247         PROTECT(Stemy = allocVector(REALSXP,vecsize));\par
248         PROTECT(Rooty = allocVector(REALSXP,vecsize));\par
249         PROTECT(Rhizomey = allocVector(REALSXP,vecsize));\par
250         PROTECT(Grainy = allocVector(REALSXP,vecsize));\par
251         PROTECT(LAIc = allocVector(REALSXP,vecsize));\par
252         PROTECT(TTTc = allocVector(REALSXP,vecsize));\par
253         PROTECT(SoilWatCont = allocVector(REALSXP,vecsize));\par
254         PROTECT(StomatalCondCoefs = allocVector(REALSXP,vecsize));\par
255         PROTECT(LeafReductionCoefs = allocVector(REALSXP,vecsize));\par
256         PROTECT(LeafNitrogen = allocVector(REALSXP,vecsize));\par
257         PROTECT(AboveLitter = allocVector(REALSXP,vecsize));\par
258         PROTECT(BelowLitter = allocVector(REALSXP,vecsize));\par
259         PROTECT(VmaxVec = allocVector(REALSXP,vecsize));\par
260         PROTECT(AlphaVec = allocVector(REALSXP,vecsize));\par
261         PROTECT(SpVec = allocVector(REALSXP,vecsize));\par
262         PROTECT(MinNitroVec = allocVector(REALSXP,vecsize));\par
263         PROTECT(RespVec = allocVector(REALSXP,vecsize));\par
264         PROTECT(SoilEvaporation = allocVector(REALSXP,vecsize));\par
265         PROTECT(cwsMat = allocMatrix(REALSXP,soillayers,vecsize));\par
266         PROTECT(psimMat = allocMatrix(REALSXP,soillayers,vecsize));\par
267         PROTECT(rdMat = allocMatrix(REALSXP,soillayers,vecsize));\par
268         PROTECT(SCpools = allocVector(REALSXP,9));\par
269         PROTECT(SNpools = allocVector(REALSXP,9));\par
270         PROTECT(LeafPsimVec = allocVector(REALSXP,vecsize));\par
271 \par
272         /* Picking vmax, alpha and kparm */\par
273         vmax1 = REAL(VMAX)[0];\par
274         alpha1 = REAL(ALPHA)[0];\par
275         kparm1 = REAL(KPARM)[0];\par
276         theta = REAL(THETA)[0];\par
277         beta = REAL(BETA)[0];\par
278         Rd1 = REAL(RD)[0];\par
279         Ca = REAL(CATM)[0];\par
280         b01 = REAL(B0)[0];\par
281         b11 = REAL(B1)[0];\par
282 \par
283         LeafN_0 = REAL(ILEAFN)[0];\par
284         LeafN = LeafN_0; /* Initial value of N in the leaf */\par
285         kLN = REAL(KLN)[0];\par
286         timestep = INTEGER(TIMESTEP)[0];\par
287 \par
288         Rhizome = REAL(RHIZOME)[0];\par
289         Sp = REAL(SPLEAF)[0]; \par
290         SeneLeaf = REAL(SENCOEFS)[0];\par
291         SeneStem = REAL(SENCOEFS)[1];\par
292         SeneRoot = REAL(SENCOEFS)[2];\par
293         SeneRhizome = REAL(SENCOEFS)[3];\par
294 \par
295         /* Soil Parameters */\par
296         FieldC = REAL(SOILCOEFS)[0];\par
297         WiltP = REAL(SOILCOEFS)[1];\par
298         phi1 = REAL(SOILCOEFS)[2];\par
299         phi2 = REAL(SOILCOEFS)[3];\par
300         soilDepth = REAL(SOILCOEFS)[4];\par
301         waterCont = REAL(SOILCOEFS)[5];\par
302         wsFun = INTEGER(WSFUN)[0];\par
303         soilType = INTEGER(SOILTYPE)[0];\par
304 \par
305         SCCs[0] = REAL(CENTCOEFS)[0];\par
306         SCCs[1] = REAL(CENTCOEFS)[1];\par
307         SCCs[2] = REAL(CENTCOEFS)[2];\par
308         SCCs[3] = REAL(CENTCOEFS)[3];\par
309         SCCs[4] = REAL(CENTCOEFS)[4];\par
310         SCCs[5] = REAL(CENTCOEFS)[5];\par
311         SCCs[6] = REAL(CENTCOEFS)[6];\par
312         SCCs[7] = REAL(CENTCOEFS)[7];\par
313         SCCs[8] = REAL(CENTCOEFS)[8];\par
314 \par
315         propLeaf = REAL(IRTL)[0]; \par
316         /* It is useful to assume that there is a small amount of\par
317            leaf area at the begining of the growing season. */\par
318         Leaf = Rhizome * propLeaf; \par
319         /* Initial proportion of the rhizome that is turned\par
320            into leaf the first hour */\par
321         Stem = Rhizome * 0.001;\par
322         Root = Rhizome * 0.001;\par
323         LAI = Leaf * Sp;\par
324         iSp = Sp;\par
325 \par
326 /* Creating pointers to avoid calling functions REAL and INTEGER so much */\par
327         int *pt_doy = INTEGER(DOY);\par
328         int *pt_hr = INTEGER(HR);\par
329         double *pt_solar = REAL(SOLAR);\par
330         double *pt_temp = REAL(TEMP);\par
331         double *pt_rh = REAL(RH);\par
332         double *pt_windspeed = REAL(WINDSPEED);\par
333         double *pt_precip = REAL(PRECIP);\par
334         double lat = REAL(LAT)[0];\par
335         int nlayers = INTEGER(NLAYERS)[0];\par
336         int ws = INTEGER(WS)[0];\par
337         double kd = REAL(KD)[0];\par
338         double chil = REAL(CHILHF)[0];\par
339         double hf = REAL(CHILHF)[1];\par
340 \par
341         /* Creation of pointers outside the loop */\par
342         sti = &newLeafcol[0]; /* This creates sti to be a pointer to the position 0\par
343                                  in the newLeafcol vector */\par
344         sti2 = &newStemcol[0];\par
345         sti3 = &newRootcol[0];\par
346         sti4 = &newRhizomecol[0];\par
347  \par
348         for(i=0;i<vecsize;i++)\par
349         \{\par
350                 /* First calculate the elapsed Thermal Time*/\par
351                 /* The idea is that here I need to divide by the time step\par
352                    to calculate the thermal time. For example, a 3 hour time interval\par
353                    would mean that the division would need to by 8 */\par
354                 TTc += *(pt_temp+i) / (24/timestep); \par
355                 REAL(TTTc)[i] = TTc;\par
356 \par
357                 /*  Do the magic! Calculate growth*/\par
358 \par
359                 Canopy = CanAC(LAI, *(pt_doy+i), *(pt_hr+i),\par
360                                *(pt_solar+i), *(pt_temp+i),\par
361                                *(pt_rh+i), *(pt_windspeed+i),\par
362                                lat, nlayers,\par
363                                vmax1,alpha1,kparm1,\par
364                                theta,beta,Rd1,Ca,b01,b11,StomWS,\par
365                                ws, kd,\par
366                                chil, hf,LeafN, kpLN, lnb0, lnb1, lnfun,upperT,lowerT,nitroparms);\par
367 \par
368                 /* Collecting the results */\par
369                 CanopyA = Canopy.Assim * timestep;\par
370                 CanopyT = Canopy.Trans * timestep;\par
371 \par
372                 /* Inserting the multilayer model */\par
373                 if(soillayers > 1)\{\par
374                         soilMLS = soilML(*(pt_precip+i), CanopyT, &cwsVec[0], soilDepth, REAL(SOILDEPTHS), FieldC, WiltP,\par
375                                          phi1, phi2, soTexS, wsFun, INTEGER(SOILLAYERS)[0], Root, \par
376                                          LAI, 0.68, *(pt_temp+i), *(pt_solar), *(pt_windspeed+i), *(pt_rh+i), \par
377                                          INTEGER(HYDRDIST)[0], rfl, rsec, rsdf);\par
378 \par
379                         StomWS = soilMLS.rcoefPhoto;\par
380                         LeafWS = soilMLS.rcoefSpleaf;\par
381                         soilEvap = soilMLS.SoilEvapo;\par
382                         for(i3=0;i3<soillayers;i3++)\{\par
383                                 cwsVec[i3] = soilMLS.cws[i3];\par
384                                 cwsVecSum += cwsVec[i3];\par
385                                 REAL(cwsMat)[i3 + i*soillayers] = soilMLS.cws[i3];\par
386                                 REAL(rdMat)[i3 + i*soillayers] = soilMLS.rootDist[i3];\par
387                         \}\par
388 \par
389                         waterCont = cwsVecSum / soillayers;\par
390                         cwsVecSum = 0.0;\par
391 \par
392                 \}else\{\par
393 \par
394                         soilEvap = SoilEvapo(LAI, 0.68, *(pt_temp+i), *(pt_solar+i), waterCont, FieldC, WiltP, \par
395                                              *(pt_windspeed+i), *(pt_rh+i), rsec);\par
396                         TotEvap = soilEvap + CanopyT;\par
397                         WaterS = watstr(*(pt_precip+i),TotEvap,waterCont,soilDepth,FieldC,WiltP,phi1,phi2,soilType, wsFun);   \par
398                         waterCont = WaterS.awc;\par
399                         StomWS = WaterS.rcoefPhoto ; \par
400                         LeafWS = WaterS.rcoefSpleaf;\par
401                         REAL(cwsMat)[i] = waterCont;\par
402                         REAL(psimMat)[i] = WaterS.psim;\par
403                 \}\par
404 \par
405 /* An alternative way of computing water stress is by doing the leaf\par
406  * water potential. This is done if the wsFun is equal to 4 */\par
407 \par
408                 if(wsFun == 4)\{\par
409                         /* Calculating the leaf water potential */\par
410                         /* From Campbell E = (Psim_s - Psim_l)/R or\par
411                          * evaporation is equal to the soil water potential\par
412                          * minus the leaf water potential divided by the resistance.\par
413                          * This can be rearranged to Psim_l = Psim_s - E x R   */\par
414                         /* It is assumed that total resistance is 5e6 m^4 s^-1\par
415                          * kg^-1 \par
416                          * Transpiration is in Mg ha-2 hr-1\par
417                          * Multiply by 1e3 to go from Mg to kg\par
418                          * Multiply by 1e-4 to go from ha to m^2 \par
419                          * This needs to go from hours to seconds that's\par
420                          * why the conversion factor is (1/3600).*/\par
421                         LeafPsim = WaterS.psim - (CanopyT * 1e3 * 1e-4 * 1.0/3600.0) * transpRes;\par
422 \par
423                         /* From WIMOVAVC the proposed equation to simulate the effect of water\par
424                          * stress on stomatal conductance */\par
425                         if(LeafPsim < leafPotTh)\{\par
426                                 /* StomWS = 1 - ((LeafPsim - leafPotTh)/1000 *\par
427                                  * scsf); In WIMOVAC this equation is used but\par
428                                  * the absolute values are taken from the\par
429                                  * potentials. Since they both should be\par
430                                  * negative and leafPotTh is greater than\par
431                                  * LeafPsim this can be rearranged to*/ \par
432                                 StomWS = 1 - ((leafPotTh - LeafPsim)/1000 * scsf);\par
433                                 /* StomWS = 1; */\par
434                                 if(StomWS < 0.1) StomWS = 0.1;\par
435                         \}else\{\par
436                                 StomWS = 1;\par
437                         \}\par
438                 \}else\{\par
439                         LeafPsim = 0;\par
440                 \}\par
441 \par
442                 /* Picking the dry biomass partitioning coefficients */\par
443                 dbpS = sel_dbp_coef(REAL(DBPCOEFS), REAL(THERMALP), TTc);\par
444 \par
445                 kLeaf = dbpS.kLeaf;\par
446                 kStem = dbpS.kStem;\par
447                 kRoot = dbpS.kRoot;\par
448                 kRhizome = dbpS.kRhiz;\par
449                 kGrain = dbpS.kGrain;\par
450 \par
451                 /* Nitrogen fertilizer */\par
452                 /* Only the day in which the fertilizer was applied this is available */\par
453 /* When the day of the year is equal to the day the N fert was applied\par
454  * then there is addition of fertilizer */\par
455                 if(doyNfert == *(pt_doy+i))\{\par
456                         Nfert = REAL(CENTCOEFS)[17] / 24.0;\par
457                 \}else\{\par
458                         Nfert = 0;\par
459                 \}                \par
460 \par
461      \par
462 \par
463         /* Here I can insert the code for Nitrogen limitations on photosynthesis\par
464                    parameters. This is taken From Harley et al. (1992) Modelling cotton under\par
465                    elevated CO2. PCE. This is modeled as a simple linear relationship between\par
466                    leaf nitrogen and vmax and alpha. Leaf Nitrogen should be modulated by N\par
467                    availability and possibly by the Thermal time accumulated.*/\par
468 /* The approach that seems to be used in general is N concentration as\par
469  * a function of biomass */\par
470         \par
471 \par
472                 LeafN = LeafN_0 * pow(Stem + Leaf,-kLN); \par
473                 if(LeafN > LeafN_0) LeafN = LeafN_0;\par
474                 \par
475                 vmax1 = (LeafN_0 - LeafN) * REAL(VMAXB1)[0] + REAL(VMAX)[0]; \par
476                 alpha1 = (LeafN_0 - LeafN) * REAL(ALPHAB1)[0] + REAL(ALPHA)[0]; \par
477 \par
478                  /* The crop demand for nitrogen is the leaf concentration times the amount of biomass.\par
479                    This modifies the amount of N available in the soil. \par
480                    MinNitro is the available amount of N (kg/m2). \par
481                    The demand is in Mg/ha. I need a conversion factor of \par
482                    multiply by 1000, divide by 10000. */\par
483  \par
484                 MinNitro = MinNitro - LeafN * (Stem + Leaf) * 1e-1;\par
485                 if(MinNitro < 0) MinNitro = 1e-3;\par
486 \par
487                 if(kLeaf > 0)\par
488                 \{\par
489                         newLeaf = CanopyA * kLeaf * LeafWS ; \par
490                         /*  The major effect of water stress is on leaf expansion rate. See Boyer (1970)\par
491                             Plant. Phys. 46, 233-235. For this the water stress coefficient is different\par
492                             for leaf and vmax. */\par
493                         /* Tissue respiration. See Amthor (1984) PCE 7, 561-*/ \par
494                         /* The 0.02 and 0.03 are constants here but vary depending on species\par
495                            as pointed out in that reference. */\par
496                         newLeaf = resp(newLeaf, mrc1, *(pt_temp+i));\par
497 \par
498                         *(sti+i) = newLeaf; /* This populates the vector newLeafcol. It makes sense\par
499                                                to use i because when kLeaf is negative no new leaf is\par
500                                                being accumulated and thus would not be subjected to senescence */\par
501                 \}else\{\par
502 \par
503                         newLeaf = Leaf * kLeaf ;\par
504                         Rhizome += kRhizome * -newLeaf * 0.9; /* 0.9 is the efficiency of retranslocation */\par
505                         Stem += kStem * -newLeaf   * 0.9;\par
506                         Root += kRoot * -newLeaf * 0.9;\par
507                         Grain += kGrain * -newLeaf * 0.9;\par
508                 \}\par
509 \par
510                 if(TTc < SeneLeaf)\{\par
511 \par
512                         Leaf += newLeaf;\par
513 \par
514                 \}else\{\par
515     \par
516                         Leaf += newLeaf - *(sti+k); /* This means that the new value of leaf is\par
517                                                        the previous value plus the newLeaf\par
518                                                        (Senescence might start when there is\par
519                                                        still leaf being produced) minus the leaf\par
520                                                        produced at the corresponding k.*/\par
521                         Remob = *(sti+k) * 0.6 ;\par
522                         LeafLitter += *(sti+k) * 0.4; /* Collecting the leaf litter */ \par
523                         Rhizome += kRhizome * Remob;\par
524                         Stem += kStem * Remob; \par
525                         Root += kRoot * Remob;\par
526                         Grain += kGrain * Remob;\par
527                         k++;\par
528                 \}\par
529 \par
530                 /* The specific leaf area declines with the growing season at least in\par
531                    Miscanthus.  See Danalatos, Nalianis and Kyritsis "Growth and Biomass\par
532                    Productivity of Miscanthus sinensis "Giganteus" under optimum cultural\par
533                    management in north-eastern greece*/\par
534 \par
535                 if(i%24 == 0)\{\par
536                         Sp = iSp - (INTEGER(DOY)[i] - INTEGER(DOY)[0]) * REAL(SPD)[0];\par
537                 \}\par
538 \par
539                 LAI = Leaf * Sp ;\par
540 \par
541                 if(LAI > 20.0) LAI = 20.0;\par
542 \par
543                 /* New Stem*/\par
544                 if(kStem >= 0)\par
545                 \{\par
546                         newStem = CanopyA * kStem ;\par
547                         newStem = resp(newStem, mrc1, *(pt_temp+i));\par
548                         *(sti2+i) = newStem;\par
549                 \}else\{\par
550                         error("kStem should be positive");\par
551                 \}\par
552 \par
553                 if(TTc < SeneStem)\{\par
554 \par
555                         Stem += newStem;\par
556 \par
557                 \}else\{\par
558 \par
559                         Stem += newStem - *(sti2+q);\par
560                         StemLitter += *(sti2+q);\par
561                         q++;\par
562 \par
563                 \}\par
564 \par
565                 if(kRoot > 0)\par
566                 \{\par
567                         newRoot = CanopyA * kRoot ;\par
568                         newRoot = resp(newRoot, mrc2, *(pt_temp+i));\par
569                         *(sti3+i) = newRoot;\par
570                 \}else\{\par
571 \par
572                         newRoot = Root * kRoot ;\par
573                         Rhizome += kRhizome * -newRoot * 0.9;\par
574                         Stem += kStem * -newRoot       * 0.9;\par
575                         Leaf += kLeaf * -newRoot * 0.9;\par
576                         Grain += kGrain * -newRoot * 0.9;\par
577                 \}\par
578 \par
579                 if(TTc < SeneRoot)\{\par
580 \par
581                         Root += newRoot;\par
582 \par
583                 \}else\{\par
584 \par
585                         Root += newRoot - *(sti3+m);\par
586                         RootLitter += *(sti3+m);\par
587                         m++;\par
588 \par
589                 \}\par
590 \par
591                 if(kRhizome > 0)\par
592                 \{\par
593                         newRhizome = CanopyA * kRhizome ;\par
594                         newRhizome = resp(newRhizome, mrc2, *(pt_temp+i));\par
595                         *(sti4+ri) = newRhizome;\par
596                         /* Here i will not work because the rhizome goes from being a source\par
597                            to a sink. I need its own index. Let's call it rhizome's i or ri.*/\par
598                         ri++;\par
599                 \}else\{\par
600 \par
601                         if(Rhizome < 0)\{\par
602                                 Rhizome = 1e-4;\par
603                                 warning("Rhizome became negative");\par
604                         \}\par
605 \par
606                         newRhizome = Rhizome * kRhizome;\par
607                         Root += kRoot * -newRhizome ;\par
608                         Stem += kStem * -newRhizome ;\par
609                         Leaf += kLeaf * -newRhizome ;\par
610                         Grain += kGrain * -newRhizome;\par
611                 \}\par
612 \par
613                 if(TTc < SeneRhizome)\{\par
614 \par
615                         Rhizome += newRhizome;\par
616 \par
617                 \}else \{\par
618 \par
619                         Rhizome += newRhizome - *(sti4+n);\par
620                         RhizomeLitter += *(sti4+n);\par
621                         n++;\par
622 \par
623                 \}\par
624 \par
625                 if((kGrain < 1e-10) || (TTc < REAL(THERMALP)[4]))\{\par
626                         newGrain = 0.0;\par
627                         Grain += newGrain;\par
628                 \}else\{\par
629                         newGrain = CanopyA * kGrain;\par
630                         /* No respiration for grain at the moment */\par
631                         /* No senescence either */\par
632                         Grain += newGrain;  \par
633                 \}\par
634 \par
635 /****************************************************************************\par
636 // CROPCENT SIMULATION BEGINS HHERE    \par
637 BiocroToCrocent(&LeafLitter,leaf.fallrate,leaf.lignin, &leaf.E, isotoperatio, 1, 0,leaflitter);\par
638 BiocroToCrocent(&StemLitter,stem.fallrate,stem.lignin, &stem.E, isotoperatio, 1, 0,stemlitter);\par
639 BiocroToCrocent(&RootLitter,root.fallrate,root.lignin, &root.E, isotoperatio, 0, 0,rootlitter);\par
640 BiocroToCrocent(&RhizomeLitter,rhiz.fallrate,rhiz.lignin, &rhiz.E, isotoperatio, 0, 0,rhizomelitter);\par
641 ***************************************************************************/\par
642    if(i % 24*centTimestep == 0)\{\par
643 \par
644                         LeafLitter_d = LeafLitter * ((0.1/30)*centTimestep);\par
645                         StemLitter_d = StemLitter * ((0.1/30)*centTimestep);\par
646                         RootLitter_d = RootLitter * ((0.1/30)*centTimestep);\par
647                         RhizomeLitter_d = RhizomeLitter * ((0.1/30)*centTimestep);\par
648 \par
649                         LeafLitter -= LeafLitter_d;\par
650                         StemLitter -= StemLitter_d;\par
651                         RootLitter -= RootLitter_d;\par
652                         RhizomeLitter -= RhizomeLitter_d;\par
653 \par
654                         centS = Century(&LeafLitter_d,&StemLitter_d,&RootLitter_d,&RhizomeLitter_d,\par
655                                         waterCont,*(pt_temp+i),centTimestep,SCCs,WaterS.runoff,\par
656                                         Nfert, /* N fertilizer*/\par
657                                         MinNitro, /* initial Mineral nitrogen */\par
658                                         *(pt_precip+i), /* precipitation */\par
659                                         REAL(CENTCOEFS)[9], /* Leaf litter lignin */\par
660                                         REAL(CENTCOEFS)[10], /* Stem litter lignin */\par
661                                         REAL(CENTCOEFS)[11], /* Root litter lignin */\par
662                                         REAL(CENTCOEFS)[12], /* Rhizome litter lignin */\par
663                                         REAL(CENTCOEFS)[13], /* Leaf litter N */\par
664                                         REAL(CENTCOEFS)[14], /* Stem litter N */\par
665                                         REAL(CENTCOEFS)[15],  /* Root litter N */\par
666                                         REAL(CENTCOEFS)[16],   /* Rhizome litter N */\par
667                                         soilType, \par
668                                         REAL(CENTKS));\par
669                 \}\par
670 \par
671 \par
672 \par
673                 MinNitro = centS.MinN; /* These should be kg / m^2 per week? */\par
674                 Resp = centS.Resp;\par
675                 SCCs[0] = centS.SCs[0];\par
676                 SCCs[1] = centS.SCs[1];\par
677                 SCCs[2] = centS.SCs[2];\par
678                 SCCs[3] = centS.SCs[3];\par
679                 SCCs[4] = centS.SCs[4];\par
680                 SCCs[5] = centS.SCs[5];\par
681                 SCCs[6] = centS.SCs[6];\par
682                 SCCs[7] = centS.SCs[7];\par
683                 SCCs[8] = centS.SCs[8];\par
684 \par
685 \par
686 \par
687                 ALitter = LeafLitter + StemLitter;\par
688                 BLitter = RootLitter + RhizomeLitter;\par
689     \par
690                 /* Here I could add a soil and nitrogen carbon component. I have soil\par
691                    moisture, I have temperature and root and rhizome biomass */\par
692 \par
693                 REAL(DayofYear)[i] =  INTEGER(DOY)[i];\par
694                 REAL(Hour)[i] =  INTEGER(HR)[i];\par
695                 REAL(CanopyAssim)[i] =  CanopyA;\par
696                 REAL(CanopyTrans)[i] =  CanopyT; \par
697                 REAL(Leafy)[i] = Leaf;\par
698                 REAL(Stemy)[i] = Stem;\par
699                 REAL(Rooty)[i] =  Root;\par
700                 REAL(Rhizomey)[i] = Rhizome;\par
701                 REAL(Grainy)[i] = Grain;\par
702                 REAL(LAIc)[i] = LAI;\par
703                 REAL(SoilWatCont)[i] = waterCont;\par
704                 REAL(StomatalCondCoefs)[i] = StomWS;\par
705                 REAL(LeafReductionCoefs)[i] = LeafWS;\par
706                 REAL(LeafNitrogen)[i] = LeafN;\par
707                 REAL(AboveLitter)[i] = ALitter;\par
708                 REAL(BelowLitter)[i] = BLitter;\par
709                 REAL(VmaxVec)[i] = vmax1;\par
710                 REAL(AlphaVec)[i] = alpha1;\par
711                 REAL(SpVec)[i] = Sp;\par
712                 REAL(MinNitroVec)[i] = MinNitro/ (24*centTimestep);\par
713                 REAL(RespVec)[i] = Resp / (24*centTimestep);\par
714                 REAL(SoilEvaporation)[i] = soilEvap;\par
715                 REAL(LeafPsimVec)[i] = LeafPsim;\par
716 \par
717         \}\par
718 \par
719 /* Populating the results of the Century model */\par
720 \par
721                 REAL(SCpools)[0] = centS.SCs[0];\par
722                 REAL(SCpools)[1] = centS.SCs[1];\par
723                 REAL(SCpools)[2] = centS.SCs[2];\par
724                 REAL(SCpools)[3] = centS.SCs[3];\par
725                 REAL(SCpools)[4] = centS.SCs[4];\par
726                 REAL(SCpools)[5] = centS.SCs[5];\par
727                 REAL(SCpools)[6] = centS.SCs[6];\par
728                 REAL(SCpools)[7] = centS.SCs[7];\par
729                 REAL(SCpools)[8] = centS.SCs[8];\par
730 \par
731                 REAL(SNpools)[0] = centS.SNs[0];\par
732                 REAL(SNpools)[1] = centS.SNs[1];\par
733                 REAL(SNpools)[2] = centS.SNs[2];\par
734                 REAL(SNpools)[3] = centS.SNs[3];\par
735                 REAL(SNpools)[4] = centS.SNs[4];\par
736                 REAL(SNpools)[5] = centS.SNs[5];\par
737                 REAL(SNpools)[6] = centS.SNs[6];\par
738                 REAL(SNpools)[7] = centS.SNs[7];\par
739                 REAL(SNpools)[8] = centS.SNs[8];\par
740 \par
741         SET_VECTOR_ELT(lists,0,DayofYear);\par
742         SET_VECTOR_ELT(lists,1,Hour);\par
743         SET_VECTOR_ELT(lists,2,CanopyAssim);\par
744         SET_VECTOR_ELT(lists,3,CanopyTrans);\par
745         SET_VECTOR_ELT(lists,4,Leafy);\par
746         SET_VECTOR_ELT(lists,5,Stemy);\par
747         SET_VECTOR_ELT(lists,6,Rooty);\par
748         SET_VECTOR_ELT(lists,7,Rhizomey);\par
749         SET_VECTOR_ELT(lists,8,Grainy);\par
750         SET_VECTOR_ELT(lists,9,LAIc);\par
751         SET_VECTOR_ELT(lists,10,TTTc);\par
752         SET_VECTOR_ELT(lists,11,SoilWatCont);\par
753         SET_VECTOR_ELT(lists,12,StomatalCondCoefs);\par
754         SET_VECTOR_ELT(lists,13,LeafReductionCoefs);\par
755         SET_VECTOR_ELT(lists,14,LeafNitrogen);\par
756         SET_VECTOR_ELT(lists,15,AboveLitter);\par
757         SET_VECTOR_ELT(lists,16,BelowLitter);\par
758         SET_VECTOR_ELT(lists,17,VmaxVec);\par
759         SET_VECTOR_ELT(lists,18,AlphaVec);\par
760         SET_VECTOR_ELT(lists,19,SpVec);\par
761         SET_VECTOR_ELT(lists,20,MinNitroVec);\par
762         SET_VECTOR_ELT(lists,21,RespVec);\par
763         SET_VECTOR_ELT(lists,22,SoilEvaporation);\par
764         SET_VECTOR_ELT(lists,23,cwsMat);\par
765         SET_VECTOR_ELT(lists,24,psimMat);\par
766         SET_VECTOR_ELT(lists,25,rdMat);\par
767         SET_VECTOR_ELT(lists,26,SCpools);\par
768         SET_VECTOR_ELT(lists,27,SNpools);\par
769         SET_VECTOR_ELT(lists,28,LeafPsimVec);\par
770 \par
771         SET_STRING_ELT(names,0,mkChar("DayofYear"));\par
772         SET_STRING_ELT(names,1,mkChar("Hour"));\par
773         SET_STRING_ELT(names,2,mkChar("CanopyAssim"));\par
774         SET_STRING_ELT(names,3,mkChar("CanopyTrans"));\par
775         SET_STRING_ELT(names,4,mkChar("Leaf"));\par
776         SET_STRING_ELT(names,5,mkChar("Stem"));\par
777         SET_STRING_ELT(names,6,mkChar("Root"));\par
778         SET_STRING_ELT(names,7,mkChar("Rhizome"));\par
779         SET_STRING_ELT(names,8,mkChar("Grain"));\par
780         SET_STRING_ELT(names,9,mkChar("LAI"));\par
781         SET_STRING_ELT(names,10,mkChar("ThermalT"));\par
782         SET_STRING_ELT(names,11,mkChar("SoilWatCont"));\par
783         SET_STRING_ELT(names,12,mkChar("StomatalCondCoefs"));\par
784         SET_STRING_ELT(names,13,mkChar("LeafReductionCoefs"));\par
785         SET_STRING_ELT(names,14,mkChar("LeafNitrogen"));\par
786         SET_STRING_ELT(names,15,mkChar("AboveLitter"));\par
787         SET_STRING_ELT(names,16,mkChar("BelowLitter"));\par
788         SET_STRING_ELT(names,17,mkChar("VmaxVec"));\par
789         SET_STRING_ELT(names,18,mkChar("AlphaVec"));\par
790         SET_STRING_ELT(names,19,mkChar("SpVec"));\par
791         SET_STRING_ELT(names,20,mkChar("MinNitroVec"));\par
792         SET_STRING_ELT(names,21,mkChar("RespVec"));\par
793         SET_STRING_ELT(names,22,mkChar("SoilEvaporation"));\par
794         SET_STRING_ELT(names,23,mkChar("cwsMat"));\par
795         SET_STRING_ELT(names,24,mkChar("psimMat"));\par
796         SET_STRING_ELT(names,25,mkChar("rdMat"));\par
797         SET_STRING_ELT(names,26,mkChar("SCpools"));\par
798         SET_STRING_ELT(names,27,mkChar("SNpools"));\par
799         SET_STRING_ELT(names,28,mkChar("LeafPsimVec"));\par
800         setAttrib(lists,R_NamesSymbol,names);\par
801         UNPROTECT(31);\par
802         return(lists);\par
803 \}\par
}
}
{\xe \v RSS_BG\:BioCro.c}
{\xe \v BioCro.c\:RSS_BG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RSS_BG (double {\i oStem}[], double {\i oLeaf}[], double {\i oRoot}[], double {\i oRhizome}[], double {\i oGrain}[], double {\i oLAI}[], double {\i sStem}[], double {\i sLeaf}[], double {\i sRoot}[], double {\i sRhizome}[], double {\i sGrain}[], double {\i sLAI}[], int {\i N1Dat})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1815                         \{\par
1816 \par
1817         int i;\par
1818         double diff1=0.0, RSS1=0.0, SST1=0.0;\par
1819         double diff2=0.0, RSS2=0.0, SST2=0.0;\par
1820         double diff3=0.0, RSS3=0.0, SST3=0.0;\par
1821         double diff4=0.0, RSS4=0.0, SST4=0.0; \par
1822         double diff5=0.0, RSS5=0.0, SST5=0.0;\par
1823         double diff6=0.0, RSS6=0.0, SST6=0.0;\par
1824         double RSS=0.0;\par
1825 \par
1826         for(i = 0 ; i < N1Dat; i++)\{\par
1827                 /* Stem */\par
1828                 if(oStem[i] >= 0)\{\par
1829                         SST1 += pow(oStem[i],2);\par
1830                         diff1 = oStem[i] - sStem[i];\par
1831                         RSS1 += pow(diff1,2);\par
1832                 \}\par
1833                 /* Leaf */\par
1834                 if(oLeaf[i] >= 0)\{\par
1835                         SST2 += pow(oLeaf[i],2);\par
1836                         diff2 = oLeaf[i] - sLeaf[i];\par
1837                         RSS2 += pow(diff2,2);\par
1838                 \}\par
1839                 /* Rhizome */\par
1840                 if(oRhizome[i] >= 0)\{\par
1841                         SST3 += pow(oRhizome[i],2);\par
1842                         diff3 = oRhizome[i] - sRhizome[i];\par
1843                         RSS3 += pow(diff3,2);\par
1844                 \}\par
1845                 /* Root */\par
1846                 if(oRoot[i] >= 0)\{\par
1847                         SST4 += pow(oRoot[i],2);\par
1848                         diff4 = oRoot[i] - sRoot[i];\par
1849                         RSS4 += pow(diff4,2);\par
1850                 \}\par
1851                 /* LAI */\par
1852                 if(oLAI[i] >= 0)\{\par
1853                         SST5 += pow(oLAI[i],2);\par
1854                         diff5 = oLAI[i] - sLAI[i];\par
1855                         RSS5 += pow(diff5,2);\par
1856                 \}\par
1857                 if(oGrain[i] >= 0)\{\par
1858                         SST6 += pow(oGrain[i],2);\par
1859                         diff6 = oGrain[i] - sGrain[i];\par
1860                         RSS6 += pow(diff6,2);\par
1861                 \}\par
1862         \}\par
1863 \par
1864         RSS = RSS1 + RSS2 + RSS3 + RSS4 + RSS5 + RSS6;\par
1865         return(RSS);\par
1866 \}\par
}
}
{\xe \v SABioGro\:BioCro.c}
{\xe \v BioCro.c\:SABioGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP SABioGro (SEXP {\i oTHERMAL}, SEXP {\i oSTEM}, SEXP {\i oLEAF}, SEXP {\i oROOT}, SEXP {\i oRHIZOME}, SEXP {\i oGRAIN}, SEXP {\i oLAI}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i DBPCOEF}, SEXP {\i VECSIZE}, SEXP {\i LAT}, SEXP {\i NLAYERS}, SEXP {\i RHIZOMEIRTL}, SEXP {\i SENESCTIME}, SEXP {\i TIMESTEP}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i KPARM}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i SOILCOEFS}, SEXP {\i WSFUN}, SEXP {\i WS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i CENTCOEFS}, SEXP {\i CENTKS}, SEXP {\i CENTTIMESTEP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i SP}, SEXP {\i SPD}, SEXP {\i THERMALP}, SEXP {\i INDEX}, SEXP {\i NDATA}, SEXP {\i N1DAT}, SEXP {\i NITER}, SEXP {\i NITER2}, SEXP {\i SATEMP}, SEXP {\i COOLSAMP}, SEXP {\i SCALE}, SEXP {\i SD}, SEXP {\i PHEN}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i NCOEFS}, SEXP {\i LNFUN}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i NNITROP})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 832 \{\par
833        \par
834         // compatibility with CanAC to pass alpha parameters\par
835        struct nitroParms nitroparms;\par
836         double TEMPdoubletoint;\par
837         nitroparms.ileafN=REAL(NNITROP)[0];\par
838         nitroparms.kln=REAL(NNITROP)[1];\par
839         nitroparms.Vmaxb1=REAL(NNITROP)[2];\par
840         nitroparms.Vmaxb0=REAL(NNITROP)[3];\par
841         nitroparms.alphab1=REAL(NNITROP)[4];\par
842         nitroparms.alphab0=REAL(NNITROP)[5];\par
843         nitroparms.Rdb1=REAL(NNITROP)[6];\par
844         nitroparms.Rdb0=REAL(NNITROP)[7];\par
845         nitroparms.kpLN=REAL(NNITROP)[8];\par
846         nitroparms.lnb0=REAL(NNITROP)[9];\par
847         nitroparms.lnb1=REAL(NNITROP)[10];\par
848         TEMPdoubletoint=REAL(NNITROP)[11];\par
849         nitroparms.lnFun=(int)TEMPdoubletoint;\par
850         nitroparms.maxln=REAL(NNITROP)[12];\par
851         nitroparms.minln=REAL(NNITROP)[13];\par
852         nitroparms.daymaxln=REAL(NNITROP)[14];\par
853 \par
854         /* External variables */\par
855         extern double CanopyAssim[8760] ;\par
856         extern double Leafy[8760] ;\par
857         extern double Stemy[8760] ;\par
858         extern double Rooty[8760] ;\par
859         extern double Rhizomey[8760] ;\par
860         extern double Grainy[8760] ;\par
861         extern double LAIc[8760] ;\par
862         /* Index variables */\par
863         int j,k,m;\par
864         int niter, niter2, iters = 0, iters2 = 0;\par
865         int accept = 0;\par
866         int n1 = 0, n2 = 0;\par
867         double upperT=REAL(UPPERTEMP)[0];\par
868         double lowerT=REAL(LOWERTEMP)[0];\par
869         /* The all important vector size */\par
870         int vecsize;\par
871         vecsize = INTEGER(VECSIZE)[0];\par
872         int Ndat;\par
873         int n1dat = 0;\par
874         Ndat = INTEGER(NDATA)[0];\par
875         niter = INTEGER(NITER)[0];\par
876         niter2 = INTEGER(NITER2)[0];\par
877         double saTemp;\par
878         int coolSamp;\par
879         double scale;\par
880         int phen;\par
881 \par
882 \par
883         saTemp = REAL(SATEMP)[0];\par
884         coolSamp = INTEGER(COOLSAMP)[0];\par
885         scale = REAL(SCALE)[0];\par
886         phen = INTEGER(PHEN)[0];\par
887 \par
888         int timestep;\par
889         double b0, b1;\par
890         double vmaxb1, alphab1;\par
891         double LeafN, kLN, Ca;\par
892 \par
893         b0 = REAL(B0)[0];\par
894         b1 = REAL(B1)[0];\par
895         timestep = INTEGER(TIMESTEP)[0];\par
896 \par
897         alphab1 = REAL(ALPHAB1)[0];\par
898         vmaxb1 = REAL(VMAXB1)[0];\par
899 \par
900         LeafN = REAL(ILEAFN)[0];\par
901         kLN = REAL(KLN)[0];\par
902 \par
903         /* Needed variables */\par
904         double lati, rhizome, irtl;\par
905         int nlayers;\par
906         /* Creating vectors */\par
907         double dbpcoef[25];\par
908         /* Picking the simulation */\par
909         int ind;\par
910         double sCanopyAssim[Ndat], sStemy[Ndat], sLeafy[Ndat];\par
911         double sRhizomey[Ndat], sRooty[Ndat], sGrainy[Ndat],  sLAIy[Ndat];\par
912         double oStemy[Ndat], oLeafy[Ndat];\par
913         double oRhizomey[Ndat], oRooty[Ndat], oGrainy[Ndat], oLAIy[Ndat];\par
914         /* more vairbles */\par
915         double rss = 0.0, oldRss;\par
916         double U , mr;\par
917 \par
918         /* Yet more */\par
919         double index = 0;\par
920         double sd1 = REAL(SD)[0];\par
921         double sd2 = REAL(SD)[1];\par
922         double sd3 = REAL(SD)[2];\par
923         double sd4 = REAL(SD)[3];\par
924 \par
925         double kLeaf_1, kStem_1, kRoot_1, kRhizome_1;\par
926         double kLeaf_2, kStem_2, kRoot_2, kRhizome_2;\par
927         double kLeaf_3, kStem_3, kRoot_3, kRhizome_3;\par
928         double kLeaf_4, kStem_4, kRoot_4, kRhizome_4;\par
929         double kLeaf_5, kStem_5, kRoot_5, kRhizome_5;\par
930         double kLeaf_6, kStem_6, kRoot_6, kRhizome_6, kGrain_6;\par
931         double k1, k2, k3, k4, k5, k6;\par
932         double vmax, alpha, kparm, theta, beta, Rd;\par
933         double oldkLeaf_1, oldkStem_1, oldkRhizome_1, oldkRoot_1;\par
934         double oldkLeaf_2, oldkStem_2, oldkRhizome_2, oldkRoot_2;\par
935         double oldkLeaf_3, oldkStem_3, oldkRhizome_3, oldkRoot_3;\par
936         double oldkLeaf_4, oldkStem_4, oldkRhizome_4, oldkRoot_4;\par
937         double oldkLeaf_5, oldkStem_5, oldkRhizome_5, oldkRoot_5;\par
938         double oldkLeaf_6, oldkStem_6, oldkRhizome_6, oldkRoot_6, oldkGrain_6;\par
939         /* Handling answers to pass to R*/\par
940 \par
941         SEXP lists;\par
942         SEXP names;\par
943 \par
944         SEXP ans1;\par
945 \par
946         SEXP RSS;\par
947         SEXP ACCPT;\par
948         SEXP RssVec;\par
949         SEXP RssVec2;\par
950 \par
951         SEXP simStem;\par
952         SEXP obsStem;\par
953 \par
954         SEXP simLeaf;\par
955         SEXP obsLeaf;\par
956 \par
957         SEXP simRhiz;\par
958         SEXP obsRhiz;\par
959 \par
960         SEXP simRoot;\par
961         SEXP obsRoot;\par
962 \par
963         SEXP simGrain;\par
964         SEXP obsGrain;\par
965 \par
966         SEXP simLAI;\par
967         SEXP obsLAI;\par
968 \par
969         SEXP TTime;\par
970         SEXP inde;\par
971 \par
972         SEXP mat1;\par
973         SEXP accept2;\par
974         SEXP accept3;\par
975         SEXP SAtemp;\par
976 \par
977         PROTECT(lists = allocVector(VECSXP,23)); /* 1 */\par
978         PROTECT(names = allocVector(STRSXP,23)); /* 2 */\par
979 \par
980         PROTECT(ans1 = allocVector(REALSXP,25)); /* 3 */\par
981         PROTECT(RSS = allocVector(REALSXP,1)); /* 4 */\par
982         PROTECT(ACCPT = allocVector(REALSXP,1)); /* 5 */\par
983         PROTECT(RssVec = allocVector(REALSXP,niter)); /* 6 */\par
984         PROTECT(RssVec2 = allocVector(REALSXP,niter2)); /* 7 */\par
985 \par
986         PROTECT(simStem = allocVector(REALSXP,Ndat)); /* 8 */\par
987         PROTECT(obsStem = allocVector(REALSXP,Ndat)); /* 9 */\par
988 \par
989         PROTECT(simLeaf = allocVector(REALSXP,Ndat)); /* 10 */\par
990         PROTECT(obsLeaf = allocVector(REALSXP,Ndat)); /* 11 */\par
991 \par
992         PROTECT(simRhiz = allocVector(REALSXP,Ndat)); /* 12 */\par
993         PROTECT(obsRhiz = allocVector(REALSXP,Ndat)); /* 13 */\par
994 \par
995         PROTECT(simRoot = allocVector(REALSXP,Ndat)); /* 14 */\par
996         PROTECT(obsRoot = allocVector(REALSXP,Ndat)); /* 15 */\par
997 \par
998         PROTECT(simGrain = allocVector(REALSXP,Ndat)); /* 16 */\par
999         PROTECT(obsGrain = allocVector(REALSXP,Ndat)); /* 17 */\par
1000 \par
1001         PROTECT(simLAI = allocVector(REALSXP,Ndat)); /* 18 */\par
1002         PROTECT(obsLAI = allocVector(REALSXP,Ndat)); /* 19 */\par
1003 \par
1004         PROTECT(TTime = allocVector(REALSXP,Ndat)); /* 20 */\par
1005         PROTECT(inde = allocVector(REALSXP,Ndat)); /* 21 */\par
1006 \par
1007         PROTECT(mat1 = allocMatrix(REALSXP,25,niter2)); /* 22 */\par
1008         PROTECT(accept2 = allocVector(REALSXP,1)); /* 23 */\par
1009         PROTECT(accept3 = allocVector(REALSXP,1)); /* 24 */\par
1010         PROTECT(SAtemp = allocVector(REALSXP,1)); /* 25 */\par
1011 \par
1012         /* Applying the scale to the sd */\par
1013         sd1 *= scale;\par
1014         sd2 *= scale;\par
1015         sd3 *= scale;\par
1016         sd4 *= scale;\par
1017 \par
1018         /* Picking them */\par
1019         lati = REAL(LAT)[0];\par
1020         rhizome = REAL(RHIZOMEIRTL)[0];\par
1021         irtl = REAL(RHIZOMEIRTL)[1];\par
1022         nlayers = INTEGER(NLAYERS)[0];\par
1023         Rd = REAL(RD)[0];\par
1024         Ca = REAL(CATM)[0];\par
1025         vmax = REAL(VMAX)[0];\par
1026         alpha = REAL(ALPHA)[0];\par
1027         kparm = REAL(KPARM)[0];\par
1028         theta = REAL(THETA)[0];\par
1029         beta = REAL(BETA)[0];\par
1030 \par
1031         /* Pick the observed */\par
1032         for(m=0;m<Ndat;m++)\{\par
1033                 oStemy[m] = REAL(oSTEM)[m];\par
1034                 REAL(obsStem)[m] = REAL(oSTEM)[m];\par
1035                 oLeafy[m] = REAL(oLEAF)[m];\par
1036                 REAL(obsLeaf)[m] = REAL(oLEAF)[m];\par
1037                 oRhizomey[m] = REAL(oRHIZOME)[m];\par
1038                 REAL(obsRhiz)[m] = REAL(oRHIZOME)[m];\par
1039                 oRooty[m] = REAL(oROOT)[m];\par
1040                 REAL(obsRoot)[m] = REAL(oROOT)[m];\par
1041                 oGrainy[m] = REAL(oGRAIN)[m];\par
1042                 REAL(obsGrain)[m] = REAL(oGRAIN)[m];\par
1043                 oLAIy[m] = REAL(oLAI)[m];\par
1044                 REAL(obsLAI)[m] = REAL(oLAI)[m];\par
1045         \}\par
1046 \par
1047         oldkLeaf_1 = REAL(DBPCOEF)[0];\par
1048         oldkStem_1 = REAL(DBPCOEF)[1];\par
1049         oldkRoot_1 = REAL(DBPCOEF)[2];\par
1050         oldkRhizome_1 = REAL(DBPCOEF)[3];\par
1051 \par
1052         oldkLeaf_2 = REAL(DBPCOEF)[4];\par
1053         oldkStem_2 = REAL(DBPCOEF)[5];\par
1054         oldkRoot_2 = REAL(DBPCOEF)[6];\par
1055         oldkRhizome_2 = REAL(DBPCOEF)[7];\par
1056 \par
1057         oldkLeaf_3 = REAL(DBPCOEF)[8];\par
1058         oldkStem_3 = REAL(DBPCOEF)[9];\par
1059         oldkRoot_3 = REAL(DBPCOEF)[10];\par
1060         oldkRhizome_3 = REAL(DBPCOEF)[11];\par
1061 \par
1062         oldkLeaf_4 = REAL(DBPCOEF)[12];\par
1063         oldkStem_4 = REAL(DBPCOEF)[13];\par
1064         oldkRoot_4 = REAL(DBPCOEF)[14];\par
1065         oldkRhizome_4 = REAL(DBPCOEF)[15];\par
1066 \par
1067         oldkLeaf_5 = REAL(DBPCOEF)[16];\par
1068         oldkStem_5 = REAL(DBPCOEF)[17];\par
1069         oldkRoot_5 = REAL(DBPCOEF)[18];\par
1070         oldkRhizome_5 = REAL(DBPCOEF)[19];\par
1071 \par
1072         oldkLeaf_6 = REAL(DBPCOEF)[20];\par
1073         oldkStem_6 = REAL(DBPCOEF)[21];\par
1074         oldkRoot_6 = REAL(DBPCOEF)[22];\par
1075         oldkRhizome_6 = REAL(DBPCOEF)[23];\par
1076         oldkGrain_6 = REAL(DBPCOEF)[24];\par
1077 \par
1078         GetRNGstate();\par
1079 \par
1080         oldRss = 1e6;\par
1081         /* This is a good part to start the optimization */\par
1082 \par
1083         /* determining the n1dat */\par
1084         n1dat = INTEGER(N1DAT)[phen-1];\par
1085 \par
1086         for(iters=0;iters<niter;iters++)\{\par
1087 \par
1088         /* Selecting the index to sample */\par
1089 \par
1090                 index = sel_phen(phen);\par
1091         \par
1092         /* First phenological stage */\par
1093         \par
1094                 kLeaf_1 = fabs(oldkLeaf_1);\par
1095                 kStem_1 = fabs(oldkStem_1);\par
1096                 kRoot_1 = fabs(oldkRoot_1);\par
1097 \par
1098 \par
1099                 if(index < 1)\{\par
1100                         kLeaf_1 = fabs(rnorm(kLeaf_1,sd1));\par
1101                 \}else\par
1102                         \par
1103                         if(index < 2)\{\par
1104                                 kStem_1 = fabs(rnorm(kStem_1,sd1));\par
1105                         \}else\par
1106 \par
1107                                 if(index < 3)\{\par
1108                                         kRoot_1 = fabs(rnorm(kRoot_1,sd1));\par
1109                                 \}\par
1110     \par
1111                 k1 = kLeaf_1 + kStem_1 + kRoot_1;\par
1112                 kLeaf_1 = kLeaf_1/k1;\par
1113                 kStem_1 = kStem_1/k1;\par
1114                 kRoot_1 = kRoot_1/k1;\par
1115     \par
1116                 if(index > 3 && index < 4)\{\par
1117                         kRhizome_1 = -rnorm(fabs(oldkRhizome_1),sd2);\par
1118                 \}else\{\par
1119                         kRhizome_1 = -fabs(oldkRhizome_1);\par
1120                 \}\par
1121 \par
1122                 /* Second phenological stage */\par
1123 \par
1124                 kLeaf_2 = fabs(oldkLeaf_2);\par
1125                 kStem_2 = fabs(oldkStem_2);\par
1126                 kRoot_2 = fabs(oldkRoot_2);\par
1127 \par
1128                 if(index > 4 && index < 5)\{\par
1129                         kLeaf_2 = fabs(rnorm(kLeaf_2,sd1));\par
1130                 \}\par
1131 \par
1132                 if(index > 5 && index < 6)\{\par
1133                         kStem_2 = fabs(rnorm(kStem_2,sd1));\par
1134                 \}\par
1135 \par
1136                 if(index > 6 && index < 7)\{\par
1137                         kRoot_2 = fabs(rnorm(kRoot_2,sd1));\par
1138                 \}\par
1139 \par
1140                 k2 = kLeaf_2 + kStem_2 + kRoot_2 ;\par
1141                 kLeaf_2 =  kLeaf_2/k2 ;\par
1142                 kStem_2 = kStem_2/k2 ;\par
1143                 kRoot_2 = kRoot_2/k2 ;\par
1144     \par
1145                 if(index > 7 && index < 8)\{\par
1146                         kRhizome_2 =-rnorm(fabs(oldkRhizome_2),sd2);\par
1147                 \}else\{\par
1148                         kRhizome_2 =-fabs(oldkRhizome_2);\par
1149                 \}\par
1150 \par
1151                 /* Third phenological stage */\par
1152 \par
1153                 kLeaf_3 = fabs(oldkLeaf_3);\par
1154                 kStem_3 = fabs(oldkStem_3);\par
1155                 kRoot_3 = fabs(oldkRoot_3);\par
1156                 kRhizome_3 = fabs(oldkRhizome_3);\par
1157 \par
1158                 if(index > 8 && index < 9)\{\par
1159                         kLeaf_3 = fabs(rnorm(kLeaf_3,sd1));\par
1160                 \}\par
1161 \par
1162                 if(index > 9 && index < 10)\{\par
1163                         kStem_3 = fabs(rnorm(kStem_3,sd1));\par
1164                 \}\par
1165 \par
1166                 if(index > 10 && index < 11)\{\par
1167                         kRoot_3 = fabs(rnorm(kRoot_3,sd1));\par
1168                 \}\par
1169 \par
1170                 if(index > 11 && index < 12)\{\par
1171                         kRhizome_3 = fabs(rnorm(kRhizome_3,sd1));\par
1172                 \}\par
1173 \par
1174                 k3 = kLeaf_3 + kStem_3 + kRoot_3 + kRhizome_3;\par
1175                 kLeaf_3 =  kLeaf_3/k3 ;\par
1176                 kStem_3 = kStem_3/k3 ;\par
1177                 kRoot_3 = kRoot_3/k3 ;\par
1178                 kRhizome_3 = kRhizome_3/k3 ;\par
1179     \par
1180                 /* Fourth phenological stage */\par
1181 \par
1182                 kLeaf_4 = fabs(oldkLeaf_4);\par
1183                 kStem_4 = fabs(oldkStem_4);\par
1184                 kRoot_4 = fabs(oldkRoot_4);\par
1185                 kRhizome_4 = fabs(oldkRhizome_4);\par
1186 \par
1187                 if(index > 12 && index < 13)\{\par
1188                         kLeaf_4 = fabs(rnorm(kLeaf_4,sd1));\par
1189                 \}\par
1190 \par
1191                 if(index > 13 && index < 14)\{\par
1192                         kStem_4 = fabs(rnorm(kStem_4,sd1));\par
1193                 \}\par
1194 \par
1195                 if(index > 14 && index < 15)\{\par
1196                         kRoot_4 = fabs(rnorm(kRoot_4,sd1));\par
1197                 \}\par
1198 \par
1199                 if(index > 15 && index < 16)\{\par
1200                         kRhizome_4 = fabs(rnorm(kRhizome_4,sd1));\par
1201                 \}\par
1202 \par
1203                 k4 = kLeaf_4 + kStem_4 + kRoot_4 + kRhizome_4;\par
1204                 kLeaf_4 =  kLeaf_4/k4 ;\par
1205                 kStem_4 = kStem_4/k4 ;\par
1206                 kRoot_4 = kRoot_4/k4 ;\par
1207                 kRhizome_4 = kRhizome_4/k4 ;\par
1208  \par
1209                 /* Fifth phenological stage */\par
1210 \par
1211                 kLeaf_5 = fabs(oldkLeaf_5);\par
1212                 kStem_5 = fabs(oldkStem_5);\par
1213                 kRoot_5 = fabs(oldkRoot_5);\par
1214                 kRhizome_5 = fabs(oldkRhizome_5);\par
1215 \par
1216                 if(index > 16 && index < 17)\{\par
1217                         kLeaf_5 = fabs(rnorm(kLeaf_5,sd1));\par
1218                 \}\par
1219 \par
1220                 if(index > 17 && index < 18)\{\par
1221                         kStem_5 = fabs(rnorm(kStem_5,sd1));\par
1222                 \}\par
1223 \par
1224                 if(index > 18 && index < 19)\{\par
1225                         kRoot_5 = fabs(rnorm(kRoot_5,sd1));\par
1226                 \}\par
1227 \par
1228                 if(index > 19 && index < 20)\{\par
1229                         kRhizome_5 = fabs(rnorm(kRhizome_5,sd1));\par
1230                 \}\par
1231 \par
1232                 k5 = kLeaf_5 + kStem_5 + kRoot_5 + kRhizome_5;\par
1233                 kLeaf_5 =  kLeaf_5/k5;\par
1234                 kStem_5 = kStem_5/k5;\par
1235                 kRoot_5 = kRoot_5/k5;\par
1236                 kRhizome_5 = kRhizome_5/k5;\par
1237 \par
1238                 /* Sixth phenological stage */\par
1239 \par
1240                 kLeaf_6 = fabs(oldkLeaf_6);\par
1241                 kStem_6 = fabs(oldkStem_6);\par
1242                 kRoot_6 = fabs(oldkRoot_6);\par
1243                 kRhizome_6 = fabs(oldkRhizome_6);\par
1244                 kGrain_6 = fabs(oldkGrain_6);\par
1245 \par
1246                 if(index > 20 && index < 21)\{\par
1247                         kLeaf_6 = fabs(rnorm(kLeaf_6,sd1));\par
1248                 \}\par
1249 \par
1250                 if(index > 21 && index < 22)\{\par
1251                         kStem_6 = fabs(rnorm(kStem_6,sd1));\par
1252                 \}\par
1253 \par
1254                 if(index > 22 && index < 23)\{\par
1255                         kRoot_6 = fabs(rnorm(kRoot_6,sd1));\par
1256                 \}\par
1257 \par
1258                 if(index > 23 && index < 24)\{\par
1259                         kRhizome_6 = fabs(rnorm(kRhizome_6,sd1));\par
1260                 \}\par
1261 \par
1262                 if(index > 24 && index < 25)\{\par
1263                         kGrain_6 = fabs(rnorm(kGrain_6,sd1));\par
1264                 \}\par
1265 \par
1266                 k6 = kLeaf_6 + kStem_6 + kRoot_6 + kRhizome_6 + kGrain_6;\par
1267                 kLeaf_6 =  kLeaf_6 / k6;\par
1268                 kStem_6 = kStem_6 / k6;\par
1269                 kRoot_6 = kRoot_6 / k6;\par
1270                 kRhizome_6 = kRhizome_6 / k6;\par
1271                 kGrain_6 = kGrain_6 / k6;\par
1272 \par
1273 /* Populating the dbp coefficients */\par
1274                 dbpcoef[0] = kLeaf_1;\par
1275                 dbpcoef[1] = kStem_1;\par
1276                 dbpcoef[2] = kRoot_1;\par
1277                 dbpcoef[3] = kRhizome_1;\par
1278                 dbpcoef[4] = kLeaf_2;\par
1279                 dbpcoef[5] = kStem_2;\par
1280                 dbpcoef[6] = kRoot_2;\par
1281                 dbpcoef[7] = kRhizome_2;\par
1282                 dbpcoef[8] = kLeaf_3;\par
1283                 dbpcoef[9] = kStem_3;\par
1284                 dbpcoef[10] = kRoot_3;\par
1285                 dbpcoef[11] = kRhizome_3;\par
1286                 dbpcoef[12] = kLeaf_4;\par
1287                 dbpcoef[13] = kStem_4;\par
1288                 dbpcoef[14] = kRoot_4;\par
1289                 dbpcoef[15] = kRhizome_4;\par
1290                 dbpcoef[16] = kLeaf_5;\par
1291                 dbpcoef[17] = kStem_5;\par
1292                 dbpcoef[18] = kRoot_5;\par
1293                 dbpcoef[19] = kRhizome_5;\par
1294                 dbpcoef[20] = kLeaf_6;\par
1295                 dbpcoef[21] = kStem_6;\par
1296                 dbpcoef[22] = kRoot_6;\par
1297                 dbpcoef[23] = kRhizome_6;\par
1298                 dbpcoef[24] = kGrain_6;\par
1299 \par
1300                 /* int p; */\par
1301                 /* for(p = 0;p<25;p++)\{ */\par
1302                 /*      Rprintf("dbpcoef %.i %.3f \\n",p,dbpcoef[p]); */\par
1303                 /* \} */\par
1304 \par
1305                 BioGro(lati,INTEGER(DOY),INTEGER(HR),REAL(SOLAR),REAL(TEMP),REAL(RH),\par
1306                        REAL(WINDSPEED),REAL(PRECIP), REAL(KD)[0], REAL(CHILHF)[0], \par
1307                        REAL(CHILHF)[1],nlayers,rhizome,\par
1308                        irtl,REAL(SENESCTIME),INTEGER(TIMESTEP)[0],vecsize,\par
1309                        REAL(SP)[0], REAL(SPD)[0], dbpcoef, REAL(THERMALP),\par
1310                        vmax,alpha,kparm,theta,beta,Rd,Ca,b0,b1, REAL(SOILCOEFS), LeafN, kLN,\par
1311                        vmaxb1, alphab1, REAL(MRESP), INTEGER(SOILTYPE)[0], INTEGER(WSFUN)[0],\par
1312                        INTEGER(WS)[0], REAL(CENTCOEFS),REAL(CENTKS), INTEGER(CENTTIMESTEP)[0],\par
1313                        INTEGER(SOILLAYERS)[0], REAL(SOILDEPTHS), REAL(CWS), INTEGER(HYDRDIST)[0], \par
1314                        REAL(SECS), REAL(NCOEFS)[0], REAL(NCOEFS)[1], REAL(NCOEFS)[2], INTEGER(LNFUN)[0],upperT,lowerT,nitroparms);\par
1315 \par
1316                 /* pick the needed elements for the SSE */\par
1317                 for(k=0;k<Ndat;k++)\{\par
1318                         ind = INTEGER(INDEX)[k];\par
1319                         sCanopyAssim[k] = CanopyAssim[ind]; /* Rprintf("CanopyAssim %.i %.1f \\n",ind,CanopyAssim[ind]); */\par
1320                         sLeafy[k] = Leafy[ind]; /* Rprintf("Leafy %.i %.1f \\n",ind,Leafy[ind]); */\par
1321                         sStemy[k] = Stemy[ind]; /* Rprintf("Stemy %.i %.1f \\n",ind,Stemy[ind]); */\par
1322                         sRooty[k] = Rooty[ind]; /* Rprintf("Rooty %.i %.1f \\n",ind,Rooty[ind]); */\par
1323                         sRhizomey[k] = Rhizomey[ind]; /* Rprintf("Rhizomey %.i %.1f \\n",ind,Rhizomey[ind]); */\par
1324                         sGrainy[k] = Grainy[ind]; /* Rprintf("Grainy %.i %.1f \\n",ind,Grainy[ind]); */\par
1325                         sLAIy[k] = LAIc[ind]; /* Rprintf("LAIc %.i %.1f \\n",ind,LAIc[ind]); */\par
1326                 \}\par
1327 \par
1328 \par
1329                 rss = RSS_BG(oStemy,oLeafy,oRooty,oRhizomey,oGrainy,oLAIy,\par
1330                              sStemy,sLeafy,sRooty,sRhizomey,sGrainy,sLAIy,\par
1331                              n1dat);\par
1332 \par
1333 \par
1334                 REAL(RssVec)[iters] = rss;\par
1335                 U = runif(0,1);\par
1336                 if(rss < (oldRss - saTemp *log(U)))\{\par
1337                         accept++;\par
1338                         oldRss = rss;\par
1339                         if((accept%coolSamp)==0)\{\par
1340                                 saTemp *= 0.9 ;\par
1341                         \}\par
1342                         /* accept the coefficients */\par
1343                         oldkLeaf_1 = dbpcoef[0];\par
1344                         oldkStem_1 = dbpcoef[1];\par
1345                         oldkRoot_1 = dbpcoef[2];\par
1346                         oldkRhizome_1 = dbpcoef[3];\par
1347 \par
1348                         oldkLeaf_2 = dbpcoef[4];\par
1349                         oldkStem_2 = dbpcoef[5];\par
1350                         oldkRoot_2 = dbpcoef[6];\par
1351                         oldkRhizome_2 = dbpcoef[7];\par
1352 \par
1353                         oldkLeaf_3 = dbpcoef[8];\par
1354                         oldkStem_3 = dbpcoef[9];\par
1355                         oldkRoot_3 = dbpcoef[10];\par
1356                         oldkRhizome_3 = dbpcoef[11];\par
1357 \par
1358                         oldkLeaf_4 = dbpcoef[12];\par
1359                         oldkStem_4 = dbpcoef[13];\par
1360                         oldkRoot_4 = dbpcoef[14];\par
1361                         oldkRhizome_4 = dbpcoef[15];\par
1362 \par
1363                         oldkLeaf_5 = dbpcoef[16];\par
1364                         oldkStem_5 = dbpcoef[17];\par
1365                         oldkRoot_5 = dbpcoef[18];\par
1366                         oldkRhizome_5 = dbpcoef[19];\par
1367 \par
1368                         oldkLeaf_6 = dbpcoef[20];\par
1369                         oldkStem_6 = dbpcoef[21];\par
1370                         oldkRoot_6 = dbpcoef[22];\par
1371                         oldkRhizome_6 = dbpcoef[23];\par
1372                         oldkGrain_6 = dbpcoef[24];\par
1373 \par
1374                 \}\par
1375                 /* It would be nice to put them in a matrix */\par
1376 \par
1377         \}\par
1378 \par
1379         for(iters2=0;iters2<niter2;iters2++)\{\par
1380 \par
1381                 index = sel_phen(phen);\par
1382 \par
1383                 /* First phenological stage */\par
1384 \par
1385                 kLeaf_1 = fabs(oldkLeaf_1);\par
1386                 kStem_1 = fabs(oldkStem_1);\par
1387                 kRoot_1 = fabs(oldkRoot_1);\par
1388         \par
1389                 if(index < 1)\{\par
1390                         kLeaf_1 = fabs(rnorm(kLeaf_1,sd1));\par
1391                 \}else\par
1392     \par
1393                         if(index < 2)\{\par
1394                                 kStem_1 = fabs(rnorm(kStem_1,sd1));\par
1395                         \}else\par
1396 \par
1397                                 if(index < 3)\{\par
1398                                         kRoot_1 = fabs(rnorm(kRoot_1,sd1));\par
1399                                 \}\par
1400     \par
1401                 k1 = kLeaf_1 + kStem_1 + kRoot_1;\par
1402                 kLeaf_1 = kLeaf_1/k1;\par
1403                 kStem_1 = kStem_1/k1;\par
1404                 kRoot_1 = kRoot_1/k1;\par
1405     \par
1406                 if(index > 3 && index < 4)\{\par
1407                         kRhizome_1 = -rnorm(fabs(oldkRhizome_1),sd2);\par
1408                 \}else\{\par
1409                         kRhizome_1 = -fabs(oldkRhizome_1);\par
1410                 \}\par
1411 \par
1412                 /* Second phenological stage */\par
1413 \par
1414                 kLeaf_2 = fabs(oldkLeaf_2);\par
1415                 kStem_2 = fabs(oldkStem_2);\par
1416                 kRoot_2 = fabs(oldkRoot_2);\par
1417 \par
1418                 if(index > 4 && index < 5)\{\par
1419                         kLeaf_2 = fabs(rnorm(kLeaf_2,sd1));\par
1420                 \}\par
1421 \par
1422                 if(index > 5 && index < 6)\{\par
1423                         kStem_2 = fabs(rnorm(kStem_2,sd1));\par
1424                 \}\par
1425 \par
1426                 if(index > 6 && index < 7)\{\par
1427                         kRoot_2 = fabs(rnorm(kRoot_2,sd1));\par
1428                 \}\par
1429 \par
1430                 k2 = kLeaf_2 + kStem_2 + kRoot_2 ;\par
1431                 kLeaf_2 =  kLeaf_2/k2 ;\par
1432                 kStem_2 = kStem_2/k2 ;\par
1433                 kRoot_2 = kRoot_2/k2 ;\par
1434     \par
1435                 if(index > 7 && index < 8)\{\par
1436                         kRhizome_2 =-rnorm(fabs(oldkRhizome_2),sd2);\par
1437                 \}else\{\par
1438                         kRhizome_2 =-fabs(oldkRhizome_2);\par
1439                 \}\par
1440 \par
1441                 /* Third phenological stage */\par
1442 \par
1443                 kLeaf_3 = fabs(oldkLeaf_3);\par
1444                 kStem_3 = fabs(oldkStem_3);\par
1445                 kRoot_3 = fabs(oldkRoot_3);\par
1446                 kRhizome_3 = fabs(oldkRhizome_3);\par
1447 \par
1448                 if(index > 8 && index < 9)\{\par
1449                         kLeaf_3 = fabs(rnorm(kLeaf_3,sd1));\par
1450                 \}\par
1451 \par
1452                 if(index > 9 && index < 10)\{\par
1453                         kStem_3 = fabs(rnorm(kStem_3,sd1));\par
1454                 \}\par
1455 \par
1456                 if(index > 10 && index < 11)\{\par
1457                         kRoot_3 = fabs(rnorm(kRoot_3,sd1));\par
1458                 \}\par
1459 \par
1460                 if(index > 11 && index < 12)\{\par
1461                         kRhizome_3 = fabs(rnorm(kRhizome_3,sd1));\par
1462                 \}\par
1463 \par
1464                 k3 = kLeaf_3 + kStem_3 + kRoot_3 + kRhizome_3;\par
1465                 kLeaf_3 =  kLeaf_3/k3 ;\par
1466                 kStem_3 = kStem_3/k3 ;\par
1467                 kRoot_3 = kRoot_3/k3 ;\par
1468                 kRhizome_3 = kRhizome_3/k3 ;\par
1469     \par
1470                 /* Fourth phenological stage */\par
1471 \par
1472                 kLeaf_4 = fabs(oldkLeaf_4);\par
1473                 kStem_4 = fabs(oldkStem_4);\par
1474                 kRoot_4 = fabs(oldkRoot_4);\par
1475                 kRhizome_4 = fabs(oldkRhizome_4);\par
1476 \par
1477                 if(index > 12 && index < 13)\{\par
1478                         kLeaf_4 = fabs(rnorm(kLeaf_4,sd1));\par
1479                 \}\par
1480 \par
1481                 if(index > 13 && index < 14)\{\par
1482                         kStem_4 = fabs(rnorm(kStem_4,sd1));\par
1483                 \}\par
1484 \par
1485                 if(index > 14 && index < 15)\{\par
1486                         kRoot_4 = fabs(rnorm(kRoot_4,sd1));\par
1487                 \}\par
1488 \par
1489                 if(index > 15 && index < 16)\{\par
1490                         kRhizome_4 = fabs(rnorm(kRhizome_4,sd1));\par
1491                 \}\par
1492 \par
1493                 k4 = kLeaf_4 + kStem_4 + kRoot_4 + kRhizome_4;\par
1494                 kLeaf_4 =  kLeaf_4/k4 ;\par
1495                 kStem_4 = kStem_4/k4 ;\par
1496                 kRoot_4 = kRoot_4/k4 ;\par
1497                 kRhizome_4 = kRhizome_4/k4 ;\par
1498  \par
1499                 /* Fifth phenological stage */\par
1500 \par
1501                 kLeaf_5 = fabs(oldkLeaf_5);\par
1502                 kStem_5 = fabs(oldkStem_5);\par
1503                 kRoot_5 = fabs(oldkRoot_5);\par
1504                 kRhizome_5 = fabs(oldkRhizome_5);\par
1505 \par
1506                 if(index > 16 && index < 17)\{\par
1507                         kLeaf_5 = fabs(rnorm(kLeaf_5,sd1));\par
1508                 \}\par
1509 \par
1510                 if(index > 17 && index < 18)\{\par
1511                         kStem_5 = fabs(rnorm(kStem_5,sd1));\par
1512                 \}\par
1513 \par
1514                 if(index > 18 && index < 19)\{\par
1515                         kRoot_5 = fabs(rnorm(kRoot_5,sd1));\par
1516                 \}\par
1517 \par
1518                 if(index > 19 && index < 20)\{\par
1519                         kRhizome_5 = fabs(rnorm(kRhizome_5,sd1));\par
1520                 \}\par
1521 \par
1522                 k5 = kLeaf_5 + kStem_5 + kRoot_5 + kRhizome_5;\par
1523                 kLeaf_5 =  kLeaf_5/k5 ;\par
1524                 kStem_5 = kStem_5/k5 ;\par
1525                 kRoot_5 = kRoot_5/k5 ;\par
1526                 kRhizome_5 = kRhizome_5/k5 ;\par
1527 \par
1528                 /* Sixth phenological stage */\par
1529 \par
1530                 kLeaf_6 = fabs(oldkLeaf_6);\par
1531                 kStem_6 = fabs(oldkStem_6);\par
1532                 kRoot_6 = fabs(oldkRoot_6);\par
1533                 kRhizome_6 = fabs(oldkRhizome_6);\par
1534                 kGrain_6 = fabs(oldkGrain_6);\par
1535 \par
1536                 if(index > 20 && index < 21)\{\par
1537                         kLeaf_6 = fabs(rnorm(kLeaf_6,sd1));\par
1538                 \}\par
1539 \par
1540                 if(index > 21 && index < 22)\{\par
1541                         kStem_6 = fabs(rnorm(kStem_6,sd1));\par
1542                 \}\par
1543 \par
1544                 if(index > 22 && index < 23)\{\par
1545                         kRoot_6 = fabs(rnorm(kRoot_6,sd1));\par
1546                 \}\par
1547 \par
1548                 if(index > 23 && index < 24)\{\par
1549                         kRhizome_6 = fabs(rnorm(kRhizome_6,sd1));\par
1550                 \}\par
1551 \par
1552                 if(index > 24 && index < 25)\{\par
1553                         kGrain_6 = fabs(rnorm(kGrain_6,sd1));\par
1554                 \}\par
1555 \par
1556                 k6 = kLeaf_6 + kStem_6 + kRoot_6 + kRhizome_6 + kGrain_6;\par
1557                 kLeaf_6 =  kLeaf_6/k6 ;\par
1558                 kStem_6 = kStem_6/k6 ;\par
1559                 kRoot_6 = kRoot_6/k6 ;\par
1560                 kRhizome_6 = kRhizome_6/k6 ;\par
1561                 kGrain_6 = kGrain_6/k6 ;\par
1562 \par
1563 /* Populating the dbp coefficients */\par
1564 \par
1565                 dbpcoef[0] = kLeaf_1;\par
1566                 dbpcoef[1] = kStem_1;\par
1567                 dbpcoef[2] = kRoot_1;\par
1568                 dbpcoef[3] = kRhizome_1;\par
1569                 dbpcoef[4] = kLeaf_2;\par
1570                 dbpcoef[5] = kStem_2;\par
1571                 dbpcoef[6] = kRoot_2;\par
1572                 dbpcoef[7] = kRhizome_2;\par
1573                 dbpcoef[8] = kLeaf_3;\par
1574                 dbpcoef[9] = kStem_3;\par
1575                 dbpcoef[10] = kRoot_3;\par
1576                 dbpcoef[11] = kRhizome_3;\par
1577                 dbpcoef[12] = kLeaf_4;\par
1578                 dbpcoef[13] = kStem_4;\par
1579                 dbpcoef[14] = kRoot_4;\par
1580                 dbpcoef[15] = kRhizome_4;\par
1581                 dbpcoef[16] = kLeaf_5;\par
1582                 dbpcoef[17] = kStem_5;\par
1583                 dbpcoef[18] = kRoot_5;\par
1584                 dbpcoef[19] = kRhizome_5;\par
1585                 dbpcoef[20] = kLeaf_6;\par
1586                 dbpcoef[21] = kStem_6;\par
1587                 dbpcoef[22] = kRoot_6;\par
1588                 dbpcoef[23] = kRhizome_6;\par
1589                 dbpcoef[24] = kGrain_6;\par
1590  \par
1591                 BioGro(lati,INTEGER(DOY),INTEGER(HR),REAL(SOLAR),REAL(TEMP),REAL(RH),\par
1592                        REAL(WINDSPEED),REAL(PRECIP), REAL(KD)[0], REAL(CHILHF)[0], \par
1593                        REAL(CHILHF)[1],nlayers,rhizome,\par
1594                        irtl,REAL(SENESCTIME),INTEGER(TIMESTEP)[0],vecsize,\par
1595                        REAL(SP)[0], REAL(SPD)[0], dbpcoef, REAL(THERMALP),\par
1596                        vmax,alpha,kparm,theta,beta,Rd,Ca,b0,b1, REAL(SOILCOEFS), LeafN, kLN,\par
1597                        vmaxb1, alphab1, REAL(MRESP), INTEGER(SOILTYPE)[0], INTEGER(WSFUN)[0],\par
1598                        INTEGER(WS)[0], REAL(CENTCOEFS),REAL(CENTKS), INTEGER(CENTTIMESTEP)[0],\par
1599                        INTEGER(SOILLAYERS)[0], REAL(SOILDEPTHS), REAL(CWS), INTEGER(HYDRDIST)[0],\par
1600                        REAL(SECS), REAL(NCOEFS)[0], REAL(NCOEFS)[1], REAL(NCOEFS)[2], INTEGER(LNFUN)[0],upperT,lowerT,nitroparms);\par
1601 \par
1602                 /* pick the needed elements for the SSE */\par
1603                 for(k=0;k<Ndat;k++)\{\par
1604                         ind = INTEGER(INDEX)[k];\par
1605                         sCanopyAssim[k] = CanopyAssim[ind];\par
1606                         sLeafy[k] = Leafy[ind];\par
1607                         sStemy[k] = Stemy[ind];\par
1608                         sRooty[k] = Rooty[ind];\par
1609                         sRhizomey[k] = Rhizomey[ind];\par
1610                         sLAIy[k] = LAIc[ind];\par
1611                 \}\par
1612 \par
1613                 rss = RSS_BG(oStemy,oLeafy,oRooty,oRhizomey,oGrainy,oLAIy,\par
1614                              sStemy,sLeafy,sRooty,sRhizomey,sGrainy,sLAIy,\par
1615                              n1dat);\par
1616 \par
1617                 REAL(RssVec2)[iters2] = rss;\par
1618 \par
1619                 mr = exp(-rss) / exp(-oldRss);\par
1620 \par
1621                 U = runif(0,1); \par
1622                 if(mr > U)\{ \par
1623                         n2++;\par
1624                         /* accept the coefficients */\par
1625                         oldkLeaf_1 = dbpcoef[0];\par
1626                         oldkStem_1 = dbpcoef[1];\par
1627                         oldkRoot_1 = dbpcoef[2];\par
1628                         oldkRhizome_1 = dbpcoef[3];\par
1629             \par
1630                         oldkLeaf_2 = dbpcoef[4];\par
1631                         oldkStem_2 = dbpcoef[5];\par
1632                         oldkRoot_2 = dbpcoef[6];\par
1633                         oldkRhizome_2 = dbpcoef[7];\par
1634             \par
1635                         oldkLeaf_3 = dbpcoef[8];\par
1636                         oldkStem_3 = dbpcoef[9];\par
1637                         oldkRoot_3 = dbpcoef[10];\par
1638                         oldkRhizome_3 = dbpcoef[11];\par
1639             \par
1640                         oldkLeaf_4 = dbpcoef[12];\par
1641                         oldkStem_4 = dbpcoef[13];\par
1642                         oldkRoot_4 = dbpcoef[14];\par
1643                         oldkRhizome_4 = dbpcoef[15];\par
1644 \par
1645                         oldkLeaf_5 = dbpcoef[16];\par
1646                         oldkStem_5 = dbpcoef[17];\par
1647                         oldkRoot_5 = dbpcoef[18];\par
1648                         oldkRhizome_5 = dbpcoef[19];\par
1649 \par
1650                         oldkLeaf_6 = dbpcoef[20];\par
1651                         oldkStem_6 = dbpcoef[21];\par
1652                         oldkRoot_6 = dbpcoef[22];\par
1653                         oldkRhizome_6 = dbpcoef[23];\par
1654                         oldkGrain_6 = dbpcoef[24];\par
1655 \par
1656                         oldRss = rss;\par
1657                 \}         \par
1658                 /* put them in a matrix */\par
1659                 REAL(mat1)[n1*25] = dbpcoef[0];\par
1660                 REAL(mat1)[1 + n1*25] = dbpcoef[1];\par
1661                 REAL(mat1)[2 + n1*25] = dbpcoef[2];\par
1662                 REAL(mat1)[3 + n1*25] = dbpcoef[3];\par
1663 \par
1664                 REAL(mat1)[4 + n1*25] = dbpcoef[4];\par
1665                 REAL(mat1)[5 + n1*25] = dbpcoef[5];\par
1666                 REAL(mat1)[6 + n1*25] = dbpcoef[6];\par
1667                 REAL(mat1)[7 + n1*25] = dbpcoef[7];\par
1668             \par
1669                 REAL(mat1)[8 + n1*25] = dbpcoef[8];\par
1670                 REAL(mat1)[9 + n1*25] = dbpcoef[9];\par
1671                 REAL(mat1)[10 + n1*25] = dbpcoef[10];\par
1672                 REAL(mat1)[11 + n1*25] = dbpcoef[11];\par
1673 \par
1674                 REAL(mat1)[12 + n1*25] = dbpcoef[12];\par
1675                 REAL(mat1)[13 + n1*25] = dbpcoef[13];\par
1676                 REAL(mat1)[14 + n1*25] = dbpcoef[14];\par
1677                 REAL(mat1)[15 + n1*25] = dbpcoef[15];\par
1678 \par
1679                 REAL(mat1)[16 + n1*25] = dbpcoef[16];\par
1680                 REAL(mat1)[17 + n1*25] = dbpcoef[17];\par
1681                 REAL(mat1)[18 + n1*25] = dbpcoef[18];\par
1682                 REAL(mat1)[19 + n1*25] = dbpcoef[19];\par
1683 \par
1684                 REAL(mat1)[20 + n1*25] = dbpcoef[20];\par
1685                 REAL(mat1)[21 + n1*25] = dbpcoef[21];\par
1686                 REAL(mat1)[22 + n1*25] = dbpcoef[22];\par
1687                 REAL(mat1)[23 + n1*25] = dbpcoef[23];\par
1688                 REAL(mat1)[24 + n1*25] = dbpcoef[24];\par
1689 \par
1690                 n1++;\par
1691         \}\par
1692         PutRNGstate();\par
1693 \par
1694         REAL(ans1)[0] = oldkLeaf_1;\par
1695         REAL(ans1)[1] = oldkStem_1;\par
1696         REAL(ans1)[2] = oldkRoot_1;\par
1697         REAL(ans1)[3] = oldkRhizome_1;\par
1698 \par
1699         REAL(ans1)[4] = oldkLeaf_2;\par
1700         REAL(ans1)[5] = oldkStem_2;\par
1701         REAL(ans1)[6] = oldkRoot_2;\par
1702         REAL(ans1)[7] = oldkRhizome_2;\par
1703 \par
1704         REAL(ans1)[8] = oldkLeaf_3;\par
1705         REAL(ans1)[9] = oldkStem_3;\par
1706         REAL(ans1)[10] = oldkRoot_3;\par
1707         REAL(ans1)[11] = oldkRhizome_3;\par
1708 \par
1709         REAL(ans1)[12] = oldkLeaf_4;\par
1710         REAL(ans1)[13] = oldkStem_4;\par
1711         REAL(ans1)[14] = oldkRoot_4;\par
1712         REAL(ans1)[15] = oldkRhizome_4;\par
1713 \par
1714         REAL(ans1)[16] = oldkLeaf_5;\par
1715         REAL(ans1)[17] = oldkStem_5;\par
1716         REAL(ans1)[18] = oldkRoot_5;\par
1717         REAL(ans1)[19] = oldkRhizome_5;\par
1718 \par
1719         REAL(ans1)[20] = oldkLeaf_6;\par
1720         REAL(ans1)[21] = oldkStem_6;\par
1721         REAL(ans1)[22] = oldkRoot_6;\par
1722         REAL(ans1)[23] = oldkRhizome_6;\par
1723         REAL(ans1)[24] = oldkGrain_6;\par
1724 \par
1725         REAL(RSS)[0] = oldRss;\par
1726 \par
1727         REAL(ACCPT)[0] = accept;\par
1728         REAL(accept2)[0] = n1;\par
1729         REAL(accept3)[0] = n2;\par
1730         REAL(SAtemp)[0] = saTemp;\par
1731 \par
1732         for(j=0;j<Ndat;j++)\{\par
1733                 ind = INTEGER(INDEX)[j];\par
1734                 REAL(simStem)[j] = Stemy[ind];\par
1735                 REAL(simLeaf)[j] = Leafy[ind];\par
1736                 REAL(simRhiz)[j] = Rhizomey[ind];\par
1737                 REAL(simRoot)[j] = Rooty[ind];\par
1738                 REAL(simGrain)[j] = Grainy[ind];\par
1739                 REAL(simLAI)[j] = LAIc[ind];\par
1740                 REAL(TTime)[j] = REAL(oTHERMAL)[j];\par
1741                 REAL(inde)[j] = INTEGER(INDEX)[j];\par
1742         \}\par
1743 \par
1744         SET_VECTOR_ELT(lists,0,ans1);\par
1745         SET_VECTOR_ELT(lists,1,RSS);\par
1746         SET_VECTOR_ELT(lists,2,ACCPT);\par
1747         SET_VECTOR_ELT(lists,3,RssVec);\par
1748         SET_VECTOR_ELT(lists,4,simStem);\par
1749         SET_VECTOR_ELT(lists,5,TTime);\par
1750         SET_VECTOR_ELT(lists,6,inde);\par
1751         SET_VECTOR_ELT(lists,7,obsStem);\par
1752 \par
1753         SET_VECTOR_ELT(lists,8,simLeaf);\par
1754         SET_VECTOR_ELT(lists,9,obsLeaf);\par
1755 \par
1756         SET_VECTOR_ELT(lists,10,simRhiz);\par
1757         SET_VECTOR_ELT(lists,11,obsRhiz);\par
1758 \par
1759         SET_VECTOR_ELT(lists,12,simLAI);\par
1760         SET_VECTOR_ELT(lists,13,obsLAI);\par
1761 \par
1762         SET_VECTOR_ELT(lists,14,simRoot);\par
1763         SET_VECTOR_ELT(lists,15,obsRoot);\par
1764 \par
1765         SET_VECTOR_ELT(lists,16,simGrain);\par
1766         SET_VECTOR_ELT(lists,17,obsGrain);\par
1767 \par
1768         SET_VECTOR_ELT(lists,18,RssVec2);\par
1769 \par
1770         SET_VECTOR_ELT(lists,19,mat1);\par
1771         SET_VECTOR_ELT(lists,20,accept2);\par
1772         SET_VECTOR_ELT(lists,21,accept3);\par
1773         SET_VECTOR_ELT(lists,22,SAtemp);\par
1774 \par
1775         SET_STRING_ELT(names,0,mkChar("coefs"));\par
1776         SET_STRING_ELT(names,1,mkChar("rss"));\par
1777         SET_STRING_ELT(names,2,mkChar("accept"));\par
1778         SET_STRING_ELT(names,3,mkChar("RssVec"));\par
1779         SET_STRING_ELT(names,4,mkChar("simStem"));\par
1780         SET_STRING_ELT(names,5,mkChar("TTime"));\par
1781         SET_STRING_ELT(names,6,mkChar("index"));\par
1782         SET_STRING_ELT(names,7,mkChar("obsStem"));\par
1783 \par
1784         SET_STRING_ELT(names,8,mkChar("simLeaf"));\par
1785         SET_STRING_ELT(names,9,mkChar("obsLeaf"));\par
1786         SET_STRING_ELT(names,10,mkChar("simRhiz"));\par
1787         SET_STRING_ELT(names,11,mkChar("obsRhiz"));\par
1788         SET_STRING_ELT(names,12,mkChar("simLAI"));\par
1789         SET_STRING_ELT(names,13,mkChar("obsLAI"));\par
1790         SET_STRING_ELT(names,14,mkChar("simRoot"));\par
1791         SET_STRING_ELT(names,15,mkChar("obsRoot"));\par
1792         SET_STRING_ELT(names,16,mkChar("simGrain"));\par
1793         SET_STRING_ELT(names,17,mkChar("obsGrain"));\par
1794 \par
1795         SET_STRING_ELT(names,18,mkChar("RssVec2"));\par
1796         SET_STRING_ELT(names,19,mkChar("resMC"));\par
1797         SET_STRING_ELT(names,20,mkChar("accept2"));\par
1798         SET_STRING_ELT(names,21,mkChar("accept3"));\par
1799         SET_STRING_ELT(names,22,mkChar("saTemp"));\par
1800 \par
1801         setAttrib(lists,R_NamesSymbol,names);\par
1802 \par
1803         UNPROTECT(25);\par
1804         return(lists);\par
1805 \}\par
}
}
{\xe \v sel_phen\:BioCro.c}
{\xe \v BioCro.c\:sel_phen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sel_phen (int {\i phen})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2262                          \{\par
2263 \par
2264         double index = 0;\par
2265 \par
2266         if(phen == 6)\{\par
2267                 index = runif(20,25);\par
2268         \}else \par
2269          if(phen == 5)\{\par
2270                  index = runif(16,20);\par
2271          \}else\par
2272           if(phen == 4)\{\par
2273                   index = runif(12,16);\par
2274           \}else\par
2275            if(phen == 3)\{\par
2276                    index = runif(8,12);\par
2277            \}else\par
2278             if(phen == 2)\{\par
2279                     index = runif(4,8);\par
2280             \}else\par
2281              if(phen == 1)\{\par
2282                      index = runif(0,4);\par
2283              \}\par
2284 \par
2285         return(index);\par
2286 \par
2287 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/BioCro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/BioCro.h}
{\xe \v /home/dlebauer/dev/biocro/src/BioCro.h}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_bio_cro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RSS_BG} (double oStem[], double oLeaf[], double oRhizome[], double oRoot[], double oGrain[], double oLAI[], double sStem[], double sLeaf[], double sRhizome[], double sRoot[], double sGrain[], double sLAI[], int N1Dat)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BioGro} (double lat, int doy[], int hr[], double solar[], double temp[], double rh[], double windspeed[], double precip[], double kd, double chil, double heightf, int nlayers, double iRhizome, double irtl, double sencoefs[], int timestep, int vecsize, double Sp, double SpD, double dbpcoefs[25], double thermalp[], double vmax1, double alpha1, double kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double soilcoefs[], double ileafn, double kLN, double vmaxb1, double alphab1, double mresp[], int soilType, int wsFun, int ws, double centcoefs[], double centks[], int centTimestep, int soilLayers, double soilDepths[], double cws[], int hydrDist, double secs[], double kpLN, double lnb0, double lnb1, int lnfun, double upperT, double lowerT, struct {\b nitroParms} nitroP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Alpha, double Kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double StomataWS, int ws, double kd, double chil, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double upperT, double lowerT, struct {\b nitroParms} nitroP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b c3CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Jmax, double Rd, double Catm, double o2, double b0, double b1, double theta, double kd, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double StomWS, int ws)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b newc3CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Jmax, double Rd, double Catm, double o2, double b0, double b1, double theta, double kd, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double StomWS, int ws)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dbp_str} {\b sel_dbp_coef} (double coefs[25], double TherPrds[6], double TherTime)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resp} (double comp, double mrc, double temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ws_str} {\b watstr} (double precipit, double evapo, double cws, double soildepth, double fieldc, double wiltp, double phi1, double phi2, int soiltype, int wsFun)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b SoilEvapo} (double LAI, double k, double AirTemp, double DirectRad, double awc, double fieldc, double wiltp, double winds, double RelH, double rsec)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilML_str} {\b soilML} (double precipit, double transp, double *cws, double soildepth, double *depths, double fieldc, double wiltp, double phi1, double phi2, struct {\b soilText_str} soTexS, int wsFun, int layers, double rootDB, double LAI, double k, double AirTemp, double IRad, double winds, double RelH, int hydrDist, double rfl, double rsec, double rsdf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSWVC} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSFS} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToLHV} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToDdryA} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RHprof} (double RH, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WINDprof} (double WindSpeed, double LAI, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sunML} (double Idir, double Idiff, double LAI, int nlayers, double cosTheta, double kd, double chil, double heightf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lightME} (double lat, int DOY, int td)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cenT_str} {\b Century} (double *LeafL, double *StemL, double *RootL, double *RhizL, double smoist, double stemp, int timestep, double SCs[9], double leachWater, double Nfert, double MinN, double precip, double LeafL_Ln, double StemL_Ln, double RootL_Ln, double RhizL_Ln, double LeafL_N, double StemL_N, double RootL_N, double RhizL_N, int soilType, double Ks_cf[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FL_str} {\b FmLcFun} (double Lig, double Nit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow_str} {\b flow} (double *SC, double CNratio, double A, double Lc, double Tm, double {\b resp}, int kno, double Ks[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AbiotEff} (double smoist, double stemp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sel_phen} (int phen)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CanopyAssim} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Leafy} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Stemy} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Rooty} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Rhizomey} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Grainy} [8760]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b LAIc} [8760]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AbiotEff\:BioCro.h}
{\xe \v BioCro.h\:AbiotEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AbiotEff (double {\i smoist}, double {\i stemp})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 570                                             \{\par
571 \par
572   double ans;\par
573   double TempEff = 0.0, MoisEff;\par
574 \par
575   if(stemp < 35)\{\par
576     TempEff = 1.0087 / (1 + (46.2 * exp(-0.1899 * stemp)));\par
577   \}else\{\par
578     TempEff = -0.0826 * stemp + 3.84;\par
579   \}\par
580   \par
581   MoisEff = 1.0267 / (1 + 14.7 * exp(-6.5 * smoist));\par
582 \par
583   ans = TempEff * MoisEff;\par
584 \par
585   return(ans);\par
586 \par
587 \}\par
}
}
{\xe \v BioGro\:BioCro.h}
{\xe \v BioCro.h\:BioGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BioGro (double {\i lat}, int {\i doy}[], int {\i hr}[], double {\i solar}[], double {\i temp}[], double {\i rh}[], double {\i windspeed}[], double {\i precip}[], double {\i kd}, double {\i chil}, double {\i heightf}, int {\i nlayers}, double {\i iRhizome}, double {\i irtl}, double {\i sencoefs}[], int {\i timestep}, int {\i vecsize}, double {\i Sp}, double {\i SpD}, double {\i dbpcoefs}[25], double {\i thermalp}[], double {\i vmax1}, double {\i alpha1}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i soilcoefs}[], double {\i ileafn}, double {\i kLN}, double {\i vmaxb1}, double {\i alphab1}, double {\i mresp}[], int {\i soilType}, int {\i wsFun}, int {\i ws}, double {\i centcoefs}[], double {\i centks}[], int {\i centTimestep}, int {\i soilLayers}, double {\i soilDepths}[], double {\i cws}[], int {\i hydrDist}, double {\i secs}[], double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i upperT}, double {\i lowerT}, struct {\b nitroParms} {\i nitroP})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1880 \{\par
1881 \par
1882         extern double CanopyAssim[8760] ;\par
1883         extern double Leafy[8760] ;\par
1884         extern double Stemy[8760] ;\par
1885         extern double Rooty[8760] ;\par
1886         extern double Rhizomey[8760] ;\par
1887         extern double Grainy[8760] ;\par
1888         extern double LAIc[8760] ;\par
1889 \par
1890         double newLeafcol[8760];\par
1891         double newStemcol[8760];\par
1892         double newRootcol[8760];\par
1893         double newRhizomecol[8760];\par
1894 \par
1895         int i, i3;\par
1896 \par
1897         double Leaf, Stem, Root, Rhizome, LAI, Grain = 0.0;\par
1898         double TTc = 0.0;\par
1899         double kLeaf = 0.0, kStem = 0.0, kRoot = 0.0, kRhizome = 0.0, kGrain = 0.0;\par
1900         double newLeaf, newStem = 0.0, newRoot, newRhizome = 0.0, newGrain = 0.0;\par
1901 \par
1902         double litter[4];\par
1903         litter[0] = centcoefs[19];\par
1904         litter[1] = centcoefs[20];\par
1905         litter[2] = centcoefs[21];\par
1906         litter[3] = centcoefs[22];\par
1907 \par
1908         /* Variables needed for collecting litter */\par
1909         double LeafLitter = litter[0], StemLitter = litter[1];\par
1910         double RootLitter = litter[2], RhizomeLitter = litter[3];\par
1911         double LeafLitter_d = 0.0, StemLitter_d = 0.0;\par
1912         double RootLitter_d = 0.0, RhizomeLitter_d = 0.0;\par
1913         double ALitter = 0.0, BLitter = 0.0;\par
1914 \par
1915         double *sti , *sti2, *sti3, *sti4; \par
1916         double Remob;\par
1917         int k = 0, q = 0, m = 0, n = 0;\par
1918         int ri = 0;\par
1919 \par
1920         double StomWS = 1, LeafWS = 1;\par
1921         double CanopyA, CanopyT;\par
1922         double vmax, alpha;\par
1923         double LeafN_0 = ileafn;\par
1924         double LeafN = ileafn; /* Need to set it because it is used by CanA before it is computed */\par
1925         double iSp = Sp;\par
1926         vmax = vmax1;\par
1927         alpha = alpha1;\par
1928 \par
1929         /* Century */\par
1930         double MinNitro = centcoefs[18];\par
1931         double SCCs[9];\par
1932         double Resp;\par
1933 \par
1934         const double mrc1 = mresp[0];\par
1935         const double mrc2 = mresp[1];\par
1936 \par
1937         struct Can_Str Canopy;\par
1938         struct ws_str WaterS;\par
1939         struct dbp_str dbpS;\par
1940         struct cenT_str centS;\par
1941         struct soilML_str soilMLS;\par
1942         struct soilText_str soTexS; /* , *soTexSp = &soTexS; */\par
1943         soTexS = soilTchoose(soilType);\par
1944 \par
1945         Rhizome = iRhizome;\par
1946         Leaf = Rhizome * irtl;\par
1947         Stem = Rhizome * 0.001;\par
1948         Root = Rhizome * 0.001;\par
1949         LAI = Leaf * Sp;\par
1950 \par
1951         const double FieldC = soilcoefs[0];\par
1952         const double WiltP = soilcoefs[1];\par
1953         const double phi1 = soilcoefs[2];\par
1954         const double phi2 = soilcoefs[3];\par
1955         const double soilDepth = soilcoefs[4];\par
1956         double waterCont = soilcoefs[5];\par
1957         double soilEvap, TotEvap;\par
1958 \par
1959         const double SeneLeaf = sencoefs[0];\par
1960         const double SeneStem = sencoefs[1];\par
1961         const double SeneRoot = sencoefs[2];\par
1962         const double SeneRhizome = sencoefs[3];\par
1963 \par
1964         SCCs[0] = centcoefs[0];\par
1965         SCCs[1] = centcoefs[1];\par
1966         SCCs[2] = centcoefs[2];\par
1967         SCCs[3] = centcoefs[3];\par
1968         SCCs[4] = centcoefs[4];\par
1969         SCCs[5] = centcoefs[5];\par
1970         SCCs[6] = centcoefs[6];\par
1971         SCCs[7] = centcoefs[7];\par
1972         SCCs[8] = centcoefs[8];\par
1973 \par
1974 \par
1975         /* Creation of pointers outside the loop */\par
1976         sti = &newLeafcol[0]; /* This creates sti to be a pointer to the position 0\par
1977                                  in the newLeafcol vector */\par
1978         sti2 = &newStemcol[0];\par
1979         sti3 = &newRootcol[0];\par
1980         sti4 = &newRhizomecol[0];\par
1981 \par
1982         for(i=0;i<vecsize;i++)\par
1983         \{\par
1984                 /* First calculate the elapsed Thermal Time*/\par
1985                 TTc += (temp[i] / (24/timestep));\par
1986 \par
1987                 /* Do the magic! Calculate growth*/\par
1988 \par
1989                 Canopy = CanAC(LAI,doy[i],hr[i],\par
1990                                solar[i],temp[i],rh[i],windspeed[i],\par
1991                                lat,nlayers,vmax,alpha,kparm,theta,beta,\par
1992                                Rd,Catm,b0,b1,StomWS,ws,kd, chil,\par
1993                                heightf, LeafN, kpLN, lnb0, lnb1, lnfun,upperT,lowerT,nitroP);\par
1994 \par
1995 \par
1996 \par
1997                 CanopyA = Canopy.Assim * timestep;\par
1998                 CanopyT = Canopy.Trans * timestep;\par
1999 \par
2000                 if(ISNAN(CanopyA))\{\par
2001                         Rprintf("LAI %.2f \\n",LAI); \par
2002                         Rprintf("Leaf %.2f \\n",Leaf);\par
2003                         Rprintf("irtl %.2f \\n",irtl);\par
2004                         Rprintf("Rhizome %.2f \\n",Rhizome);\par
2005                         Rprintf("Sp %.2f \\n",Sp);   \par
2006                         Rprintf("doy[i] %.i %.i \\n",i,doy[i]); \par
2007                         Rprintf("hr[i] %.i %.i \\n",i,hr[i]); \par
2008                         Rprintf("solar[i] %.i %.2f \\n",i,solar[i]); \par
2009                         Rprintf("temp[i] %.i %.2f \\n",i,temp[i]); \par
2010                         Rprintf("rh[i] %.i %.2f \\n",i,rh[i]); \par
2011                         Rprintf("windspeed[i] %.i %.2f \\n",i,windspeed[i]);\par
2012                         Rprintf("lat %.i %.2f \\n",i,lat);\par
2013                         Rprintf("nlayers %.i %.i \\n",i,nlayers);   \par
2014                 \}\par
2015 \par
2016                 if(soilLayers > 1)\{\par
2017                         soilMLS = soilML(precip[i], CanopyT, &cws[0], soilDepth, soilDepths, FieldC, WiltP,\par
2018                                          phi1, phi2, soTexS, wsFun, soilLayers, Root,\par
2019                                          LAI, 0.68, temp[i], solar[i], windspeed[i], rh[i], hydrDist,\par
2020                                          secs[0], secs[1], secs[2]);\par
2021 \par
2022                         StomWS = soilMLS.rcoefPhoto;\par
2023                         LeafWS = soilMLS.rcoefSpleaf;\par
2024                         soilEvap = soilMLS.SoilEvapo;\par
2025                         for(i3=0;i3<soilLayers;i3++)\{\par
2026                                 cws[i3] = soilMLS.cws[i3];\par
2027                         \}\par
2028 \par
2029                 \}else\{\par
2030 \par
2031                         soilEvap = SoilEvapo(LAI, 0.68, temp[i], solar[i], waterCont, FieldC, WiltP, windspeed[i], rh[i], secs[1]);\par
2032                         TotEvap = soilEvap + CanopyT;\par
2033                         WaterS = watstr(precip[i],TotEvap,waterCont,soilDepth,FieldC,WiltP,phi1,phi2,soilType, wsFun);   \par
2034                         waterCont = WaterS.awc;\par
2035                         StomWS = WaterS.rcoefPhoto ;\par
2036                         LeafWS = WaterS.rcoefSpleaf;\par
2037                 \}\par
2038 \par
2039                 /* Picking the dry biomass partitioning coefficients */\par
2040                 dbpS = sel_dbp_coef(dbpcoefs, thermalp, TTc);\par
2041 \par
2042                 kLeaf = dbpS.kLeaf;\par
2043                 kStem = dbpS.kStem;\par
2044                 kRoot = dbpS.kRoot;\par
2045                 kRhizome = dbpS.kRhiz;\par
2046                 kGrain = dbpS.kGrain;\par
2047 \par
2048                 if(ISNAN(kRhizome) || ISNAN(kLeaf) || ISNAN(kRoot) || ISNAN(kStem) || ISNAN(kGrain))\{\par
2049                         Rprintf("kLeaf %.2f, kStem %.2f, kRoot %.2f, kRhizome %.2f, kGrain %.2f \\n",kLeaf,kStem,kRoot,kRhizome,kGrain);\par
2050                         Rprintf("iter %i \\n",i);\par
2051                 \}\par
2052 \par
2053                 if(i % 24*centTimestep == 0)\{\par
2054                         LeafLitter_d = LeafLitter * ((0.1/30)*centTimestep);\par
2055                         StemLitter_d = StemLitter * ((0.1/30)*centTimestep);\par
2056                         RootLitter_d = RootLitter * ((0.1/30)*centTimestep);\par
2057                         RhizomeLitter_d = RhizomeLitter * ((0.1/30)*centTimestep);\par
2058        \par
2059                         LeafLitter -= LeafLitter_d;\par
2060                         StemLitter -= StemLitter_d;\par
2061                         RootLitter -= RootLitter_d;\par
2062                         RhizomeLitter -= RhizomeLitter_d;\par
2063        \par
2064                         centS = Century(&LeafLitter_d,&StemLitter_d,&RootLitter_d,&RhizomeLitter_d,\par
2065                                         waterCont,temp[i],centTimestep,SCCs,WaterS.runoff,\par
2066                                         centcoefs[17], /* N fertilizer*/\par
2067                                         MinNitro, /* initial Mineral nitrogen */\par
2068                                         precip[i], /* precipitation */\par
2069                                         centcoefs[9], /* Leaf litter lignin */\par
2070                                         centcoefs[10], /* Stem litter lignin */\par
2071                                         centcoefs[11], /* Root litter lignin */\par
2072                                         centcoefs[12], /* Rhizome litter lignin */\par
2073                                         centcoefs[13], /* Leaf litter N */\par
2074                                         centcoefs[14], /* Stem litter N */\par
2075                                         centcoefs[15],  /* Root litter N */\par
2076                                         centcoefs[16],   /* Rhizome litter N */\par
2077                                         soilType, centks);\par
2078                 \}\par
2079 \par
2080                 /* Here I can insert the code for Nitrogen limitations on photosynthesis\par
2081                    parameters. This is taken From Harley et al. (1992) Modelling cotton under\par
2082                    elevated CO2. PCE. This is modeled as a simple linear relationship between\par
2083                    leaf nitrogen and vmax and alpha. Leaf Nitrogen should be modulated by N\par
2084                    availability and possibly by the Thermal time accumulated.*/\par
2085 \par
2086                 MinNitro = centS.MinN;\par
2087                 Resp = centS.Resp;\par
2088      \par
2089                 SCCs[0] = centS.SCs[0];\par
2090                 SCCs[1] = centS.SCs[1];\par
2091                 SCCs[2] = centS.SCs[2];\par
2092                 SCCs[3] = centS.SCs[3];\par
2093                 SCCs[4] = centS.SCs[4];\par
2094                 SCCs[5] = centS.SCs[5];\par
2095                 SCCs[6] = centS.SCs[6];\par
2096                 SCCs[7] = centS.SCs[7];\par
2097                 SCCs[8] = centS.SCs[8];\par
2098 \par
2099                 LeafN = LeafN_0 * exp(-kLN * TTc); \par
2100                 vmax = (LeafN_0 - LeafN) * vmaxb1 + vmax1;\par
2101                 alpha = (LeafN_0 - LeafN) * alphab1 + alpha1;\par
2102 \par
2103                 if(kLeaf > 0)\par
2104                 \{\par
2105                         newLeaf = CanopyA * kLeaf * LeafWS ; \par
2106                         /*  The major effect of water stress is on leaf expansion rate. See Boyer (1970)\par
2107                             Plant. Phys. 46, 233-235. For this the water stress coefficient is different\par
2108                             for leaf and vmax. */\par
2109                         /* Tissue respiration. See Amthor (1984) PCE 7, 561-*/ \par
2110                         /* The 0.02 and 0.03 are constants here but vary depending on species\par
2111                            as pointed out in that reference. */\par
2112                         newLeaf = resp(newLeaf, mrc1, temp[i]);\par
2113 \par
2114                         *(sti+i) = newLeaf; /* This populates the vector newLeafcol. It makes sense\par
2115                                                to use i because when kLeaf is negative no new leaf is\par
2116                                                being accumulated and thus would not be subjected to senescence */\par
2117                 \}else\{\par
2118 \par
2119                         newLeaf = Leaf * kLeaf ;\par
2120                         Rhizome += kRhizome * -newLeaf * 0.9; /* 0.9 is the efficiency of retranslocation */\par
2121                         Stem += kStem * -newLeaf   * 0.9;\par
2122                         Root += kRoot * -newLeaf * 0.9;\par
2123                         Grain += kGrain * -newLeaf * 0.9;\par
2124                 \}\par
2125 \par
2126                 if(TTc < SeneLeaf)\{\par
2127 \par
2128                         Leaf += newLeaf;\par
2129 \par
2130                 \}else\{\par
2131     \par
2132                         Leaf += newLeaf - *(sti+k); /* This means that the new value of leaf is\par
2133                                                        the previous value plus the newLeaf\par
2134                                                        (Senescence might start when there is\par
2135                                                        still leaf being produced) minus the leaf\par
2136                                                        produced at the corresponding k.*/\par
2137                         Remob = *(sti+k) * 0.6 ;\par
2138                         LeafLitter += *(sti+k) * 0.4; /* Collecting the leaf litter */ \par
2139                         Rhizome += kRhizome * Remob;\par
2140                         Stem += kStem * Remob; \par
2141                         Root += kRoot * Remob;\par
2142                         Grain += kGrain * Remob;\par
2143                         k++;\par
2144                 \}\par
2145 \par
2146                 /* The specific leaf area declines with the growing season at least in\par
2147                    Miscanthus.  See Danalatos, Nalianis and Kyritsis "Growth and Biomass\par
2148                    Productivity of Miscanthus sinensis "Giganteus" under optimum cultural\par
2149                    management in north-eastern greece*/\par
2150 \par
2151                 if(i%24 == 0)\{\par
2152                         Sp = iSp - (doy[i] - doy[0]) * SpD;\par
2153                 \}\par
2154 \par
2155                 /* Rprintf("Sp %.2f \\n", Sp); */\par
2156 \par
2157                 LAI = Leaf * Sp ;\par
2158 \par
2159                 /* New Stem*/\par
2160                 if(kStem > 0)\par
2161                 \{\par
2162                         newStem = CanopyA * kStem ;\par
2163                         newStem = resp(newStem, mrc1, temp[i]);\par
2164                         *(sti2+i) = newStem;\par
2165                 \}\par
2166 \par
2167                 if(TTc < SeneStem)\{\par
2168 \par
2169                         Stem += newStem;\par
2170 \par
2171                 \}else\{\par
2172 \par
2173                         Stem += newStem - *(sti2+q);\par
2174                         StemLitter += *(sti2+q);\par
2175                         q++;\par
2176 \par
2177                 \}\par
2178 \par
2179                 if(kRoot > 0)\par
2180                 \{\par
2181                         newRoot = CanopyA * kRoot ;\par
2182                         newRoot = resp(newRoot, mrc2, temp[i]);\par
2183                         *(sti3+i) = newRoot;\par
2184                 \}else\{\par
2185 \par
2186                         newRoot = Root * kRoot ;\par
2187                         Rhizome += kRhizome * -newRoot * 0.9;\par
2188                         Stem += kStem * -newRoot       * 0.9;\par
2189                         Leaf += kLeaf * -newRoot * 0.9;\par
2190                         Grain += kGrain * -newRoot * 0.9;\par
2191                 \}\par
2192 \par
2193                 if(TTc < SeneRoot)\{\par
2194 \par
2195                         Root += newRoot;\par
2196 \par
2197                 \}else\{\par
2198 \par
2199                         Root += newRoot - *(sti3+m);\par
2200                         RootLitter += *(sti3+m);\par
2201                         m++;\par
2202 \par
2203                 \}\par
2204 \par
2205                 if(kRhizome > 0)\par
2206                 \{\par
2207                         newRhizome = CanopyA * kRhizome ;\par
2208                         newRhizome = resp(newRhizome, mrc2, temp[i]);\par
2209                         *(sti4+ri) = newRhizome;\par
2210                         /* Here i will not work because the rhizome goes from being a source\par
2211                            to a sink. I need its own index. Let's call it rhizome's i or ri.*/\par
2212                         ri++;\par
2213                 \}else\{\par
2214 \par
2215                         if(Rhizome < 0)\{\par
2216                                 Rhizome = 1e-4;\par
2217                                 warning("Rhizome became negative");\par
2218                         \}\par
2219 \par
2220                         newRhizome = Rhizome * kRhizome;\par
2221                         Root += kRoot * -newRhizome ;\par
2222                         Stem += kStem * -newRhizome ;\par
2223                         Leaf += kLeaf * -newRhizome ;\par
2224                         Grain += kGrain * -newRhizome;\par
2225                 \}\par
2226 \par
2227                 if(TTc < SeneRhizome)\{\par
2228 \par
2229                         Rhizome += newRhizome;\par
2230 \par
2231                 \}else \{\par
2232 \par
2233                         Rhizome += newRhizome - *(sti4+n);\par
2234                         RhizomeLitter += *(sti4+n);\par
2235                         n++;\par
2236 \par
2237                 \}\par
2238 \par
2239                 if((kGrain < 1e-10) || (TTc < thermalp[4]))\{\par
2240                         newGrain = 0.0;\par
2241                         Grain += newGrain;\par
2242                 \}else\{\par
2243                         newGrain = CanopyA * kGrain;\par
2244                         /* No respiration for grain at the moment */\par
2245                         /* No senescence either */\par
2246                         Grain += newGrain;  \par
2247                 \}\par
2248 \par
2249                 ALitter += LeafLitter + StemLitter;\par
2250                 BLitter += RootLitter + RhizomeLitter;\par
2251 \par
2252                 CanopyAssim[i] =  CanopyA;\par
2253                 Leafy[i] = Leaf;\par
2254                 Stemy[i] = Stem;\par
2255                 Rooty[i] =  Root;\par
2256                 Rhizomey[i] = Rhizome;\par
2257                 Grainy[i] = Grain;\par
2258                 LAIc[i] = LAI;\par
2259         \}\par
2260 \}\par
}
}
{\xe \v c3CanAC\:BioCro.h}
{\xe \v BioCro.h\:c3CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} c3CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Jmax}, double {\i Rd}, double {\i Catm}, double {\i o2}, double {\i b0}, double {\i b1}, double {\i theta}, double {\i kd}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CanAC\:BioCro.h}
{\xe \v BioCro.h\:CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Alpha}, double {\i Kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i StomataWS}, int {\i ws}, double {\i kd}, double {\i chil}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i upperT}, double {\i lowerT}, struct {\b nitroParms} {\i nitroP})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 545 \{\par
546 \par
547         struct ET_Str tmp5_ET, tmp6_ET;\par
548         struct Can_Str ans;\par
549         struct c4_str tmpc4;\par
550         struct c4_str tmpc42;\par
551 \par
552         int i;\par
553         double Idir, Idiff, cosTh;\par
554         double LAIc;\par
555         double IDir, IDiff, Itot, rh, WS;\par
556         double pLeafsun, pLeafshade;\par
557         double Leafsun, Leafshade;\par
558         double CanHeight;\par
559 \par
560         double vmax1, leafN_lay;\par
561         double TempIdir,TempIdiff,AssIdir,AssIdiff,GAssIdir,GAssIdiff;\par
562 \par
563         double CanopyA, CanopyT,GCanopyA;\par
564 \par
565         const double cf = 3600 * 1e-6 * 30 * 1e-6 * 10000;\par
566         const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
567 \par
568         /* For Assimilation */\par
569         /* 3600 converts seconds to hours */\par
570         /* 1e-6 converts micro mols to mols */\par
571         /* 30 is the grams in one mol of CO2 */\par
572         /* 1e-6 converts g to Mg */\par
573         /* 10000 scales from meter squared to hectare */\par
574 \par
575         /* For Transpiration */\par
576         /* 3600 converts seconds to hours */\par
577         /* 1e-3 converts mili mols to mols */\par
578         /* 18 is the grams in one mol of H20 */\par
579         /* 1e-6 converts g to Mg */\par
580         /* 10000 scales from meter squared to hectare */\par
581 \par
582         lightME(lat,DOY,hr);\par
583 \par
584         Idir = tmp1[0] * solarR;\par
585         Idiff = tmp1[1] * solarR;\par
586         cosTh = tmp1[2];\par
587     \par
588         sunML(Idir,Idiff,LAI,nlayers,cosTh, kd, chil, heightf);\par
589 \par
590         /* results from multilayer model */\par
591         LAIc = LAI / nlayers;\par
592         /* Next I need the RH and wind profile */\par
593         RHprof(RH,nlayers);\par
594         WINDprof(WindSpeed,LAI,nlayers);\par
595 \par
596         LNprof(leafN, LAI, nlayers, kpLN);\par
597         /* It populates tmp5 */\par
598 \par
599         /* Next use the EvapoTrans function */\par
600         CanopyA=0.0;\par
601         GCanopyA=0.0;\par
602         CanopyT=0.0;\par
603         for(i=0;i<nlayers;i++)\par
604         \{\par
605                 leafN_lay = tmp5[--tp5];\par
606                 if(lnfun == 0)\{\par
607                         vmax1 = Vmax;\par
608                 \}else\{\par
609                         vmax1=nitroP.Vmaxb1*leafN_lay+nitroP.Vmaxb0;\par
610                                               if(vmax1<0) vmax1=0.0;\par
611                                                       Alpha=nitroP.alphab1*leafN_lay+nitroP.alphab0;\par
612                                                        Rd=nitroP.Rdb1*leafN_lay+nitroP.Rdb0;\par
613                /* For now alpha is not affected by leaf nitrogen */\par
614                 \}\par
615 \par
616                 IDir = layIdir[--sp1];\par
617                 Itot = layItotal[--sp3];\par
618 \par
619                 rh = tmp4[--tp4];\par
620                 WS = tmp3[--tp3];\par
621                 pLeafsun = layFsun[--sp4];\par
622                 CanHeight = layHeight[--sp6];\par
623                 Leafsun = LAIc * pLeafsun;\par
624                 tmp5_ET = EvapoTrans(IDir,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
625                 TempIdir = Temp + tmp5_ET.Deltat;\par
626                 tmpc4 = c4photoC(IDir,TempIdir,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
627                 AssIdir = tmpc4.Assim;\par
628                 GAssIdir =tmpc4.GrossAssim;\par
629 \par
630                 IDiff = layIdiff[--sp2];\par
631                 pLeafshade = layFshade[--sp5];\par
632                 Leafshade = LAIc * pLeafshade;\par
633                 tmp6_ET = EvapoTrans(IDiff,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
634                 TempIdiff = Temp + tmp6_ET.Deltat;\par
635                 tmpc42 = c4photoC(IDiff,TempIdiff,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
636                 AssIdiff = tmpc42.Assim;\par
637                 GAssIdiff = tmpc42.GrossAssim;\par
638                 CanopyA += Leafsun * AssIdir + Leafshade * AssIdiff;\par
639                 GCanopyA += Leafsun * GAssIdir + Leafshade * GAssIdiff;\par
640 // I am evaluating CanopyT using Penman Method because it gives realistic results\par
641 // IN future canopyT needs to be fixed\par
642 //                CanopyT += Leafsun * tmp5_ET.TransR + Leafshade * tmp6_ET.TransR;\par
643                 CanopyT += Leafsun * tmp5_ET.EPenman + Leafshade * tmp6_ET.EPenman;\par
644         \}\par
645         /*## These are micro mols of CO2 per m2 per sec for Assimilation\par
646           ## and mili mols of H2O per m2 per sec for Transpiration\par
647           ## Need to convert to \par
648           ## 3600 converts seconds to hours\par
649           ## 10^-6 converts micro mols to mols\par
650           ## 30 converts mols of CO2 to grams\par
651           ## (1/10^6) converts grams to Mg\par
652           ## 10000 scales up to ha */\par
653 /* A similar conversion is made for water but\par
654    replacing 30 by 18 and mili mols are converted to\par
655    mols (instead of micro) */\par
656         ans.Assim = cf * CanopyA ;\par
657         ans.Trans = cf2 * CanopyT; \par
658         ans.GrossAssim=cf*GCanopyA;\par
659         return(ans);\par
660 \}\par
}
}
{\xe \v Century\:BioCro.h}
{\xe \v BioCro.h\:Century}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b cenT_str} Century (double * {\i LeafL}, double * {\i StemL}, double * {\i RootL}, double * {\i RhizL}, double {\i smoist}, double {\i stemp}, int {\i timestep}, double {\i SCs}[9], double {\i leachWater}, double {\i Nfert}, double {\i MinN}, double {\i precip}, double {\i LeafL_Ln}, double {\i StemL_Ln}, double {\i RootL_Ln}, double {\i RhizL_Ln}, double {\i LeafL_N}, double {\i StemL_N}, double {\i RootL_N}, double {\i RhizL_N}, int {\i soilType}, double {\i Ks_cf}[8])}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                         \{\par
43 \par
44   /* Converting Mg ha^-1 to g m^-2 */\par
45   /* 1 Mg = 1e6 grams*/\par
46   /* 1 ha = 1e4 m^2 */  \par
47   const double cf = 100;\par
48   *LeafL *= cf; \par
49   *StemL *= cf;\par
50   *RootL *= cf;\par
51   *RhizL *= cf;\par
52 \par
53   struct cenT_str tmp;\par
54   struct soilText_str soilTemp;\par
55 \par
56   struct FL_str FmLc_Leaf, FmLc_Stem, FmLc_Root, FmLc_Rhiz;\par
57   struct flow_str C1_5_Leaf, C2_5_Leaf, C1_5_Stem, C2_5_Stem;\par
58   struct flow_str C1_7_Leaf_Ln, C1_7_Stem_Ln;\par
59   struct flow_str C3_6_Root, C4_6_Root, C3_6_Rhiz, C4_6_Rhiz;\par
60   struct flow_str C3_7_Root_Ln, C3_7_Rhiz_Ln;\par
61   struct flow_str C5_7, C6, C7, C8_6;\par
62 \par
63   double C6_7, C6_8, C6_9, C7_6, C7_8;\par
64   double C_ap, C_al, C_sp; \par
65 \par
66   double SC1_Leaf, SC2_Leaf, SC1_Stem, SC2_Stem;\par
67   double SC3_Root, SC4_Root, SC3_Rhiz, SC4_Rhiz;\par
68 \par
69 /*  \par
70     I need the separate fractions of Leaf Litter and Stem Litter \par
71   Because they have different lignin to N ratios \par
72   Presumably, the rhizome and root are similar \par
73 \par
74   There is an issue here that I should be careful about I'm importing \par
75   biomass, but need only carbon in some of these calculations \par
76 \par
77   I also need to determine the initial values of carbon for each \par
78   component \par
79 */\par
80 \par
81   soilTemp = soilTchoose(soilType);  \par
82   double T = soilTemp.clay + soilTemp.silt; /*  silt plus clay content of the soil */\par
83   double Ts = soilTemp.sand; /*  Sand content of the soil */\par
84   double Tc = soilTemp.clay; /*  Clay content of the soil */\par
85 \par
86   double CN_structural = 150;\par
87   double CN_surface;\par
88   double CN_active ;\par
89   double CN_slow ;\par
90   double CN_passive ;\par
91   \par
92   double SN1, SN2, SN3, SN4, SN5, SN6, SN7, SN8, SN9;\par
93   double SC1, SC2, SC3, SC4, SC5, SC6, SC7, SC8, SC9;\par
94   double Abiot;\par
95   double Na = 0.0, Nf = 0.0;\par
96   double PlantN;\par
97 \par
98   double SC1_Leaf_Ln, SC1_Stem_Ln;\par
99   double SC3_Root_Ln, SC3_Rhiz_Ln;\par
100 \par
101   /* Converting from Mg ha^-1 to g m^-2 */\par
102   SC1 = SCs[0] * cf;\par
103   SC2 = SCs[1] * cf;\par
104   SC3 = SCs[2] * cf;\par
105   SC4 = SCs[3] * cf;\par
106   SC5 = SCs[4] * cf;\par
107   SC6 = SCs[5] * cf;\par
108   SC7 = SCs[6] * cf;\par
109   SC8 = SCs[7] * cf;\par
110   SC9 = SCs[8] * cf;\par
111 \par
112   double MinN = 0.0, Resp = 0.0;\par
113   \par
114   const double respC1_5 = 0.6;\par
115   const double respC1_7 = 0.3;\par
116   const double respC3_7 = 0.3;\par
117   const double respC2_5 = 0.6;\par
118   const double respC3_6 = 0.55;\par
119   const double respC4_6 = 0.55;\par
120   const double respC5_7 = 0.6;\par
121   const double respC6 = 0.85 - 0.68 * T;\par
122   const double respC7 = 0.55;\par
123   const double respC8 = 0.55;\par
124 \par
125   double Ks[8];\par
126   \par
127   /*  Tm is the effect of soil texture on active SOM turnover */\par
128   double Tm = 1 - 0.75 * T;\par
129 \par
130 /*    The flow constants are taken from the paper \par
131       and Parton et al. 1993 Global Biogeochemistry pg 785 \par
132       but \par
133       Parton et al. 1987 SSSJ 51:1173 \par
134       is also relevant\par
135     \par
136       double Ksy[ ] = \{ 3.9, 4.9, 7.3, 6.0, 14.8, 18.5, 0.2, 0.0045 \};     The units are year^-1  \par
137 \par
138       To get the rates per week we can divide by 52\par
139       To get the rates poer day we can divide by 365\par
140 */\par
141 /* It seems that the rates are the ones reported in Parton et al. 1993 Global Biogeochemical Cycles */\par
142 /* These are annual rates and to convert to other time steps the model should be run accordingly */\par
143 \par
144     /* Rprintf("Ks[3] : %f Ks[4] : %f \\n",Ks[3],Ks[4]); */\par
145     /* Rprintf("Ks[5] : %f Ks[6] : %f \\n",Ks[5],Ks[6]); */\par
146 \par
147      if(timestep == 7)\{\par
148        Ks[0] = Ks_cf[0] / 52 ;\par
149        Ks[1] = Ks_cf[1] / 52 ;\par
150        Ks[2] = Ks_cf[2] / 52 ;\par
151        Ks[3] = Ks_cf[3] / 52 ;\par
152        Ks[4] = Ks_cf[4] / 52 ;\par
153        Ks[5] = Ks_cf[5] / 52 ;\par
154        Ks[6] = Ks_cf[6] / 52 ;\par
155        Ks[7] = Ks_cf[7] / 52 ;\par
156      \}else\par
157      if(timestep == 1)\{   \par
158        Ks[0] = Ks_cf[0] / 365 ; \par
159        Ks[1] = Ks_cf[1] / 365 ; \par
160        Ks[2] = Ks_cf[2] / 365 ; \par
161        Ks[3] = Ks_cf[3] / 365 ; \par
162        Ks[4] = Ks_cf[4] / 365 ; \par
163        Ks[5] = Ks_cf[5] / 365 ; \par
164        Ks[6] = Ks_cf[6] / 365 ; \par
165        Ks[7] = Ks_cf[7] / 365 ;  \par
166      \} \par
167 \par
168 /* Nitrogen processes \par
169     N deposition */\par
170 \par
171   Na = 0.21 + 0.0028 * precip * 0.10 ;  /*precipitation is entered in mm\par
172                                           but it is needed in cm for this\par
173                                            equation. Idem below */\par
174 \par
175   /*  N fixation */\par
176   Nf = -0.18 + 0.014 * precip * 0.10 ; \par
177 \par
178   /* The resulting N is in g N m^-2 yr^-1 \par
179    Conversions\par
180    g => Mg : multiply by 1e-6\par
181    m^2 => ha : multiply by 1e4\par
182    year to week : divide by 52 */\par
183   if(timestep == 7)\{\par
184      Na /=  52;\par
185      Nf /=  52;\par
186   \}else\par
187   if(timestep == 1)\{\par
188      Na /=  365;\par
189      Nf /=  365;\par
190   \}\par
191 \par
192 /*   Rprintf("Na : %f \\n",Na); */\par
193 /*   Rprintf("Nf : %f \\n",Nf); */\par
194 /*   Nitrogen in the form of fertilizer */\par
195 /*   The input units should be in g N m^2 */\par
196 \par
197 /*   Rprintf("Nfert : %f iMinN : %f \\n",Nfert,iMinN); */\par
198   MinN = Na + Nf + Nfert + iMinN;\par
199 \par
200 /*   Rprintf("MinN 0: %f \\n",MinN); */\par
201 \par
202   PlantN = *LeafL * LeafL_N + *StemL * StemL_N;\par
203 \par
204   CN_surface = 20 - PlantN * 5;\par
205   CN_active = 15 - MinN * 6;\par
206   CN_slow = 20 - MinN * 4;\par
207   CN_passive = 10 - MinN * 1.5;\par
208 \par
209   if(PlantN > 2) CN_surface = 10;\par
210 \par
211   /*   Here 2 is g m^-2 */\par
212   if(MinN > 2)\{\par
213     CN_active = 3;\par
214     CN_passive = 7;\par
215     CN_slow = 12;\par
216   \}\par
217 \par
218   SN1 = SC1 / CN_structural; \par
219   SN2 = SC2 / CN_active;\par
220   SN3 = SC3 / CN_structural;\par
221   SN4 = SC4 / CN_active;\par
222   SN5 = SC5 / CN_active;\par
223   SN6 = SC6 / CN_active;\par
224   SN7 = SC7 / CN_slow;\par
225   SN8 = SC8 / CN_passive;\par
226   SN9 = SC9 / CN_passive;\par
227 \par
228 /*  Need to calculate the effect of temperature and moisture. */\par
229 \par
230   Abiot = AbiotEff(smoist, stemp);\par
231 \par
232 /*    Calculate Fm and Lc separately for each component */\par
233   FmLc_Leaf = FmLcFun(LeafL_Ln,LeafL_N);\par
234   FmLc_Stem = FmLcFun(StemL_Ln,StemL_N);\par
235   FmLc_Root = FmLcFun(RootL_Ln,RootL_N);\par
236   FmLc_Rhiz = FmLcFun(RhizL_Ln,RhizL_N);\par
237 \par
238   /*  Surface Metabolic Carbon */\par
239   SC2_Leaf = FmLc_Leaf.Fm * *LeafL;\par
240   SC2_Stem = FmLc_Stem.Fm * *StemL;\par
241   /*  Root Metabolic Carbon */\par
242   SC4_Root = FmLc_Root.Fm * *RootL;\par
243   SC4_Rhiz = FmLc_Rhiz.Fm * *RhizL;\par
244 \par
245   /*  Surface Structural Carbon */\par
246   SC1_Leaf = (1 - FmLc_Leaf.Fm) * *LeafL;\par
247   SC1_Stem = (1 - FmLc_Stem.Fm) * *StemL;\par
248   /* Lignin content needs to be considered separately */\par
249   SC1_Leaf_Ln = SC1_Leaf * LeafL_Ln;\par
250   SC1_Stem_Ln = SC1_Stem * StemL_Ln;\par
251   SC1_Leaf = SC1_Leaf - SC1_Leaf_Ln;\par
252   SC1_Stem = SC1_Stem - SC1_Stem_Ln;\par
253 \par
254   /*  Root Structural Carbon */\par
255   SC3_Root = (1 - FmLc_Root.Fm) * *RootL;\par
256   SC3_Rhiz = (1 - FmLc_Rhiz.Fm) * *RhizL;\par
257   /* Lignin content needs to be considered separately */\par
258   SC3_Root_Ln = SC3_Root * RootL_Ln;\par
259   SC3_Rhiz_Ln = SC3_Rhiz * RhizL_Ln;\par
260   SC3_Root = SC3_Root - SC3_Root_Ln;\par
261   SC3_Rhiz = SC3_Rhiz - SC3_Rhiz_Ln;\par
262 \par
263 /*    T is silt plus clay content \par
264     Ls is fraction of structural C that is lignin \par
265 \par
266     Structural Surface Litter C to Surface Microbe C \par
267     1 => 5 \par
268     2 => 5 \par
269     dC1/dt = Ki * Lc * A * Ci \par
270     Leaf */\par
271   SC1_Leaf +=  0.3 * SC1;\par
272   SC2_Leaf +=  0.3 * SC2;\par
273 \par
274   C1_5_Leaf = flow(&SC1_Leaf,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_5,1,Ks);\par
275   C2_5_Leaf = flow(&SC2_Leaf,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_5,5,Ks);\par
276 \par
277   /*  Stem */\par
278   SC1_Stem = SC1_Stem + 0.7 * SC1;\par
279   SC2_Stem = SC2_Stem + 0.7 * SC2;\par
280 \par
281   C1_5_Stem = flow(&SC1_Stem,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC2_5,1,Ks);\par
282   C2_5_Stem = flow(&SC2_Stem,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC2_5,5,Ks);\par
283 \par
284   SC1_Leaf = C1_5_Leaf.SC;\par
285   SC2_Leaf = C2_5_Leaf.SC;\par
286   SC1_Stem = C1_5_Stem.SC;\par
287   SC2_Stem = C2_5_Stem.SC;\par
288 \par
289  /*   Adding the ligning content */\par
290   C1_7_Leaf_Ln = flow(&SC1_Leaf_Ln,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_7,1,Ks);\par
291   C1_7_Stem_Ln = flow(&SC1_Stem_Ln,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC1_7,1,Ks);\par
292   \par
293   /* Flow from SC1.lignin to SC7 */\par
294   SC7 += C1_7_Leaf_Ln.fC + C1_7_Stem_Ln.fC ;\par
295 \par
296   /*  Collect respiration */\par
297   Resp = C1_5_Leaf.Resp + C2_5_Leaf.Resp +\par
298          C1_5_Stem.Resp + C2_5_Stem.Resp +\par
299          C1_7_Leaf_Ln.Resp + C1_7_Stem_Ln.Resp;\par
300   /*  Collect mineralized Nitrogen */\par
301   MinN += C1_5_Leaf.MinN + C2_5_Leaf.MinN +\par
302           C1_5_Stem.MinN + C2_5_Stem.MinN +\par
303           C1_7_Leaf_Ln.MinN + C1_7_Stem_Ln.MinN;\par
304 \par
305 /*   Rprintf("MinN 1: %f \\n",MinN); */\par
306   /*  Updating the Soil Carbon Pools 1 and 2  */\par
307   SC1 = C1_5_Leaf.SC + C1_5_Stem.SC + C1_7_Leaf_Ln.SC + C1_7_Stem_Ln.SC ;\par
308   SC2 = C2_5_Leaf.SC + C2_5_Stem.SC ;\par
309 \par
310   /*  Updating the Nitrogen Carbon Pools 1 and 2 */\par
311   SN1 = SC1 / CN_structural + SN1;\par
312   SN2 = SC2 / CN_surface + SN2;\par
313   \par
314 /*    Structural Root Litter C to Soil Microbe C */\par
315 /*    4 => 6 */\par
316 /*    3 => 6 */\par
317 /*    Root */\par
318   SC3_Root = SC3_Root + 0.3 * SC3;\par
319   SC4_Root = SC4_Root + 0.3 * SC4;\par
320   C3_6_Root = flow(&SC3_Root,CN_active,Abiot,FmLc_Root.Lc,Tm,respC3_6,2,Ks);\par
321   C4_6_Root = flow(&SC4_Root,CN_active,Abiot,FmLc_Root.Lc,Tm,respC3_6,6,Ks);\par
322 /*    Rhizome */\par
323   SC3_Rhiz = SC3_Rhiz + 0.7 * SC3;\par
324   SC4_Rhiz = SC4_Rhiz + 0.7 * SC4;\par
325   C3_6_Rhiz = flow(&SC3_Rhiz,CN_active,Abiot,FmLc_Rhiz.Lc,Tm,respC4_6,2,Ks);\par
326   C4_6_Rhiz = flow(&SC4_Rhiz,CN_active,Abiot,FmLc_Rhiz.Lc,Tm,respC4_6,6,Ks);\par
327 \par
328   SC3_Root = C3_6_Root.SC;\par
329   SC4_Root = C4_6_Root.SC;\par
330   SC3_Rhiz = C3_6_Rhiz.SC;\par
331   SC4_Rhiz = C4_6_Rhiz.SC;\par
332 \par
333   C3_7_Root_Ln = flow(&SC3_Root_Ln,CN_slow,Abiot,FmLc_Root.Lc,Tm,respC3_7,2,Ks);\par
334   C3_7_Rhiz_Ln = flow(&SC3_Rhiz_Ln,CN_slow,Abiot,FmLc_Rhiz.Lc,Tm,respC3_7,2,Ks);\par
335 \par
336   SC7 += C3_7_Root_Ln.fC + C3_7_Rhiz_Ln.fC ; \par
337  /*   Collect respiration */\par
338   Resp += C3_6_Root.Resp + C4_6_Root.Resp +\par
339            C3_6_Rhiz.Resp + C4_6_Rhiz.Resp;\par
340 \par
341 /*    Collect mineralized Nitrogen */\par
342   MinN += C3_6_Root.MinN + C4_6_Root.MinN +\par
343            C3_6_Rhiz.MinN + C4_6_Rhiz.MinN + \par
344            C3_7_Root_Ln.MinN + C3_7_Rhiz_Ln.MinN;\par
345 \par
346 /*   Rprintf("MinN 2: %f \\n",MinN); */\par
347 /*   Updating the Soil Carbon Pools 3 and 4 */\par
348   SC3 = C3_6_Root.SC + C3_6_Rhiz.SC + C3_7_Root_Ln.SC + C3_7_Rhiz_Ln.SC;\par
349   SC4 = C4_6_Root.SC + C4_6_Rhiz.SC ;\par
350 \par
351 /*   Updating the Nitrogen pools 3 and 4 */\par
352   SN3 += SC3 / CN_structural ;\par
353   SN4 += SC4 / CN_active ;\par
354 \par
355 /*    Updating the Soil Carbon Pool 5 */\par
356   SC5 += C1_5_Leaf.fC + C1_5_Stem.fC + C2_5_Leaf.fC + C2_5_Stem.fC ;\par
357 \par
358 /*    Updating the Soil Nitrogen pool 5 */\par
359   SN5 += SC5 / CN_surface ;\par
360   \par
361 /*    Updating the Soil Carbon Pool 6 */\par
362   SC6 += C3_6_Root.fC + C3_6_Rhiz.fC + C4_6_Root.fC + C4_6_Rhiz.fC ;\par
363 \par
364 /*    Updating the Soil Nitrogen Pool 6 */\par
365   SN6 += SC6 / CN_active ;\par
366 \par
367 /*    Surface Microbe C to Slow C */\par
368 /*    5 => 7 */\par
369   C5_7 = flow(&SC5,CN_slow,Abiot,0,0,respC5_7,4,Ks);\par
370 \par
371   Resp +=  C5_7.Resp;\par
372   MinN +=  C5_7.MinN;\par
373 \par
374 /*    Updating Surface Microbe C (pool 5) and slow (pool 7) */\par
375 \par
376   SC5 = C5_7.SC ;\par
377   SC7 += C5_7.fC ;\par
378 \par
379 /*    Updating Surface Microbe N pool */\par
380 \par
381   SN5 = SC5 / CN_surface;\par
382    \par
383 /*   Soil Microbe C to intermediate stage C */\par
384   C6 = flow(&SC6,CN_slow,Abiot,0,Tm,respC6,3,Ks);\par
385 \par
386 /*   if(ISNAN(C6.fC) | ISNAN(C6.SC))\{ */\par
387 /*     Rprintf("C6.fC %f and C6.SC %f and SC6 %f \\n",C6.fC,C6.SC,SC6); */\par
388 /*   \} */\par
389 \par
390   Resp +=  C6.Resp;\par
391   MinN +=  C6.MinN;\par
392 \par
393 /*    Updating carbon and nitrogen soil pools 6 */\par
394   SC6 = C6.SC;\par
395   SN6 = SC6 / CN_active;\par
396   \par
397   C_ap = 0.003 + 0.032 * Tc;   \par
398   C_al = leachWater / 18.0 * (0.01 + 0.04 * Ts);\par
399   \par
400 /*   Rprintf("C_al %f and C_ap %f Tc %f \\n",C_al, C_ap, Tc); */\par
401 /*   Rprintf("leachWater %f and Ts %f \\n",leachWater, Ts); */\par
402 \par
403   C6_8 = C6.fC * C_ap;\par
404   C6_9 = C6.fC * C_al;\par
405   C6_7 = C6.fC * (1 - C_ap - C_al); /* There is no need to subtract 0.55 since \par
406                                        this was already taken into account in \par
407                                        the flow equation */\par
408   \par
409  /*   Updating the Soil Carbon Pool 7, 8 and 9 */\par
410 \par
411   SC7 += C6_7 ;\par
412   SC8 += C6_8 ;\par
413   SC9 += C6_9 ;\par
414 \par
415 /*   Rprintf("C6_9 %f \\n",C6_9); */\par
416 \par
417 /*  Updating the Soil Nitrogen Pool 7, 8 and 9 */\par
418 \par
419   SN7 += SC7 / CN_slow ;\par
420   SN8 += SC8 / CN_passive ;\par
421   SN9 += SC9 / CN_slow ;\par
422   \par
423 /*    Slow Carbon to intermediate stage */\par
424 \par
425   C7 = flow(&SC7,CN_slow,Abiot,0,0,respC7,7,Ks);\par
426 \par
427   Resp += C7.Resp;\par
428   MinN += C7.MinN;\par
429   \par
430   C_sp = 0.003 - 0.009 *Tc;\par
431   C7_8 = C7.fC * C_sp;\par
432   C7_6 = C7.fC * (1 - C_sp);  /* There is no need to subtract 0.55 since \par
433                                  this was already taken into account in \par
434                                  the flow equation */\par
435 \par
436 /*    Updating the Soil Carbon Pools 6 and 8 */\par
437 \par
438   SC6 += C7_6 ;\par
439   SC8 += C7_8 ;\par
440 \par
441 /*    Updating the Soil Nitrogen Pools 6 and 8 */\par
442 \par
443   SN6 = SC6 / CN_active;\par
444   SN8 = SN8 / CN_passive;\par
445 \par
446 /*    Passive Carbon to Soil Microbe C */\par
447 \par
448   C8_6 = flow(&SC8,CN_passive,Abiot,0,0,respC8,8,Ks);\par
449 \par
450   Resp += C8_6.Resp;\par
451   MinN += C8_6.MinN;\par
452 \par
453 /*   Updating the Soil Microbe C 6 and 8 */\par
454   \par
455   SC8 = C8_6.SC ;\par
456   SC6 += C8_6.fC ;\par
457 \par
458   SN6 = SC6 / CN_active;\par
459   SN8 = SC8 / CN_passive;\par
460 \par
461   tmp.SNs[0] = SN1 / cf;\par
462   tmp.SNs[1] = SN2 / cf ;\par
463   tmp.SNs[2] = SN3 / cf ;\par
464   tmp.SNs[3] = SN4 / cf ;\par
465   tmp.SNs[4] = SN5 / cf ;\par
466   tmp.SNs[5] = SN6 / cf ;\par
467   tmp.SNs[6] = SN7 / cf ;\par
468   tmp.SNs[7] = SN8 / cf ;\par
469   tmp.SNs[8] = SN9 / cf ;\par
470 \par
471   tmp.SCs[0] = SC1 / cf;\par
472   tmp.SCs[1] = SC2 / cf;\par
473   tmp.SCs[2] = SC3 / cf;\par
474   tmp.SCs[3] = SC4 / cf;\par
475   tmp.SCs[4] = SC5 / cf;\par
476   tmp.SCs[5] = SC6 / cf;\par
477   tmp.SCs[6] = SC7 / cf;\par
478   tmp.SCs[7] = SC8 / cf;\par
479   tmp.SCs[8] = SC9 / cf;\par
480 \par
481   tmp.MinN = MinN;\par
482   tmp.Resp = Resp;\par
483 \par
484 /* Converting Leaf Litter to its original units */\par
485 \par
486   *LeafL /= cf;\par
487   *StemL /= cf;\par
488   *RootL /= cf;\par
489   *RhizL /= cf;\par
490 \par
491   return(tmp);\par
492 \}\par
}
}
{\xe \v flow\:BioCro.h}
{\xe \v BioCro.h\:flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow_str} {\b flow} (double * {\i SC}, double {\i CNratio}, double {\i A}, double {\i Lc}, double {\i Tm}, double {\i resp}, int {\i kno}, double {\i Ks}[8])}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 523                                                                                                                     \{\par
524 \par
525   struct flow_str tmp;\par
526 \par
527   double Kf = 0.0, fC = 0.0;\par
528   double Resp, MinN;\par
529 \par
530   if(kno < 3)\{\par
531     Kf = Ks[kno-1] * Lc * A ;\par
532     fC = Kf * *SC;\par
533   \}else\par
534   if(kno == 3)\{\par
535     Kf = Ks[kno-1] * A * Tm ;\par
536     fC = Kf * *SC;\par
537   \}else\par
538   if(kno > 3)\{\par
539     Kf = Ks[kno-1] * A;\par
540     fC = Kf * *SC;\par
541   \}\par
542 \par
543   if(Kf > 1)\{\par
544     Rprintf("Kf greater than 1: %d %f %f %f %f \\n", kno, Ks[kno-1], Kf, A, Tm);\par
545   \}\par
546 \par
547   Resp = fC * resp;\par
548 \par
549   /*  Mineralized N */\par
550   MinN = Resp / CNratio;\par
551 \par
552   *SC = *SC - fC;\par
553   \par
554   fC = fC - Resp;\par
555 /*   fN = fC / CNratio; */\par
556 \par
557 /*  It is important to keep track of C emissions because */\par
558 /*  I might need to validate it against Eddy flux data */\par
559   tmp.SC = *SC;\par
560   tmp.fC = fC;\par
561   tmp.Resp = Resp;\par
562   tmp.MinN = MinN;  \par
563 \par
564   return(tmp);\par
565 \par
566 \}\par
}
}
{\xe \v FmLcFun\:BioCro.h}
{\xe \v BioCro.h\:FmLcFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b FL_str} FmLcFun (double {\i Lig}, double {\i Nit})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 496                                              \{\par
497 \par
498   double Fm, Ls, Lc;\par
499   struct FL_str tmp;\par
500 \par
501   Fm = 0.85 - 0.018 *(Lig/Nit);\par
502   Ls = Lig / (1 - Fm);\par
503   Lc = exp(-3 * Ls);\par
504 \par
505   tmp.Lc = Lc;\par
506   tmp.Fm = Fm;\par
507 \par
508   return(tmp);\par
509 \par
510 \}\par
}
}
{\xe \v lightME\:BioCro.h}
{\xe \v BioCro.h\:lightME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lightME (double {\i lat}, int {\i DOY}, int {\i td})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28 \par
29         extern double tmp1[];\par
30         double *ip1;\par
31         ip1 = &tmp1[0];\par
32         double omega, delta0, delta, deltaR;\par
33         double tf, SSin, CCos, PPo;\par
34         double CosZenithAngle, CosHour;\par
35         double CosHourDeg;\par
36         double Idir, Idiff, propIdir, propIdiff;\par
37         const double DTR = M_PI/180;\par
38         const double tsn = 12.0;\par
39         const double alpha = 0.85;\par
40         const double SolarConstant = 2650;\par
41         const double atmP = 1e5;\par
42 \par
43         omega = lat * DTR;\par
44         delta0 = 360.0 * ((DOY + 10)/365.0);\par
45         delta = -23.5 * cos(delta0*DTR);\par
46         deltaR = delta * DTR;\par
47 \par
48         tf = (15.0*(td - tsn))*DTR;\par
49         SSin = sin(deltaR) * sin(omega);\par
50         CCos = cos(deltaR) * cos(omega);\par
51 \par
52         CosZenithAngle = SSin + CCos * cos(tf);\par
53         if(CosZenithAngle < pow(10,-10))\par
54                 CosZenithAngle = pow(10,-10);\par
55 \par
56         CosHour = -tan(omega) * tan(deltaR);\par
57         CosHourDeg = (1/DTR)*CosHour;\par
58         if(CosHourDeg < -57)\par
59                 CosHour = -0.994;\par
60 \par
61         PPo = 1e5 / atmP;\par
62         Idir = SolarConstant * (pow(alpha,(PPo/CosZenithAngle)));\par
63         Idiff = 0.3 * SolarConstant *(1 - pow(alpha,(PPo/CosZenithAngle))) * CosZenithAngle ;\par
64 \par
65         propIdir = Idir / (Idir + Idiff);\par
66         propIdiff = Idiff / (Idir + Idiff);\par
67 \par
68         *ip1 = propIdir;\par
69         *(ip1+1) = propIdiff;\par
70         *(ip1+2) = CosZenithAngle;\par
71         return;\par
72 \}\par
}
}
{\xe \v newc3CanAC\:BioCro.h}
{\xe \v BioCro.h\:newc3CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} newc3CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Jmax}, double {\i Rd}, double {\i Catm}, double {\i o2}, double {\i b0}, double {\i b1}, double {\i theta}, double {\i kd}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resp\:BioCro.h}
{\xe \v BioCro.h\:resp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double resp (double {\i comp}, double {\i mrc}, double {\i temp})}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1024                                                  \{\par
1025 \par
1026         double ans;\par
1027 \par
1028         ans = comp *  (1 - (mrc * pow(2,(temp/10.0))));\par
1029 \par
1030         if(ans <0) ans = 0;\par
1031 \par
1032         return(ans);\par
1033 \par
1034 \}\par
}
}
{\xe \v RHprof\:BioCro.h}
{\xe \v BioCro.h\:RHprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RHprof (double {\i RH}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145 \{\par
146         int i;\par
147         double kh, hsla, j;\par
148 \par
149         kh = 1 - RH;\par
150         /* kh = 0.2; */\par
151         /*kh = log(1/RH);*/\par
152         for(i=0;i<nlayers;i++)\par
153         \{\par
154                 j = i + 1;\par
155                 hsla = RH * exp(kh * (j/nlayers));\par
156 //              /*hsla = RH * exp(-kh * (j/nlayers));  /*new simpler version from Joe Iverson*/\par
157                 if(hsla > 1) hsla = 0.99; \par
158                 tmp4[tp4++] = hsla;\par
159         \}\par
160         /* It should return values in the 0-1 range */\par
161 \}\par
}
}
{\xe \v RSS_BG\:BioCro.h}
{\xe \v BioCro.h\:RSS_BG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RSS_BG (double {\i oStem}[], double {\i oLeaf}[], double {\i oRhizome}[], double {\i oRoot}[], double {\i oGrain}[], double {\i oLAI}[], double {\i sStem}[], double {\i sLeaf}[], double {\i sRhizome}[], double {\i sRoot}[], double {\i sGrain}[], double {\i sLAI}[], int {\i N1Dat})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1815                         \{\par
1816 \par
1817         int i;\par
1818         double diff1=0.0, RSS1=0.0, SST1=0.0;\par
1819         double diff2=0.0, RSS2=0.0, SST2=0.0;\par
1820         double diff3=0.0, RSS3=0.0, SST3=0.0;\par
1821         double diff4=0.0, RSS4=0.0, SST4=0.0; \par
1822         double diff5=0.0, RSS5=0.0, SST5=0.0;\par
1823         double diff6=0.0, RSS6=0.0, SST6=0.0;\par
1824         double RSS=0.0;\par
1825 \par
1826         for(i = 0 ; i < N1Dat; i++)\{\par
1827                 /* Stem */\par
1828                 if(oStem[i] >= 0)\{\par
1829                         SST1 += pow(oStem[i],2);\par
1830                         diff1 = oStem[i] - sStem[i];\par
1831                         RSS1 += pow(diff1,2);\par
1832                 \}\par
1833                 /* Leaf */\par
1834                 if(oLeaf[i] >= 0)\{\par
1835                         SST2 += pow(oLeaf[i],2);\par
1836                         diff2 = oLeaf[i] - sLeaf[i];\par
1837                         RSS2 += pow(diff2,2);\par
1838                 \}\par
1839                 /* Rhizome */\par
1840                 if(oRhizome[i] >= 0)\{\par
1841                         SST3 += pow(oRhizome[i],2);\par
1842                         diff3 = oRhizome[i] - sRhizome[i];\par
1843                         RSS3 += pow(diff3,2);\par
1844                 \}\par
1845                 /* Root */\par
1846                 if(oRoot[i] >= 0)\{\par
1847                         SST4 += pow(oRoot[i],2);\par
1848                         diff4 = oRoot[i] - sRoot[i];\par
1849                         RSS4 += pow(diff4,2);\par
1850                 \}\par
1851                 /* LAI */\par
1852                 if(oLAI[i] >= 0)\{\par
1853                         SST5 += pow(oLAI[i],2);\par
1854                         diff5 = oLAI[i] - sLAI[i];\par
1855                         RSS5 += pow(diff5,2);\par
1856                 \}\par
1857                 if(oGrain[i] >= 0)\{\par
1858                         SST6 += pow(oGrain[i],2);\par
1859                         diff6 = oGrain[i] - sGrain[i];\par
1860                         RSS6 += pow(diff6,2);\par
1861                 \}\par
1862         \}\par
1863 \par
1864         RSS = RSS1 + RSS2 + RSS3 + RSS4 + RSS5 + RSS6;\par
1865         return(RSS);\par
1866 \}\par
}
}
{\xe \v sel_dbp_coef\:BioCro.h}
{\xe \v BioCro.h\:sel_dbp_coef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b dbp_str} sel_dbp_coef (double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1039                                                                                   \{\par
1040 \par
1041         struct dbp_str tmp;\par
1042 \par
1043         tmp.kLeaf = 0.0;\par
1044         tmp.kStem = 0.0;\par
1045         tmp.kRoot = 0.0;\par
1046         tmp.kRhiz = 0.0;\par
1047         tmp.kGrain = 0.0; /* kGrain is always zero except for the last thermal period */\par
1048 \par
1049         if(TherTime < TherPrds[0])\par
1050         \{\par
1051                 tmp.kStem = coefs[0];\par
1052                 tmp.kLeaf = coefs[1];\par
1053                 tmp.kRoot = coefs[2];\par
1054                 tmp.kRhiz = coefs[3];\par
1055 \par
1056         \} else\par
1057                 if( TherTime < TherPrds[1] )\par
1058                 \{\par
1059                         tmp.kStem = coefs[4];\par
1060                         tmp.kLeaf = coefs[5];\par
1061                         tmp.kRoot = coefs[6];\par
1062                         tmp.kRhiz = coefs[7];\par
1063 \par
1064                 \} else\par
1065                         if( TherTime < TherPrds[2])\par
1066                         \{\par
1067                                 tmp.kStem = coefs[8];\par
1068                                 tmp.kLeaf = coefs[9];\par
1069                                 tmp.kRoot = coefs[10];\par
1070                                 tmp.kRhiz = coefs[11];\par
1071 \par
1072                         \} else\par
1073                                 if(TherTime < TherPrds[3])\par
1074                                 \{\par
1075                                         tmp.kStem = coefs[12];\par
1076                                         tmp.kLeaf = coefs[13];\par
1077                                         tmp.kRoot = coefs[14];\par
1078                                         tmp.kRhiz = coefs[15];\par
1079 \par
1080                                 \} else\par
1081                                         if(TherTime < TherPrds[4])\par
1082                                         \{\par
1083                                                 tmp.kStem = coefs[16];\par
1084                                                 tmp.kLeaf = coefs[17];\par
1085                                                 tmp.kRoot = coefs[18];\par
1086                                                 tmp.kRhiz = coefs[19];\par
1087 \par
1088                                         \} else\{\par
1089                                                 \par
1090                                                         tmp.kStem = coefs[20];\par
1091                                                         tmp.kLeaf = coefs[21];\par
1092                                                         tmp.kRoot = coefs[22];\par
1093                                                         tmp.kRhiz = coefs[23];\par
1094                                                         tmp.kGrain = coefs[24];\par
1095                                                 \par
1096                                                 \}\par
1097 \par
1098 \par
1099         return(tmp);\par
1100 \par
1101 \}\par
}
}
{\xe \v sel_phen\:BioCro.h}
{\xe \v BioCro.h\:sel_phen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sel_phen (int {\i phen})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 2262                          \{\par
2263 \par
2264         double index = 0;\par
2265 \par
2266         if(phen == 6)\{\par
2267                 index = runif(20,25);\par
2268         \}else \par
2269          if(phen == 5)\{\par
2270                  index = runif(16,20);\par
2271          \}else\par
2272           if(phen == 4)\{\par
2273                   index = runif(12,16);\par
2274           \}else\par
2275            if(phen == 3)\{\par
2276                    index = runif(8,12);\par
2277            \}else\par
2278             if(phen == 2)\{\par
2279                     index = runif(4,8);\par
2280             \}else\par
2281              if(phen == 1)\{\par
2282                      index = runif(0,4);\par
2283              \}\par
2284 \par
2285         return(index);\par
2286 \par
2287 \}\par
}
}
{\xe \v SoilEvapo\:BioCro.h}
{\xe \v BioCro.h\:SoilEvapo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double SoilEvapo (double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i DirectRad}, double {\i awc}, double {\i fieldc}, double {\i wiltp}, double {\i winds}, double {\i RelH}, double {\i rsec})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 413                                                                                                   \{\par
414 \par
415         double SoilArea;\par
416         double SoilTemp;\par
417         double Up; /*Maximum Dimensionless Uptake Rate */\par
418         double TotalRadiation;\par
419         double BoundaryLayerThickness, DiffCoef;\par
420         double SoilBoundaryLayer, Ja, rlc;\par
421         double PhiN, PsycParam, DeltaPVa;\par
422         double Evaporation = 0.0;  \par
423         double DdryA, LHV, SlopeFS, SWVC;\par
424 \par
425         double rawc; /* Relative available water content */\par
426 \par
427         int method = 1;\par
428 \par
429         /* some constants */\par
430         const double SoilClodSize = 0.04;\par
431         const double SoilReflectance = 0.2;\par
432         const double SoilTransmission = 0.01;\par
433         const double SpecificHeat = 1010;\par
434         const double StefanBoltzman = 5.67e-8; /* Stefan Boltzman Constant */\par
435 \par
436         const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
437 \par
438         /* For Transpiration */\par
439         /* 3600 converts seconds to hours */\par
440         /* 1e-3 converts mili mols to mols */\par
441         /* 18 is the grams in one mol of H20 */\par
442         /* 1e-6 converts g to Mg */\par
443         /* 10000 scales from meter squared to hectare */\par
444 \par
445         /* Let us assume a simple way of calculating the proportion of the\par
446            soil with direct radiation */\par
447         SoilArea = exp(-k * LAI);\par
448 \par
449         /* For now the temperature of the soil will be the same as the air.\par
450            At a later time this can be made more accurate. I looked at the\par
451            equations for this and the issue is that it is strongly dependent on\par
452            depth. Since the soil model now has a single layer, this cannot be\par
453            implemented correctly at the moment.  */\par
454 \par
455         SoilTemp = AirTemp;\par
456 \par
457         /* Let us use an idea of Campbell and Norman. Environmental\par
458            Biophysics. */\par
459         /* If relative available water content is */\par
460         rawc = (awc - wiltp)/(fieldc - wiltp);\par
461 \par
462         /* Page 142 */\par
463         /* Maximum Dimensionless Uptake Rate */\par
464         Up = 1 - pow((1 + 1.3 * rawc),-5);  \par
465         /* This is a useful idea because dry soils evaporate little water when dry*/\par
466 \par
467         /* Total Radiation */\par
468         /*' Convert light assuming 1 \'B5mol PAR photons = 0.235 J/s Watts*/\par
469         /* At the moment soil evaporation is grossly overestimated. In WIMOVAC\par
470            the light reaching the last layer of leaves is used. Here instead\par
471            of calculating this again, I will for now assume a 10% as a rough\par
472            estimate. Note that I could maybe get this since layIdir and\par
473            layIDiff in sunML are external variables.  Rprintf("IRad\par
474            %.5f",layIdir[0],"\\n"); Update: 03-13-2009. I tried printing this\par
475            value but it is still too high and will likely overestimate soil\par
476            evaporation. However, this is still a work in progress.\par
477         */\par
478         IRad *= rsec; /* Radiation soil evaporation coefficient */ \par
479 \par
480         TotalRadiation = IRad * 0.235;\par
481  \par
482         DdryA = TempToDdryA(AirTemp) ;\par
483         LHV = TempToLHV(AirTemp) * 1e6 ; \par
484 /* Here LHV is given in MJ kg-1 and this needs to be converted\par
485    to Joules kg-1  */\par
486         SlopeFS = TempToSFS(AirTemp) * 1e-3;\par
487         SWVC = TempToSWVC(AirTemp) * 1e-3;\par
488 \par
489         PsycParam = (DdryA * SpecificHeat) / LHV;\par
490         DeltaPVa = SWVC * (1 - RelH / 100);\par
491 \par
492         BoundaryLayerThickness = 4e-3 * sqrt(SoilClodSize / winds); \par
493         DiffCoef = 2.126e-5 * 1.48e-7 * SoilTemp;\par
494         SoilBoundaryLayer = DiffCoef / BoundaryLayerThickness;\par
495 \par
496         Ja = 2 * TotalRadiation * ((1 - SoilReflectance - SoilTransmission) / (1 - SoilTransmission));\par
497 \par
498         rlc = 4 * StefanBoltzman * pow((273 + SoilTemp),3) * 0.005;\par
499 /* the last term should be the difference between air temperature and\par
500    soil. This is not actually calculated at the moment. Since this is\par
501    mostly relevant to the first soil layer where the temperatures are\par
502    similar. I will leave it like this for now. */\par
503 \par
504         PhiN = Ja - rlc; /* Calculate the net radiation balance*/\par
505         if(PhiN < 0) PhiN = 1e-7;\par
506 \par
507         /* Priestly-Taylor */\par
508         if(method == 0)\{\par
509                 Evaporation = 1.26 * (SlopeFS * PhiN) / (LHV * (SlopeFS + PsycParam));\par
510         \}else\{\par
511                 /* Penman-Monteith */\par
512                 Evaporation = (SlopeFS * PhiN + LHV * PsycParam * SoilBoundaryLayer * DeltaPVa) / (LHV * (SlopeFS + PsycParam));\par
513         \}\par
514 /*  Report back the soil evaporation rate in Units mmoles/m2/s */\par
515 /*     Evaporation = Evaporation * 1000:   ' Convert Kg H20/m2/s to g H20/m2/s */\par
516 /*     Evaporation = Evaporation / 18:     ' Convert g H20/m2/s to moles H20/m2/s */\par
517 /*     Evaporation = Evaporation * 1000:   ' Convert moles H20/m2/s to mmoles H20/m2/s */\par
518     \par
519 /*     If Evaporation <= 0 Then Evaporation = 0.00001: \par
520        ' Prevent any odd looking values which might get through at very low light levels */\par
521 \par
522         Evaporation *= 1e6/18;\par
523         /* Adding the area dependence and the effect of drying */\par
524         /* Converting from m2 to ha (times 1e4) */\par
525         /* Converting to hour */\par
526         Evaporation *= SoilArea * Up * cf2; \par
527         if(Evaporation < 0) Evaporation = 1e-6;\par
528 \par
529         return(Evaporation);\par
530 \}\par
}
}
{\xe \v soilML\:BioCro.h}
{\xe \v BioCro.h\:soilML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b soilML_str} soilML (double {\i precipit}, double {\i transp}, double * {\i cws}, double {\i soildepth}, double * {\i depths}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, struct {\b soilText_str} {\i soTexS}, int {\i wsFun}, int {\i layers}, double {\i rootDB}, double {\i LAI}, double {\i k}, double {\i AirTemp}, double {\i IRad}, double {\i winds}, double {\i RelH}, int {\i hydrDist}, double {\i rfl}, double {\i rsec}, double {\i rsdf})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 807                                                                                                                                                                                                                                                                                                                                                                   \{\par
808 \par
809         struct rd_str tmp4;\par
810         struct seqRD_str tmp3;\par
811         struct soilML_str tmp;\par
812         /* Constant */\par
813         /* const double G = 6.67428e-11;  m3 / (kg * s-2)  ##  http://en.wikipedia.org/wiki/Gravitational_constant */\par
814         const double g = 9.8; /* m / s-2  ##  http://en.wikipedia.org/wiki/Standard_gravity */\par
815         /* Variables */\par
816         double waterIn, oldWaterIn = 0.0;\par
817 /* Here is a convention aw is available water in volume and awc\par
818    is available water content as a fraction of the soil section being investigated.\par
819    paw is plant available water aw - wiltp */\par
820         double aw, paw, awc, awc2, Newpawha;\par
821         double drainage = 0.0;\par
822         double wsPhoto = 0.0, wsSpleaf = 0.0, phi10;\par
823         double wsPhotoCol = 0.0, wsSpleafCol = 0.0;\par
824         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
825         double Nleach = 0.0;\par
826         double layerDepth;\par
827         double diffw;\par
828         double rootATdepth, rootDepth;\par
829         double EvapoTra = 0.0, oldEvapoTra = 0.0, Sevap = 0.0, Ctransp = 0.0;\par
830         double psim1 = 0.0, psim2 = 0.0, K_psim = 0.0, J_w = 0.0, dPsim = 0.0;\par
831         double theta_s; /* This is the saturated soil water content. Larger than FieldC.*/\par
832         int i;\par
833         int j = layers - 1; \par
834 \par
835         /* Specify the soil type */\par
836 \par
837         if(fieldc < 0)\{\par
838                 fieldc = soTexS.fieldc;\par
839         \}\par
840         if(wiltp < 0)\{\par
841                 wiltp = soTexS.wiltp;\par
842         \}\par
843 \par
844         theta_s = soTexS.satur;\par
845         /* rooting depth */\par
846         /* Crude empirical relationship between root biomass and rooting depth*/\par
847         rootDepth = rootDB * rsdf;\par
848         if(rootDepth > soildepth) rootDepth = soildepth;\par
849 \par
850         tmp3 = seqRootDepth(rootDepth,layers);\par
851         tmp4 = rootDist(layers,rootDepth,&depths[0],rfl);\par
852 \par
853         /* unit conversion for precip */\par
854         waterIn = precipit * 1e-3; /* convert precip in mm to m*/\par
855 \par
856         for(j=0,i=layers-1;j<layers;j++,i--)\{\par
857         /* for(i=0;i<layers;i++)\{ */\par
858                 /* It decreases because I increase the water content due to precipitation in the last layer first*/\par
859 \par
860                 /* This supports unequal depths. */\par
861                 if(i == 0)\{\par
862                         layerDepth = depths[1];\par
863                 \}else\{\par
864                         layerDepth = depths[i] - depths[i-1];\par
865                 \}\par
866 \par
867 \par
868                 if(hydrDist > 0)\{\par
869                         /* For this section see Campbell and Norman "Environmental BioPhysics" Chapter 9*/\par
870                         /* First compute the matric potential */\par
871                         psim1 = soTexS.air_entry * pow((cws[i]/theta_s),-soTexS.b) ; /* This is matric potential of current layer */\par
872                         if(i > 0)\{\par
873                                 psim2 = soTexS.air_entry * pow((cws[i-1]/theta_s),-soTexS.b) ; /* This is matric potential of next layer */\par
874                                 dPsim = psim1 - psim2;\par
875                                 /* The substraction is from the layer i - (i-1). If this last term is positive then it will move upwards. If it is negative it will move downwards. Presumably this term is almost always positive. */\par
876                         \}else\{\par
877                                 dPsim = 0;\par
878                         \}\par
879                         K_psim = soTexS.Ks * pow((soTexS.air_entry/psim1),2+3/soTexS.b); /* This is hydraulic conductivity */\par
880                         J_w = K_psim * (dPsim/layerDepth) - g * K_psim ; /*  Campbell, pg 129 do not ignore the graviational effect*/\par
881                         /* Notice that K_psim is positive because my\par
882                             reference system is reversed */\par
883                         /* This last result should be in kg/(m2 * s)*/\par
884                          J_w *= 3600 * 0.9882 * 1e-3 ; /* This is flow in m3 / (m^2 * hr). */\par
885                         /* Rprintf("J_w %.10f \\n",J_w);  */\par
886                         if(i == (layers-1) && J_w < 0)\{\par
887                                         /* cws[i] = cws[i] + J_w /\par
888                                          * layerDepth; Although this\par
889                                          * should be done it drains\par
890                                          * the last layer too much.*/\par
891                                         drainage += J_w;\par
892                         \}else\{\par
893                                 if(i > 0)\{\par
894                                         cws[i] = cws[i] -  J_w / layerDepth;\par
895                                         cws[i - 1] =  cws[i-1] +  J_w / layerDepth;\par
896                                 \}else\{\par
897                                         cws[i] = cws[i] -  J_w / layerDepth;\par
898                                 \}\par
899                         \}\par
900                 \}\par
901 \par
902                  if(cws[i] > theta_s) cws[i] = theta_s; \par
903                 /* if(cws[i+1] > fieldc) cws[i+1] = fieldc; */\par
904                  if(cws[i] < wiltp) cws[i] = wiltp; \par
905                 /* if(cws[i+1] < wiltp) cws[i+1] = wiltp;  */\par
906 \par
907                 aw = cws[i] * layerDepth;\par
908 /* Available water (for this layer) is the current water status times the layer depth */\par
909 \par
910                 if(waterIn > 0)\{\par
911                         /* There is some rain. Need to add it.*/\par
912                         aw += waterIn / layers + oldWaterIn; /* They are both in meters so it works */\par
913                         /* Adding the same amount to water to each layer */\par
914                         /* In case there is overflow */\par
915                         diffw = fieldc * layerDepth - aw;\par
916 \par
917                         if(diffw < 0)\{\par
918                                 /* This means that precipitation exceeded the capacity of the first layer */\par
919                                 /* Save this amount of water for the next layer */\par
920                                 oldWaterIn = -diffw;\par
921                                 aw = fieldc * layerDepth;\par
922                         \}else\{\par
923                                 oldWaterIn = 0.0;\par
924                         \}\par
925                 \}\par
926 \par
927                 /* Root Biomass */\par
928                 rootATdepth = rootDB * tmp4.rootDist[i];\par
929                 tmp.rootDist[i] = rootATdepth;\par
930 /* Plant available water is only between current water status and permanent wilting point */\par
931                 /* Plant available water */\par
932                 paw = aw - wiltp * layerDepth;\par
933                 if(paw < 0) paw = 0; \par
934 \par
935                 if(i == 0)\{\par
936                         /* Only the first layer is affected by soil evaporation */\par
937                         awc2 = aw / layerDepth;\par
938                         /* SoilEvapo function needs soil water content  */\par
939                         Sevap = SoilEvapo(LAI,k,AirTemp,IRad,awc2,fieldc,wiltp,winds,RelH,rsec);\par
940                         /* I assume that crop transpiration is distributed simlarly to\par
941                            root density.  In other words the crop takes up water proportionally\par
942                            to the amount of root in each respective layer.*/\par
943                         Ctransp = transp*tmp4.rootDist[0];\par
944                         EvapoTra = Ctransp + Sevap;\par
945                         Newpawha = (paw * 1e4) - EvapoTra / 0.9982; /* See the watstr function for this last number 0.9882 */\par
946                         /* The first term in the rhs (paw * 1e4) is the m3 of water available in this layer.\par
947                            EvapoTra is the Mg H2O ha-1 of transpired and evaporated water. 1/0.9882 converts from Mg to m3 */\par
948                 \}else\{\par
949                         Ctransp = transp*tmp4.rootDist[i];\par
950                         EvapoTra = Ctransp;\par
951                         Newpawha = (paw * 1e4) - (EvapoTra + oldEvapoTra);\par
952                 \}\par
953 \par
954                 if(Newpawha < 0)\{\par
955 /* If the Demand is not satisfied by this layer. This will be stored and added to subsequent layers*/\par
956                         oldEvapoTra = -Newpawha;\par
957                          aw = wiltp * layerDepth; \par
958                 \}\par
959 \par
960                 paw = Newpawha / 1e4 ;\par
961                 awc = paw / layerDepth + wiltp;   \par
962 \par
963 /* This might look like a weird place to populate the structure, but is more convenient*/\par
964                 tmp.cws[i] = awc;\par
965                 tmp.hourlyWflux[i] =J_w;\par
966                 if(wsFun == 0)\{\par
967                         slp = 1/(fieldc - wiltp);\par
968                         intcpt = 1 - fieldc * slp;\par
969                         wsPhoto = slp * awc + intcpt ;\par
970                 \}else\par
971                 if(wsFun == 1)\{\par
972                         phi10 = (fieldc + wiltp)/2;\par
973                         wsPhoto = 1/(1 + exp((phi10 - awc)/ phi1));\par
974                 \}else\par
975                 if(wsFun == 2)\{\par
976                         slp = (1 - wiltp)/(fieldc - wiltp);\par
977                         intcpt = 1 - fieldc * slp;\par
978                         theta = slp * awc + intcpt ;\par
979                         wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
980                 \}else\par
981                 if(wsFun == 3)\{\par
982                         wsPhoto = 1;\par
983                 \}\par
984 \par
985                 if(wsPhoto <= 0 )\par
986                         wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
987 \par
988                 wsPhotoCol += wsPhoto;\par
989 \par
990                 wsSpleaf = pow(awc,phi2) * 1/pow(fieldc,phi2); \par
991                 if(wsFun == 3)\{ \par
992                         wsSpleaf = 1;\par
993                 \}\par
994                 wsSpleafCol += wsSpleaf;\par
995 \par
996         \}\par
997 \par
998         if(waterIn > 0)\{ \par
999                 drainage = waterIn;\par
1000                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
1001                 /* The data comes in mm/hr and it needs to be in cm/month */\par
1002                 Nleach = drainage * 0.1 * (1/24*30) / (18 * (0.2 + 0.7 * soTexS.sand));\par
1003         \}\par
1004 \par
1005 /* Apparently wsPhoto and wsSpleaf can be greater than 1 */\par
1006         if(wsPhoto > 1) wsPhoto = 1;\par
1007         if(wsSpleaf > 1) wsSpleaf = 1;\par
1008 \par
1009 /* returning the structure */\par
1010         tmp.rcoefPhoto = (wsPhotoCol/layers);\par
1011         tmp.drainage = drainage;\par
1012         tmp.Nleach = Nleach;\par
1013         tmp.rcoefSpleaf = (wsSpleafCol/layers);\par
1014         tmp.SoilEvapo = Sevap;\par
1015 \par
1016         return(tmp);\par
1017 \}\par
}
}
{\xe \v sunML\:BioCro.h}
{\xe \v BioCro.h\:sunML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sunML (double {\i Idir}, double {\i Idiff}, double {\i LAI}, int {\i nlayers}, double {\i cosTheta}, double {\i kd}, double {\i chil}, double {\i heightf})}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76 \{\par
77         extern int sp1, sp2, sp3, sp4, sp5, sp6;\par
78         extern double layIdir[], layIdiff[], layItotal[], layFsun[], layFshade[], layHeight[];\par
79         double i;\par
80         double k0, k1, k;\par
81         double LAIi, CumLAI;\par
82         double Isolar, Idiffuse, Ibeam, Iscat, Itotal,alphascatter;\par
83         double Ls, Ld;\par
84         double Fsun, Fshade;\par
85         alphascatter=0.8;\par
86         k0 = sqrt(pow(chil ,2) + pow(tan(acos(cosTheta)),2));\par
87         k1 = chil + 1.744*pow((chil+1.183),-0.733);\par
88         k = k0/k1;\par
89         if(k<0)\par
90                 k = -k;\par
91 \par
92         LAIi = LAI / nlayers;\par
93 \par
94         for(i=0;i<nlayers;i++)\par
95         \{\par
96                 CumLAI = LAIi * (i+0.5);\par
97                 \par
98                 Ibeam=Idir*cosTheta;\par
99                 Iscat = Ibeam * exp(-k *sqrt(alphascatter)* CumLAI)-Ibeam * exp(-k * CumLAI);\par
100                 \par
101                 \par
102                 Isolar = Ibeam*k;\par
103                 Idiffuse = Idiff * exp(-kd * CumLAI) + Iscat;\par
104                 \par
105                 \par
106                 Ls = (1-exp(-k*LAIi))*exp(-k*CumLAI)/k;\par
107                 Ld=LAIi-Ls;\par
108 \par
109                 Fsun=Ls/(Ls+Ld);\par
110                 Fshade=Ld/(Ls+Ld);\par
111                 /*fraction intercepted*/\par
112                 Itotal =(Fsun*Isolar + Idiffuse) * (1-exp(-k*LAIi))/k;\par
113 \par
114                 /* collecting the results */\par
115                 layIdir[sp1++] = Isolar + Idiffuse;\par
116                 layIdiff[sp2++] = Idiffuse;\par
117                 layItotal[sp3++] = Itotal;\par
118                 layFsun[sp4++] = Fsun;\par
119                 layFshade[sp5++] = Fshade;\par
120                 layHeight[sp6++] = CumLAI/heightf;\par
121         \}\par
122 \}\par
}
}
{\xe \v TempToDdryA\:BioCro.h}
{\xe \v BioCro.h\:TempToDdryA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToDdryA (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180 \{\par
181         double DdryA;\par
182         DdryA = 1.295163636 + -0.004258182 * Temp;\par
183         return(DdryA);\par
184 \}\par
}
}
{\xe \v TempToLHV\:BioCro.h}
{\xe \v BioCro.h\:TempToLHV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToLHV (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 187 \{\par
188         double LHV;\par
189         LHV = 2.501 + -0.002372727 * Temp;\par
190         return(LHV);\par
191 \}\par
}
}
{\xe \v TempToSFS\:BioCro.h}
{\xe \v BioCro.h\:TempToSFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSFS (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194 \{\par
195         double SlopeFS;\par
196         SlopeFS = 0.338376068 +  0.011435897 * Temp +  0.001111111 * pow(Temp,2);\par
197         return(SlopeFS);\par
198 \}\par
}
}
{\xe \v TempToSWVC\:BioCro.h}
{\xe \v BioCro.h\:TempToSWVC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSWVC (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201 \{\par
202         double SWVC;\par
203         SWVC =  4.90820192 +   0.06387253 * Temp +    0.02745742 * pow(Temp,2);\par
204         return(SWVC);\par
205 \}\par
}
}
{\xe \v watstr\:BioCro.h}
{\xe \v BioCro.h\:watstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ws_str} watstr (double {\i precipit}, double {\i evapo}, double {\i cws}, double {\i soildepth}, double {\i fieldc}, double {\i wiltp}, double {\i phi1}, double {\i phi2}, int {\i soiltype}, int {\i wsFun})}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 677 \{\par
678 \par
679         struct ws_str tmp;\par
680         struct soilText_str soTexS;\par
681         /* Variables */\par
682         double precipM;\par
683         /* available water and per hectare */\par
684         double aw, naw; \par
685         double pawha, Newpawha, npaw; /* new 04-27-2009 */\par
686         double runoff = 0.0, runoff2 = 0.0;\par
687         /* variable needed for calculation of water stress*/\par
688         double wsPhoto = 0.0, wsSpleaf, phi10;\par
689         double slp = 0.0, intcpt = 0.0, theta = 0.0; \par
690         double Nleach = 0.0;\par
691         /* Nleach is the NO3 leached and Ts is the sand content of the soil*/\par
692 \par
693         /* Specify the soil type */\par
694         soTexS = soilTchoose(soiltype);\par
695 /*   Ts = soTexS.sand; */\par
696 \par
697         if(fieldc < 0)\{\par
698                 fieldc = soTexS.fieldc;\par
699         \}\par
700         if(wiltp < 0)\{\par
701                 wiltp = soTexS.wiltp;\par
702         \}\par
703 \par
704         /* unit conversion for precip */\par
705         precipM = precipit * 1e-3; /* convert precip in mm to m*/\par
706 \par
707         /*    cws is current water status */\par
708         /*    available water */\par
709 \par
710         aw = precipM + cws;\par
711 \par
712         /* if(aw > soTexS.satur)\{  */\par
713         /*      runoff = aw - soTexS.satur; /\\* Here runoff is interpreted as water content exceeding saturation level *\\/ */\par
714         /*      /\\* Need to convert to units used in the Parton et al 1988 paper. *\\/ */\par
715         /*      /\\* The data comes in mm/hr and it needs to be in cm/month *\\/ */\par
716         /*      runoff2 = runoff * 0.10 * (1/24*30); */\par
717         /*      Nleach = runoff /18 * (0.2 + 0.7 * soTexS.sand); */\par
718         /*      aw = soTexS.satur; */\par
719         /* \} */\par
720 \par
721 /* These equations are not correct as runoff would only occur when it exceeds\par
722    saturation, but from the point of view of a crop only field capacity matters */\par
723 /* I'm not sure about what to do about this */\par
724 \par
725         if(aw > fieldc)\{ \par
726                 runoff = aw - fieldc; /* Here runoff is interpreted as water content exceeding saturation level */\par
727                 /* Need to convert to units used in the Parton et al 1988 paper. */\par
728                 /* The data comes in mm/hr and it needs to be in cm/month */\par
729                 runoff2 = runoff * 0.10 * (1/24*30);\par
730                 Nleach = runoff /18 * (0.2 + 0.7 * soTexS.sand);\par
731                 aw = fieldc;\par
732         \}\par
733 \par
734 \par
735         /* Tipping bucket need to collect it if want to estimate runoff */ \par
736         /* plant available water per hectare (pawha) */\par
737         pawha = (aw - wiltp) * 1e4 * soildepth;\par
738         /* The density of water is 998.2 kg/m3 at 20 degrees Celsius */\par
739         /* or 0.9882 Mg/m3 */\par
740         /* pawha is plant available water (m3) per hectare */\par
741         /* evapo is demanded water (Mg) per hectare */\par
742 \par
743         Newpawha = pawha - evapo / 0.9882; /* New version 04-27-2009 */\par
744 \par
745         /*  Here both are in m3 of water per ha-1 so this */\par
746         /*  subtraction should be correct */\par
747         /* go back to original units of water in the profile */\par
748 \par
749         npaw = Newpawha * 1e-4 * (1/soildepth); /* New 04-27-2009 */\par
750 \par
751         if(npaw < 0) npaw = 0.0;\par
752 \par
753         naw = npaw + wiltp;\par
754 \par
755         /* Calculating the soil water potential based on equations from Norman and Campbell */\par
756         /* tmp.psim = soTexS.air_entry * pow((naw/soTexS.fieldc*1.1),-soTexS.b) ; */\par
757         /* New version of the soil water potential is based on\par
758          * "Dynamic Simulation of Water Deficit Effects upon Maize\par
759          * Yield" R. F. Grant Agricultural Systems. 33(1990) 13-39. */\par
760         tmp.psim = -exp(log(0.033) + ((log(fieldc) - log(naw))/(log(fieldc) - log(wiltp)) * (log(1.5) - log(0.033)))) * 1e3; /* This last term converts from MPa to kPa */\par
761 \par
762         /* three different type of equations for modeling the effect of water stress on vmax and leaf area expansion. \par
763            The equation for leaf area expansion is more severe than the one for vmax. */\par
764         if(wsFun == 0)\{ /* linear */\par
765                 slp = 1/(fieldc - wiltp);\par
766                 intcpt = 1 - fieldc * slp;\par
767                 wsPhoto = slp * naw + intcpt ;\par
768         \}else\par
769         if(wsFun == 1)\{\par
770                 phi10 = (fieldc + wiltp)/2;\par
771                 wsPhoto = 1/(1 + exp((phi10 - naw)/ phi1));\par
772         \}else\par
773         if(wsFun == 2)\{\par
774                 slp = (1 - wiltp)/(fieldc - wiltp);\par
775                 intcpt = 1 - fieldc * slp;\par
776                 theta = slp * naw + intcpt ;\par
777                 wsPhoto = (1 - exp(-2.5 * (theta - wiltp)/(1 - wiltp))) / (1 - exp(-2.5));\par
778         \}else\par
779                 if(wsFun == 3)\{\par
780                         wsPhoto = 1;\par
781                 \}\par
782 \par
783         if(wsPhoto <= 0 )\par
784                 wsPhoto = 1e-20; /* This can be mathematically lower than zero in some cases but I should prevent that. */\par
785 \par
786         wsSpleaf = pow(naw,phi2) * 1/pow(fieldc,phi2); \par
787         if(wsFun == 3)\{ \par
788                 wsSpleaf = 1;\par
789         \}\par
790 \par
791 /* Apparently wsPhoto and wsSpleaf can be greater than 1 */\par
792         if(wsPhoto > 1) wsPhoto = 1;\par
793         if(wsSpleaf > 1) wsSpleaf = 1;\par
794 \par
795         /* returning the structure*/\par
796         tmp.rcoefPhoto = wsPhoto;\par
797         tmp.rcoefSpleaf = wsSpleaf;\par
798         tmp.awc = naw;\par
799         tmp.runoff = runoff;\par
800         tmp.Nleach = Nleach;\par
801         return(tmp);\par
802 \}\par
}
}
{\xe \v WINDprof\:BioCro.h}
{\xe \v BioCro.h\:WINDprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WINDprof (double {\i WindSpeed}, double {\i LAI}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129 \{\par
130         int i;\par
131         double k=0.7;\par
132         double LI, CumLAI;\par
133         double Wind;\par
134 \par
135         LI  = LAI / nlayers;\par
136         for(i=0;i<nlayers;i++)\par
137         \{\par
138                 CumLAI = LI * (i + 1);\par
139                 Wind = WindSpeed * exp(-k * (CumLAI-LI));\par
140                 tmp3[tp3++] = Wind;\par
141         \}\par
142 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v CanopyAssim\:BioCro.h}
{\xe \v BioCro.h\:CanopyAssim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CanopyAssim[8760]}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Grainy\:BioCro.h}
{\xe \v BioCro.h\:Grainy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Grainy[8760]}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LAIc\:BioCro.h}
{\xe \v BioCro.h\:LAIc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double LAIc[8760]}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Leafy\:BioCro.h}
{\xe \v BioCro.h\:Leafy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Leafy[8760]}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rhizomey\:BioCro.h}
{\xe \v BioCro.h\:Rhizomey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Rhizomey[8760]}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Rooty\:BioCro.h}
{\xe \v BioCro.h\:Rooty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Rooty[8760]}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Stemy\:BioCro.h}
{\xe \v BioCro.h\:Stemy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Stemy[8760]}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3CanA.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3CanA.c}
{\xe \v /home/dlebauer/dev/biocro/src/c3CanA.c}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "c4photo.h"}\par
{\f2 #include "c3photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "CanA.h"}\par
{\f2 #include "c3CanA.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for c3CanA.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3_can_a_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b c3CanA} (SEXP Lai, SEXP Doy, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP ReH, SEXP windspeed, SEXP LAT, SEXP NLAYERS, SEXP PHOTOPS, SEXP KD, SEXP HEIGHTF, SEXP LNPS, SEXP STOMATAWS, SEXP WS)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3CanA\:c3CanA.c}
{\xe \v c3CanA.c\:c3CanA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP c3CanA (SEXP {\i Lai}, SEXP {\i Doy}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i ReH}, SEXP {\i windspeed}, SEXP {\i LAT}, SEXP {\i NLAYERS}, SEXP {\i PHOTOPS}, SEXP {\i KD}, SEXP {\i HEIGHTF}, SEXP {\i LNPS}, SEXP {\i STOMATAWS}, SEXP {\i WS})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3CanA.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3CanA.h}
{\xe \v /home/dlebauer/dev/biocro/src/c3CanA.h}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3_can_a_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str} {\b c3EvapoTrans} (double Rad, double Itot, double Airtemperature, double RH, double WindSpeed, double LeafAreaIndex, double CanopyHeight, double vcmax2, double jmax2, double Rd2, double b02, double b12, double Catm2, double O2, double theta2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3EvapoTrans\:c3CanA.h}
{\xe \v c3CanA.h\:c3EvapoTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ET_Str} c3EvapoTrans (double {\i Rad}, double {\i Itot}, double {\i Airtemperature}, double {\i RH}, double {\i WindSpeed}, double {\i LeafAreaIndex}, double {\i CanopyHeight}, double {\i vcmax2}, double {\i jmax2}, double {\i Rd2}, double {\i b02}, double {\i b12}, double {\i Catm2}, double {\i O2}, double {\i theta2})}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3canopy.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3canopy.h}
{\xe \v /home/dlebauer/dev/biocro/src/c3canopy.h}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for c3canopy.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3canopy_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3canopy_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyEnv}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyLeaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyoutput}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopy}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3EvapoTrans.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3EvapoTrans.c}
{\xe \v /home/dlebauer/dev/biocro/src/c3EvapoTrans.c}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c3photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "c3EvapoTrans.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for c3EvapoTrans.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3_evapo_trans_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str} {\b c3EvapoTrans} (double Rad, double Itot, double Airtemperature, double RH, double WindSpeed, double LeafAreaIndex, double CanopyHeight, double vcmax2, double jmax2, double Rd2, double b02, double b12, double Catm2, double O2, double theta2, double StomWS, int ws)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3EvapoTrans\:c3EvapoTrans.c}
{\xe \v c3EvapoTrans.c\:c3EvapoTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ET_Str} c3EvapoTrans (double {\i Rad}, double {\i Itot}, double {\i Airtemperature}, double {\i RH}, double {\i WindSpeed}, double {\i LeafAreaIndex}, double {\i CanopyHeight}, double {\i vcmax2}, double {\i jmax2}, double {\i Rd2}, double {\i b02}, double {\i b12}, double {\i Catm2}, double {\i O2}, double {\i theta2}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37 \{\par
38         /* creating the structure to return */\par
39         struct ET_Str tmp;\par
40         struct c3_str tmpc3;\par
41 \par
42         const double LeafWidth = 0.04;\par
43         const double kappa = 0.41;\par
44         const double WindSpeedHeight = 5;\par
45         const double dCoef = 0.77;\par
46         const double tau = 0.2;\par
47         const double ZetaCoef = 0.026;\par
48         const double ZetaMCoef = 0.13;\par
49         const double LeafReflectance = 0.2;\par
50         const double SpecificHeat = 1010;\par
51 \par
52         double Tair, WindSpeedTopCanopy;\par
53         double DdryA, LHV, SlopeFS, SWVC;\par
54         double LayerRelativeHumidity, LayerWindSpeed, totalradiation;\par
55         double LayerConductance, DeltaPVa, PsycParam, ga;\par
56         double BoundaryLayerThickness, DiffCoef,LeafboundaryLayer;\par
57         double d, Zeta, Zetam, ga0, ga1, ga2; \par
58         double Ja, Deltat;\par
59         double PhiN;\par
60         double TopValue, BottomValue;\par
61         double EPen, TransR,EPries; \par
62         double OldDeltaT, rlc, ChangeInLeafTemp; \par
63         int Counter;\par
64 \par
65         WindSpeedTopCanopy = WindSpeed;\par
66         Tair = Airtemperature;\par
67 \par
68         if(CanopyHeight < 0.1)\par
69                 CanopyHeight = 0.1; \par
70 \par
71         DdryA = TempToDdryA(Tair) ;\par
72         LHV = TempToLHV(Tair) * 1e6 ; \par
73         /* Here LHV is given in MJ kg-1 and this needs to be converted\par
74            to Joules kg-1  */\par
75         SlopeFS = TempToSFS(Tair) * 1e-3;\par
76         SWVC = TempToSWVC(Tair) * 1e-3;\par
77 \par
78         /* FIRST CALCULATIONS*/\par
79 \par
80         Zeta = ZetaCoef * CanopyHeight;\par
81         Zetam = ZetaMCoef * CanopyHeight;\par
82         d = dCoef * CanopyHeight;\par
83 \par
84         /* Relative Humidity is giving me a headache */\par
85         /* RH2 = RH * 1e2; A high value of RH makes the \par
86            difference of temperature between the leaf and the air huge.\par
87            This is what is causing the large difference in DeltaT at the \par
88            bottom of the canopy. I think it is very likely.  */\par
89         LayerRelativeHumidity = RH * 100;\par
90         if(LayerRelativeHumidity > 100) \par
91                 error("LayerRelativehumidity > 100"); \par
92 \par
93         if(WindSpeed < 0.5) WindSpeed = 0.5;\par
94 \par
95         LayerWindSpeed = WindSpeed;\par
96 \par
97         /*' Convert light assuming 1 \'B5mol PAR photons = 0.235 J/s Watts*/\par
98         totalradiation = Itot * 0.235;\par
99 \par
100         tmpc3 = c3photoC(Rad,Airtemperature,RH,vcmax2,jmax2,Rd2,b02,b12,Catm2,O2,theta2,StomWS,ws); \par
101         LayerConductance = tmpc3.Gs;\par
102 \par
103         /* Convert mmoles/m2/s to moles/m2/s\par
104            LayerConductance = LayerConductance * 1e-3\par
105            Convert moles/m2/s to mm/s\par
106            LayerConductance = LayerConductance * 24.39\par
107            Convert mm/s to m/s\par
108            LayerConductance = LayerConductance * 1e-3 */\par
109 \par
110         LayerConductance = LayerConductance * 1e-6 * 24.39;  \par
111 \par
112         /* Thornley and Johnson use m s^-1 on page 418 */\par
113 \par
114         /* prevent errors due to extremely low Layer conductance */\par
115         if(LayerConductance <=0)\par
116                 LayerConductance = 0.01;\par
117 \par
118 \par
119         if(SWVC < 0)\par
120                 error("SWVC < 0");\par
121         /* Now RHprof returns relative humidity in the 0-1 range */\par
122         DeltaPVa = SWVC * (1 - LayerRelativeHumidity / 100);\par
123 \par
124         PsycParam =(DdryA * SpecificHeat) / LHV;\par
125 \par
126         /* Ja = (2 * totalradiation * ((1 - LeafReflectance - tau) / (1 - tau))) * LeafAreaIndex; */\par
127         /* It seems that it is not correct to multiply by the leaf area index. Thornley\par
128            and johnson pg. 400 suggest using (1-exp(-k*LAI) but note that for a full canopy\par
129            this is 1. so I'm using 1 as an approximation. */\par
130         Ja = (2 * totalradiation * ((1 - LeafReflectance - tau) / (1 - tau)));\par
131         /* Calculation of ga */\par
132         /* According to thornley and Johnson pg. 416 */\par
133         ga0 = pow(kappa,2) * LayerWindSpeed;\par
134         ga1 = log((WindSpeedHeight + Zeta - d)/Zeta);\par
135         ga2 = log((WindSpeedHeight + Zetam - d)/Zetam);\par
136         ga = ga0/(ga1*ga2);\par
137 \par
138         /*  Rprintf("ga: %.5f \\n", ga); */\par
139         if(ga < 0)\par
140                 error("ga is less than zero");\par
141 \par
142         DiffCoef = (2.126 * 1e-5) + ((1.48 * 1e-7) * Airtemperature);\par
143         BoundaryLayerThickness = 0.004 * sqrt(LeafWidth / LayerWindSpeed);\par
144         LeafboundaryLayer = DiffCoef / BoundaryLayerThickness;\par
145 \par
146         /* Temperature of the leaf according to Campbell and Norman (1998) Chp 4.*/\par
147         /* This version is non-iterative and an approximation*/\par
148         /* Stefan-Boltzmann law: B = sigma * T^4. where sigma is the Boltzmann\par
149            constant: 5.67 * 1e-8 W m^-2 K^-4. */\par
150 \par
151         /* From Table A.3 in the book we know that*/\par
152 \par
153         /*  rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat) * LeafAreaIndex;   */\par
154         /*  PhiN = Ja - rlc; */\par
155 \par
156         /*  dd = 0.72 * LeafWidth; */\par
157         /*  gHa = 1.4 * 0.135 * sqrt(LayerWindSpeed * 0.72 * LeafWidth);  */\par
158         /*  gva = 1.4 * 0.147 * sqrt(LayerWindSpeed * 0.72 * LeafWidth);  */\par
159 \par
160         /*  TopValue = Ja - (SWVC/7.28) * 5.67*1e-8 * pow(Airtemperature + 273.15,4) - LHV * LayerConductance * 1e-3 * DeltaPVa / 101.3; */\par
161         /* Here I divide SWVC by 7.28 to approximately change from g/m3 to kPa */\par
162         /* I'm also multiplying Layer conductance by 1e-3 since it should be in mol m^-2 s^-1 */\par
163 \par
164         /*  BottomValue = SpecificHeat * gHr + LHV * SlopeFS * LayerConductance * 1e-3;  */\par
165 \par
166         /*  Deltat = Airtemperature + TopValue/BottomValue; */\par
167 \par
168         /*  PhiN = TopValue; */\par
169 \par
170         /* This is the original from WIMOVAC*/\par
171         Deltat = 0.01;\par
172         ChangeInLeafTemp = 10;\par
173 \par
174         Counter = 0;\par
175         while( (ChangeInLeafTemp > 0.5) && (Counter <= 10))\par
176         \{\par
177                 OldDeltaT = Deltat;\par
178 \par
179                 /*         rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat) * LeafAreaIndex;   */\par
180                 rlc = (4 * (5.67*1e-8) * pow(273 + Airtemperature, 3) * Deltat);  \par
181 \par
182                 PhiN = (Ja - rlc);\par
183 \par
184 \par
185                 TopValue = PhiN * (1 / ga + 1 / LayerConductance) - LHV * DeltaPVa;\par
186                 BottomValue = LHV * (SlopeFS + PsycParam * (1 + ga / LayerConductance));\par
187                 Deltat = TopValue / BottomValue;\par
188                 if(Deltat > 5)  Deltat = 5;\par
189                 if(Deltat < -5) Deltat = -5;\par
190 \par
191 \par
192                 ChangeInLeafTemp = OldDeltaT - Deltat;\par
193                 if(ChangeInLeafTemp <0)\par
194                         ChangeInLeafTemp = -ChangeInLeafTemp;\par
195                 Counter++;\par
196         \}\par
197 \par
198 \par
199         if(PhiN < 0)\par
200                 PhiN = 0;\par
201 \par
202         TransR = (SlopeFS * PhiN + (LHV * PsycParam * ga * DeltaPVa)) / (LHV * (SlopeFS + PsycParam * (1 + ga / LayerConductance)));\par
203 \par
204         EPries = 1.26 * ((SlopeFS * PhiN) / (LHV * (SlopeFS + PsycParam)));\par
205 \par
206         EPen = (((SlopeFS * PhiN) + LHV * PsycParam * ga * DeltaPVa)) / (LHV * (SlopeFS + PsycParam));\par
207 \par
208         /* This values need to be converted from Kg/m2/s to\par
209            mmol H20 /m2/s according to S Humphries */\par
210         /*res[1,1] = EPen * 10e6 / 18;*/\par
211         /*res[1,2] = EPries * 10e6 / 18;*/\par
212         /* 1e3 - kgrams to grams  */\par
213         /* 1e3 - mols to mmols */\par
214         /*  res[0] = ((TransR * 1e3) / 18) * 1e3 ; */\par
215         /*  res[1] = Deltat; */\par
216         /*  res[2] = LayerConductance; */\par
217         /* Let us return the structure now */\par
218 \par
219         tmp.TransR = TransR * 1e6 / 18; \par
220         tmp.EPenman = EPen * 1e6 / 18; \par
221         tmp.EPriestly = EPries * 1e6 / 18; \par
222         tmp.Deltat = Deltat;\par
223         tmp.LayerCond = LayerConductance * 1e6 * (1/24.39);   \par
224         /*    tmp.LayerCond = RH2;   */\par
225         /*   tmp.LayerCond = 0.7; */\par
226         return(tmp);\par
227 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3EvapoTrans.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3EvapoTrans.h}
{\xe \v /home/dlebauer/dev/biocro/src/c3EvapoTrans.h}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3_evapo_trans_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToDdryA} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToLHV} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSFS} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSWVC} (double Temp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v TempToDdryA\:c3EvapoTrans.h}
{\xe \v c3EvapoTrans.h\:TempToDdryA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToDdryA (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180 \{\par
181         double DdryA;\par
182         DdryA = 1.295163636 + -0.004258182 * Temp;\par
183         return(DdryA);\par
184 \}\par
}
}
{\xe \v TempToLHV\:c3EvapoTrans.h}
{\xe \v c3EvapoTrans.h\:TempToLHV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToLHV (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 187 \{\par
188         double LHV;\par
189         LHV = 2.501 + -0.002372727 * Temp;\par
190         return(LHV);\par
191 \}\par
}
}
{\xe \v TempToSFS\:c3EvapoTrans.h}
{\xe \v c3EvapoTrans.h\:TempToSFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSFS (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194 \{\par
195         double SlopeFS;\par
196         SlopeFS = 0.338376068 +  0.011435897 * Temp +  0.001111111 * pow(Temp,2);\par
197         return(SlopeFS);\par
198 \}\par
}
}
{\xe \v TempToSWVC\:c3EvapoTrans.h}
{\xe \v c3EvapoTrans.h\:TempToSWVC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSWVC (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201 \{\par
202         double SWVC;\par
203         SWVC =  4.90820192 +   0.06387253 * Temp +    0.02745742 * pow(Temp,2);\par
204         return(SWVC);\par
205 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3photo.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3photo.c}
{\xe \v /home/dlebauer/dev/biocro/src/c3photo.c}
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c3photo.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for c3photo.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3photo_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b c3photo} (SEXP Qp1, SEXP Tl1, SEXP RH1, SEXP VCMAX, SEXP JMAX, SEXP RD, SEXP CA, SEXP B0, SEXP B1, SEXP OX2, SEXP THETA, SEXP STOMWS, SEXP WS)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b solc} (double LeafT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b solo} (double LeafT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c3_str} {\b c3photoC} (double Qp, double Tleaf, double RH, double Vcmax0, double Jmax, double Rd0, double bb0, double bb1, double Ca, double O2, double thet, double StomWS, int ws)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c3photo\:c3photo.c}
{\xe \v c3photo.c\:c3photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP c3photo (SEXP {\i Qp1}, SEXP {\i Tl1}, SEXP {\i RH1}, SEXP {\i VCMAX}, SEXP {\i JMAX}, SEXP {\i RD}, SEXP {\i CA}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i OX2}, SEXP {\i THETA}, SEXP {\i STOMWS}, SEXP {\i WS})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\par
15         struct c3_str tmp = \{0,0,0,0\};\par
16 \par
17         double Qp, Tl, RH, Catm;\par
18         double Bet0,Bet1;\par
19 \par
20         double vcmax, jmax, Rd, Ca, O2, theta,StomWS;\par
21 \par
22         vcmax = REAL(VCMAX)[0];\par
23         jmax = REAL(JMAX)[0];\par
24         Bet0 = REAL(B0)[0];\par
25         Bet1 = REAL(B1)[0];\par
26         Rd = REAL(RD)[0];\par
27         O2 = REAL(OX2)[0];\par
28         theta = REAL(THETA)[0];\par
29         StomWS = REAL(STOMWS)[0];\par
30         int nq , nt, nr, i;\par
31         int ws = INTEGER(WS)[0];\par
32         SEXP lists, names;\par
33         SEXP GsV;\par
34         SEXP ASSV;\par
35         SEXP CiV;\par
36 \par
37         nq = length(Qp1);nt = length(Tl1);nr = length(RH1);\par
38 \par
39         PROTECT(lists = allocVector(VECSXP,3));\par
40         PROTECT(names = allocVector(STRSXP,3));\par
41 \par
42         PROTECT(GsV = allocVector(REALSXP,nq));\par
43         PROTECT(ASSV = allocVector(REALSXP,nq));\par
44         PROTECT(CiV = allocVector(REALSXP,nq));\par
45 \par
46         Ca = REAL(CA)[0]; /* partial pressure of CO2 at the leaf surface */\par
47  \par
48         /* Start of the loop */\par
49         for(i = 0; i < nq ; i++)\par
50         \{\par
51                 /*pick the right element*/\par
52                 Qp = REAL(Qp1)[i];\par
53                 Tl = REAL(Tl1)[i];\par
54                 RH = REAL(RH1)[i];\par
55                 Catm = REAL(CA)[i];\par
56 \par
57                 tmp = c3photoC(Qp, Tl, RH, vcmax, jmax, Rd, Bet0, Bet1, Catm, O2, theta,StomWS,ws);\par
58 \par
59                 REAL(GsV)[i] = tmp.Gs;\par
60                 REAL(ASSV)[i] = tmp.Assim;    \par
61                 REAL(CiV)[i] = tmp.Ci;\par
62         \}\par
63 \par
64         SET_VECTOR_ELT(lists,0,GsV);\par
65         SET_VECTOR_ELT(lists,1,ASSV);\par
66         SET_VECTOR_ELT(lists,2,CiV);\par
67         SET_STRING_ELT(names,0,mkChar("Gs"));\par
68         SET_STRING_ELT(names,1,mkChar("Assim"));\par
69         SET_STRING_ELT(names,2,mkChar("Ci"));\par
70         setAttrib(lists,R_NamesSymbol,names);\par
71         UNPROTECT(5);   \par
72         return(lists);\par
73 \}\par
}
}
{\xe \v c3photoC\:c3photo.c}
{\xe \v c3photo.c\:c3photoC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b c3_str} c3photoC (double {\i Qp}, double {\i Tleaf}, double {\i RH}, double {\i Vcmax0}, double {\i Jmax}, double {\i Rd0}, double {\i bb0}, double {\i bb1}, double {\i Ca}, double {\i O2}, double {\i thet}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v solc\:c3photo.c}
{\xe \v c3photo.c\:solc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double solc (double {\i LeafT})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                          \{\par
91 \par
92         double tmp;\par
93 \par
94         if(LeafT > 24 && LeafT < 26)\{\par
95                 tmp = 1;\par
96         \}else\{\par
97                 tmp = (1.673998 - 0.0612936 * LeafT + 0.00116875 * pow(LeafT,2) - 8.874081e-06 * pow(LeafT,3)) / 0.735465;\par
98         \}\par
99 \par
100         return(tmp);\par
101 \}\par
}
}
{\xe \v solo\:c3photo.c}
{\xe \v c3photo.c\:solo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double solo (double {\i LeafT})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103                          \{\par
104 \par
105         double tmp;\par
106 \par
107         if(LeafT > 24 && LeafT < 26)\{\par
108                 tmp = 1;\par
109         \}else\{\par
110                 tmp = (0.047 - 0.0013087 * LeafT + 2.5603e-05 * pow(LeafT,2) - 2.1441e-07 * pow(LeafT,3)) / 0.026934;\par
111         \}\par
112 \par
113         return(tmp);\par
114 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c3photo.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c3photo.h}
{\xe \v /home/dlebauer/dev/biocro/src/c3photo.h}
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c3photo_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c3_str}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fnpsvp} (double Tkelvin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ballBerry} (double Amu, double Cappm, double Temp, double RelH, double beta0, double beta1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c3_str} {\b c3photoC} (double Qp, double Tleaf, double RH, double Vcmax0, double Jmax0, double Rd0, double bb0, double bb1, double Ca, double O2, double theta, double StomWS, int ws)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ballBerry\:c3photo.h}
{\xe \v c3photo.h\:ballBerry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ballBerry (double {\i Amu}, double {\i Cappm}, double {\i Temp}, double {\i RelH}, double {\i beta0}, double {\i beta1})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107 \{\par
108 \par
109         const double gbw = 1.2; /* According to Collatz et al. (1992) pg. 526*/\par
110         const double ptotPa = 101325; /* Atmospheric pressure */\par
111 \par
112         double pwaPa, leafTk, Camf, assimn;\par
113         double wa, pwi, wi, gswmol, Cs, acs;\par
114         double aaa, bbb, ccc, ddd;\par
115         double gsmol;\par
116         double hs;\par
117 \par
118         leafTk = Temp + 273.15;\par
119         pwi = fnpsvp(leafTk);\par
120         pwaPa = RelH * pwi;\par
121         Camf = Cappm * 1e-6;\par
122         assimn = Amu * 1e-6;\par
123   \par
124         /* Calculate mole fraction (mixing ratio) of water vapor in */\par
125         /* atmosphere from partial pressure of water in the atmosphere and*/\par
126         /* the total air pressure */\par
127         wa  = pwaPa / ptotPa;\par
128         /* Get saturation vapor pressure for water in the leaf based on */\par
129         /* current idea of the leaf temperature in Kelvin*/\par
130         /* Already calculated above */\par
131         /* Calculate mole fraction of water vapor in leaf interior */\par
132         wi  = pwi / ptotPa;\par
133 \par
134         if(assimn < 0.0)\{\par
135                 /* Set stomatal conductance to the minimum value, beta0*/\par
136                 gswmol = beta0 ;\par
137                 /* Calculate leaf surface relative humidity, hs, (as fraction)*/\par
138                 /* for when C assimilation rate is <= 0*/\par
139                 /* hs = (beta0 + (wa/wi)*gbw)/(beta0 + gbw); ! unused here??*/\par
140         \}\par
141         else\{\par
142                 /* leaf surface CO2, mole fraction */\par
143                 Cs  = Camf - (1.4/gbw)*assimn;\par
144                 if(Cs < 0.0)\par
145                         Cs = 1;\par
146                 /* Constrain the ratio assimn/cs to be > 1.e-6*/\par
147                 acs = assimn/Cs;\par
148 \par
149                 if(acs < 1e-6)  acs = 1e-6;             \par
150 \par
151                 /* Calculate leaf surface relative humidity, hs, from quadratic */\par
152                 /* equation: aaa*hs^2 + bbb*hs + ccc = 0 */\par
153                 /*  aaa= beta1 * assimn / cs */\par
154                 aaa = beta1 * acs;\par
155                 /*      bbb= beta0 + gbw - (beta1 * assimn / cs)*/\par
156                 bbb = beta0 + gbw - (beta1 * acs);\par
157                 ccc = -(wa / wi) * gbw - beta0;\par
158 \par
159                 /* Solve the quadratic equation for leaf surface relative humidity */\par
160                 /* (as fraction) */\par
161                 ddd = bbb * bbb - 4*aaa*ccc;\par
162 \par
163                 hs  = (-bbb + sqrt(ddd)) / (2* aaa);\par
164 \par
165                 /* Ball-Berry equation (Collatz'91, eqn 1) */\par
166                 gswmol = beta1 * hs * acs + beta0;\par
167         \}\par
168         gsmol = gswmol * 1000; /* converting to mmol */\par
169 \par
170         if(gsmol <= 0) gsmol = 1e-5;\par
171 \par
172         return(gsmol);\par
173 \}\par
}
}
{\xe \v c3photoC\:c3photo.h}
{\xe \v c3photo.h\:c3photoC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b c3_str} c3photoC (double {\i Qp}, double {\i Tleaf}, double {\i RH}, double {\i Vcmax0}, double {\i Jmax0}, double {\i Rd0}, double {\i bb0}, double {\i bb1}, double {\i Ca}, double {\i O2}, double {\i theta}, double {\i StomWS}, int {\i ws})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fnpsvp\:c3photo.h}
{\xe \v c3photo.h\:fnpsvp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fnpsvp (double {\i Tkelvin})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                              \{\par
177         /* water boiling point = 373.16 oK*/\par
178 /* This is the Arden Buck Equation \par
179 http://en.wikipedia.org/wiki/Arden_Buck_equation\par
180  */\par
181         double u, v;\par
182         double tmp, esat;\par
183 \par
184         tmp = Tkelvin - 273.15;\par
185         u = (18.678 - tmp/234.5)*tmp;\par
186         v = 257.14 + tmp;\par
187         esat = 6.1121 * exp(u/v);\par
188         esat /= 10;\par
189 \par
190         return(esat);\par
191 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c4photo.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c4photo.c}
{\xe \v /home/dlebauer/dev/biocro/src/c4photo.c}
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c4photo.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for c4photo.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c4photo_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b c4photo} (SEXP Qp, SEXP Tl, SEXP RH, SEXP VMAX, SEXP ALPHA, SEXP KPAR, SEXP THETA, SEXP BETA, SEXP RD, SEXP CA, SEXP B0, SEXP B1, SEXP STOMWS, SEXP WS, SEXP UPPERTEMP, SEXP LOWERTEMP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ballBerry} (double Amu, double Cappm, double Temp, double RelH, double beta0, double beta1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fnpsvp} (double Tkelvin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c4_str} {\b c4photoC} (double Qp, double Tl, double RH, double vmax, double alpha, double kparm, double theta, double beta, double Rd, double bb0, double bb1, double StomaWS, double Ca, int ws, double upperT, double lowerT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b McMCc4photo} (SEXP ASSIM, SEXP QP, SEXP TEMP, SEXP RH, SEXP NITER, SEXP iVCMAX, SEXP iALPHA, SEXP iKPARM, SEXP iTHETA, SEXP iBETA, SEXP iRD, SEXP CATM, SEXP B0, SEXP B1, SEXP STOMWS, SEXP SCALE, SEXP SD1, SEXP SD2, SEXP WS, SEXP PRIOR, SEXP UPPERTEMP, SEXP LOWERTEMP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RSS_C4photo} (double oAssim[{\b nObs}], double oQp[{\b nObs}], double oTemp[{\b nObs}], double oRH[{\b nObs}], double vmax, double alpha, double kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double StomWS, int ws, double upperT, double lowerT)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ballBerry\:c4photo.c}
{\xe \v c4photo.c\:ballBerry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ballBerry (double {\i Amu}, double {\i Cappm}, double {\i Temp}, double {\i RelH}, double {\i beta0}, double {\i beta1})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107 \{\par
108 \par
109         const double gbw = 1.2; /* According to Collatz et al. (1992) pg. 526*/\par
110         const double ptotPa = 101325; /* Atmospheric pressure */\par
111 \par
112         double pwaPa, leafTk, Camf, assimn;\par
113         double wa, pwi, wi, gswmol, Cs, acs;\par
114         double aaa, bbb, ccc, ddd;\par
115         double gsmol;\par
116         double hs;\par
117 \par
118         leafTk = Temp + 273.15;\par
119         pwi = fnpsvp(leafTk);\par
120         pwaPa = RelH * pwi;\par
121         Camf = Cappm * 1e-6;\par
122         assimn = Amu * 1e-6;\par
123   \par
124         /* Calculate mole fraction (mixing ratio) of water vapor in */\par
125         /* atmosphere from partial pressure of water in the atmosphere and*/\par
126         /* the total air pressure */\par
127         wa  = pwaPa / ptotPa;\par
128         /* Get saturation vapor pressure for water in the leaf based on */\par
129         /* current idea of the leaf temperature in Kelvin*/\par
130         /* Already calculated above */\par
131         /* Calculate mole fraction of water vapor in leaf interior */\par
132         wi  = pwi / ptotPa;\par
133 \par
134         if(assimn < 0.0)\{\par
135                 /* Set stomatal conductance to the minimum value, beta0*/\par
136                 gswmol = beta0 ;\par
137                 /* Calculate leaf surface relative humidity, hs, (as fraction)*/\par
138                 /* for when C assimilation rate is <= 0*/\par
139                 /* hs = (beta0 + (wa/wi)*gbw)/(beta0 + gbw); ! unused here??*/\par
140         \}\par
141         else\{\par
142                 /* leaf surface CO2, mole fraction */\par
143                 Cs  = Camf - (1.4/gbw)*assimn;\par
144                 if(Cs < 0.0)\par
145                         Cs = 1;\par
146                 /* Constrain the ratio assimn/cs to be > 1.e-6*/\par
147                 acs = assimn/Cs;\par
148 \par
149                 if(acs < 1e-6)  acs = 1e-6;             \par
150 \par
151                 /* Calculate leaf surface relative humidity, hs, from quadratic */\par
152                 /* equation: aaa*hs^2 + bbb*hs + ccc = 0 */\par
153                 /*  aaa= beta1 * assimn / cs */\par
154                 aaa = beta1 * acs;\par
155                 /*      bbb= beta0 + gbw - (beta1 * assimn / cs)*/\par
156                 bbb = beta0 + gbw - (beta1 * acs);\par
157                 ccc = -(wa / wi) * gbw - beta0;\par
158 \par
159                 /* Solve the quadratic equation for leaf surface relative humidity */\par
160                 /* (as fraction) */\par
161                 ddd = bbb * bbb - 4*aaa*ccc;\par
162 \par
163                 hs  = (-bbb + sqrt(ddd)) / (2* aaa);\par
164 \par
165                 /* Ball-Berry equation (Collatz'91, eqn 1) */\par
166                 gswmol = beta1 * hs * acs + beta0;\par
167         \}\par
168         gsmol = gswmol * 1000; /* converting to mmol */\par
169 \par
170         if(gsmol <= 0) gsmol = 1e-5;\par
171 \par
172         return(gsmol);\par
173 \}\par
}
}
{\xe \v c4photo\:c4photo.c}
{\xe \v c4photo.c\:c4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP c4photo (SEXP {\i Qp}, SEXP {\i Tl}, SEXP {\i RH}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i KPAR}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CA}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i STOMWS}, SEXP {\i WS}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP})}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23 \{\par
24         struct c4_str tmp;\par
25 \par
26         double Bet0,Bet1;\par
27 \par
28         double vmax, alpha, K, Rd, StomWS;/*\\ref\{parm:Vmax\}\\ref\{parm:Rd\}*/\par
29         double theta, beta;\par
30         double upperT, lowerT;\par
31 \par
32         vmax = REAL(VMAX)[0];/*\\ref\{eqn:Vmax\}*/\par
33         alpha = REAL(ALPHA)[0];\par
34         theta = REAL(THETA)[0];\par
35         beta = REAL(BETA)[0];\par
36         K = REAL(KPAR)[0];\par
37         Bet0 = REAL(B0)[0];\par
38         Bet1 = REAL(B1)[0];\par
39         Rd = REAL(RD)[0];/*\\ref\{eqn:Rd\}*/\par
40         StomWS = REAL(STOMWS)[0];\par
41         upperT=REAL(UPPERTEMP)[0];\par
42         lowerT=REAL(LOWERTEMP)[0];\par
43 \par
44         int nq , nt, nr, i;\par
45 \par
46         SEXP lists, names;\par
47         SEXP GsV;\par
48         SEXP ASSV;\par
49   SEXP GASSV;\par
50         SEXP CiV;\par
51 \par
52 \par
53         nq = length(Qp);nt = length(Tl);nr = length(RH);\par
54 \par
55         PROTECT(lists = allocVector(VECSXP,4));\par
56         PROTECT(names = allocVector(STRSXP,4));\par
57 \par
58         PROTECT(GsV = allocVector(REALSXP,nq));\par
59         PROTECT(ASSV = allocVector(REALSXP,nq));\par
60   PROTECT(GASSV = allocVector(REALSXP,nq));\par
61         PROTECT(CiV = allocVector(REALSXP,nq));\par
62   \par
63         double *pt_Qp = REAL(Qp);\par
64         double *pt_Tl = REAL(Tl);\par
65         double *pt_RH = REAL(RH);\par
66         double *pt_CA = REAL(CA);\par
67   \par
68         int ws = INTEGER(WS)[0];\par
69 \par
70         double *pt_GSV = REAL(GsV);\par
71         double *pt_ASSV = REAL(ASSV);\par
72     double *pt_GASSV = REAL(GASSV);\par
73         double *pt_CiV = REAL(CiV);\par
74         /* Start of the loop */\par
75         for(i = 0; i < nq ; i++)\par
76         \{\par
77 \par
78                 tmp = c4photoC(*(pt_Qp+i), *(pt_Tl+i), *(pt_RH+i),\par
79                                vmax, alpha, K,theta, beta, Rd, /*\\ref\{parm:Vmax\}\\ref\{parm:Rd\}*/\par
80                                Bet0, Bet1, StomWS, \par
81                                *(pt_CA+i), ws,upperT,lowerT);\par
82 \par
83                 *(pt_GSV + i) = tmp.Gs;\par
84                 *(pt_ASSV + i) = tmp.Assim;    \par
85     *(pt_GASSV + i) = tmp.GrossAssim; \par
86                 *(pt_CiV + i) = tmp.Ci;    \par
87 /* Here it is using the REAL function every time */\par
88 /* I should change this to a pointer too at some point */ \par
89         \}\par
90 \par
91         SET_VECTOR_ELT(lists,0,GsV);\par
92         SET_VECTOR_ELT(lists,1,ASSV);\par
93         SET_VECTOR_ELT(lists,2,CiV);\par
94   SET_VECTOR_ELT(lists,3,GASSV);\par
95         SET_STRING_ELT(names,0,mkChar("Gs"));\par
96         SET_STRING_ELT(names,1,mkChar("Assim"));\par
97         SET_STRING_ELT(names,2,mkChar("Ci"));\par
98   SET_STRING_ELT(names,3,mkChar("GrossAssim"));\par
99         setAttrib(lists,R_NamesSymbol,names);\par
100         UNPROTECT(6);   \par
101         return(lists);\par
102 \}\par
}
}
{\xe \v c4photoC\:c4photo.c}
{\xe \v c4photo.c\:c4photoC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b c4_str} c4photoC (double {\i Qp}, double {\i Tl}, double {\i RH}, double {\i vmax}, double {\i alpha}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i bb0}, double {\i bb1}, double {\i StomaWS}, double {\i Ca}, int {\i ws}, double {\i upperT}, double {\i lowerT})}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198 \{\par
199 \par
200         struct c4_str tmp;\par
201         /* Constants */\par
202         const double AP = 101325; /*Atmospheric pressure According to wikipedia (Pa)*/\par
203         const double P = AP / 1e3; /* kPa */\par
204         /*const double PS = 38;   Atmospheric pressure of CO2 */\par
205         const double Q10 = 2;  /* Q10 increase in a reaction by 10 C temp */\par
206         /* Defining biochemical variables */\par
207 \par
208         double Csurface ;\par
209         double InterCellularCO2 ;\par
210         double KQ10 , kT ;\par
211         double Vtn , Vtd , VT ;\par
212         double Rtn , Rtd , RT ;\par
213         double b0 , b1 , b2 ;\par
214         double M1 , M2 , M ;\par
215         int iterCounter ;\par
216         double Quada , Quadb , Quadc ;\par
217         double a2 , Assim ,GrossAssim;\par
218         double csurfaceppm ;\par
219         double Gs , miC = 0.0 ;\par
220         double diff, OldAssim = 0.0, Tol = 0.1;\par
221         double kT_IC_P;\par
222 \par
223 /* When the method does not converge I do not use the iterative solution*/\par
224         double Assim0 = 0.0;\par
225         double Gs0 = 0.0;\par
226         double IntCO2 = 0.0;\par
227         /* partial pressure of CO2 at the leaf surface */\par
228   \par
229         /* if(StomaWS < 0.5) ws = 0; */\par
230 \par
231         Csurface = (Ca * 1e-6) * AP ;\par
232   \par
233         InterCellularCO2 = Csurface * 0.4; /* Initial guestimate */\par
234 \par
235         KQ10 =  pow(Q10,((Tl - 25.0) / 10.0));\par
236 \par
237         kT = kparm * KQ10;\par
238 \par
239         /* First chunk of code see Collatz (1992) */\par
240 //      Vtn = vmax * pow(2,((Tl-25.0)/10.0));\par
241 //      Vtd = ( 1 + exp(0.3 * (3.0-Tl)) ) * (1 + exp( 0.3*(Tl-37.5) ));\par
242 //      VT  = Vtn / Vtd;\par
243 \par
244 //       This is the code implementing temperature limitations\par
245          Vtn = vmax * pow(2,((Tl-25.0)/10.0));\par
246          Vtd = ( 1 + exp(0.3 * (lowerT-Tl)) ) * (1 + exp( 0.3*(Tl-upperT) ));\par
247          VT  = Vtn / Vtd;\par
248 \par
249 \par
250         /* Second chunk of code see Collatz (1992) */\par
251         Rtn = Rd * pow(2 , (Tl-25)/10 ) ;\par
252         Rtd =  1 + exp( 1.3 * (Tl-55) ) ;\par
253         RT = Rtn / Rtd ; \par
254 \par
255         /* Third chunk of code again see Collatz (1992) */\par
256         b0 = VT * alpha  * Qp ;\par
257         b1 = VT + alpha  * Qp ;\par
258         b2 = theta ;\par
259 \par
260         /* Calculate the 2 roots */\par
261         M1 = (b1 + sqrt(b1*b1 - (4 * b0 * b2)))/(2*b2) ;\par
262         M2 = (b1 - sqrt(b1*b1 - (4 * b0 * b2)))/(2*b2) ;\par
263 \par
264         /* This piece of code selects the smalles root */\par
265         if(M1 < M2)\par
266                 M = M1;\par
267         else\par
268                 M = M2;\par
269 \par
270         /* Here the iterations will start */\par
271         iterCounter = 0;\par
272 \par
273         while(iterCounter < 50)\par
274         \{\par
275 \par
276                 kT_IC_P = kT * (InterCellularCO2 / P*1000);\par
277                 Quada = M * kT_IC_P;\par
278                 Quadb = M + kT_IC_P;\par
279                 Quadc = beta ;\par
280 \par
281                 a2 = (Quadb - sqrt(Quadb*Quadb - (4 * Quada * Quadc))) / (2 * Quadc);\par
282 \par
283                 Assim = a2 - RT;\par
284 \par
285                 if(ws == 0) Assim *= StomaWS; \par
286 \par
287                 /* milimole per meter square per second*/\par
288                 csurfaceppm = Csurface * 10 ;\par
289 \par
290                 /* Need to create the Ball-Berry function */\par
291                 Gs =  ballBerry(Assim,csurfaceppm, Tl, RH, bb0, bb1) ;\par
292                 if(ws == 1) Gs *= StomaWS; \par
293 \par
294                 InterCellularCO2 = Csurface - (Assim * 1e-6 * 1.6 * AP) / (Gs * 0.001);\par
295 \par
296                 if(InterCellularCO2 < 0)\par
297                         InterCellularCO2 = 1e-5;\par
298 \par
299                 if(iterCounter == 0)\{\par
300                         Assim0 = Assim;\par
301                         Gs0 = Gs;\par
302                         IntCO2 = InterCellularCO2;\par
303                 \}\par
304 \par
305                 diff = OldAssim - Assim;\par
306                 if(diff < 0) diff = -diff;\par
307                 if(diff < Tol)\{\par
308                         break;\par
309                 \}else\{\par
310                         OldAssim = Assim;\par
311                 \}\par
312 \par
313                 iterCounter++;\par
314 \par
315         \}\par
316 \par
317 /* This would ignore the optimization due to the iterative procedure\par
318  * when it does not converge. It is turned off now*/\par
319 \par
320 \par
321         /* if(diff > Tol)\{ */\par
322         /*      Assim = Assim0; */\par
323         /*      Gs = Gs0; */\par
324         /*      InterCellularCO2 = IntCO2; */\par
325         /* \} */\par
326 \par
327         /* if(diff > Tol)\{ */\par
328         /*      Rprintf("iter %.i diff %.3f \\n",iterCounter,diff); */\par
329         /*      Rprintf("%.2f %.2f %.2f %.2f \\n", Qp, Tl, RH, StomaWS); */\par
330         /*      Rprintf("StomWS %.2f \\n",StomaWS); */\par
331         /*      Rprintf("InterCellular CO2 %.2f \\n",InterCellularCO2); */\par
332         /*      Rprintf("Assim %.2f \\n",Assim); */\par
333         /*      Rprintf("miC %.2f \\n",(InterCellularCO2/AP)*1e6); */\par
334         /*      Rprintf("vmax %.1f alpha %.3f \\n", vmax, alpha); */\par
335         /*      Rprintf("kparm %.3f theta %.3f \\n", kparm, theta); */\par
336         /*      Rprintf("beta %.3f Rd %.3f \\n", beta, Rd); */\par
337         /*      Rprintf("bb0 %.3f bb1 %.3f \\n", bb0, bb1); */\par
338         /*      Rprintf("Ca %.1f ws %i \\n", Ca, ws); */\par
339         /*      error("Did not converge \\n"); */\par
340         /* \} */\par
341 \par
342         miC = (InterCellularCO2 / AP) * 1e6 ;\par
343 \par
344         if(Gs > 600)\par
345           Gs = 600;\par
346   GrossAssim=Assim+RT;\par
347         tmp.Assim = Assim;\par
348         tmp.Gs = Gs;\par
349         tmp.Ci = miC;\par
350   tmp.GrossAssim=GrossAssim;\par
351         return(tmp);\par
352 \}\par
}
}
{\xe \v fnpsvp\:c4photo.c}
{\xe \v c4photo.c\:fnpsvp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fnpsvp (double {\i Tkelvin})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                              \{\par
177         /* water boiling point = 373.16 oK*/\par
178 /* This is the Arden Buck Equation \par
179 http://en.wikipedia.org/wiki/Arden_Buck_equation\par
180  */\par
181         double u, v;\par
182         double tmp, esat;\par
183 \par
184         tmp = Tkelvin - 273.15;\par
185         u = (18.678 - tmp/234.5)*tmp;\par
186         v = 257.14 + tmp;\par
187         esat = 6.1121 * exp(u/v);\par
188         esat /= 10;\par
189 \par
190         return(esat);\par
191 \}\par
}
}
{\xe \v McMCc4photo\:c4photo.c}
{\xe \v c4photo.c\:McMCc4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP McMCc4photo (SEXP {\i ASSIM}, SEXP {\i QP}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i NITER}, SEXP {\i iVCMAX}, SEXP {\i iALPHA}, SEXP {\i iKPARM}, SEXP {\i iTHETA}, SEXP {\i iBETA}, SEXP {\i iRD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i STOMWS}, SEXP {\i SCALE}, SEXP {\i SD1}, SEXP {\i SD2}, SEXP {\i WS}, SEXP {\i PRIOR}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 365                                                                                                     \{\par
366         /* First manipulate R objects */\par
367         extern int nObs;\par
368         int niter;\par
369         nObs = length(ASSIM);\par
370         niter = INTEGER(NITER)[0];\par
371 \par
372         /* Second define the needed variables */\par
373         double oldRSS = 1e6;\par
374         int n1 = 0;\par
375 \par
376         int i;\par
377 \par
378         double scale = REAL(SCALE)[0];\par
379         double sd1, sd2;\par
380 \par
381         double Rd = REAL(iRD)[0];/*\\ref\{eqn:Rd\}*/\par
382         double ikparm = REAL(iKPARM)[0];\par
383         double ibeta = REAL(iBETA)[0];\par
384         double itheta = REAL(iTHETA)[0];\par
385         double Catm = REAL(CATM)[0];\par
386         double b0 = REAL(B0)[0];\par
387         double b1 = REAL(B1)[0];\par
388         double StomWS = REAL(STOMWS)[0];\par
389         int ws = INTEGER(WS)[0];\par
390 \par
391         double index;\par
392         double rnum , rden; \par
393         double lratio; \par
394         double lmr;\par
395         double U;\par
396 \par
397         double pmuVmax = REAL(PRIOR)[0];\par
398         double psdVmax = REAL(PRIOR)[1];\par
399         double pmuAlpha = REAL(PRIOR)[2];\par
400         double psdAlpha = REAL(PRIOR)[3];\par
401 \par
402         double upperT =REAL(UPPERTEMP)[0];\par
403         double lowerT =REAL(LOWERTEMP)[0];\par
404 \par
405         double RSS;\par
406         double rnewVcmax, rnewAlpha;\par
407         double oldAlpha, oldVcmax;\par
408 \par
409         SEXP lists;\par
410         SEXP names;\par
411         SEXP mat1;\par
412         SEXP accept;\par
413 \par
414 \par
415         PROTECT(lists = allocVector(VECSXP,2));\par
416         PROTECT(names = allocVector(STRSXP,2));\par
417         PROTECT(mat1 = allocMatrix(REALSXP,3,niter));\par
418         PROTECT(accept = allocVector(REALSXP,1));\par
419 \par
420         GetRNGstate();\par
421 \par
422         oldVcmax = REAL(iVCMAX)[0];\par
423         oldAlpha = REAL(iALPHA)[0];\par
424 \par
425         sd1 = REAL(SD1)[0] * scale;\par
426         sd2 = REAL(SD2)[0] * scale;\par
427 \par
428         for(i = 0; i < niter; i++)\{\par
429 \par
430                 /* Replacing the rnormC4 function */\par
431                 index = runif(0,1); \par
432                 if(index < 0.5)\{ \par
433                         rnewVcmax = oldVcmax + rnorm(0,sd1);\par
434                         rnewAlpha = oldAlpha;\par
435                 \}else\{ \par
436                         rnewAlpha = oldAlpha +  rnorm(0, sd2);\par
437                         rnewVcmax = oldVcmax;\par
438                 \} \par
439                 /* This is the end of the random generation */\par
440 \par
441                 rnum = dnorm(rnewVcmax,pmuVmax,psdVmax,0)*dnorm(rnewAlpha,pmuAlpha,psdAlpha,0); \par
442                 rden = dnorm(oldVcmax,pmuVmax,psdVmax,0)*dnorm(oldAlpha,pmuAlpha,psdAlpha,0); \par
443           \par
444                 lratio = log(rnum) - log(rden); \par
445 \par
446                 RSS = RSS_C4photo(REAL(ASSIM),REAL(QP),REAL(TEMP),REAL(RH),rnewVcmax,rnewAlpha, ikparm, itheta, ibeta, Rd, Catm, b0, b1, StomWS, ws,upperT,lowerT);\par
447 \par
448 /*       mr = (exp(-RSS) / exp(-oldRSS)) * ratio; */\par
449 /* In the previous expression we can take  the log and have instead the \par
450    log metropolis ratio and have a simpler calculation. We then need to compare this to\par
451    the log of a uniform. */\par
452                 lmr = -RSS + oldRSS + lratio;\par
453 \par
454                 U = runif(0,1);\par
455                 if(lmr > log(U))\{\par
456                         oldVcmax = rnewVcmax;\par
457                         oldAlpha = rnewAlpha;\par
458                         oldRSS = RSS;\par
459                         n1++;\par
460                 \}\par
461 \par
462                 REAL(mat1)[i*3] = oldVcmax ;\par
463                 REAL(mat1)[i*3 + 1] = oldAlpha ;\par
464                 REAL(mat1)[i*3 + 2] = oldRSS;\par
465         \}\par
466      \par
467         PutRNGstate();    \par
468 \par
469         REAL(accept)[0] = n1;\par
470 \par
471         SET_VECTOR_ELT(lists,0,accept);\par
472         SET_VECTOR_ELT(lists,1,mat1);\par
473 \par
474         SET_STRING_ELT(names,0,mkChar("accept"));\par
475         SET_STRING_ELT(names,1,mkChar("resuMC"));\par
476 \par
477         setAttrib(lists,R_NamesSymbol,names);\par
478         UNPROTECT(4);\par
479 \par
480         return(lists);\par
481 \}\par
}
}
{\xe \v RSS_C4photo\:c4photo.c}
{\xe \v c4photo.c\:RSS_C4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RSS_C4photo (double {\i oAssim}[nObs], double {\i oQp}[nObs], double {\i oTemp}[nObs], double {\i oRH}[nObs], double {\i vmax}, double {\i alpha}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i StomWS}, int {\i ws}, double {\i upperT}, double {\i lowerT})}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 489                                                                                                                    \{ /*\\ref\{eqn:Rd\}*/\par
490         extern int nObs;\par
491         struct c4_str tmp;\par
492         int i;\par
493         double RSS = 0.0, diff = 0.0;\par
494 \par
495         for(i = 0;i < nObs; i++)\{\par
496 \par
497                 tmp = c4photoC(oQp[i],oTemp[i],oRH[i],vmax,alpha,kparm,theta, beta, Rd,b0,b1,StomWS,Catm,ws,upperT,lowerT);\par
498                 diff = oAssim[i] - tmp.Assim;\par
499                 RSS += diff * diff;\par
500 \par
501         \}\par
502         return(RSS);\par
503 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/c4photo.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/c4photo.h}
{\xe \v /home/dlebauer/dev/biocro/src/c4photo.h}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "c4photo_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c4_str}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b C4PHOTO_H}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b fnpsvp} (double Tkelvin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b ballBerry} (double Amu, double Cappm, double Temp, double RelH, double beta0, double beta1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c4_str} {\b c4photoC} (double Qp, double Tl, double RH, double vmax, double alpha, double kparm, double theta, double beta, double Rd, double bb0, double bb1, double StomaWS, double Ca, int ws, double upperT, double lowerT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RSS_C4photo} (double oAssim[{\b nObs}], double oQp[{\b nObs}], double oTemp[{\b nObs}], double oRH[{\b nObs}], double vmax, double alpha, double kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double StomWS, int ws, double upperT, double lowerT)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nObs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v C4PHOTO_H\:c4photo.h}
{\xe \v c4photo.h\:C4PHOTO_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define C4PHOTO_H}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v ballBerry\:c4photo.h}
{\xe \v c4photo.h\:ballBerry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double ballBerry (double {\i Amu}, double {\i Cappm}, double {\i Temp}, double {\i RelH}, double {\i beta0}, double {\i beta1})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107 \{\par
108 \par
109         const double gbw = 1.2; /* According to Collatz et al. (1992) pg. 526*/\par
110         const double ptotPa = 101325; /* Atmospheric pressure */\par
111 \par
112         double pwaPa, leafTk, Camf, assimn;\par
113         double wa, pwi, wi, gswmol, Cs, acs;\par
114         double aaa, bbb, ccc, ddd;\par
115         double gsmol;\par
116         double hs;\par
117 \par
118         leafTk = Temp + 273.15;\par
119         pwi = fnpsvp(leafTk);\par
120         pwaPa = RelH * pwi;\par
121         Camf = Cappm * 1e-6;\par
122         assimn = Amu * 1e-6;\par
123   \par
124         /* Calculate mole fraction (mixing ratio) of water vapor in */\par
125         /* atmosphere from partial pressure of water in the atmosphere and*/\par
126         /* the total air pressure */\par
127         wa  = pwaPa / ptotPa;\par
128         /* Get saturation vapor pressure for water in the leaf based on */\par
129         /* current idea of the leaf temperature in Kelvin*/\par
130         /* Already calculated above */\par
131         /* Calculate mole fraction of water vapor in leaf interior */\par
132         wi  = pwi / ptotPa;\par
133 \par
134         if(assimn < 0.0)\{\par
135                 /* Set stomatal conductance to the minimum value, beta0*/\par
136                 gswmol = beta0 ;\par
137                 /* Calculate leaf surface relative humidity, hs, (as fraction)*/\par
138                 /* for when C assimilation rate is <= 0*/\par
139                 /* hs = (beta0 + (wa/wi)*gbw)/(beta0 + gbw); ! unused here??*/\par
140         \}\par
141         else\{\par
142                 /* leaf surface CO2, mole fraction */\par
143                 Cs  = Camf - (1.4/gbw)*assimn;\par
144                 if(Cs < 0.0)\par
145                         Cs = 1;\par
146                 /* Constrain the ratio assimn/cs to be > 1.e-6*/\par
147                 acs = assimn/Cs;\par
148 \par
149                 if(acs < 1e-6)  acs = 1e-6;             \par
150 \par
151                 /* Calculate leaf surface relative humidity, hs, from quadratic */\par
152                 /* equation: aaa*hs^2 + bbb*hs + ccc = 0 */\par
153                 /*  aaa= beta1 * assimn / cs */\par
154                 aaa = beta1 * acs;\par
155                 /*      bbb= beta0 + gbw - (beta1 * assimn / cs)*/\par
156                 bbb = beta0 + gbw - (beta1 * acs);\par
157                 ccc = -(wa / wi) * gbw - beta0;\par
158 \par
159                 /* Solve the quadratic equation for leaf surface relative humidity */\par
160                 /* (as fraction) */\par
161                 ddd = bbb * bbb - 4*aaa*ccc;\par
162 \par
163                 hs  = (-bbb + sqrt(ddd)) / (2* aaa);\par
164 \par
165                 /* Ball-Berry equation (Collatz'91, eqn 1) */\par
166                 gswmol = beta1 * hs * acs + beta0;\par
167         \}\par
168         gsmol = gswmol * 1000; /* converting to mmol */\par
169 \par
170         if(gsmol <= 0) gsmol = 1e-5;\par
171 \par
172         return(gsmol);\par
173 \}\par
}
}
{\xe \v c4photoC\:c4photo.h}
{\xe \v c4photo.h\:c4photoC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b c4_str} c4photoC (double {\i Qp}, double {\i Tl}, double {\i RH}, double {\i vmax}, double {\i alpha}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i bb0}, double {\i bb1}, double {\i StomaWS}, double {\i Ca}, int {\i ws}, double {\i upperT}, double {\i lowerT})}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 198 \{\par
199 \par
200         struct c4_str tmp;\par
201         /* Constants */\par
202         const double AP = 101325; /*Atmospheric pressure According to wikipedia (Pa)*/\par
203         const double P = AP / 1e3; /* kPa */\par
204         /*const double PS = 38;   Atmospheric pressure of CO2 */\par
205         const double Q10 = 2;  /* Q10 increase in a reaction by 10 C temp */\par
206         /* Defining biochemical variables */\par
207 \par
208         double Csurface ;\par
209         double InterCellularCO2 ;\par
210         double KQ10 , kT ;\par
211         double Vtn , Vtd , VT ;\par
212         double Rtn , Rtd , RT ;\par
213         double b0 , b1 , b2 ;\par
214         double M1 , M2 , M ;\par
215         int iterCounter ;\par
216         double Quada , Quadb , Quadc ;\par
217         double a2 , Assim ,GrossAssim;\par
218         double csurfaceppm ;\par
219         double Gs , miC = 0.0 ;\par
220         double diff, OldAssim = 0.0, Tol = 0.1;\par
221         double kT_IC_P;\par
222 \par
223 /* When the method does not converge I do not use the iterative solution*/\par
224         double Assim0 = 0.0;\par
225         double Gs0 = 0.0;\par
226         double IntCO2 = 0.0;\par
227         /* partial pressure of CO2 at the leaf surface */\par
228   \par
229         /* if(StomaWS < 0.5) ws = 0; */\par
230 \par
231         Csurface = (Ca * 1e-6) * AP ;\par
232   \par
233         InterCellularCO2 = Csurface * 0.4; /* Initial guestimate */\par
234 \par
235         KQ10 =  pow(Q10,((Tl - 25.0) / 10.0));\par
236 \par
237         kT = kparm * KQ10;\par
238 \par
239         /* First chunk of code see Collatz (1992) */\par
240 //      Vtn = vmax * pow(2,((Tl-25.0)/10.0));\par
241 //      Vtd = ( 1 + exp(0.3 * (3.0-Tl)) ) * (1 + exp( 0.3*(Tl-37.5) ));\par
242 //      VT  = Vtn / Vtd;\par
243 \par
244 //       This is the code implementing temperature limitations\par
245          Vtn = vmax * pow(2,((Tl-25.0)/10.0));\par
246          Vtd = ( 1 + exp(0.3 * (lowerT-Tl)) ) * (1 + exp( 0.3*(Tl-upperT) ));\par
247          VT  = Vtn / Vtd;\par
248 \par
249 \par
250         /* Second chunk of code see Collatz (1992) */\par
251         Rtn = Rd * pow(2 , (Tl-25)/10 ) ;\par
252         Rtd =  1 + exp( 1.3 * (Tl-55) ) ;\par
253         RT = Rtn / Rtd ; \par
254 \par
255         /* Third chunk of code again see Collatz (1992) */\par
256         b0 = VT * alpha  * Qp ;\par
257         b1 = VT + alpha  * Qp ;\par
258         b2 = theta ;\par
259 \par
260         /* Calculate the 2 roots */\par
261         M1 = (b1 + sqrt(b1*b1 - (4 * b0 * b2)))/(2*b2) ;\par
262         M2 = (b1 - sqrt(b1*b1 - (4 * b0 * b2)))/(2*b2) ;\par
263 \par
264         /* This piece of code selects the smalles root */\par
265         if(M1 < M2)\par
266                 M = M1;\par
267         else\par
268                 M = M2;\par
269 \par
270         /* Here the iterations will start */\par
271         iterCounter = 0;\par
272 \par
273         while(iterCounter < 50)\par
274         \{\par
275 \par
276                 kT_IC_P = kT * (InterCellularCO2 / P*1000);\par
277                 Quada = M * kT_IC_P;\par
278                 Quadb = M + kT_IC_P;\par
279                 Quadc = beta ;\par
280 \par
281                 a2 = (Quadb - sqrt(Quadb*Quadb - (4 * Quada * Quadc))) / (2 * Quadc);\par
282 \par
283                 Assim = a2 - RT;\par
284 \par
285                 if(ws == 0) Assim *= StomaWS; \par
286 \par
287                 /* milimole per meter square per second*/\par
288                 csurfaceppm = Csurface * 10 ;\par
289 \par
290                 /* Need to create the Ball-Berry function */\par
291                 Gs =  ballBerry(Assim,csurfaceppm, Tl, RH, bb0, bb1) ;\par
292                 if(ws == 1) Gs *= StomaWS; \par
293 \par
294                 InterCellularCO2 = Csurface - (Assim * 1e-6 * 1.6 * AP) / (Gs * 0.001);\par
295 \par
296                 if(InterCellularCO2 < 0)\par
297                         InterCellularCO2 = 1e-5;\par
298 \par
299                 if(iterCounter == 0)\{\par
300                         Assim0 = Assim;\par
301                         Gs0 = Gs;\par
302                         IntCO2 = InterCellularCO2;\par
303                 \}\par
304 \par
305                 diff = OldAssim - Assim;\par
306                 if(diff < 0) diff = -diff;\par
307                 if(diff < Tol)\{\par
308                         break;\par
309                 \}else\{\par
310                         OldAssim = Assim;\par
311                 \}\par
312 \par
313                 iterCounter++;\par
314 \par
315         \}\par
316 \par
317 /* This would ignore the optimization due to the iterative procedure\par
318  * when it does not converge. It is turned off now*/\par
319 \par
320 \par
321         /* if(diff > Tol)\{ */\par
322         /*      Assim = Assim0; */\par
323         /*      Gs = Gs0; */\par
324         /*      InterCellularCO2 = IntCO2; */\par
325         /* \} */\par
326 \par
327         /* if(diff > Tol)\{ */\par
328         /*      Rprintf("iter %.i diff %.3f \\n",iterCounter,diff); */\par
329         /*      Rprintf("%.2f %.2f %.2f %.2f \\n", Qp, Tl, RH, StomaWS); */\par
330         /*      Rprintf("StomWS %.2f \\n",StomaWS); */\par
331         /*      Rprintf("InterCellular CO2 %.2f \\n",InterCellularCO2); */\par
332         /*      Rprintf("Assim %.2f \\n",Assim); */\par
333         /*      Rprintf("miC %.2f \\n",(InterCellularCO2/AP)*1e6); */\par
334         /*      Rprintf("vmax %.1f alpha %.3f \\n", vmax, alpha); */\par
335         /*      Rprintf("kparm %.3f theta %.3f \\n", kparm, theta); */\par
336         /*      Rprintf("beta %.3f Rd %.3f \\n", beta, Rd); */\par
337         /*      Rprintf("bb0 %.3f bb1 %.3f \\n", bb0, bb1); */\par
338         /*      Rprintf("Ca %.1f ws %i \\n", Ca, ws); */\par
339         /*      error("Did not converge \\n"); */\par
340         /* \} */\par
341 \par
342         miC = (InterCellularCO2 / AP) * 1e6 ;\par
343 \par
344         if(Gs > 600)\par
345           Gs = 600;\par
346   GrossAssim=Assim+RT;\par
347         tmp.Assim = Assim;\par
348         tmp.Gs = Gs;\par
349         tmp.Ci = miC;\par
350   tmp.GrossAssim=GrossAssim;\par
351         return(tmp);\par
352 \}\par
}
}
{\xe \v fnpsvp\:c4photo.h}
{\xe \v c4photo.h\:fnpsvp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double fnpsvp (double {\i Tkelvin})}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 176                              \{\par
177         /* water boiling point = 373.16 oK*/\par
178 /* This is the Arden Buck Equation \par
179 http://en.wikipedia.org/wiki/Arden_Buck_equation\par
180  */\par
181         double u, v;\par
182         double tmp, esat;\par
183 \par
184         tmp = Tkelvin - 273.15;\par
185         u = (18.678 - tmp/234.5)*tmp;\par
186         v = 257.14 + tmp;\par
187         esat = 6.1121 * exp(u/v);\par
188         esat /= 10;\par
189 \par
190         return(esat);\par
191 \}\par
}
}
{\xe \v RSS_C4photo\:c4photo.h}
{\xe \v c4photo.h\:RSS_C4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RSS_C4photo (double {\i oAssim}[nObs], double {\i oQp}[nObs], double {\i oTemp}[nObs], double {\i oRH}[nObs], double {\i vmax}, double {\i alpha}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i StomWS}, int {\i ws}, double {\i upperT}, double {\i lowerT})}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 489                                                                                                                    \{ /*\\ref\{eqn:Rd\}*/\par
490         extern int nObs;\par
491         struct c4_str tmp;\par
492         int i;\par
493         double RSS = 0.0, diff = 0.0;\par
494 \par
495         for(i = 0;i < nObs; i++)\{\par
496 \par
497                 tmp = c4photoC(oQp[i],oTemp[i],oRH[i],vmax,alpha,kparm,theta, beta, Rd,b0,b1,StomWS,Catm,ws,upperT,lowerT);\par
498                 diff = oAssim[i] - tmp.Assim;\par
499                 RSS += diff * diff;\par
500 \par
501         \}\par
502         return(RSS);\par
503 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v nObs\:c4photo.h}
{\xe \v c4photo.h\:nObs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nObs}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Calculate_Soil_Layer_Temperature.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Calculate_Soil_Layer_Temperature.c}
{\xe \v /home/dlebauer/dev/biocro/src/Calculate_Soil_Layer_Temperature.c}
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Calculate_Soil_Layer_Temperature.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_calculate___soil___layer___temperature_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Calculate_Soil_Layer_Temperature} (double soiltavg[], int num_layers, struct {\b dailyclimate} *{\b dailyclimate})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Calculate_Soil_Layer_Temperature\:Calculate_Soil_Layer_Temperature.c}
{\xe \v Calculate_Soil_Layer_Temperature.c\:Calculate_Soil_Layer_Temperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calculate_Soil_Layer_Temperature (double {\i soiltavg}[], int {\i num_layers}, struct {\b dailyclimate} * {\i dailyclimate})}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 \{\par
4   /************************************************************************\par
5    * Purpose:\par
6    * To calculate average  temperature of multiple soil layer\par
7    * Input\par
8    * daily climate structure\par
9    * number of layers in soil profile num_layers\par
10    * Output\par
11    * soiltavg[num_layers]\par
12    * \par
13    * Currently I am assuming temperature of all the soil layers is same as air temperature\par
14    * This is similar to what i got in the version Melaniie gave me.\par
15    * I need to change it to make it more sophisticated, \par
16    * Also, perhaps I will need to include maxm and minm temperature of layers too \par
17    * *********************************************************************/\par
18   int i;\par
19   for (i=0; i<num_layers; i++)\par
20   \{\par
21     soiltavg[i]=dailyclimate->temp;\par
22   \}\par
23   return;\par
24 \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/CalculateBiogeochem.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/CalculateBiogeochem.c}
{\xe \v /home/dlebauer/dev/biocro/src/CalculateBiogeochem.c}
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AuxBioCro.h"}\par
{\f2 #include "crocent.h"}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "function_prototype.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CalculateBiogeochem.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_calculate_biogeochem_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CalculateBiogeochem} (struct {\b miscanthus} *{\b miscanthus}, struct {\b cropcentlayer} *CROPCENT, struct {\b dailyclimate} *{\b dailyclimate})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CalculateBiogeochem\:CalculateBiogeochem.c}
{\xe \v CalculateBiogeochem.c\:CalculateBiogeochem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CalculateBiogeochem (struct {\b miscanthus} * {\i miscanthus}, struct {\b cropcentlayer} * {\i CROPCENT}, struct {\b dailyclimate} * {\i dailyclimate})}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 \{\par
8  \par
9   /**********************************************************************************************************************\par
10    * Purpose:\par
11    * To Evaluate biogeochemical cycle for the current day\par
12    * \par
13    * Inputs/Outputs:\par
14    * \par
15    * (1)\par
16    * A pointer to a structure miscanthus. This is defineed in crocent.h \par
17    * This structure contain standing biomass of different plant organs and also litter components.\par
18    * Idea is to use these litter component, create structures that can be send as input to soil decomposition\par
19    * and update the standing biomass pool\par
20    * \par
21    * (2)\par
22    * A pointer to structure cropcentlayer. This is defined in crocent.h \par
23    * This contain all the parameters and input/output required to perform soil biogeochemistry calculations which is a function of\par
24    * incoming litter, environmental conditions, soil properties. \par
25    * This structures contain all the input/output pool and after function call, all pools are updated for today.\par
26    * \par
27    * (3)\par
28    * A pointer to a structure dailyclimate. This is defined in crocent.h\par
29    *This is a structure for storing daily climate. This is required to perform decomposition of SOC/ and calculations of trace gas \par
30    *which are done daily and require daily climate data \par
31    * \par
32    * Summary/Main output of interest:-\par
33    *     (a)  Updated plant structure (after taking care of fall rate of leaf litter).\par
34    *     (b)  Updated SOC pools\par
35    *     (c)  Updated NH4 pool\par
36    *     (d)  Updated NO3 in Layers\par
37    *     (e)  Updated Flux of N from different Layers\par
38    *     (f)  gaseous flux from soil, CH4, N20, N2, CO2\par
39    *     (g)  Leaching of Organic matter and Nitrogen \par
40    * ***************************************************************************************************************************/\par
41   // Structure Definition from DayCent Code Provided by Melanie that will be used in function call to trace gas calculations\par
42   SITEPAR_SPT sitepar;\par
43   LAYERPAR_SPT layers;\par
44   SOIL_SPT soil;\par
45   \par
46   // these variable are in argument to trace_gas_model but are not used, I am defining them for consistency. I can remove them later on.\par
47   double time,sand,silt,clay,nreduce,NOabsorp_grass,NOabsorp_tree,tree_lai;\par
48   int texture;\par
49   time= 0.0;\par
50   texture=2;\par
51   nreduce=1.0;\par
52   CROPCENT->ENV.nit_amt=0.0;\par
53   tree_lai=0.0;\par
54   NOabsorp_grass=0.0;// These are outputs\par
55   NOabsorp_tree=0.0;// These are outputs\par
56   \par
57   \par
58   // These are local variables, some of them need to move them somewhere else later\par
59    struct InputToCropcent leaflitter,stemlitter,rootlitter,rhizomelitter;\par
60    struct minerals leaflitterE,stemlitterE,rootlitterE,rhizomelitterE;\par
61    int woody, Eflag;\par
62    double *fake;\par
63    woody = 0 ; // No woody Material for now\par
64    Eflag = 1; // For N simulations only\par
65  // The below parameters aee RCESTR from fix.100 representing CE Ratio of structural material\par
66    leaflitterE.CN=200.0;\par
67    leaflitterE.CP=500.0;\par
68    leaflitterE.CS=500.0;\par
69    leaflitterE.CS=500.0;\par
70    stemlitterE = leaflitterE;\par
71    rootlitterE=  leaflitterE;\par
72    rhizomelitterE=leaflitterE;\par
73    \par
74 //***********WE CAN DEFINE ALL THE FALL RATES & OTHER PARAMETERS IN MISCANTHUS STRUCTURE THEN  SEND ALL OF THIS IN A SEPARATE FUNCTION *******  //\par
75    //Now here We are simpyl taking litter vector and creating new structures to send to soil biogeochemistry simulations\par
76   \par
77     BiocroToCrocent(&miscanthus->leaf.litter,1.0,0.2, &leaflitterE, 1.0, 1, 0,&leaflitter);\par
78     BiocroToCrocent(&miscanthus->stem.litter,1.0,0.2, &stemlitterE, 1.0, 1, 0,&stemlitter);\par
79     BiocroToCrocent(&miscanthus->root.litter,1.0,0.2, &rootlitterE, 1.0, 0, 0,&rootlitter);\par
80     BiocroToCrocent(&miscanthus->rhizome.litter,1.0,0.2, &rhizomelitterE, 1.0, 0, 0,&rhizomelitter);\par
81 \par
82    \par
83    \par
84    \par
85 //********* THIS CAN GO INTO A SEPARATE FUNCTION*********************************************************/\par
86    \par
87     if(leaflitter.C.totalC >0.0) \par
88      \{\par
89       UpdateCropcentPoolsFromBioCro(&CROPCENT, &leaflitter);\par
90      \}\par
91       if(stemlitter.C.totalC >0.0) \par
92      \{\par
93       UpdateCropcentPoolsFromBioCro(&CROPCENT, &stemlitter);\par
94      \}\par
95       if(rootlitter.C.totalC >0.0) \par
96      \{\par
97       UpdateCropcentPoolsFromBioCro(&CROPCENT, &rootlitter);\par
98      \}\par
99       if(rhizomelitter.C.totalC >0.0) \par
100      \{\par
101       UpdateCropcentPoolsFromBioCro(&CROPCENT, &rhizomelitter);\par
102      \}\par
103 \par
104  \par
105 \par
106      // Calculate Top Layer 0-15 cm Properties based on Multi-layer soil Structure\par
107      //**************FILL IN THE FUNCTION****************************************/\par
108      Calculate_Soil_Layer_Temperature(CROPCENT->soilprofile.properties.soiltavg,CROPCENT->soilprofile.number_layers, dailyclimate);\par
109      \par
110      //Call Function to Assign Environmental Variables in the top 0-15 cm depth for Decomposition\par
111      assignENV(&CROPCENT,fake,fake,fake,fake,fake,fake,fake);\par
112        \par
113      // When Management is Implemented, Use this space two modify decomposition rates (tillage) and Soil N (fertilization)\par
114      //************INSERT IMPLEMENT MANAGEMENT FUNCTION HERE***********************\par
115      \par
116      // Call Function  to Assign Flux Ratios for movement between different Pools  \par
117      assignFluxRatios(&CROPCENT);\par
118      \par
119      // Call Function to Decompose SOC in the top 0-15 cm layer\par
120      decomposeCROPCENT(&CROPCENT, woody,Eflag);\par
121        \par
122     // Call Function to Update All the Pools\par
123       updatecropcentpools(&CROPCENT);\par
124     \par
125   // Copying to DayCent Structures from CropCent multilayer Soil Structure Before Calling Trace_gas_Model\par
126    Copy_CropCent_To_DayCent_Structures(&CROPCENT->soilprofile, sitepar,layers, soil);\par
127     \par
128      \par
129   // call the tracegas model\par
130  \par
131    trace_gas_model(&dailyclimate->doy,&time, &CROPCENT->ENV.newminN,&CROPCENT->ENV.ammonium,CROPCENT->soilprofile.pools.nitrate,\par
132                   &texture,&sand,&silt,&clay,\par
133                   &CROPCENT->ENV.SOILTEX.fieldc,&CROPCENT->ENV.SOILTEX.bulkd,&CROPCENT->sitepar.maxt,&dailyclimate->precip,\par
134                   &dailyclimate->snow,&CROPCENT->ENV.SOILTEX.avgwfps,&CROPCENT->Emission.stormf,\par
135                   &CROPCENT->Emission.basef, CROPCENT->soilprofile.flux.frlechd,CROPCENT->soilprofile.flux.stream,\par
136                   &CROPCENT->Emission.inorglch, &CROPCENT->soilprofile.critflow,CROPCENT->soilprofile.flux.waterflux,\par
137                   &CROPCENT->Emission.newCO2, &CROPCENT->Emission.NOflux, &CROPCENT->Emission.Nn20flux,&CROPCENT->Emission.Dn20flux,\par
138                   &CROPCENT->Emission.Dn2flux,&CROPCENT->Emission.CH4,&CROPCENT->sitepar.isdecid, \par
139                   &CROPCENT->sitepar.isagri, &miscanthus->LAI,&tree_lai,\par
140                   &NOabsorp_grass,&NOabsorp_tree,\par
141                   &CROPCENT->ENV.nit_amt,&nreduce,\par
142                   CROPCENT->soilprofile.flux.dN2lyr,CROPCENT->soilprofile.flux.dN2Olyr,sitepar,layers,soil);\par
143                   \par
144                   \par
145    /*\par
146    trace_gas_model(int *jday, double *time, double *newminrl, double *ammonium, double nitrate[],\par
147                          int *texture, double *sand, double *silt, double *clay,\par
148                          double *afiel, double *bulkd, double *maxt, double *ppt,\par
149                          double *snow, double *avgwfps, double *stormf,\par
150                          double *basef, double frlechd[], double stream[],\par
151                          double *inorglch, double *critflow, double wfluxout[],\par
152                          double *newCO2, double *NOflux, double *Nn2oflux, double *Dn2oflux,\par
153                          double *Dn2flux, double *CH4, int *isdecid,\par
154                          int *isagri, double *grass_lai, double *tree_lai,\par
155                          double *NOabsorp_grass, double *NOabsorp_tree,\par
156                          double *nit_amt, double *nreduce, \par
157                          double dN2lyr[], double dN2Olyr[],SITEPAR_SPT sitepar,LAYERPAR_SPT layers,SOIL_SPT soil);\par
158                          \par
159  */ \par
160   // Write All the Variables of Interest in the Cropcentlayer structure\par
161   \par
162   //***********Update CROPCENT********************************************\par
163  \par
164 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/CanA.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/CanA.c}
{\xe \v /home/dlebauer/dev/biocro/src/CanA.c}
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "c4photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "CanA.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CanA.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_can_a_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b CanA} (SEXP Lai, SEXP Doy, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP ReH, SEXP windspeed, SEXP LAT, SEXP NLAYERS, SEXP STOMATAWS, SEXP VMAX, SEXP ALPH, SEXP KPARM, SEXP THETA, SEXP BETA, SEXP RD, SEXP B0, SEXP B1, SEXP CATM, SEXP KD, SEXP HEIGHTF, SEXP WS, SEXP LEAFN, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP CHIL, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP NNITROP)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CanA\:CanA.c}
{\xe \v CanA.c\:CanA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP CanA (SEXP {\i Lai}, SEXP {\i Doy}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i ReH}, SEXP {\i windspeed}, SEXP {\i LAT}, SEXP {\i NLAYERS}, SEXP {\i STOMATAWS}, SEXP {\i VMAX}, SEXP {\i ALPH}, SEXP {\i KPARM}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i CATM}, SEXP {\i KD}, SEXP {\i HEIGHTF}, SEXP {\i WS}, SEXP {\i LEAFN}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i CHIL}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i NNITROP})}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26 \{\par
27 \par
28     double upperT=REAL(UPPERTEMP)[0];\par
29     double lowerT=REAL(LOWERTEMP)[0];\par
30 /* Declaring the struct for the Evaop Transpiration */\par
31    struct ET_Str tmp5_ET , tmp6_ET; \par
32    struct c4_str tmpc4, tmpc42; \par
33    //NITROPARMS STRUCTURE IS PASSED and READ\par
34   struct nitroParms nitroparms;\par
35         double TEMPdoubletoint;\par
36         nitroparms.ileafN=REAL(NNITROP)[0];\par
37         nitroparms.kln=REAL(NNITROP)[1];\par
38         nitroparms.Vmaxb1=REAL(NNITROP)[2];\par
39         nitroparms.Vmaxb0=REAL(NNITROP)[3];\par
40         nitroparms.alphab1=REAL(NNITROP)[4];\par
41         nitroparms.alphab0=REAL(NNITROP)[5];\par
42         nitroparms.Rdb1=REAL(NNITROP)[6];\par
43         nitroparms.Rdb0=REAL(NNITROP)[7];\par
44         nitroparms.kpLN=REAL(NNITROP)[8];\par
45         nitroparms.lnb0=REAL(NNITROP)[9];\par
46         nitroparms.lnb1=REAL(NNITROP)[10];\par
47         TEMPdoubletoint=REAL(NNITROP)[11];\par
48         nitroparms.lnFun=(int)TEMPdoubletoint;\par
49         nitroparms.maxln=REAL(NNITROP)[12];\par
50         nitroparms.minln=REAL(NNITROP)[13];\par
51         nitroparms.daymaxln=REAL(NNITROP)[14];\par
53 \par
54   const double cf = 3600 * 1e-6 * 30 * 1e-6 * 10000;\par
55 /* Need a different conversion factor for transpiration */\par
56   const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
57   /* 3600 - number of seconds in an hour */\par
58   /* 1e-3 - mili mols to mols */\par
59   /* 18 - grams in one mol of H20 */\par
60   /* 1e-6 - grams to mega grams */\par
61   /* 10000 - meters in one hectare */\par
62 \par
63   int i;\par
64   double Idir, Idiff, cosTh;\par
65   double LAIc;\par
66   double IDir, IDiff, Itot,rh, WindS;\par
67   double TempIdir,TempIdiff,AssIdir,AssIdiff,GAssIdir,GAssIdiff;\par
68   double pLeafsun, pLeafshade;\par
69   double Leafsun, Leafshade;\par
70 \par
71   double CanopyA,GCanopyA ;\par
72   double CanopyT , CanopyPe = 0.0, CanopyPr = 0.0;\par
73   double CanopyC = 0.0;\par
74   double CanHeight;\par
75   /* Need to label them something different from the arguments of the c4photoC\par
76      function because these need to be modified by the water stress effect on\par
77      the stomata and assimilation. The Ball-Berry parameters are not implemented\par
78      yet (I need to think about this a bit harder). */\par
79   double vmax1;\par
80   double leafN_lay;\par
81 \par
82 \par
83   /* INTEGERS */\par
84   int DOY = INTEGER(Doy)[0];\par
85   int hr = INTEGER(HR)[0];\par
86   int nlayers = INTEGER(NLAYERS)[0];\par
87 \par
88   /* REALS */\par
89   double LAI = REAL(Lai)[0];\par
90   double solarR = REAL(SOLAR)[0];\par
91   double Temp = REAL(TEMP)[0];\par
92   double RlH = REAL(ReH)[0];\par
93   double WindSpeed = REAL(windspeed)[0];\par
94   double lat = REAL(LAT)[0];\par
95   double kd = REAL(KD)[0];\par
96   double heightf = REAL(HEIGHTF)[0];\par
97   double chil = REAL(CHIL)[0];\par
98   double Catm = REAL(CATM)[0];\par
99 \par
100   /* Photosynthesis parameters */\par
101 \par
102   double alpha1 = REAL(ALPH)[0];\par
103   double kparm1 = REAL(KPARM)[0];\par
104   double theta = REAL(THETA)[0];\par
105   double beta = REAL(BETA)[0];\par
106   double Rd1 = REAL(RD)[0];\par
107   double b01 = REAL(B0)[0];\par
108   double b11 = REAL(B1)[0];\par
109   double stomataws = REAL(STOMATAWS)[0];\par
110   double  LeafN = REAL(LEAFN)[0];\par
111   double  kpLN = REAL(KPLN)[0];\par
112   double lnb0 = REAL(LNB0)[0];\par
113   double lnb1 = REAL(LNB1)[0];\par
114   int lnfun = INTEGER(LNFUN)[0];\par
115 \par
116   SEXP lists;\par
117   SEXP names;\par
118   SEXP growth;\par
119   SEXP Ggrowth;\par
120   SEXP trans;\par
121   SEXP epen;\par
122   SEXP epries;\par
123   SEXP cond;\par
124 \par
125   SEXP mat1;\par
126 \par
127   PROTECT(lists = allocVector(VECSXP,7));\par
128   PROTECT(names = allocVector(STRSXP,7));\par
129   PROTECT(growth = allocVector(REALSXP,1));\par
130   PROTECT(trans = allocVector(REALSXP,1));\par
131   PROTECT(epen = allocVector(REALSXP,1));\par
132   PROTECT(epries = allocVector(REALSXP,1));\par
133   PROTECT(cond = allocVector(REALSXP,1));\par
134   PROTECT(Ggrowth = allocVector(REALSXP,1));\par
135   PROTECT(mat1 = allocMatrix(REALSXP,19,nlayers));\par
136 \par
137 \par
138   /* Light Macro Environment. As a side effect it populates tmp1. This\par
139    * should eventually be replaced by a structure. */\par
140 \par
141      lightME(lat,DOY,hr);\par
142 \par
143     Idir = tmp1[0] * solarR;\par
144     Idiff = tmp1[1] * solarR;\par
145     cosTh = tmp1[2];\par
146 \par
147 /* sun multilayer model. As a side effect it populates the layIdir, layItotal, layFsun, layHeight,\par
148 layIdiff, layShade vectors. */\par
149     \par
150     sunML(Idir,Idiff,LAI,nlayers,cosTh,kd,chil,heightf);\par
151 \par
152     /* results from multilayer model */\par
153     LAIc = LAI / nlayers;\par
154     /* Next I need the RH and wind profile */\par
155 \par
156     RHprof(RlH,nlayers);\par
157     /* It populates tmp4. */\par
158 \par
159      WINDprof(WindSpeed,LAI,nlayers);\par
160     /* It populates tmp3. */\par
161 \par
162      LNprof(LeafN, LAI, nlayers, kpLN);\par
163     /* It populates tmp5 */\par
164 \par
165     /* Next use the EvapoTrans function */\par
166     CanopyA=0.0;\par
167     CanopyT=0.0;\par
168 \par
169     for(i=0;i<nlayers;i++)\par
170     \{\par
171 /* vmax depends on leaf nitrogen and this in turn depends on the layer */\par
172             leafN_lay = tmp5[--tp5];\par
173     if(lnfun == 0)\{\par
174                         vmax1 = REAL(VMAX)[0];\par
175                 \}else\{\par
176                         vmax1=nitroparms.Vmaxb1*leafN_lay+nitroparms.Vmaxb0;\par
177                         if(vmax1<0) vmax1=0.0;\par
178       if(vmax1>REAL(VMAX)[0]) vmax1=REAL(VMAX)[0];\par
179                         alpha1=nitroparms.alphab1*leafN_lay+nitroparms.alphab0;\par
180                         Rd1=nitroparms.Rdb1*leafN_lay+nitroparms.Rdb0;\par
181                 \}\par
182 \par
183 \par
184             IDir = layIdir[--sp1];\par
185             Itot = layItotal[--sp3];\par
186             \par
187             rh = tmp4[--tp4];\par
188             WindS = tmp3[--tp3];\par
189 \par
190             pLeafsun = layFsun[--sp4];\par
191             CanHeight = layHeight[--sp6];\par
192             Leafsun = LAIc * pLeafsun;\par
193             tmp5_ET = EvapoTrans(IDir,Itot,Temp,rh,WindS,LAIc,CanHeight,stomataws,\par
194                                  INTEGER(WS)[0],vmax1,alpha1,kparm1,theta,beta,Rd1,b01,b11,upperT,lowerT);\par
195             TempIdir = Temp + tmp5_ET.Deltat;\par
196             tmpc4 = c4photoC(IDir,TempIdir,rh,vmax1,alpha1,kparm1,theta,beta,Rd1,b01,b11,stomataws, Catm,INTEGER(WS)[0],upperT,lowerT);\par
197             AssIdir = tmpc4.Assim;\par
198       GAssIdir=tmpc4.GrossAssim;\par
199 \par
200             IDiff = layIdiff[--sp2];\par
201             pLeafshade = layFshade[--sp5];\par
202             Leafshade = LAIc * pLeafshade;\par
203             tmp6_ET = EvapoTrans(IDiff,Itot,Temp,rh,WindS,LAIc,CanHeight,\par
204                                  stomataws,INTEGER(WS)[0],vmax1,alpha1,kparm1,theta,beta,Rd1,b01,b11,upperT,lowerT);\par
205             TempIdiff = Temp + tmp6_ET.Deltat;\par
206             tmpc42 = c4photoC(IDiff,TempIdiff,rh,vmax1,alpha1,kparm1,theta,beta,Rd1,b01,b11,stomataws, Catm,INTEGER(WS)[0],upperT,lowerT);\par
207             AssIdiff = tmpc42.Assim;\par
208       GAssIdiff = tmpc42.GrossAssim;\par
209 \par
210     /* Collect direct radiation assim and trans in a matrix */\par
211             REAL(mat1)[i*19] = IDir;\par
212             REAL(mat1)[1 + i*19] = IDiff;\par
213             REAL(mat1)[2 + i*19] = Leafsun;\par
214             REAL(mat1)[3 + i*19] = Leafshade;\par
215             REAL(mat1)[4 + i*19] = tmp5_ET.TransR;\par
216             REAL(mat1)[5 + i*19] = tmp6_ET.TransR;\par
217             REAL(mat1)[6 + i*19] = AssIdir;\par
218             /*REAL(mat1)[7 + i*19] = AssIdiff;*/\par
219       REAL(mat1)[7 + i*19] = AssIdiff;\par
220             REAL(mat1)[8 + i*19] = tmp5_ET.Deltat;\par
221             REAL(mat1)[9 + i*19] = tmp6_ET.Deltat;\par
222             REAL(mat1)[10 + i*19] = tmp5_ET.LayerCond; \par
223             REAL(mat1)[11 + i*19] = tmp6_ET.LayerCond; \par
224             REAL(mat1)[12 + i*19] = leafN_lay; \par
225             REAL(mat1)[13 + i*19] = vmax1;\par
226             REAL(mat1)[14 + i*19] = rh; \par
227       REAL(mat1)[15 + i*19] = GAssIdir;\par
228       REAL(mat1)[16 + i*19] = GAssIdiff;\par
229       REAL(mat1)[17 + i*19] = alpha1;\par
230       REAL(mat1)[18 + i*19] = leafN_lay;\par
231 /*      REAL(mat1)[11 + i*12] = rh;  */\par
232     /*Layer conductance needs to be transformed back to the correct units here*/\par
233 \par
234             CanopyA += Leafsun * AssIdir + Leafshade * AssIdiff;\par
235             CanopyT += Leafsun * tmp5_ET.TransR + Leafshade * tmp6_ET.TransR; \par
236             CanopyPe += Leafsun * tmp5_ET.EPenman + Leafshade * tmp6_ET.EPenman;\par
237             CanopyPr += Leafsun * tmp5_ET.EPriestly + Leafshade * tmp6_ET.EPriestly;\par
238             CanopyC += Leafsun * tmp5_ET.LayerCond + Leafshade * tmp6_ET.LayerCond;\par
239       GCanopyA += Leafsun * GAssIdir + Leafshade * GAssIdiff;\par
240     \}\par
241  /*## These are micro mols of CO2 per m2 per sec\par
242    ## Need to convert to \par
243    ## 3600 converts seconds to hours\par
244    ## 10^-6 converts micro mols to mols\par
245    ## 30 converts mols of CO2 to grams\par
246    ## (1/10^6) converts grams to Mg\par
247    ## 10000 scales up to ha */\par
248     REAL(growth)[0] = cf * CanopyA ;\par
249     REAL(trans)[0] = cf2 * CanopyT ;\par
250     REAL(epen)[0] = cf2 * CanopyPe ;\par
251     REAL(epries)[0] = cf2 * CanopyPr ;\par
252     REAL(cond)[0] = CanopyC;\par
253     REAL(Ggrowth)[0] = cf * GCanopyA ;\par
254 \par
255     SET_VECTOR_ELT(lists,0,growth);\par
256     SET_VECTOR_ELT(lists,1,trans);\par
257     SET_VECTOR_ELT(lists,2,cond);\par
258     SET_VECTOR_ELT(lists,3,epen);\par
259     SET_VECTOR_ELT(lists,4,epries);\par
260     SET_VECTOR_ELT(lists,5,Ggrowth);\par
261     SET_VECTOR_ELT(lists,6,mat1);\par
262 \par
263     SET_STRING_ELT(names,0,mkChar("CanopyAssim"));\par
264     SET_STRING_ELT(names,1,mkChar("CanopyTrans"));\par
265     SET_STRING_ELT(names,2,mkChar("CanopyCond"));\par
266     SET_STRING_ELT(names,3,mkChar("TranEpen"));\par
267     SET_STRING_ELT(names,4,mkChar("TranEpries"));\par
268     SET_STRING_ELT(names,5,mkChar("GrossCanopyAssim"));\par
269     SET_STRING_ELT(names,6,mkChar("LayMat"));\par
270     setAttrib(lists,R_NamesSymbol,names);\par
271 \par
272     UNPROTECT(9);\par
273     return(lists);\par
274    \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/CanA.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/CanA.h}
{\xe \v /home/dlebauer/dev/biocro/src/CanA.h}
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_can_a_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ET_Str} {\b EvapoTrans} (double Rad, double Itot, double Airtemperature, double RH, double WindSpeed, double LeafAreaIndex, double CanopyHeight, double StomataWS, int ws, double vmax2, double alpha2, double kparm, double theta, double beta, double Rd2, double b02, double b12, double upperT, double lowerT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSWVC} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToSFS} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToLHV} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b TempToDdryA} (double Temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RHprof} (double RH, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WINDprof} (double WindSpeed, double LAI, int nlayers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LNprof} (double LeafN, double LAI, int nlayers, double kpLN)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sunML} (double Idir, double Idiff, double LAI, int nlayers, double cosTheta, double kd, double chil, double heightf)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lightME} (double lat, int DOY, int td)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v EvapoTrans\:CanA.h}
{\xe \v CanA.h\:EvapoTrans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ET_Str} EvapoTrans (double {\i Rad}, double {\i Itot}, double {\i Airtemperature}, double {\i RH}, double {\i WindSpeed}, double {\i LeafAreaIndex}, double {\i CanopyHeight}, double {\i StomataWS}, int {\i ws}, double {\i vmax2}, double {\i alpha2}, double {\i kparm}, double {\i theta}, double {\i beta}, double {\i Rd2}, double {\i b02}, double {\i b12}, double {\i upperT}, double {\i lowerT})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lightME\:CanA.h}
{\xe \v CanA.h\:lightME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void lightME (double {\i lat}, int {\i DOY}, int {\i td})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28 \par
29         extern double tmp1[];\par
30         double *ip1;\par
31         ip1 = &tmp1[0];\par
32         double omega, delta0, delta, deltaR;\par
33         double tf, SSin, CCos, PPo;\par
34         double CosZenithAngle, CosHour;\par
35         double CosHourDeg;\par
36         double Idir, Idiff, propIdir, propIdiff;\par
37         const double DTR = M_PI/180;\par
38         const double tsn = 12.0;\par
39         const double alpha = 0.85;\par
40         const double SolarConstant = 2650;\par
41         const double atmP = 1e5;\par
42 \par
43         omega = lat * DTR;\par
44         delta0 = 360.0 * ((DOY + 10)/365.0);\par
45         delta = -23.5 * cos(delta0*DTR);\par
46         deltaR = delta * DTR;\par
47 \par
48         tf = (15.0*(td - tsn))*DTR;\par
49         SSin = sin(deltaR) * sin(omega);\par
50         CCos = cos(deltaR) * cos(omega);\par
51 \par
52         CosZenithAngle = SSin + CCos * cos(tf);\par
53         if(CosZenithAngle < pow(10,-10))\par
54                 CosZenithAngle = pow(10,-10);\par
55 \par
56         CosHour = -tan(omega) * tan(deltaR);\par
57         CosHourDeg = (1/DTR)*CosHour;\par
58         if(CosHourDeg < -57)\par
59                 CosHour = -0.994;\par
60 \par
61         PPo = 1e5 / atmP;\par
62         Idir = SolarConstant * (pow(alpha,(PPo/CosZenithAngle)));\par
63         Idiff = 0.3 * SolarConstant *(1 - pow(alpha,(PPo/CosZenithAngle))) * CosZenithAngle ;\par
64 \par
65         propIdir = Idir / (Idir + Idiff);\par
66         propIdiff = Idiff / (Idir + Idiff);\par
67 \par
68         *ip1 = propIdir;\par
69         *(ip1+1) = propIdiff;\par
70         *(ip1+2) = CosZenithAngle;\par
71         return;\par
72 \}\par
}
}
{\xe \v LNprof\:CanA.h}
{\xe \v CanA.h\:LNprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void LNprof (double {\i LeafN}, double {\i LAI}, int {\i nlayers}, double {\i kpLN})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 164 \{\par
165 \par
166         int i;\par
167         double leafNla, LI, CumLAI;\par
168 \par
169         LI  = LAI / nlayers;\par
170         for(i=0;i<nlayers;i++)\par
171         \{\par
172                 CumLAI = LI * (i + 1);\par
173                 leafNla = LeafN * exp(-kpLN * (CumLAI-LI));\par
174                 tmp5[tp5++] = leafNla;\par
175         \}\par
176 \par
177 \}\par
}
}
{\xe \v RHprof\:CanA.h}
{\xe \v CanA.h\:RHprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void RHprof (double {\i RH}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145 \{\par
146         int i;\par
147         double kh, hsla, j;\par
148 \par
149         kh = 1 - RH;\par
150         /* kh = 0.2; */\par
151         /*kh = log(1/RH);*/\par
152         for(i=0;i<nlayers;i++)\par
153         \{\par
154                 j = i + 1;\par
155                 hsla = RH * exp(kh * (j/nlayers));\par
156 //              /*hsla = RH * exp(-kh * (j/nlayers));  /*new simpler version from Joe Iverson*/\par
157                 if(hsla > 1) hsla = 0.99; \par
158                 tmp4[tp4++] = hsla;\par
159         \}\par
160         /* It should return values in the 0-1 range */\par
161 \}\par
}
}
{\xe \v sunML\:CanA.h}
{\xe \v CanA.h\:sunML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sunML (double {\i Idir}, double {\i Idiff}, double {\i LAI}, int {\i nlayers}, double {\i cosTheta}, double {\i kd}, double {\i chil}, double {\i heightf})}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76 \{\par
77         extern int sp1, sp2, sp3, sp4, sp5, sp6;\par
78         extern double layIdir[], layIdiff[], layItotal[], layFsun[], layFshade[], layHeight[];\par
79         double i;\par
80         double k0, k1, k;\par
81         double LAIi, CumLAI;\par
82         double Isolar, Idiffuse, Ibeam, Iscat, Itotal,alphascatter;\par
83         double Ls, Ld;\par
84         double Fsun, Fshade;\par
85         alphascatter=0.8;\par
86         k0 = sqrt(pow(chil ,2) + pow(tan(acos(cosTheta)),2));\par
87         k1 = chil + 1.744*pow((chil+1.183),-0.733);\par
88         k = k0/k1;\par
89         if(k<0)\par
90                 k = -k;\par
91 \par
92         LAIi = LAI / nlayers;\par
93 \par
94         for(i=0;i<nlayers;i++)\par
95         \{\par
96                 CumLAI = LAIi * (i+0.5);\par
97                 \par
98                 Ibeam=Idir*cosTheta;\par
99                 Iscat = Ibeam * exp(-k *sqrt(alphascatter)* CumLAI)-Ibeam * exp(-k * CumLAI);\par
100                 \par
101                 \par
102                 Isolar = Ibeam*k;\par
103                 Idiffuse = Idiff * exp(-kd * CumLAI) + Iscat;\par
104                 \par
105                 \par
106                 Ls = (1-exp(-k*LAIi))*exp(-k*CumLAI)/k;\par
107                 Ld=LAIi-Ls;\par
108 \par
109                 Fsun=Ls/(Ls+Ld);\par
110                 Fshade=Ld/(Ls+Ld);\par
111                 /*fraction intercepted*/\par
112                 Itotal =(Fsun*Isolar + Idiffuse) * (1-exp(-k*LAIi))/k;\par
113 \par
114                 /* collecting the results */\par
115                 layIdir[sp1++] = Isolar + Idiffuse;\par
116                 layIdiff[sp2++] = Idiffuse;\par
117                 layItotal[sp3++] = Itotal;\par
118                 layFsun[sp4++] = Fsun;\par
119                 layFshade[sp5++] = Fshade;\par
120                 layHeight[sp6++] = CumLAI/heightf;\par
121         \}\par
122 \}\par
}
}
{\xe \v TempToDdryA\:CanA.h}
{\xe \v CanA.h\:TempToDdryA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToDdryA (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180 \{\par
181         double DdryA;\par
182         DdryA = 1.295163636 + -0.004258182 * Temp;\par
183         return(DdryA);\par
184 \}\par
}
}
{\xe \v TempToLHV\:CanA.h}
{\xe \v CanA.h\:TempToLHV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToLHV (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 187 \{\par
188         double LHV;\par
189         LHV = 2.501 + -0.002372727 * Temp;\par
190         return(LHV);\par
191 \}\par
}
}
{\xe \v TempToSFS\:CanA.h}
{\xe \v CanA.h\:TempToSFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSFS (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 194 \{\par
195         double SlopeFS;\par
196         SlopeFS = 0.338376068 +  0.011435897 * Temp +  0.001111111 * pow(Temp,2);\par
197         return(SlopeFS);\par
198 \}\par
}
}
{\xe \v TempToSWVC\:CanA.h}
{\xe \v CanA.h\:TempToSWVC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double TempToSWVC (double {\i Temp})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201 \{\par
202         double SWVC;\par
203         SWVC =  4.90820192 +   0.06387253 * Temp +    0.02745742 * pow(Temp,2);\par
204         return(SWVC);\par
205 \}\par
}
}
{\xe \v WINDprof\:CanA.h}
{\xe \v CanA.h\:WINDprof}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WINDprof (double {\i WindSpeed}, double {\i LAI}, int {\i nlayers})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129 \{\par
130         int i;\par
131         double k=0.7;\par
132         double LI, CumLAI;\par
133         double Wind;\par
134 \par
135         LI  = LAI / nlayers;\par
136         for(i=0;i<nlayers;i++)\par
137         \{\par
138                 CumLAI = LI * (i + 1);\par
139                 Wind = WindSpeed * exp(-k * (CumLAI-LI));\par
140                 tmp3[tp3++] = Wind;\par
141         \}\par
142 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/caneGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/caneGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/caneGro.c}
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for caneGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cane_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b caneGro} (SEXP LAT, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP KD, SEXP CHILHF, SEXP NLAYERS, SEXP RHIZOME, SEXP IRTL, SEXP SENCOEFS, SEXP TIMESTEP, SEXP VECSIZE, SEXP SPLEAF, SEXP SPD, SEXP DBPCOEFS, SEXP THERMALP, SEXP VMAX, SEXP ALPHA, SEXP KPARM, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP WS, SEXP SOILCOEFS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP WSFUN, SEXP CENTCOEFS, SEXP CENTTIMESTEP, SEXP CENTKS, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP SUGARCOEFS, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP MAXLN, SEXP MINLN, SEXP DAYMAXLN, SEXP LEAFTURNOVER, SEXP ROOTTURNOVER, SEXP LEAFREMOBILIZE, SEXP OPTIONTOCALCULATEROOTDEPTH, SEXP ROOTFRONTVELOCITY, SEXP NNITROP, SEXP IRRIG, SEXP FROSTP)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v caneGro\:caneGro.c}
{\xe \v caneGro.c\:caneGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP caneGro (SEXP {\i LAT}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i NLAYERS}, SEXP {\i RHIZOME}, SEXP {\i IRTL}, SEXP {\i SENCOEFS}, SEXP {\i TIMESTEP}, SEXP {\i VECSIZE}, SEXP {\i SPLEAF}, SEXP {\i SPD}, SEXP {\i DBPCOEFS}, SEXP {\i THERMALP}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i KPARM}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i WS}, SEXP {\i SOILCOEFS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i WSFUN}, SEXP {\i CENTCOEFS}, SEXP {\i CENTTIMESTEP}, SEXP {\i CENTKS}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i SUGARCOEFS}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i MAXLN}, SEXP {\i MINLN}, SEXP {\i DAYMAXLN}, SEXP {\i LEAFTURNOVER}, SEXP {\i ROOTTURNOVER}, SEXP {\i LEAFREMOBILIZE}, SEXP {\i OPTIONTOCALCULATEROOTDEPTH}, SEXP {\i ROOTFRONTVELOCITY}, SEXP {\i NNITROP}, SEXP {\i IRRIG}, SEXP {\i FROSTP})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SUGARCOEFS} \cell }{{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 \cell }
{\row }
}
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Century.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Century.c}
{\xe \v /home/dlebauer/dev/biocro/src/Century.c}
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "Century.h"}\par
{\f2 #include "AuxBioCro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Century.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_century_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cenT_str} {\b Century} (double *LeafL, double *StemL, double *RootL, double *RhizL, double smoist, double stemp, int timestep, double SCs[9], double leachWater, double Nfert, double iMinN, double precip, double LeafL_Ln, double StemL_Ln, double RootL_Ln, double RhizL_Ln, double LeafL_N, double StemL_N, double RootL_N, double RhizL_N, int soilType, double Ks_cf[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FL_str} {\b FmLcFun} (double Lig, double Nit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow_str} {\b flow} (double *SC, double CNratio, double A, double Lc, double Tm, double {\b resp}, int kno, double Ks[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AbiotEff} (double smoist, double stemp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b cntry} (SEXP LEAFL, SEXP STEML, SEXP ROOTL, SEXP RHIZL, SEXP SMOIST, SEXP STEMP, SEXP TIMESTEP, SEXP SCS, SEXP LEACHWATER, SEXP NFERT, SEXP IMINN, SEXP PRECIP, SEXP LEAFLLN, SEXP STEMLLN, SEXP ROOTLLN, SEXP RHIZLLN, SEXP LEAFLN, SEXP STEMLN, SEXP ROOTLN, SEXP RHIZLN, SEXP SOILTYPE, SEXP KS)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AbiotEff\:Century.c}
{\xe \v Century.c\:AbiotEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AbiotEff (double {\i smoist}, double {\i stemp})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 570                                             \{\par
571 \par
572   double ans;\par
573   double TempEff = 0.0, MoisEff;\par
574 \par
575   if(stemp < 35)\{\par
576     TempEff = 1.0087 / (1 + (46.2 * exp(-0.1899 * stemp)));\par
577   \}else\{\par
578     TempEff = -0.0826 * stemp + 3.84;\par
579   \}\par
580   \par
581   MoisEff = 1.0267 / (1 + 14.7 * exp(-6.5 * smoist));\par
582 \par
583   ans = TempEff * MoisEff;\par
584 \par
585   return(ans);\par
586 \par
587 \}\par
}
}
{\xe \v Century\:Century.c}
{\xe \v Century.c\:Century}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b cenT_str} Century (double * {\i LeafL}, double * {\i StemL}, double * {\i RootL}, double * {\i RhizL}, double {\i smoist}, double {\i stemp}, int {\i timestep}, double {\i SCs}[9], double {\i leachWater}, double {\i Nfert}, double {\i iMinN}, double {\i precip}, double {\i LeafL_Ln}, double {\i StemL_Ln}, double {\i RootL_Ln}, double {\i RhizL_Ln}, double {\i LeafL_N}, double {\i StemL_N}, double {\i RootL_N}, double {\i RhizL_N}, int {\i soilType}, double {\i Ks_cf}[8])}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                         \{\par
43 \par
44   /* Converting Mg ha^-1 to g m^-2 */\par
45   /* 1 Mg = 1e6 grams*/\par
46   /* 1 ha = 1e4 m^2 */  \par
47   const double cf = 100;\par
48   *LeafL *= cf; \par
49   *StemL *= cf;\par
50   *RootL *= cf;\par
51   *RhizL *= cf;\par
52 \par
53   struct cenT_str tmp;\par
54   struct soilText_str soilTemp;\par
55 \par
56   struct FL_str FmLc_Leaf, FmLc_Stem, FmLc_Root, FmLc_Rhiz;\par
57   struct flow_str C1_5_Leaf, C2_5_Leaf, C1_5_Stem, C2_5_Stem;\par
58   struct flow_str C1_7_Leaf_Ln, C1_7_Stem_Ln;\par
59   struct flow_str C3_6_Root, C4_6_Root, C3_6_Rhiz, C4_6_Rhiz;\par
60   struct flow_str C3_7_Root_Ln, C3_7_Rhiz_Ln;\par
61   struct flow_str C5_7, C6, C7, C8_6;\par
62 \par
63   double C6_7, C6_8, C6_9, C7_6, C7_8;\par
64   double C_ap, C_al, C_sp; \par
65 \par
66   double SC1_Leaf, SC2_Leaf, SC1_Stem, SC2_Stem;\par
67   double SC3_Root, SC4_Root, SC3_Rhiz, SC4_Rhiz;\par
68 \par
69 /*  \par
70     I need the separate fractions of Leaf Litter and Stem Litter \par
71   Because they have different lignin to N ratios \par
72   Presumably, the rhizome and root are similar \par
73 \par
74   There is an issue here that I should be careful about I'm importing \par
75   biomass, but need only carbon in some of these calculations \par
76 \par
77   I also need to determine the initial values of carbon for each \par
78   component \par
79 */\par
80 \par
81   soilTemp = soilTchoose(soilType);  \par
82   double T = soilTemp.clay + soilTemp.silt; /*  silt plus clay content of the soil */\par
83   double Ts = soilTemp.sand; /*  Sand content of the soil */\par
84   double Tc = soilTemp.clay; /*  Clay content of the soil */\par
85 \par
86   double CN_structural = 150;\par
87   double CN_surface;\par
88   double CN_active ;\par
89   double CN_slow ;\par
90   double CN_passive ;\par
91   \par
92   double SN1, SN2, SN3, SN4, SN5, SN6, SN7, SN8, SN9;\par
93   double SC1, SC2, SC3, SC4, SC5, SC6, SC7, SC8, SC9;\par
94   double Abiot;\par
95   double Na = 0.0, Nf = 0.0;\par
96   double PlantN;\par
97 \par
98   double SC1_Leaf_Ln, SC1_Stem_Ln;\par
99   double SC3_Root_Ln, SC3_Rhiz_Ln;\par
100 \par
101   /* Converting from Mg ha^-1 to g m^-2 */\par
102   SC1 = SCs[0] * cf;\par
103   SC2 = SCs[1] * cf;\par
104   SC3 = SCs[2] * cf;\par
105   SC4 = SCs[3] * cf;\par
106   SC5 = SCs[4] * cf;\par
107   SC6 = SCs[5] * cf;\par
108   SC7 = SCs[6] * cf;\par
109   SC8 = SCs[7] * cf;\par
110   SC9 = SCs[8] * cf;\par
111 \par
112   double MinN = 0.0, Resp = 0.0;\par
113   \par
114   const double respC1_5 = 0.6;\par
115   const double respC1_7 = 0.3;\par
116   const double respC3_7 = 0.3;\par
117   const double respC2_5 = 0.6;\par
118   const double respC3_6 = 0.55;\par
119   const double respC4_6 = 0.55;\par
120   const double respC5_7 = 0.6;\par
121   const double respC6 = 0.85 - 0.68 * T;\par
122   const double respC7 = 0.55;\par
123   const double respC8 = 0.55;\par
124 \par
125   double Ks[8];\par
126   \par
127   /*  Tm is the effect of soil texture on active SOM turnover */\par
128   double Tm = 1 - 0.75 * T;\par
129 \par
130 /*    The flow constants are taken from the paper \par
131       and Parton et al. 1993 Global Biogeochemistry pg 785 \par
132       but \par
133       Parton et al. 1987 SSSJ 51:1173 \par
134       is also relevant\par
135     \par
136       double Ksy[ ] = \{ 3.9, 4.9, 7.3, 6.0, 14.8, 18.5, 0.2, 0.0045 \};     The units are year^-1  \par
137 \par
138       To get the rates per week we can divide by 52\par
139       To get the rates poer day we can divide by 365\par
140 */\par
141 /* It seems that the rates are the ones reported in Parton et al. 1993 Global Biogeochemical Cycles */\par
142 /* These are annual rates and to convert to other time steps the model should be run accordingly */\par
143 \par
144     /* Rprintf("Ks[3] : %f Ks[4] : %f \\n",Ks[3],Ks[4]); */\par
145     /* Rprintf("Ks[5] : %f Ks[6] : %f \\n",Ks[5],Ks[6]); */\par
146 \par
147      if(timestep == 7)\{\par
148        Ks[0] = Ks_cf[0] / 52 ;\par
149        Ks[1] = Ks_cf[1] / 52 ;\par
150        Ks[2] = Ks_cf[2] / 52 ;\par
151        Ks[3] = Ks_cf[3] / 52 ;\par
152        Ks[4] = Ks_cf[4] / 52 ;\par
153        Ks[5] = Ks_cf[5] / 52 ;\par
154        Ks[6] = Ks_cf[6] / 52 ;\par
155        Ks[7] = Ks_cf[7] / 52 ;\par
156      \}else\par
157      if(timestep == 1)\{   \par
158        Ks[0] = Ks_cf[0] / 365 ; \par
159        Ks[1] = Ks_cf[1] / 365 ; \par
160        Ks[2] = Ks_cf[2] / 365 ; \par
161        Ks[3] = Ks_cf[3] / 365 ; \par
162        Ks[4] = Ks_cf[4] / 365 ; \par
163        Ks[5] = Ks_cf[5] / 365 ; \par
164        Ks[6] = Ks_cf[6] / 365 ; \par
165        Ks[7] = Ks_cf[7] / 365 ;  \par
166      \} \par
167 \par
168 /* Nitrogen processes \par
169     N deposition */\par
170 \par
171   Na = 0.21 + 0.0028 * precip * 0.10 ;  /*precipitation is entered in mm\par
172                                           but it is needed in cm for this\par
173                                            equation. Idem below */\par
174 \par
175   /*  N fixation */\par
176   Nf = -0.18 + 0.014 * precip * 0.10 ; \par
177 \par
178   /* The resulting N is in g N m^-2 yr^-1 \par
179    Conversions\par
180    g => Mg : multiply by 1e-6\par
181    m^2 => ha : multiply by 1e4\par
182    year to week : divide by 52 */\par
183   if(timestep == 7)\{\par
184      Na /=  52;\par
185      Nf /=  52;\par
186   \}else\par
187   if(timestep == 1)\{\par
188      Na /=  365;\par
189      Nf /=  365;\par
190   \}\par
191 \par
192 /*   Rprintf("Na : %f \\n",Na); */\par
193 /*   Rprintf("Nf : %f \\n",Nf); */\par
194 /*   Nitrogen in the form of fertilizer */\par
195 /*   The input units should be in g N m^2 */\par
196 \par
197 /*   Rprintf("Nfert : %f iMinN : %f \\n",Nfert,iMinN); */\par
198   MinN = Na + Nf + Nfert + iMinN;\par
199 \par
200 /*   Rprintf("MinN 0: %f \\n",MinN); */\par
201 \par
202   PlantN = *LeafL * LeafL_N + *StemL * StemL_N;\par
203 \par
204   CN_surface = 20 - PlantN * 5;\par
205   CN_active = 15 - MinN * 6;\par
206   CN_slow = 20 - MinN * 4;\par
207   CN_passive = 10 - MinN * 1.5;\par
208 \par
209   if(PlantN > 2) CN_surface = 10;\par
210 \par
211   /*   Here 2 is g m^-2 */\par
212   if(MinN > 2)\{\par
213     CN_active = 3;\par
214     CN_passive = 7;\par
215     CN_slow = 12;\par
216   \}\par
217 \par
218   SN1 = SC1 / CN_structural; \par
219   SN2 = SC2 / CN_active;\par
220   SN3 = SC3 / CN_structural;\par
221   SN4 = SC4 / CN_active;\par
222   SN5 = SC5 / CN_active;\par
223   SN6 = SC6 / CN_active;\par
224   SN7 = SC7 / CN_slow;\par
225   SN8 = SC8 / CN_passive;\par
226   SN9 = SC9 / CN_passive;\par
227 \par
228 /*  Need to calculate the effect of temperature and moisture. */\par
229 \par
230   Abiot = AbiotEff(smoist, stemp);\par
231 \par
232 /*    Calculate Fm and Lc separately for each component */\par
233   FmLc_Leaf = FmLcFun(LeafL_Ln,LeafL_N);\par
234   FmLc_Stem = FmLcFun(StemL_Ln,StemL_N);\par
235   FmLc_Root = FmLcFun(RootL_Ln,RootL_N);\par
236   FmLc_Rhiz = FmLcFun(RhizL_Ln,RhizL_N);\par
237 \par
238   /*  Surface Metabolic Carbon */\par
239   SC2_Leaf = FmLc_Leaf.Fm * *LeafL;\par
240   SC2_Stem = FmLc_Stem.Fm * *StemL;\par
241   /*  Root Metabolic Carbon */\par
242   SC4_Root = FmLc_Root.Fm * *RootL;\par
243   SC4_Rhiz = FmLc_Rhiz.Fm * *RhizL;\par
244 \par
245   /*  Surface Structural Carbon */\par
246   SC1_Leaf = (1 - FmLc_Leaf.Fm) * *LeafL;\par
247   SC1_Stem = (1 - FmLc_Stem.Fm) * *StemL;\par
248   /* Lignin content needs to be considered separately */\par
249   SC1_Leaf_Ln = SC1_Leaf * LeafL_Ln;\par
250   SC1_Stem_Ln = SC1_Stem * StemL_Ln;\par
251   SC1_Leaf = SC1_Leaf - SC1_Leaf_Ln;\par
252   SC1_Stem = SC1_Stem - SC1_Stem_Ln;\par
253 \par
254   /*  Root Structural Carbon */\par
255   SC3_Root = (1 - FmLc_Root.Fm) * *RootL;\par
256   SC3_Rhiz = (1 - FmLc_Rhiz.Fm) * *RhizL;\par
257   /* Lignin content needs to be considered separately */\par
258   SC3_Root_Ln = SC3_Root * RootL_Ln;\par
259   SC3_Rhiz_Ln = SC3_Rhiz * RhizL_Ln;\par
260   SC3_Root = SC3_Root - SC3_Root_Ln;\par
261   SC3_Rhiz = SC3_Rhiz - SC3_Rhiz_Ln;\par
262 \par
263 /*    T is silt plus clay content \par
264     Ls is fraction of structural C that is lignin \par
265 \par
266     Structural Surface Litter C to Surface Microbe C \par
267     1 => 5 \par
268     2 => 5 \par
269     dC1/dt = Ki * Lc * A * Ci \par
270     Leaf */\par
271   SC1_Leaf +=  0.3 * SC1;\par
272   SC2_Leaf +=  0.3 * SC2;\par
273 \par
274   C1_5_Leaf = flow(&SC1_Leaf,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_5,1,Ks);\par
275   C2_5_Leaf = flow(&SC2_Leaf,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_5,5,Ks);\par
276 \par
277   /*  Stem */\par
278   SC1_Stem = SC1_Stem + 0.7 * SC1;\par
279   SC2_Stem = SC2_Stem + 0.7 * SC2;\par
280 \par
281   C1_5_Stem = flow(&SC1_Stem,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC2_5,1,Ks);\par
282   C2_5_Stem = flow(&SC2_Stem,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC2_5,5,Ks);\par
283 \par
284   SC1_Leaf = C1_5_Leaf.SC;\par
285   SC2_Leaf = C2_5_Leaf.SC;\par
286   SC1_Stem = C1_5_Stem.SC;\par
287   SC2_Stem = C2_5_Stem.SC;\par
288 \par
289  /*   Adding the ligning content */\par
290   C1_7_Leaf_Ln = flow(&SC1_Leaf_Ln,CN_surface,Abiot,FmLc_Leaf.Lc,Tm,respC1_7,1,Ks);\par
291   C1_7_Stem_Ln = flow(&SC1_Stem_Ln,CN_surface,Abiot,FmLc_Stem.Lc,Tm,respC1_7,1,Ks);\par
292   \par
293   /* Flow from SC1.lignin to SC7 */\par
294   SC7 += C1_7_Leaf_Ln.fC + C1_7_Stem_Ln.fC ;\par
295 \par
296   /*  Collect respiration */\par
297   Resp = C1_5_Leaf.Resp + C2_5_Leaf.Resp +\par
298          C1_5_Stem.Resp + C2_5_Stem.Resp +\par
299          C1_7_Leaf_Ln.Resp + C1_7_Stem_Ln.Resp;\par
300   /*  Collect mineralized Nitrogen */\par
301   MinN += C1_5_Leaf.MinN + C2_5_Leaf.MinN +\par
302           C1_5_Stem.MinN + C2_5_Stem.MinN +\par
303           C1_7_Leaf_Ln.MinN + C1_7_Stem_Ln.MinN;\par
304 \par
305 /*   Rprintf("MinN 1: %f \\n",MinN); */\par
306   /*  Updating the Soil Carbon Pools 1 and 2  */\par
307   SC1 = C1_5_Leaf.SC + C1_5_Stem.SC + C1_7_Leaf_Ln.SC + C1_7_Stem_Ln.SC ;\par
308   SC2 = C2_5_Leaf.SC + C2_5_Stem.SC ;\par
309 \par
310   /*  Updating the Nitrogen Carbon Pools 1 and 2 */\par
311   SN1 = SC1 / CN_structural + SN1;\par
312   SN2 = SC2 / CN_surface + SN2;\par
313   \par
314 /*    Structural Root Litter C to Soil Microbe C */\par
315 /*    4 => 6 */\par
316 /*    3 => 6 */\par
317 /*    Root */\par
318   SC3_Root = SC3_Root + 0.3 * SC3;\par
319   SC4_Root = SC4_Root + 0.3 * SC4;\par
320   C3_6_Root = flow(&SC3_Root,CN_active,Abiot,FmLc_Root.Lc,Tm,respC3_6,2,Ks);\par
321   C4_6_Root = flow(&SC4_Root,CN_active,Abiot,FmLc_Root.Lc,Tm,respC3_6,6,Ks);\par
322 /*    Rhizome */\par
323   SC3_Rhiz = SC3_Rhiz + 0.7 * SC3;\par
324   SC4_Rhiz = SC4_Rhiz + 0.7 * SC4;\par
325   C3_6_Rhiz = flow(&SC3_Rhiz,CN_active,Abiot,FmLc_Rhiz.Lc,Tm,respC4_6,2,Ks);\par
326   C4_6_Rhiz = flow(&SC4_Rhiz,CN_active,Abiot,FmLc_Rhiz.Lc,Tm,respC4_6,6,Ks);\par
327 \par
328   SC3_Root = C3_6_Root.SC;\par
329   SC4_Root = C4_6_Root.SC;\par
330   SC3_Rhiz = C3_6_Rhiz.SC;\par
331   SC4_Rhiz = C4_6_Rhiz.SC;\par
332 \par
333   C3_7_Root_Ln = flow(&SC3_Root_Ln,CN_slow,Abiot,FmLc_Root.Lc,Tm,respC3_7,2,Ks);\par
334   C3_7_Rhiz_Ln = flow(&SC3_Rhiz_Ln,CN_slow,Abiot,FmLc_Rhiz.Lc,Tm,respC3_7,2,Ks);\par
335 \par
336   SC7 += C3_7_Root_Ln.fC + C3_7_Rhiz_Ln.fC ; \par
337  /*   Collect respiration */\par
338   Resp += C3_6_Root.Resp + C4_6_Root.Resp +\par
339            C3_6_Rhiz.Resp + C4_6_Rhiz.Resp;\par
340 \par
341 /*    Collect mineralized Nitrogen */\par
342   MinN += C3_6_Root.MinN + C4_6_Root.MinN +\par
343            C3_6_Rhiz.MinN + C4_6_Rhiz.MinN + \par
344            C3_7_Root_Ln.MinN + C3_7_Rhiz_Ln.MinN;\par
345 \par
346 /*   Rprintf("MinN 2: %f \\n",MinN); */\par
347 /*   Updating the Soil Carbon Pools 3 and 4 */\par
348   SC3 = C3_6_Root.SC + C3_6_Rhiz.SC + C3_7_Root_Ln.SC + C3_7_Rhiz_Ln.SC;\par
349   SC4 = C4_6_Root.SC + C4_6_Rhiz.SC ;\par
350 \par
351 /*   Updating the Nitrogen pools 3 and 4 */\par
352   SN3 += SC3 / CN_structural ;\par
353   SN4 += SC4 / CN_active ;\par
354 \par
355 /*    Updating the Soil Carbon Pool 5 */\par
356   SC5 += C1_5_Leaf.fC + C1_5_Stem.fC + C2_5_Leaf.fC + C2_5_Stem.fC ;\par
357 \par
358 /*    Updating the Soil Nitrogen pool 5 */\par
359   SN5 += SC5 / CN_surface ;\par
360   \par
361 /*    Updating the Soil Carbon Pool 6 */\par
362   SC6 += C3_6_Root.fC + C3_6_Rhiz.fC + C4_6_Root.fC + C4_6_Rhiz.fC ;\par
363 \par
364 /*    Updating the Soil Nitrogen Pool 6 */\par
365   SN6 += SC6 / CN_active ;\par
366 \par
367 /*    Surface Microbe C to Slow C */\par
368 /*    5 => 7 */\par
369   C5_7 = flow(&SC5,CN_slow,Abiot,0,0,respC5_7,4,Ks);\par
370 \par
371   Resp +=  C5_7.Resp;\par
372   MinN +=  C5_7.MinN;\par
373 \par
374 /*    Updating Surface Microbe C (pool 5) and slow (pool 7) */\par
375 \par
376   SC5 = C5_7.SC ;\par
377   SC7 += C5_7.fC ;\par
378 \par
379 /*    Updating Surface Microbe N pool */\par
380 \par
381   SN5 = SC5 / CN_surface;\par
382    \par
383 /*   Soil Microbe C to intermediate stage C */\par
384   C6 = flow(&SC6,CN_slow,Abiot,0,Tm,respC6,3,Ks);\par
385 \par
386 /*   if(ISNAN(C6.fC) | ISNAN(C6.SC))\{ */\par
387 /*     Rprintf("C6.fC %f and C6.SC %f and SC6 %f \\n",C6.fC,C6.SC,SC6); */\par
388 /*   \} */\par
389 \par
390   Resp +=  C6.Resp;\par
391   MinN +=  C6.MinN;\par
392 \par
393 /*    Updating carbon and nitrogen soil pools 6 */\par
394   SC6 = C6.SC;\par
395   SN6 = SC6 / CN_active;\par
396   \par
397   C_ap = 0.003 + 0.032 * Tc;   \par
398   C_al = leachWater / 18.0 * (0.01 + 0.04 * Ts);\par
399   \par
400 /*   Rprintf("C_al %f and C_ap %f Tc %f \\n",C_al, C_ap, Tc); */\par
401 /*   Rprintf("leachWater %f and Ts %f \\n",leachWater, Ts); */\par
402 \par
403   C6_8 = C6.fC * C_ap;\par
404   C6_9 = C6.fC * C_al;\par
405   C6_7 = C6.fC * (1 - C_ap - C_al); /* There is no need to subtract 0.55 since \par
406                                        this was already taken into account in \par
407                                        the flow equation */\par
408   \par
409  /*   Updating the Soil Carbon Pool 7, 8 and 9 */\par
410 \par
411   SC7 += C6_7 ;\par
412   SC8 += C6_8 ;\par
413   SC9 += C6_9 ;\par
414 \par
415 /*   Rprintf("C6_9 %f \\n",C6_9); */\par
416 \par
417 /*  Updating the Soil Nitrogen Pool 7, 8 and 9 */\par
418 \par
419   SN7 += SC7 / CN_slow ;\par
420   SN8 += SC8 / CN_passive ;\par
421   SN9 += SC9 / CN_slow ;\par
422   \par
423 /*    Slow Carbon to intermediate stage */\par
424 \par
425   C7 = flow(&SC7,CN_slow,Abiot,0,0,respC7,7,Ks);\par
426 \par
427   Resp += C7.Resp;\par
428   MinN += C7.MinN;\par
429   \par
430   C_sp = 0.003 - 0.009 *Tc;\par
431   C7_8 = C7.fC * C_sp;\par
432   C7_6 = C7.fC * (1 - C_sp);  /* There is no need to subtract 0.55 since \par
433                                  this was already taken into account in \par
434                                  the flow equation */\par
435 \par
436 /*    Updating the Soil Carbon Pools 6 and 8 */\par
437 \par
438   SC6 += C7_6 ;\par
439   SC8 += C7_8 ;\par
440 \par
441 /*    Updating the Soil Nitrogen Pools 6 and 8 */\par
442 \par
443   SN6 = SC6 / CN_active;\par
444   SN8 = SN8 / CN_passive;\par
445 \par
446 /*    Passive Carbon to Soil Microbe C */\par
447 \par
448   C8_6 = flow(&SC8,CN_passive,Abiot,0,0,respC8,8,Ks);\par
449 \par
450   Resp += C8_6.Resp;\par
451   MinN += C8_6.MinN;\par
452 \par
453 /*   Updating the Soil Microbe C 6 and 8 */\par
454   \par
455   SC8 = C8_6.SC ;\par
456   SC6 += C8_6.fC ;\par
457 \par
458   SN6 = SC6 / CN_active;\par
459   SN8 = SC8 / CN_passive;\par
460 \par
461   tmp.SNs[0] = SN1 / cf;\par
462   tmp.SNs[1] = SN2 / cf ;\par
463   tmp.SNs[2] = SN3 / cf ;\par
464   tmp.SNs[3] = SN4 / cf ;\par
465   tmp.SNs[4] = SN5 / cf ;\par
466   tmp.SNs[5] = SN6 / cf ;\par
467   tmp.SNs[6] = SN7 / cf ;\par
468   tmp.SNs[7] = SN8 / cf ;\par
469   tmp.SNs[8] = SN9 / cf ;\par
470 \par
471   tmp.SCs[0] = SC1 / cf;\par
472   tmp.SCs[1] = SC2 / cf;\par
473   tmp.SCs[2] = SC3 / cf;\par
474   tmp.SCs[3] = SC4 / cf;\par
475   tmp.SCs[4] = SC5 / cf;\par
476   tmp.SCs[5] = SC6 / cf;\par
477   tmp.SCs[6] = SC7 / cf;\par
478   tmp.SCs[7] = SC8 / cf;\par
479   tmp.SCs[8] = SC9 / cf;\par
480 \par
481   tmp.MinN = MinN;\par
482   tmp.Resp = Resp;\par
483 \par
484 /* Converting Leaf Litter to its original units */\par
485 \par
486   *LeafL /= cf;\par
487   *StemL /= cf;\par
488   *RootL /= cf;\par
489   *RhizL /= cf;\par
490 \par
491   return(tmp);\par
492 \}\par
}
}
{\xe \v cntry\:Century.c}
{\xe \v Century.c\:cntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP cntry (SEXP {\i LEAFL}, SEXP {\i STEML}, SEXP {\i ROOTL}, SEXP {\i RHIZL}, SEXP {\i SMOIST}, SEXP {\i STEMP}, SEXP {\i TIMESTEP}, SEXP {\i SCS}, SEXP {\i LEACHWATER}, SEXP {\i NFERT}, SEXP {\i IMINN}, SEXP {\i PRECIP}, SEXP {\i LEAFLLN}, SEXP {\i STEMLLN}, SEXP {\i ROOTLLN}, SEXP {\i RHIZLLN}, SEXP {\i LEAFLN}, SEXP {\i STEMLN}, SEXP {\i ROOTLN}, SEXP {\i RHIZLN}, SEXP {\i SOILTYPE}, SEXP {\i KS})}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 611                    \{          /* 22 */ \par
612 \par
613   struct cenT_str tmp;\par
614 \par
615   int j;\par
616 \par
617   double LeafL = REAL(LEAFL)[0];\par
618   double StemL = REAL(STEML)[0];\par
619   double RootL = REAL(ROOTL)[0];\par
620   double RhizL = REAL(RHIZL)[0];\par
621 \par
622   SEXP lists, names;\par
623 \par
624   SEXP SCs;\par
625   SEXP SNs;\par
626   SEXP MinN, Resp;\par
627 \par
628   PROTECT(lists = allocVector(VECSXP,4));\par
629   PROTECT(names = allocVector(STRSXP,4));\par
630   PROTECT(SCs = allocVector(REALSXP,9));\par
631   PROTECT(SNs = allocVector(REALSXP,9));\par
632   PROTECT(MinN = allocVector(REALSXP,1));\par
633   PROTECT(Resp = allocVector(REALSXP,1));\par
634 \par
635   tmp = Century(&LeafL, \par
636                 &StemL, \par
637                 &RootL, \par
638                 &RhizL,\par
639                 REAL(SMOIST)[0], \par
640                 REAL(STEMP)[0], \par
641                 INTEGER(TIMESTEP)[0], \par
642                 REAL(SCS),\par
643                 REAL(LEACHWATER)[0], \par
644                 REAL(NFERT)[0], \par
645                 REAL(IMINN)[0], \par
646                 REAL(PRECIP)[0],\par
647                 REAL(LEAFLLN)[0], \par
648                 REAL(STEMLLN)[0], \par
649                 REAL(ROOTLLN)[0], \par
650                 REAL(RHIZLLN)[0],\par
651                 REAL(LEAFLN)[0], \par
652                 REAL(STEMLN)[0], \par
653                 REAL(ROOTLN)[0], \par
654                 REAL(RHIZLN)[0], \par
655                 INTEGER(SOILTYPE)[0], \par
656                 REAL(KS));\par
657 \par
658   REAL(MinN)[0] = tmp.MinN;\par
659   REAL(Resp)[0] = tmp.Resp;\par
660 \par
661   for(j=0;j<9;j++)\{\par
662   \par
663     REAL(SCs)[j] = tmp.SCs[j];\par
664     REAL(SNs)[j] = tmp.SNs[j];\par
665   \}\par
666 \par
667   SET_VECTOR_ELT(lists,0,SCs);\par
668   SET_VECTOR_ELT(lists,1,SNs);\par
669   SET_VECTOR_ELT(lists,2,MinN);\par
670   SET_VECTOR_ELT(lists,3,Resp);\par
671 \par
672   SET_STRING_ELT(names,0,mkChar("SCs"));\par
673   SET_STRING_ELT(names,1,mkChar("SNs"));\par
674   SET_STRING_ELT(names,2,mkChar("MinN"));\par
675   SET_STRING_ELT(names,3,mkChar("Resp"));\par
676   setAttrib(lists,R_NamesSymbol,names);\par
677   UNPROTECT(6);\par
678   return(lists);\par
679 \par
680 \}\par
}
}
{\xe \v flow\:Century.c}
{\xe \v Century.c\:flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow_str} {\b flow} (double * {\i SC}, double {\i CNratio}, double {\i A}, double {\i Lc}, double {\i Tm}, double {\i resp}, int {\i kno}, double {\i Ks}[8])}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 523                                                                                                                     \{\par
524 \par
525   struct flow_str tmp;\par
526 \par
527   double Kf = 0.0, fC = 0.0;\par
528   double Resp, MinN;\par
529 \par
530   if(kno < 3)\{\par
531     Kf = Ks[kno-1] * Lc * A ;\par
532     fC = Kf * *SC;\par
533   \}else\par
534   if(kno == 3)\{\par
535     Kf = Ks[kno-1] * A * Tm ;\par
536     fC = Kf * *SC;\par
537   \}else\par
538   if(kno > 3)\{\par
539     Kf = Ks[kno-1] * A;\par
540     fC = Kf * *SC;\par
541   \}\par
542 \par
543   if(Kf > 1)\{\par
544     Rprintf("Kf greater than 1: %d %f %f %f %f \\n", kno, Ks[kno-1], Kf, A, Tm);\par
545   \}\par
546 \par
547   Resp = fC * resp;\par
548 \par
549   /*  Mineralized N */\par
550   MinN = Resp / CNratio;\par
551 \par
552   *SC = *SC - fC;\par
553   \par
554   fC = fC - Resp;\par
555 /*   fN = fC / CNratio; */\par
556 \par
557 /*  It is important to keep track of C emissions because */\par
558 /*  I might need to validate it against Eddy flux data */\par
559   tmp.SC = *SC;\par
560   tmp.fC = fC;\par
561   tmp.Resp = Resp;\par
562   tmp.MinN = MinN;  \par
563 \par
564   return(tmp);\par
565 \par
566 \}\par
}
}
{\xe \v FmLcFun\:Century.c}
{\xe \v Century.c\:FmLcFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b FL_str} FmLcFun (double {\i Lig}, double {\i Nit})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 496                                              \{\par
497 \par
498   double Fm, Ls, Lc;\par
499   struct FL_str tmp;\par
500 \par
501   Fm = 0.85 - 0.018 *(Lig/Nit);\par
502   Ls = Lig / (1 - Fm);\par
503   Lc = exp(-3 * Ls);\par
504 \par
505   tmp.Lc = Lc;\par
506   tmp.Fm = Fm;\par
507 \par
508   return(tmp);\par
509 \par
510 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Century.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Century.h}
{\xe \v /home/dlebauer/dev/biocro/src/Century.h}
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_century_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cenT_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FL_str}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow_str}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow_str} {\b flow} (double *SC, double CNratio, double A, double Lc, double Tm, double {\b resp}, int kno, double Ks[8])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FL_str} {\b FmLcFun} (double Lig, double Nit)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AbiotEff} (double smoist, double stemp)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v AbiotEff\:Century.h}
{\xe \v Century.h\:AbiotEff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AbiotEff (double {\i smoist}, double {\i stemp})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 570                                             \{\par
571 \par
572   double ans;\par
573   double TempEff = 0.0, MoisEff;\par
574 \par
575   if(stemp < 35)\{\par
576     TempEff = 1.0087 / (1 + (46.2 * exp(-0.1899 * stemp)));\par
577   \}else\{\par
578     TempEff = -0.0826 * stemp + 3.84;\par
579   \}\par
580   \par
581   MoisEff = 1.0267 / (1 + 14.7 * exp(-6.5 * smoist));\par
582 \par
583   ans = TempEff * MoisEff;\par
584 \par
585   return(ans);\par
586 \par
587 \}\par
}
}
{\xe \v flow\:Century.h}
{\xe \v Century.h\:flow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow_str} {\b flow} (double * {\i SC}, double {\i CNratio}, double {\i A}, double {\i Lc}, double {\i Tm}, double {\i resp}, int {\i kno}, double {\i Ks}[8])}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 523                                                                                                                     \{\par
524 \par
525   struct flow_str tmp;\par
526 \par
527   double Kf = 0.0, fC = 0.0;\par
528   double Resp, MinN;\par
529 \par
530   if(kno < 3)\{\par
531     Kf = Ks[kno-1] * Lc * A ;\par
532     fC = Kf * *SC;\par
533   \}else\par
534   if(kno == 3)\{\par
535     Kf = Ks[kno-1] * A * Tm ;\par
536     fC = Kf * *SC;\par
537   \}else\par
538   if(kno > 3)\{\par
539     Kf = Ks[kno-1] * A;\par
540     fC = Kf * *SC;\par
541   \}\par
542 \par
543   if(Kf > 1)\{\par
544     Rprintf("Kf greater than 1: %d %f %f %f %f \\n", kno, Ks[kno-1], Kf, A, Tm);\par
545   \}\par
546 \par
547   Resp = fC * resp;\par
548 \par
549   /*  Mineralized N */\par
550   MinN = Resp / CNratio;\par
551 \par
552   *SC = *SC - fC;\par
553   \par
554   fC = fC - Resp;\par
555 /*   fN = fC / CNratio; */\par
556 \par
557 /*  It is important to keep track of C emissions because */\par
558 /*  I might need to validate it against Eddy flux data */\par
559   tmp.SC = *SC;\par
560   tmp.fC = fC;\par
561   tmp.Resp = Resp;\par
562   tmp.MinN = MinN;  \par
563 \par
564   return(tmp);\par
565 \par
566 \}\par
}
}
{\xe \v FmLcFun\:Century.h}
{\xe \v Century.h\:FmLcFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b FL_str} FmLcFun (double {\i Lig}, double {\i Nit})}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 496                                              \{\par
497 \par
498   double Fm, Ls, Lc;\par
499   struct FL_str tmp;\par
500 \par
501   Fm = 0.85 - 0.018 *(Lig/Nit);\par
502   Ls = Lig / (1 - Fm);\par
503   Lc = exp(-3 * Ls);\par
504 \par
505   tmp.Lc = Lc;\par
506   tmp.Fm = Fm;\par
507 \par
508   return(tmp);\par
509 \par
510 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Copy_CropCent_To_DayCent_Structure.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Copy_CropCent_To_DayCent_Structure.c}
{\xe \v /home/dlebauer/dev/biocro/src/Copy_CropCent_To_DayCent_Structure.c}
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AuxBioCro.h"}\par
{\f2 #include "crocent.h"}\par
{\f2 #include "soilwater.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Copy_CropCent_To_DayCent_Structure.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_copy___crop_cent___to___day_cent___structure_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Copy_CropCent_To_DayCent_Structures} (struct {\b cropcentlayer} *CROPCENT, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Copy_CropCent_To_DayCent_Structures\:Copy_CropCent_To_DayCent_Structure.c}
{\xe \v Copy_CropCent_To_DayCent_Structure.c\:Copy_CropCent_To_DayCent_Structures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Copy_CropCent_To_DayCent_Structures (struct {\b cropcentlayer} * {\i CROPCENT}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 \{\par
7   int i;\par
8       \par
9       layers->numlyrs=CROPCENT->soilprofile.number_layers;\par
10       for (i=0; i<CROPCENT->soilprofile.number_layers; i++)\par
11       \{\par
12         layers->width[i]= CROPCENT->soilprofile.properties.width[i];\par
13         layers->swc[i]= CROPCENT->soilprofile.pools.swc[i];\par
14         layers->swclimit[i]= CROPCENT->soilprofile.properties.swclimit[i];\par
15         layers->pH[i]= CROPCENT->soilprofile.properties.pH[i];\par
16         layers->bulkd[i]= CROPCENT->soilprofile.properties.bulkd[i];\par
17         layers->fieldc[i]= CROPCENT->soilprofile.properties.fieldc[i];\par
18         layers->dpthmx[i]= CROPCENT->soilprofile.properties.dpthmx[i];\par
19         layers->dpthmn[i]= CROPCENT->soilprofile.properties.dpthmn[i];\par
20         layers->tcoeff[i]=CROPCENT->soilprofile.pools.rootbiomass[i];\par
21         soil->soiltavg[i]=CROPCENT->soilprofile.properties.soiltavg[i];\par
22       \}\par
23       sitepar->Ncoeff=CROPCENT->sitepar.Ncoeff;\par
24       sitepar->jdayStart=CROPCENT->sitepar.jdayStart;\par
25       sitepar->jdayEnd=CROPCENT->sitepar.jdayEnd;\par
26       sitepar->N2Oadjust=CROPCENT->sitepar.N2Oadjust;\par
27 \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Copy_SoilWater_BioCro_To_CropCent.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Copy_SoilWater_BioCro_To_CropCent.c}
{\xe \v /home/dlebauer/dev/biocro/src/Copy_SoilWater_BioCro_To_CropCent.c}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AuxBioCro.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Copy_SoilWater_BioCro_To_CropCent.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_copy___soil_water___bio_cro___to___crop_cent_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Copy_SoilWater_BioCro_To_CropCent} (struct {\b soilML_str} *soilMLS, struct {\b cropcentlayer} *CROPCENT)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Copy_SoilWater_BioCro_To_CropCent\:Copy_SoilWater_BioCro_To_CropCent.c}
{\xe \v Copy_SoilWater_BioCro_To_CropCent.c\:Copy_SoilWater_BioCro_To_CropCent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Copy_SoilWater_BioCro_To_CropCent (struct {\b soilML_str} * {\i soilMLS}, struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 \{\par
5   /***************************************************************************************\par
6    * File Name:Copy_SoilWater_BioCro_To_CropCent.c\par
7    * \par
8    * Function Name: Copy_SoilWater_BioCro_To_CropCent\par
9    * \par
10    * Purpose: Soil Water Module of BioCro is used to update multilayer soil structure of cropcent layer,\par
11    *          which will be eventually used for the calculation of soil biogeochemistry cycling\par
12    * \par
13    * Input:\par
14    * struct soilML_str *soilMLS:  pointer to structure soilMLS defined in AuxBioCro.h This structure \par
15    *                   contains calculations of soul hydrology \par
16    * int soillayers:  Number of soil layers being used in the calculations\par
17    * struct cropcentlayer *CROPCENT: Pointer to structure cropcent defined in crocent.h\par
18    * \par
19    * Output:\par
20    * soilprofile of CROPCENT is updated\par
21    * ************************************************************************************/\par
22     int i;\par
23      CROPCENT->soilprofile.number_layers = soilMLS->Num_BioCro_soil_layers;\par
24       for (i = 0; i < CROPCENT->soilprofile.number_layers; i++)\par
25         \{\par
26         CROPCENT->soilprofile.pools.rootbiomass[i]=soilMLS->rootDist[i];\par
27         CROPCENT->soilprofile.pools.swc[i]=soilMLS->cws[i];\par
28         CROPCENT->soilprofile.flux.waterflux[i]=soilMLS->dailyWflux[i]; \par
29         CROPCENT->soilprofile.properties.width[i]=soilMLS->width[i];\par
30         CROPCENT->soilprofile.properties.dpthmx[i]=soilMLS->dpthmx[i];\par
31         CROPCENT->soilprofile.properties.dpthmn[i]=soilMLS->dpthmn[i];\par
32         CROPCENT->soilprofile.properties.pH[i]=soilMLS->pH[i];\par
33         CROPCENT->soilprofile.properties.bulkd[i]=soilMLS->bulkd[i];\par
34         CROPCENT->soilprofile.properties.swclimit[i]=soilMLS->swclimit[i];\par
35         CROPCENT->soilprofile.properties.fieldc[i]=soilMLS->fieldc[i];\par
36         \}      \par
37       return;\par
38 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/createNULLc3tree.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/createNULLc3tree.c}
{\xe \v /home/dlebauer/dev/biocro/src/createNULLc3tree.c}
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for createNULLc3tree.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "create_n_u_l_lc3tree_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createNULLc3tree} (struct {\b miscanthus} *{\b miscanthus}, int vecsize)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v createNULLc3tree\:createNULLc3tree.c}
{\xe \v createNULLc3tree.c\:createNULLc3tree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createNULLc3tree (struct {\b miscanthus} * {\i miscanthus}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 \{\par
4    int i;\par
5    miscanthus->leafvec=malloc((vecsize+1)*sizeof(*miscanthus->leafvec));\par
6    miscanthus->stemvec=malloc((vecsize+1)*sizeof(*miscanthus->stemvec));\par
7    miscanthus->rootvec=malloc((vecsize+1)*sizeof(*miscanthus->rootvec));\par
8    miscanthus->rhizomevec=malloc((vecsize+1)*sizeof(*miscanthus->rhizomevec));\par
9   \par
10    for (i = 0; i<=vecsize;i++)\par
11    \{\par
12       miscanthus->leafvec[i].newbiomass=0.0;\par
13       miscanthus->leafvec[i].newlitter=0.0;\par
14        miscanthus->leafvec[i].ageinTT=0.0;\par
15        miscanthus->stemvec[i].newbiomass=0.0;\par
16       miscanthus->stemvec[i].newlitter=0.0;\par
17        miscanthus->stemvec[i].ageinTT=0.0;\par
18        miscanthus->rootvec[i].newbiomass=0.0;\par
19       miscanthus->rootvec[i].newlitter=0.0;\par
20        miscanthus->rootvec[i].ageinTT=0.0;\par
21        miscanthus->rhizomevec[i].newbiomass=0.0;\par
22       miscanthus->rhizomevec[i].newlitter=0.0;\par
23        miscanthus->rhizomevec[i].ageinTT=0.0;\par
24        \par
25    \}\par
26    \par
27    miscanthus->leaf.biomass=0.0;\par
28    miscanthus->stem.biomass=0.0;\par
29    miscanthus->root.biomass=0.0;\par
30    miscanthus->rhizome.biomass=0.0;\par
31    miscanthus->leaf.litter=0.0;\par
32    miscanthus->stem.litter=0.0;\par
33    miscanthus->root.litter=0.0;\par
34    miscanthus->rhizome.litter=0.0;\par
35    miscanthus->rhizome.carbohydratefraction=0.6; // Lets assume that in the beginning carbohydrate fraction of dry biomass is  60%\par
36    return;\par
37 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/crocent.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/crocent.h}
{\xe \v /home/dlebauer/dev/biocro/src/crocent.h}
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "crocent_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyclimate}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b carbon}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b minerals}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flowrestriction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b TempEffectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilWaterEffectParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b AnaerobicParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PHParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SymbNFixationParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ErosionParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b OrgLeachParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilTexture}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b C13Parms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b InputToCropcent}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SoilEmissions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b BioCroToCropcentParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cropcentEnvironment}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1::Flux1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc1::parms1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2::Flux2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b strucc2::parms2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1::Flux3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood1::parms3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2::Flux4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood2::parms4}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3::Flux5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b wood3::parms5}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1::Flux6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc1::parms6}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2::Flux7}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b metabc2::parms7}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1::Flux8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c1::parms8}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1::Flux9}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c1::parms9}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2::Flux10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som1c2::parms10}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2::Flux11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som2c2::parms11}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c::Flux12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b som3c::parms12}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b siteparameters}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile::profileproperties}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile::profilepools}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b soilprofile::profilefluxes}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b cropcentlayer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b leaf}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b stem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b rhizome}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b root}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b dailyvec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b littervec}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b DailyAutoResp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b miscanthus}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b senthermaltemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b canopyparms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b respirationParms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b respirationParms::growth}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b respirationParms::maint}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b c3tree}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management::harvestparms}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management::emergenceparms}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXSOILLAY}\~ 100 /* Maximum number of layers */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignPools} (struct {\b cropcentlayer} *CROPCENT, double *sompoolsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignParms} (struct {\b cropcentlayer} *CROPCENT, double *somassignparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b timescaling} (double k, double t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CROPCENTTimescaling} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignFluxRatios} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignENV} (struct {\b cropcentlayer} *CROPCENT, double *getsoiltexturefromR, double *getcropcentstatevarfromR, double *getbiocrotocropcentparmsfromR, double *geterosionparmsfromR, double *getc13parmsfromR, double *getleachingparmsfromR, double *getsymbnfixationparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetC13Parms} (struct {\b C13Parms} *temp, double *getc13parmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printcropcentout} (struct {\b cropcentlayer} CROPCENT, double *totalSOC, double *{\b strucc1}, double *{\b strucc2}, double *{\b metabc1}, double *{\b metabc2}, double *{\b som1c1}, double *{\b som1c2}, double *{\b som2c1}, double *{\b som2c2}, double *{\b som3c}, double *minN)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetBioCroToCropcentParms} (struct {\b BioCroToCropcentParms} *temp, double *getbiocrotocropcentparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSymbNFixationParms} (struct {\b SymbNFixationParms} *temp, double *getsymbnfixationparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetErosionParms} (struct {\b ErosionParms} *temp, double *geterosionparmsfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetSoilTexture} (struct {\b SoilTexture} *temp, double *getsoiltexturefromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetCropCentStateVar} (struct {\b cropcentEnvironment} *ENV, double *getcropcentstatevarfromR)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GetInFlowCERatio} (struct {\b flowrestriction} *INFLOWRESTRICT, struct {\b minerals} *output, struct {\b cropcentEnvironment} *ENV)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetMDR} (double a, double b, double x1, double x2, double soilrad)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetMTI} (double a, double b, double x1, double x2, double soilrad)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b replaceMineralStruct} (struct {\b minerals} *FROM, struct {\b minerals} *TO)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b flow} {\b GetLeachate} (double tcflow, struct {\b minerals} *E, double leachedWATER, double sand, struct {\b OrgLeachParms} *temp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b weightavg} (double W1, double v1, double W2, double v2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateDirectAbsorp} (struct {\b InputToCropcent} *INCROCENT, struct {\b BioCroToCropcentParms} *parms, struct {\b cropcentEnvironment} *ENV)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateCropcentPoolsFromBioCro} (struct {\b cropcentlayer} *CROPCENT, struct {\b InputToCropcent} *INCROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeCROPCENT} (struct {\b cropcentlayer} *CROPCENT, int woody, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b BiocroToCrocent} (double *stdedbc, double fallrate, double lignin, struct {\b minerals} *E, double isotoperatio, int surface, int woody, struct {\b InputToCropcent} *INCROCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CheckDecomposition} (struct {\b minerals} *source, struct {\b minerals} *{\b flow}, struct {\b cropcentEnvironment} *ENV, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b line} (double x, double x1, double y1, double x2, double y2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Getdefac} (struct {\b TempEffectParms} *Temp, struct {\b SoilWaterEffectParms} *swc, double RELWC, double TEMP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetPHfac} (struct {\b PHParms} *PHEFF, double pH)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetAnerbFac} (struct {\b AnaerobicParms} *ANEREFF, double PET, double AWC, double drainage)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateCEafterleachate} (struct {\b som1c2} *{\b som1c2})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSTRUCC1} (struct {\b strucc1} *{\b strucc1}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSTRUCC2} (struct {\b strucc2} *{\b strucc2}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeMETABC1} (struct {\b metabc1} *{\b metabc1}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeMETABC2} (struct {\b metabc2} *{\b metabc2}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeWOOD1} (struct {\b wood1} *{\b wood1}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeWOOD2} (struct {\b wood2} *{\b wood2}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeWOOD3} (struct {\b wood3} *{\b wood3}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSOM1C1} (struct {\b som1c1} *{\b som1c1}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSOM1C2} (struct {\b som1c2} *{\b som1c2}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSOM2C2} (struct {\b som2c2} *{\b som2c2}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decomposeSOM3C} (struct {\b som3c} *{\b som3c}, struct {\b cropcentEnvironment} *ENV, int flag, int Eflag)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatecropcentpools} (struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateMineralStructure} (struct {\b carbon} *toupdateC, struct {\b minerals} *toupdateE, struct {\b carbon} flowC, struct {\b minerals} flowE)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateCarbonStructure} (struct {\b carbon} *toupdateC, struct {\b carbon} {\b flow})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b CalculateGrowthResp} (double {\b newbiomass}, double growthRespFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailymiscanthus} (struct {\b miscanthus} *{\b miscanthus}, double coefs[25], double TherPrds[6], double TherTime, double Temp, double dailynetassim, struct {\b senthermaltemp} *senparms, struct {\b canopyparms} *{\b canopyparms}, struct {\b frostParms} *frostparms, int N, double delTT, struct {\b respirationParms} *RESP, int emergence)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThermalSenescence} (double criticalTT, double currentTT, double biomass, double dailyfractionalloss)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b canopyNsenescence} (struct {\b leaf} *{\b leaf}, double SLA, double kN, double leafNsen)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getStemSenescence} (struct {\b stem} *{\b stem}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getRootSenescence} (struct {\b root} *{\b root}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getRhizomeSenescence} (struct {\b rhizome} *{\b rhizome}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getLeafSenescence} (struct {\b leaf} *{\b leaf}, double criticalTT, double senefracion, double Temp, struct {\b frostParms} *frostparms, double TT, struct {\b canopyparms} *canopyparm)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatelittervec} (struct {\b littervec} *{\b littervec}, double {\b newbiomass}, int N, double delTT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatebiomass} (double *res, double toadd, double toremove)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailymiscanthusupdate} (struct {\b miscanthus} *{\b miscanthus}, struct {\b miscanthus} *deltamiscanthus)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b newbiomass} (double AcanopyNet, double k, double GrowthRespCoeff)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getThermaltime} (double temp, double Tbase)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingbiomass} (double *standing, double {\b newbiomass})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingLeaf} (struct {\b leaf} *{\b leaf}, double {\b newbiomass}, double deadleaf, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingStem} (struct {\b stem} *{\b stem}, double {\b newbiomass}, double deadstem, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingRoot} (struct {\b root} *{\b root}, double {\b newbiomass}, double deadroot, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateStandingRhizome} (struct {\b rhizome} *{\b rhizome}, double {\b newbiomass}, double deadrhizome, double remobFactor)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatedailyvec} (struct {\b dailyvec} *{\b dailyvec}, double {\b newbiomass}, double newlitter, int N, double delTT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createNULLmiscanthus} (struct {\b miscanthus} *{\b miscanthus}, int vecsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getdailyclimate} (struct {\b dailyclimate} *{\b dailyclimate}, int *doy, double *solar, double *temp, double *rh, double *windspeed, double *precip, int currenthour, int vecsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b CheckEmergence} (struct {\b dailyclimate} *{\b dailyclimate}, double EmergTemperature)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatedormantstage} (struct {\b miscanthus} *{\b miscanthus})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailyC3tree} (struct {\b c3tree} *{\b c3tree}, double coefs[25], double TherPrds[6], double TherTime, double Temp, double dailynetassim, struct {\b senthermaltemp} *senparms, struct {\b canopyparms} *{\b canopyparms}, struct {\b frostParms} *frostparms, struct {\b respirationParms} *RESP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b assignManagement} (struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateafterharvest} (struct {\b miscanthus} *{\b miscanthus}, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateafteremergence} (struct {\b miscanthus} *{\b miscanthus}, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getsenescenceparms} (struct {\b senthermaltemp} *senparms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getfrostparms} (struct {\b frostParms} *frostparms)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateC3treeAfterEmergence} (struct {\b c3tree} *willow, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateWillowAfterHarvest} (struct {\b c3tree} *willow, struct {\b management} *{\b management})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MAXSOILLAY\:crocent.h}
{\xe \v crocent.h\:MAXSOILLAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXSOILLAY\~ 100 /* Maximum number of layers */}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v assignENV\:crocent.h}
{\xe \v crocent.h\:assignENV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignENV (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i getsoiltexturefromR}, double * {\i getcropcentstatevarfromR}, double * {\i getbiocrotocropcentparmsfromR}, double * {\i geterosionparmsfromR}, double * {\i getc13parmsfromR}, double * {\i getleachingparmsfromR}, double * {\i getsymbnfixationparmsfromR})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 436                                                                                                                                                               \{\par
437  \par
438   GetBioCroToCropcentParms(&CROPCENT->BcroTOCentParms,getbiocrotocropcentparmsfromR);\par
439   GetSymbNFixationParms(&CROPCENT->ENV.NFIX,getsymbnfixationparmsfromR);\par
440   GetLeachingParms(&CROPCENT->ENV.ORGLECH,getleachingparmsfromR);\par
441   GetC13Parms(&CROPCENT->ENV.C13,getc13parmsfromR);\par
442   GetErosionParms(&CROPCENT->ENV.EROSION,geterosionparmsfromR);\par
443   GetSoilTexture(&CROPCENT->ENV.SOILTEX,getsoiltexturefromR);\par
444   GetCropCentStateVar(&CROPCENT->ENV,getcropcentstatevarfromR);\par
445   return;\par
446 \}\par
}
}
{\xe \v assignFluxRatios\:crocent.h}
{\xe \v crocent.h\:assignFluxRatios}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignFluxRatios (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 472 \{\par
473   struct minerals *tmp;\par
474   // Updating unlabl and labl C ratio in each flux component based on  source\par
475   CROPCENT->strucc1.Flux.strucc1TOsom1c1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
476   CROPCENT->strucc1.Flux.strucc1TOsom2c1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
477   CROPCENT->strucc1.Flux.strucc1TOstrucc1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
478   CROPCENT->strucc1.Flux.strucc1TOmetabc1.C.unlablTOlabl = CROPCENT->strucc1.C.unlablTOlabl;\par
479   replaceMineralStruct(&CROPCENT->strucc1.E,&CROPCENT->strucc1.Flux.strucc1TOstrucc1.E);\par
480   \par
481   CROPCENT->strucc2.Flux.strucc2TOsom1c2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
482   CROPCENT->strucc2.Flux.strucc2TOsom2c2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
483   CROPCENT->strucc2.Flux.strucc2TOstrucc2.C.unlablTOlabl = CROPCENT->strucc2.C.unlablTOlabl;\par
484    replaceMineralStruct(&CROPCENT->strucc2.E,&CROPCENT->strucc2.Flux.strucc2TOstrucc2.E);\par
485    \par
486 //    replaceMineralStruct(&CROPCENT->metabc1.E,&CROPCENT->metabc1.Flux.metabc1TOmetabc1.E); this is repeated\par
487 //    replaceMineralStruct(&CROPCENT->metabc2.E,&CROPCENT->metabc2.Flux.metabc2TOmetabc2.E); this is repeated\par
488     \par
489   CROPCENT->wood1.Flux.wood1TOsom1c1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
490   CROPCENT->wood1.Flux.wood1TOsom2c1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
491   CROPCENT->wood1.Flux.wood1TOwood1.C.unlablTOlabl = CROPCENT->wood1.C.unlablTOlabl;\par
492   replaceMineralStruct(&CROPCENT->wood1.E,&CROPCENT->wood1.Flux.wood1TOwood1.E);\par
493   \par
494   CROPCENT->wood2.Flux.wood2TOsom1c1.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
495   CROPCENT->wood2.Flux.wood2TOsom2c1.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
496   CROPCENT->wood2.Flux.wood2TOwood2.C.unlablTOlabl = CROPCENT->wood2.C.unlablTOlabl;\par
497   replaceMineralStruct(&CROPCENT->wood2.E,&CROPCENT->wood2.Flux.wood2TOwood2.E);\par
498 \par
499   \par
500   CROPCENT->wood3.Flux.wood3TOsom1c2.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
501   CROPCENT->wood3.Flux.wood3TOsom2c2.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
502   CROPCENT->wood3.Flux.wood3TOwood3.C.unlablTOlabl = CROPCENT->wood3.C.unlablTOlabl;\par
503   replaceMineralStruct(&CROPCENT->wood3.E,&CROPCENT->wood3.Flux.wood3TOwood3.E);\par
504   \par
505   CROPCENT->metabc1.Flux.metabc1TOsom1c1.C.unlablTOlabl = CROPCENT->metabc1.C.unlablTOlabl;\par
506   CROPCENT->metabc1.Flux.metabc1TOmetabc1.C.unlablTOlabl = CROPCENT->metabc1.C.unlablTOlabl;\par
507   replaceMineralStruct(&CROPCENT->metabc1.E,&CROPCENT->metabc1.Flux.metabc1TOmetabc1.E);\par
508   \par
509   \par
510   CROPCENT->metabc2.Flux.metabc2TOsom1c2.C.unlablTOlabl = CROPCENT->metabc2.C.unlablTOlabl;\par
511   CROPCENT->metabc2.Flux.metabc2TOmetabc2.C.unlablTOlabl = CROPCENT->metabc2.C.unlablTOlabl;\par
512   replaceMineralStruct(&CROPCENT->metabc2.E,&CROPCENT->metabc2.Flux.metabc2TOmetabc2.E);\par
513   \par
514   CROPCENT->som1c1.Flux.som1c1TOsom2c1.C.unlablTOlabl = CROPCENT->som1c1.C.unlablTOlabl;\par
515   CROPCENT->som1c1.Flux.som1c1TOsom1c1.C.unlablTOlabl = CROPCENT->som1c1.C.unlablTOlabl;\par
516   replaceMineralStruct(&CROPCENT->som1c1.E,&CROPCENT->som1c1.Flux.som1c1TOsom1c1.E);\par
517   \par
518   CROPCENT->som2c1.Flux.som2c1TOsom1c1.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl;\par
519   CROPCENT->som2c1.Flux.som2c1TOsom2c2.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl; // due to mixing\par
520   CROPCENT->som2c1.Flux.som2c1TOsom2c1.C.unlablTOlabl = CROPCENT->som2c1.C.unlablTOlabl;\par
521   replaceMineralStruct(&CROPCENT->som2c1.E,&CROPCENT->som2c1.Flux.som2c1TOsom2c1.E);\par
522   \par
523   CROPCENT->som1c2.Flux.som1c2TOsom2c2.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
524   CROPCENT->som1c2.Flux.som1c2TOsom3c.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
525   CROPCENT->som1c2.Flux.som1c2TOleachate.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
526   CROPCENT->som1c2.Flux.som1c2TOsom1c2.C.unlablTOlabl = CROPCENT->som1c2.C.unlablTOlabl;\par
527   replaceMineralStruct(&CROPCENT->som1c2.E,&CROPCENT->som1c2.Flux.som1c2TOsom1c2.E);\par
528    \par
529   CROPCENT->som2c2.Flux.som2c2TOsom1c2.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
530   CROPCENT->som2c2.Flux.som2c2TOsom3c.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
531   CROPCENT->som2c2.Flux.som2c2TOsom2c2.C.unlablTOlabl = CROPCENT->som2c2.C.unlablTOlabl;\par
532   replaceMineralStruct(&CROPCENT->som2c2.E,&CROPCENT->som2c2.Flux.som2c2TOsom2c2.E);\par
533   \par
534   CROPCENT->som3c.Flux.som3cTOsom1c2.C.unlablTOlabl = CROPCENT->som3c.C.unlablTOlabl;\par
535   CROPCENT->som3c.Flux.som3cTOsom3c.C.unlablTOlabl = CROPCENT->som3c.C.unlablTOlabl;\par
536   replaceMineralStruct(&CROPCENT->som3c.E,&CROPCENT->som3c.Flux.som3cTOsom3c.E);\par
537   \par
538   // updating CE ratio of each Flux based on Environmental condition and Restriction criteria\par
539   \par
540   // Cflow from strucc1 to metabc1 due to photodegradation\par
541   tmp=&CROPCENT->strucc1.E;\par
542   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOmetabc1.E);\par
543   \par
544   \par
545   // Lets focus on all the fluxes to pool som1c1\par
546   GetInFlowCERatio(&CROPCENT->som1c1.INFLOW, tmp, &CROPCENT->ENV);\par
547   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOsom1c1.E);\par
548   replaceMineralStruct(tmp,&CROPCENT->wood1.Flux.wood1TOsom1c1.E);\par
549   replaceMineralStruct(tmp,&CROPCENT->wood2.Flux.wood2TOsom1c1.E);\par
550   replaceMineralStruct(tmp,&CROPCENT->metabc1.Flux.metabc1TOsom1c1.E);\par
551   replaceMineralStruct(tmp,&CROPCENT->som2c1.Flux.som2c1TOsom1c1.E);\par
552    \par
553   // Get CE ratio of inflow to som2c1 pool and update all the fluxes E \par
554   GetInFlowCERatio(&CROPCENT->som2c1.INFLOW, tmp, &CROPCENT->ENV);\par
555   replaceMineralStruct(tmp,&CROPCENT->strucc1.Flux.strucc1TOsom2c1.E);\par
556   replaceMineralStruct(tmp,&CROPCENT->wood1.Flux.wood1TOsom2c1.E);\par
557   replaceMineralStruct(tmp,&CROPCENT->wood2.Flux.wood2TOsom2c1.E);\par
558   replaceMineralStruct(tmp,&CROPCENT->som1c1.Flux.som1c1TOsom2c1.E);\par
559   \par
560   // Get CE ratio of inflow to som1c2 and update all the fluxes\par
561   GetInFlowCERatio(&CROPCENT->som1c2.INFLOW, tmp, &CROPCENT->ENV);\par
562   replaceMineralStruct(tmp,&CROPCENT->strucc2.Flux.strucc2TOsom1c2.E);\par
563   replaceMineralStruct(tmp,&CROPCENT->wood3.Flux.wood3TOsom1c2.E);\par
564   replaceMineralStruct(tmp,&CROPCENT->som2c2.Flux.som2c2TOsom1c2.E);\par
565   replaceMineralStruct(tmp,&CROPCENT->som3c.Flux.som3cTOsom1c2.E);\par
566   replaceMineralStruct(tmp,&CROPCENT->metabc2.Flux.metabc2TOsom1c2.E);\par
567   \par
568   // CE ratio of inflow to som2c2 and update all the fluxes\par
569   GetInFlowCERatio(&CROPCENT->som2c2.INFLOW, tmp, &CROPCENT->ENV);\par
570   replaceMineralStruct(tmp,&CROPCENT->strucc2.Flux.strucc2TOsom2c2.E);\par
571   replaceMineralStruct(tmp,&CROPCENT->wood3.Flux.wood3TOsom2c2.E);\par
572   replaceMineralStruct(tmp,&CROPCENT->som2c1.Flux.som2c1TOsom2c2.E); // due to mixing\par
573   replaceMineralStruct(tmp,&CROPCENT->som1c2.Flux.som1c2TOsom2c2.E); \par
574   \par
575   // CE ratio of inflow to som3c and update all the fluxes\par
576   GetInFlowCERatio(&CROPCENT->som3c.INFLOW, tmp, &CROPCENT->ENV);\par
577   replaceMineralStruct(tmp,&CROPCENT->som2c2.Flux.som2c2TOsom3c.E); \par
578   replaceMineralStruct(tmp,&CROPCENT->som1c2.Flux.som1c2TOsom3c.E); \par
579 \par
580   return;\par
581 \}\par
}
}
{\xe \v assignManagement\:crocent.h}
{\xe \v crocent.h\:assignManagement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignManagement (struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9 management->harvestparms.harvestdoy=300;\par
10 management->harvestparms.frleaf=1.0;\par
11 management->harvestparms.frleaflitter=0.0;\par
12 management->harvestparms.frstem=1.0;\par
13 management->harvestparms.frstemlitter=0.0;\par
14 management->harvestparms.frdeadroot=0.0;\par
15 management->harvestparms.frdeadrhizome=0.0;\par
16 \par
17 management->emergenceparms.minimumdoy=90;\par
18 management->emergenceparms.emergenceTemp=6.0;\par
19 management->emergenceparms.StoragetoLeaffraction=0.02;\par
20 management->emergenceparms.StemtoLeaffraction=0.02;\par
21 management->emergenceparms.plantingrate=20;\par
22 return;\par
23 \}\par
}
}
{\xe \v assignParms\:crocent.h}
{\xe \v crocent.h\:assignParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignParms (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i somassignparmsfromR})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90 \{//Rprintf("%f, %f, %f \\n", *somassignparmsfromR,*(somassignparmsfromR+1),*(somassignparmsfromR+2));\par
91   CROPCENT->strucc1.parms.k=3.9;\par
92   CROPCENT->strucc1.parms.timestep=1440.0;\par
93   CROPCENT->strucc1.parms.strmx=5000.0;\par
94   CROPCENT->strucc1.parms.pligst=3.0;\par
95   CROPCENT->strucc1.parms.bioabsorp=100.0;\par
96   CROPCENT->strucc1.parms.rsplig=0.3;\par
97   CROPCENT->strucc1.parms.ps1co2=0.45;\par
98   CROPCENT->strucc1.parms.pmetabco2=0.48;\par
99   CROPCENT->strucc1.parms.maxphoto=0.0;\par
100   CROPCENT->strucc1.TEff.teff1=15.4;\par
101   CROPCENT->strucc1.TEff.teff2=11.75;\par
102   CROPCENT->strucc1.TEff.teff3=29.7;\par
103   CROPCENT->strucc1.TEff.teff4=0.031;\par
104   CROPCENT->strucc1.SWEFF.a=1.0;\par
105   CROPCENT->strucc1.SWEFF.b=1.0;\par
106   CROPCENT->strucc1.SWEFF.c=30.0;\par
107   CROPCENT->strucc1.SWEFF.d=-9.0;\par
108   CROPCENT->strucc1.PHEFF.a=4.0;\par
109   CROPCENT->strucc1.PHEFF.b=0.5;\par
110   CROPCENT->strucc1.PHEFF.c=1.1;\par
111   CROPCENT->strucc1.PHEFF.d=0.7;\par
112  \par
113 \par
114   \par
115   \par
116   CROPCENT->strucc2.parms.k=4.9;\par
117   CROPCENT->strucc2.parms.timestep=1440.0;\par
118   CROPCENT->strucc2.parms.strmx=5000.0;\par
119   CROPCENT->strucc2.parms.pligst=3.0;\par
120   CROPCENT->strucc2.parms.rsplig=0.3;\par
121   CROPCENT->strucc2.parms.ps1co2=0.55;\par
122   CROPCENT->strucc2.TEff.teff1=15.4;\par
123   CROPCENT->strucc2.TEff.teff2=11.75;\par
124   CROPCENT->strucc2.TEff.teff3=29.7;\par
125   CROPCENT->strucc2.TEff.teff4=0.031;\par
126   CROPCENT->strucc2.SWEFF.a=1.0;\par
127   CROPCENT->strucc2.SWEFF.b=1.0;\par
128   CROPCENT->strucc2.SWEFF.c=30.0;\par
129   CROPCENT->strucc2.SWEFF.d=9.0;\par
130   CROPCENT->strucc2.PHEFF.a=4.0;\par
131   CROPCENT->strucc2.PHEFF.b=0.5;\par
132   CROPCENT->strucc2.PHEFF.c=1.1;\par
133   CROPCENT->strucc2.PHEFF.d=0.7;\par
134   CROPCENT->strucc2.ANEREFF.ANEREF1=1.5;\par
135   CROPCENT->strucc2.ANEREFF.ANEREF2=3.0;\par
136   CROPCENT->strucc2.ANEREFF.ANEREF3=0.3;\par
137   \par
138   \par
139   CROPCENT->metabc1.parms.k=14.8;\par
140   CROPCENT->metabc1.parms.timestep=1440.0;\par
141   CROPCENT->metabc1.parms.pmco2=0.55;\par
142   CROPCENT->metabc1.parms.a=1.0;\par
143   CROPCENT->metabc1.parms.b=0.2;\par
144   CROPCENT->metabc1.parms.x1=0.0;\par
145   CROPCENT->metabc1.parms.x2=30000.0;\par
146   CROPCENT->metabc1.TEff.teff1=15.4;\par
147   CROPCENT->metabc1.TEff.teff2=11.75;\par
148   CROPCENT->metabc1.TEff.teff3=29.7;\par
149   CROPCENT->metabc1.TEff.teff4=0.031;\par
150   CROPCENT->metabc1.SWEFF.a=1.0;\par
151   CROPCENT->metabc1.SWEFF.b=1.0;\par
152   CROPCENT->metabc1.SWEFF.c=30.0;\par
153   CROPCENT->metabc1.SWEFF.d=-9.0;\par
154   CROPCENT->metabc1.PHEFF.a=4.8;\par
155   CROPCENT->metabc1.PHEFF.b=0.5;\par
156   CROPCENT->metabc1.PHEFF.c=1.14;\par
157   CROPCENT->metabc1.PHEFF.d=0.7;\par
158   \par
159   \par
160   CROPCENT->metabc2.parms.k=18.5;\par
161   CROPCENT->metabc2.parms.timestep=1440.0;\par
162   CROPCENT->metabc2.parms.pmco2=0.55;\par
163   CROPCENT->metabc2.TEff.teff1=15.4;\par
164   CROPCENT->metabc2.TEff.teff2=11.75;\par
165   CROPCENT->metabc2.TEff.teff3=29.7;\par
166   CROPCENT->metabc2.TEff.teff4=0.031;\par
167   CROPCENT->metabc2.SWEFF.a=1.0;\par
168   CROPCENT->metabc2.SWEFF.b=1.0;\par
169   CROPCENT->metabc2.SWEFF.c=30.0;\par
170   CROPCENT->metabc2.SWEFF.d=9.0;\par
171   CROPCENT->metabc2.PHEFF.a=4.8;\par
172   CROPCENT->metabc2.PHEFF.b=0.5;\par
173   CROPCENT->metabc2.PHEFF.c=1.14;\par
174   CROPCENT->metabc2.PHEFF.d=0.7;\par
175   CROPCENT->metabc2.ANEREFF.ANEREF1=1.5;\par
176   CROPCENT->metabc2.ANEREFF.ANEREF2=3.0;\par
177   CROPCENT->metabc2.ANEREFF.ANEREF3=0.3;\par
178   \par
179   CROPCENT->wood1.parms.k=3.9;\par
180   CROPCENT->wood1.parms.timestep=1440.0;\par
181   CROPCENT->wood1.parms.pligst=3.0;\par
182   CROPCENT->wood1.parms.rsplig=0.3;\par
183   CROPCENT->wood1.parms.ps1co2=0.45;\par
184   CROPCENT->wood1.TEff.teff1=15.4;\par
185   CROPCENT->wood1.TEff.teff2=11.75;\par
186   CROPCENT->wood1.TEff.teff3=29.7;\par
187   CROPCENT->wood1.TEff.teff4=0.031;\par
188   CROPCENT->wood1.SWEFF.a=1.0;\par
189   CROPCENT->wood1.SWEFF.b=1.0;\par
190   CROPCENT->wood1.SWEFF.c=30.0;\par
191   CROPCENT->wood1.SWEFF.d=9.0;\par
192   CROPCENT->wood1.PHEFF.a=4.0;\par
193   CROPCENT->wood1.PHEFF.b=0.5;\par
194   CROPCENT->wood1.PHEFF.c=1.1;\par
195   CROPCENT->wood1.PHEFF.d=0.7;\par
196   \par
197   \par
198   CROPCENT->wood2.parms.k=3.9;\par
199   CROPCENT->wood2.parms.timestep=1440.0;\par
200   CROPCENT->wood2.parms.pligst=3.0;\par
201   CROPCENT->wood2.parms.rsplig=0.3;\par
202   CROPCENT->wood2.parms.ps1co2=0.45;\par
203   CROPCENT->wood2.TEff.teff1=15.4;\par
204   CROPCENT->wood2.TEff.teff2=11.75;\par
205   CROPCENT->wood2.TEff.teff3=29.7;\par
206   CROPCENT->wood2.TEff.teff4=0.031;\par
207   CROPCENT->wood2.SWEFF.a=1.0;\par
208   CROPCENT->wood2.SWEFF.b=1.0;\par
209   CROPCENT->wood2.SWEFF.c=30.0;\par
210   CROPCENT->wood2.SWEFF.d=-9.0;\par
211   CROPCENT->wood2.PHEFF.a=4.0;\par
212   CROPCENT->wood2.PHEFF.b=0.5;\par
213   CROPCENT->wood2.PHEFF.c=1.1;\par
214   CROPCENT->wood2.PHEFF.d=0.7;\par
215   \par
216   \par
217   CROPCENT->wood3.parms.k=4.9;\par
218   CROPCENT->wood3.parms.timestep=1440.0;\par
219   CROPCENT->wood3.parms.pligst=3.0;\par
220   CROPCENT->wood3.parms.rsplig=0.3;\par
221   CROPCENT->wood3.parms.ps1co2=0.55;\par
222   CROPCENT->wood3.TEff.teff1=15.4;\par
223   CROPCENT->wood3.TEff.teff2=11.75;\par
224   CROPCENT->wood3.TEff.teff3=29.7;\par
225   CROPCENT->wood3.TEff.teff4=0.031;\par
226   CROPCENT->wood3.SWEFF.a=1.0;\par
227   CROPCENT->wood3.SWEFF.b=1.0;\par
228   CROPCENT->wood3.SWEFF.c=30.0;\par
229   CROPCENT->wood3.SWEFF.d=-9.0;\par
230   CROPCENT->wood3.PHEFF.a=4.0;\par
231   CROPCENT->wood3.PHEFF.b=0.5;\par
232   CROPCENT->wood3.PHEFF.c=1.1;\par
233   CROPCENT->wood3.PHEFF.d=0.7;\par
234   CROPCENT->wood3.ANEREFF.ANEREF1=1.5;\par
235   CROPCENT->wood3.ANEREFF.ANEREF2=3.0;\par
236   CROPCENT->wood3.ANEREFF.ANEREF3=0.3;\par
237   \par
238   \par
239   CROPCENT->som1c1.parms.k=6.0;\par
240   CROPCENT->som1c1.parms.timestep=1440.0;\par
241   CROPCENT->som1c1.parms.p1co2a=0.6;\par
242   CROPCENT->som1c1.parms.p1co2b=0.0;\par
243   CROPCENT->som1c1.parms.a=1.0;\par
244   CROPCENT->som1c1.parms.b=5.0;\par
245   CROPCENT->som1c1.parms.x1=0.0;\par
246   CROPCENT->som1c1.parms.x2=30000.0;\par
247   CROPCENT->som1c1.TEff.teff1=15.4;\par
248   CROPCENT->som1c1.TEff.teff2=11.75;\par
249   CROPCENT->som1c1.TEff.teff3=29.7;\par
250   CROPCENT->som1c1.TEff.teff4=0.031;\par
251   CROPCENT->som1c1.SWEFF.a=1.0;\par
252   CROPCENT->som1c1.SWEFF.b=1.0;\par
253   CROPCENT->som1c1.SWEFF.c=30.0;\par
254   CROPCENT->som1c1.SWEFF.d=-9.0;\par
255   CROPCENT->som1c1.PHEFF.a=4.0;\par
256   CROPCENT->som1c1.PHEFF.b=0.5;\par
257   CROPCENT->som1c1.PHEFF.c=1.1;\par
258   CROPCENT->som1c1.PHEFF.d=0.7;\par
259   CROPCENT->som1c1.INFLOW.maxCN= 15.0;\par
260   CROPCENT->som1c1.INFLOW.minCN=  6.0; \par
261   CROPCENT->som1c1.INFLOW.minN=  1.0; \par
262   CROPCENT->som1c1.INFLOW.maxCP=  150.0; \par
263   CROPCENT->som1c1.INFLOW.minCP=  30.0; \par
264   CROPCENT->som1c1.INFLOW.minP=  2.0; \par
265   CROPCENT->som1c1.INFLOW.maxCS=  200.0; \par
266   CROPCENT->som1c1.INFLOW.minCS=  50.0; \par
267   CROPCENT->som1c1.INFLOW.minS=  2.0; \par
268   CROPCENT->som1c1.INFLOW.maxCK=  0.0; \par
269   CROPCENT->som1c1.INFLOW.minCK=  0.0; \par
270   CROPCENT->som1c1.INFLOW.minK=  0.0; \par
271   \par
272 \par
273   \par
274   CROPCENT->som2c1.parms.k=0.2;\par
275   CROPCENT->som2c1.parms.timestep=1440.0;\par
276   CROPCENT->som2c1.parms.p2co2=0.55;\par
277   CROPCENT->som2c1.parms.a=1.0;\par
278   CROPCENT->som2c1.parms.b=5.0;\par
279   CROPCENT->som2c1.parms.x1=0.0;\par
280   CROPCENT->som2c1.parms.x2=30000.0;\par
281   CROPCENT->som2c1.parms.mix=0.5;\par
282   CROPCENT->som2c1.TEff.teff1=15.4;\par
283   CROPCENT->som2c1.TEff.teff2=11.75;\par
284   CROPCENT->som2c1.TEff.teff3=29.7;\par
285   CROPCENT->som2c1.TEff.teff4=0.031;\par
286   CROPCENT->som2c1.SWEFF.a=1.0;\par
287   CROPCENT->som2c1.SWEFF.b=1.0;\par
288   CROPCENT->som2c1.SWEFF.c=30.0;\par
289   CROPCENT->som2c1.SWEFF.d=-9.0;\par
290   CROPCENT->som2c1.PHEFF.a=4.0;\par
291   CROPCENT->som2c1.PHEFF.b=0.5;\par
292   CROPCENT->som2c1.PHEFF.c=1.1;\par
293   CROPCENT->som2c1.PHEFF.d=0.7;\par
294   CROPCENT->som2c1.INFLOW .maxCN= 20.0;\par
295   CROPCENT->som2c1.INFLOW .minCN=  12.0;\par
296   CROPCENT->som2c1.INFLOW .minN=  1.0;\par
297   CROPCENT->som2c1.INFLOW .maxCP=  300.0;\par
298   CROPCENT->som2c1.INFLOW .minCP=  100.0;\par
299   CROPCENT->som2c1.INFLOW .minP=  2.0;\par
300   CROPCENT->som2c1.INFLOW .maxCS=  400.0; \par
301   CROPCENT->som2c1.INFLOW .minCS=  100.0; \par
302   CROPCENT->som2c1.INFLOW .minS=  2.0; \par
303   CROPCENT->som2c1.INFLOW .maxCK=  0.0; \par
304   CROPCENT->som2c1.INFLOW .minCK=  0.0; \par
305   CROPCENT->som2c1.INFLOW .minK=  0.0; \par
306   \par
307   \par
308   \par
309  \par
310   \par
311   CROPCENT->som1c2.parms.k=7.3;\par
312   CROPCENT->som1c2.parms.timestep=1440.0;\par
313   CROPCENT->som1c2.parms.peftxa=0.25;\par
314   CROPCENT->som1c2.parms.peftxb=0.75;\par
315   CROPCENT->som1c2.parms.p1co2a=0.17;\par
316   CROPCENT->som1c2.parms.p1co2b=0.68;\par
317   CROPCENT->som1c2.parms.ps1s3[0]=0.003;\par
318   CROPCENT->som1c2.parms.ps1s3[1]=0.032;\par
319   CROPCENT->som1c2.parms.animpt=5.0;\par
320   CROPCENT->som1c2.TEff.teff1=15.4;\par
321   CROPCENT->som1c2.TEff.teff2=11.75;\par
322   CROPCENT->som1c2.TEff.teff3=29.7;\par
323   CROPCENT->som1c2.TEff.teff4=0.031;\par
324   CROPCENT->som1c2.SWEFF.a=1.0;\par
325   CROPCENT->som1c2.SWEFF.b=1.0;\par
326   CROPCENT->som1c2.SWEFF.c=30.0;\par
327   CROPCENT->som1c2.SWEFF.d=-9.0;\par
328   CROPCENT->som1c2.PHEFF.a=4.0;\par
329   CROPCENT->som1c2.PHEFF.b=0.5;\par
330   CROPCENT->som1c2.PHEFF.c=1.1;\par
331   CROPCENT->som1c2.PHEFF.d=0.7;\par
332   CROPCENT->som1c2.ANEREFF.ANEREF1=1.5;\par
333   CROPCENT->som1c2.ANEREFF.ANEREF2=3.0;\par
334   CROPCENT->som1c2.ANEREFF.ANEREF3=0.3;\par
335   CROPCENT->som1c2.INFLOW .maxCN= 14.0;\par
336   CROPCENT->som1c2.INFLOW .minCN=  3.0; \par
337   CROPCENT->som1c2.INFLOW .minN=  2.0; \par
338   CROPCENT->som1c2.INFLOW .maxCP=  150.0; \par
339   CROPCENT->som1c2.INFLOW .minCP=  30.0; \par
340   CROPCENT->som1c2.INFLOW .minP=  2.0; \par
341   CROPCENT->som1c2.INFLOW .maxCS=  200.0; \par
342   CROPCENT->som1c2.INFLOW .minCS=  50.0; \par
343   CROPCENT->som1c2.INFLOW .minS=  2.0; \par
344   CROPCENT->som1c2.INFLOW .maxCK=  0.0; \par
345   CROPCENT->som1c2.INFLOW .minCK=  0.0; \par
346   CROPCENT->som1c2.INFLOW .minK=  0.0; \par
347   \par
348   \par
349    \par
350   CROPCENT->som2c2.parms.k=0.25;\par
351   CROPCENT->som2c2.parms.timestep=1440.0;\par
352   CROPCENT->som2c2.parms.p2co2=0.55;\par
353   CROPCENT->som2c2.parms.ps2s3[0]=0.003;\par
354   CROPCENT->som2c2.parms.ps2s3[1]=0.009;\par
355   CROPCENT->som2c2.parms.animpt=5.0;\par
356   CROPCENT->som2c2.TEff.teff1=15.4;\par
357   CROPCENT->som2c2.TEff.teff2=11.75;\par
358   CROPCENT->som2c2.TEff.teff3=29.7;\par
359   CROPCENT->som2c2.TEff.teff4=.031;\par
360   CROPCENT->som2c2.SWEFF.a=1.0;\par
361   CROPCENT->som2c2.SWEFF.b=1.0;\par
362   CROPCENT->som2c2.SWEFF.c=30.0;\par
363   CROPCENT->som2c2.SWEFF.d=-9.0;\par
364   CROPCENT->som2c2.PHEFF.a=4.0;\par
365   CROPCENT->som2c2.PHEFF.b=0.5;\par
366   CROPCENT->som2c2.PHEFF.c=1.1;\par
367   CROPCENT->som2c2.PHEFF.d=0.7;\par
368   CROPCENT->som2c2.ANEREFF.ANEREF1=1.5;\par
369   CROPCENT->som2c2.ANEREFF.ANEREF2=3.0;\par
370   CROPCENT->som2c2.ANEREFF.ANEREF3=0.3;\par
371   CROPCENT->som2c2.INFLOW .maxCN= 20.0;\par
372   CROPCENT->som2c2.INFLOW .minCN=  12.0; \par
373   CROPCENT->som2c2.INFLOW .minN=  2.0; \par
374   CROPCENT->som2c2.INFLOW .maxCP=  400.0; \par
375   CROPCENT->som2c2.INFLOW .minCP=  100.0; \par
376   CROPCENT->som2c2.INFLOW .minP=  2.0; \par
377   CROPCENT->som2c2.INFLOW .maxCS=  400.0; \par
378   CROPCENT->som2c2.INFLOW .minCS=  100.0; \par
379   CROPCENT->som2c2.INFLOW .minS=  2.0; \par
380   CROPCENT->som2c2.INFLOW .maxCK=  0.0; \par
381   CROPCENT->som2c2.INFLOW .minCK=  0.0; \par
382   CROPCENT->som2c2.INFLOW .minK=  0.0; \par
383   \par
384   \par
385   \par
386   CROPCENT->som3c.parms.k=0.0025;\par
387   CROPCENT->som3c.parms.timestep=1440.0;\par
388   CROPCENT->som3c.parms.p3co2=0.55;\par
389   CROPCENT->som3c.TEff.teff1=15.4;\par
390   CROPCENT->som3c.TEff.teff2=11.75;\par
391   CROPCENT->som3c.TEff.teff3=29.7;\par
392   CROPCENT->som3c.TEff.teff4=0.031;\par
393   CROPCENT->som3c.SWEFF.a=1.0;\par
394   CROPCENT->som3c.SWEFF.b=1.0;\par
395   CROPCENT->som3c.SWEFF.c=30.0;\par
396   CROPCENT->som3c.SWEFF.d=-9.0;\par
397   CROPCENT->som3c.PHEFF.a=3.0;\par
398   CROPCENT->som3c.PHEFF.b=0.5;\par
399   CROPCENT->som3c.PHEFF.c=1.10;\par
400   CROPCENT->som3c.PHEFF.d=0.7;\par
401   CROPCENT->som3c.ANEREFF.ANEREF1=1.5;\par
402   CROPCENT->som3c.ANEREFF.ANEREF2=3.0;\par
403   CROPCENT->som3c.ANEREFF.ANEREF3=0.3;\par
404   CROPCENT->som3c.INFLOW .maxCN= 8.0;\par
405   CROPCENT->som3c.INFLOW .minCN=  6.0; \par
406   CROPCENT->som3c.INFLOW .minN=  2.0; \par
407   CROPCENT->som3c.INFLOW .maxCP=  200.0; \par
408   CROPCENT->som3c.INFLOW .minCP=  50.0; \par
409   CROPCENT->som3c.INFLOW .minP=  2.0; \par
410   CROPCENT->som3c.INFLOW .maxCS=  200.0; \par
411   CROPCENT->som3c.INFLOW .minCS=  50.0; \par
412   CROPCENT->som3c.INFLOW .minS=  2.0; \par
413   CROPCENT->som3c.INFLOW .maxCK=  0.0; \par
414   CROPCENT->som3c.INFLOW .minCK=  0.0; \par
415   CROPCENT->som3c.INFLOW .minK=  0.0; \par
416   return;\par
417 \}\par
}
}
{\xe \v assignPools\:crocent.h}
{\xe \v crocent.h\:assignPools}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void assignPools (struct {\b cropcentlayer} * {\i CROPCENT}, double * {\i sompoolsfromR})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 \{\par
8   CROPCENT->strucc1.C.totalC=*(sompoolsfromR+0);\par
9   CROPCENT->strucc1.C.unlablTOlabl=*(sompoolsfromR+1);\par
10   CROPCENT->strucc1.E.CN=*(sompoolsfromR+2);\par
11   CROPCENT->strucc1.E.CP=*(sompoolsfromR+3);\par
12   CROPCENT->strucc1.E.CS=*(sompoolsfromR+4);\par
13   CROPCENT->strucc1.E.CK=*(sompoolsfromR+5);\par
14   CROPCENT->strucc1.lignin=*(sompoolsfromR+6);  \par
15   CROPCENT->strucc2.C.totalC=*(sompoolsfromR+7);\par
16   CROPCENT->strucc2.C.unlablTOlabl=*(sompoolsfromR+8);\par
17   CROPCENT->strucc2.E.CN=*(sompoolsfromR+9);\par
18   CROPCENT->strucc2.E.CP=*(sompoolsfromR+10);\par
19   CROPCENT->strucc2.E.CS=*(sompoolsfromR+11);\par
20   CROPCENT->strucc2.E.CK=*(sompoolsfromR+12);\par
21   CROPCENT->strucc2.lignin=*(sompoolsfromR+13);  \par
22   CROPCENT->metabc1.C.totalC=*(sompoolsfromR+14);\par
23   CROPCENT->metabc1.C.unlablTOlabl=*(sompoolsfromR+15);\par
24   CROPCENT->metabc1.E.CN=*(sompoolsfromR+16);\par
25   CROPCENT->metabc1.E.CP=*(sompoolsfromR+17);\par
26   CROPCENT->metabc1.E.CS=*(sompoolsfromR+18);\par
27   CROPCENT->metabc1.E.CK=*(sompoolsfromR+19);  \par
28   CROPCENT->metabc2.C.totalC=*(sompoolsfromR+20);\par
29   CROPCENT->metabc2.C.unlablTOlabl=*(sompoolsfromR+21);\par
30   CROPCENT->metabc2.E.CN=*(sompoolsfromR+22);\par
31   CROPCENT->metabc2.E.CP=*(sompoolsfromR+23);\par
32   CROPCENT->metabc2.E.CS=*(sompoolsfromR+24);\par
33   CROPCENT->metabc2.E.CK=*(sompoolsfromR+25);  \par
34   CROPCENT->wood1.C.totalC=*(sompoolsfromR+26);\par
35   CROPCENT->wood1.C.unlablTOlabl=*(sompoolsfromR+27);\par
36   CROPCENT->wood1.E.CN=*(sompoolsfromR+28);\par
37   CROPCENT->wood1.E.CP=*(sompoolsfromR+29);\par
38   CROPCENT->wood1.E.CS=*(sompoolsfromR+30);\par
39   CROPCENT->wood1.E.CK=*(sompoolsfromR+31);\par
40   CROPCENT->wood1.lignin=*(sompoolsfromR+32);  \par
41   CROPCENT->wood2.C.totalC=*(sompoolsfromR+33);\par
42   CROPCENT->wood2.C.unlablTOlabl=*(sompoolsfromR+34);\par
43   CROPCENT->wood2.E.CN=*(sompoolsfromR+35);\par
44   CROPCENT->wood2.E.CP=*(sompoolsfromR+36);\par
45   CROPCENT->wood2.E.CS=*(sompoolsfromR+37);\par
46   CROPCENT->wood2.E.CK=*(sompoolsfromR+38);\par
47   CROPCENT->wood2.lignin=*(sompoolsfromR+39);  \par
48   CROPCENT->wood3.C.totalC=*(sompoolsfromR+40);\par
49   CROPCENT->wood3.C.unlablTOlabl=*(sompoolsfromR+41);\par
50   CROPCENT->wood3.E.CN=*(sompoolsfromR+42);\par
51   CROPCENT->wood3.E.CP=*(sompoolsfromR+43);\par
52   CROPCENT->wood3.E.CS=*(sompoolsfromR+44);\par
53   CROPCENT->wood3.E.CK=*(sompoolsfromR+45);\par
54   CROPCENT->wood3.lignin=*(sompoolsfromR+46);  \par
55   CROPCENT->som1c1.C.totalC=*(sompoolsfromR+47);\par
56   CROPCENT->som1c1.C.unlablTOlabl=*(sompoolsfromR+48);\par
57   CROPCENT->som1c1.E.CN=*(sompoolsfromR+49);\par
58   CROPCENT->som1c1.E.CP=*(sompoolsfromR+50);\par
59   CROPCENT->som1c1.E.CS=*(sompoolsfromR+51);\par
60   CROPCENT->som1c1.E.CK=*(sompoolsfromR+52);  \par
61   CROPCENT->som1c2.C.totalC=*(sompoolsfromR+53);\par
62   CROPCENT->som1c2.C.unlablTOlabl=*(sompoolsfromR+54);\par
63   CROPCENT->som1c2.E.CN=*(sompoolsfromR+55);\par
64   CROPCENT->som1c2.E.CP=*(sompoolsfromR+56);\par
65   CROPCENT->som1c2.E.CS=*(sompoolsfromR+57);\par
66   CROPCENT->som1c2.E.CK=*(sompoolsfromR+58);  \par
67   CROPCENT->som2c1.C.totalC=*(sompoolsfromR+59);\par
68   CROPCENT->som2c1.C.unlablTOlabl=*(sompoolsfromR+60);\par
69   CROPCENT->som2c1.E.CN=*(sompoolsfromR+61);\par
70   CROPCENT->som2c1.E.CP=*(sompoolsfromR+62);\par
71   CROPCENT->som2c1.E.CS=*(sompoolsfromR+63);\par
72   CROPCENT->som2c1.E.CK=*(sompoolsfromR+64);  \par
73   CROPCENT->som2c2.C.totalC=*(sompoolsfromR+65);\par
74   CROPCENT->som2c2.C.unlablTOlabl=*(sompoolsfromR+66);\par
75   CROPCENT->som2c2.E.CN=*(sompoolsfromR+67);\par
76   CROPCENT->som2c2.E.CP=*(sompoolsfromR+68);\par
77   CROPCENT->som2c2.E.CS=*(sompoolsfromR+69);\par
78   CROPCENT->som2c2.E.CK=*(sompoolsfromR+70); \par
79   CROPCENT->som3c.C.totalC=*(sompoolsfromR+71);\par
80   CROPCENT->som3c.C.unlablTOlabl=*(sompoolsfromR+72);\par
81   CROPCENT->som3c.E.CN=*(sompoolsfromR+73);\par
82   CROPCENT->som3c.E.CP=*(sompoolsfromR+74);\par
83   CROPCENT->som3c.E.CS=*(sompoolsfromR+75);\par
84   CROPCENT->som3c.E.CK=*(sompoolsfromR+76);\par
85   return;\par
86 \}\par
}
}
{\xe \v BiocroToCrocent\:crocent.h}
{\xe \v crocent.h\:BiocroToCrocent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BiocroToCrocent (double * {\i stdedbc}, double {\i fallrate}, double {\i lignin}, struct {\b minerals} * {\i E}, double {\i isotoperatio}, int {\i surface}, int {\i woody}, struct {\b InputToCropcent} * {\i INCROCENT})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 149 \{\par
150   /***************************************************************\par
151   *   Purpose:\par
152   *   Purpose of this function is to take the daily output of BioCro\par
153   *   and create structure InputToCrocent that contains information\par
154   *   about characteristics of the litter and this structure can be used to\par
155   *   update Crocent pools\par
156   *   Note that we are not reducing standing biomass due to photodecomposition\par
157   *   we are only letting it fall based on fallrate to contribute to \par
158   *   appropriate soilpools\par
159   *  \par
160   * \par
161   *   Arguments\par
162   *   (1)  *stdedbc - This is a pointe to standing dead biomass. We are using\par
163   *         ponters here because we would like to update it after accouting for\par
164   *         reduction in fall rate\par
165   *   (2)  fallrate - This represents fraction of standing deadbiomasss\par
166   *         that will contribute to soil pools\par
167   *   (3)   lignin - This represents lignin content of the dead biomass\par
168   *   (4)   E representes CN,CP,CS, CK- represents nutrient:C ratio for the dead biomass\par
169   *   (5)   isotopratio - represents ratio of unlabled and labled C in \par
170   *          the dead biomass\par
171   *   (6)   surface = 1 for surface input and 0 for below ground input \par
172   *   (7)   woody =0 for non woody material and\par
173   *        woody =1 for branches\par
174   *        woody =2 for large wood\par
175   *        woody =3 for coarse roots\par
176   * \par
177   *   We also need some environmental variables to evaluate photodegradation of\par
178   *   the standing biomass\par
179   * **********************************************************/\par
180       double temp;\par
181       if(fallrate>1.0) \par
182       \{\par
183         error("Fall rate is greather than 1.0");\par
184       \}\par
185       \par
186       temp=(*stdedbc)*fallrate;  // Find how much litter goes to ground\par
187       (*stdedbc)=(*stdedbc)-temp; // update standing litter\par
188        \par
189        temp=temp*40; // unit conversion for Mg biomass/ha  to gram C/m2 for non woody\par
190       \par
191       INCROCENT->C.totalC =temp;\par
192       INCROCENT->C.unlablTOlabl = isotoperatio;\par
193       INCROCENT->E.CN= E->CN;\par
194       INCROCENT->E.CP= E->CP;\par
195       INCROCENT->E.CS= E->CS;\par
196       INCROCENT->E.CK= E->CK;\par
197       INCROCENT->lignin=lignin;\par
198       INCROCENT->surface=surface;\par
199       INCROCENT->woody=woody;\par
200       return;                                  \par
201 \}\par
}
}
{\xe \v CalculateGrowthResp\:crocent.h}
{\xe \v crocent.h\:CalculateGrowthResp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CalculateGrowthResp (double {\i newbiomass}, double {\i growthRespFactor})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 457 \{\par
458   double tmp;\par
459   tmp=(newbiomass>0.0)?newbiomass*growthRespCoeff:0.0;\par
460   return(tmp);\par
461 \}\par
}
}
{\xe \v canopyNsenescence\:crocent.h}
{\xe \v crocent.h\:canopyNsenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double canopyNsenescence (struct {\b leaf} * {\i leaf}, double {\i SLA}, double {\i kN}, double {\i leafNsen})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 263 \{\par
264   /*****************************************************\par
265    * Purpose:\par
266    * \par
267    * Purpose of this function is to calculate additional N senescence due to N deficiency\par
268    * It uses current value of average canopy N, use this and an exponential coefficient to\par
269    * determine vertical distribution of leaf N canopy.\par
270    * If this vertical distrbution results in leaf N of lower canopy which is less than a threshold value\par
271    *  then an leaf biomass (equivalent to LAI which is having lower than threshold leaf N conc.) is senesced\par
272    * Input\par
273    * leaf: pointer to leaf structure\par
274    * SLA: specific leaf area (in ha/Mg)\par
275    * kN:  coefficient determining exponentially declining leaf N conc (dimensionless)\par
276    * leafNsen: any leaf with leaf N conc lower than leafNsen will be senesced (mmol N m-2)\par
277    * Output/return\par
278    * Senesced leaf biomass (Mg/ha)\par
279    * ***************************************************/\par
280   double tmp;\par
281   double laimax,laicurrent;\par
282   double leafN;\par
283   leafN=leaf->biomassE.CN;\par
284   laimax=(1/kN)*log(1+(kN*leafN/leafNsen));\par
285   laicurrent=leaf->biomass*SLA;\par
286   if(laicurrent<=laimax)\par
287   \{\par
288     tmp=0.0;\par
289   \}\par
290   else\par
291   \{\par
292     tmp=(laicurrent-laimax)/SLA;\par
293   \}\par
294   return(tmp);\par
295 \}\par
}
}
{\xe \v CheckDecomposition\:crocent.h}
{\xe \v crocent.h\:CheckDecomposition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CheckDecomposition (struct {\b minerals} * {\i source}, struct {\b minerals} * {\i flow}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CheckEmergence\:crocent.h}
{\xe \v crocent.h\:CheckEmergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CheckEmergence (struct {\b dailyclimate} * {\i dailyclimate}, double {\i EmergTemperature})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 674 \{\par
675   int flag;\par
676   if(((dailyclimate->minimumTemp)>EmergTemperature)&&((dailyclimate->doy)>90)&&((dailyclimate->doy)<270))\{\par
677     flag =1;\par
678   \}\par
679   else\par
680   \{\par
681     flag = 0;\par
682   \}\par
683   return(flag);\par
684 \}\par
}
}
{\xe \v createNULLmiscanthus\:crocent.h}
{\xe \v crocent.h\:createNULLmiscanthus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createNULLmiscanthus (struct {\b miscanthus} * {\i miscanthus}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13    int i;\par
14    miscanthus->leafvec=malloc((vecsize+1)*sizeof(*miscanthus->leafvec));\par
15    miscanthus->stemvec=malloc((vecsize+1)*sizeof(*miscanthus->stemvec));\par
16    miscanthus->rootvec=malloc((vecsize+1)*sizeof(*miscanthus->rootvec));\par
17    miscanthus->rhizomevec=malloc((vecsize+1)*sizeof(*miscanthus->rhizomevec));\par
18   \par
19    for (i = 0; i<=vecsize;i++)\par
20    \{\par
21       miscanthus->leafvec[i].newbiomass=0.0;\par
22       miscanthus->leafvec[i].newlitter=0.0;\par
23        miscanthus->leafvec[i].ageinTT=0.0;\par
24        miscanthus->stemvec[i].newbiomass=0.0;\par
25       miscanthus->stemvec[i].newlitter=0.0;\par
26        miscanthus->stemvec[i].ageinTT=0.0;\par
27        miscanthus->rootvec[i].newbiomass=0.0;\par
28       miscanthus->rootvec[i].newlitter=0.0;\par
29        miscanthus->rootvec[i].ageinTT=0.0;\par
30        miscanthus->rhizomevec[i].newbiomass=0.0;\par
31       miscanthus->rhizomevec[i].newlitter=0.0;\par
32        miscanthus->rhizomevec[i].ageinTT=0.0;\par
33        \par
34    \}\par
35    \par
36    miscanthus->leaf.biomass=0.0;\par
37    miscanthus->stem.biomass=0.0;\par
38    miscanthus->root.biomass=0.0;\par
39    miscanthus->rhizome.biomass=0.0;\par
40    miscanthus->leaf.litter=0.0;\par
41    miscanthus->stem.litter=0.0;\par
42    miscanthus->root.litter=0.0;\par
43    miscanthus->rhizome.litter=0.0;\par
44    miscanthus->rhizome.carbohydratefraction=0.6; // Lets assume that in the beginning carbohydrate fraction of dry biomass is  60%\par
45    return;\par
46 \}\par
}
}
{\xe \v CROPCENTTimescaling\:crocent.h}
{\xe \v crocent.h\:CROPCENTTimescaling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CROPCENTTimescaling (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 419                                                         \{\par
420 CROPCENT->strucc1.parms.k= timescaling(CROPCENT->strucc1.parms.k,CROPCENT->strucc1.parms.timestep);\par
421 CROPCENT->strucc2.parms.k= timescaling(CROPCENT->strucc2.parms.k,CROPCENT->strucc2.parms.timestep);\par
422 CROPCENT->metabc1.parms.k= timescaling(CROPCENT->metabc1.parms.k,CROPCENT->metabc1.parms.timestep);\par
423 CROPCENT->metabc2.parms.k= timescaling(CROPCENT->metabc2.parms.k,CROPCENT->metabc2.parms.timestep);\par
424 CROPCENT->wood1.parms.k= timescaling(CROPCENT->wood1.parms.k,CROPCENT->wood1.parms.timestep);\par
425 CROPCENT->wood2.parms.k= timescaling(CROPCENT->wood2.parms.k,CROPCENT->wood2.parms.timestep);\par
426 CROPCENT->wood3.parms.k= timescaling(CROPCENT->wood3.parms.k,CROPCENT->wood3.parms.timestep);\par
427 CROPCENT->som1c1.parms.k= timescaling(CROPCENT->som1c1.parms.k,CROPCENT->som1c1.parms.timestep);\par
428 CROPCENT->som2c1.parms.k= timescaling(CROPCENT->som2c1.parms.k,CROPCENT->som2c1.parms.timestep);\par
429 CROPCENT->som1c2.parms.k= timescaling(CROPCENT->som1c2.parms.k,CROPCENT->som1c2.parms.timestep);\par
430 CROPCENT->som2c2.parms.k= timescaling(CROPCENT->som2c2.parms.k,CROPCENT->som2c2.parms.timestep);\par
431 CROPCENT->som3c.parms.k= timescaling(CROPCENT->som3c.parms.k,CROPCENT->som3c.parms.timestep);\par
432   return;\par
433 \}\par
}
}
{\xe \v dailyC3tree\:crocent.h}
{\xe \v crocent.h\:dailyC3tree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailyC3tree (struct {\b c3tree} * {\i c3tree}, double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime}, double {\i Temp}, double {\i dailynetassim}, struct {\b senthermaltemp} * {\i senparms}, struct {\b canopyparms} * {\i canopyparms}, struct {\b frostParms} * {\i frostparms}, struct {\b respirationParms} * {\i RESP})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dailymiscanthus\:crocent.h}
{\xe \v crocent.h\:dailymiscanthus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailymiscanthus (struct {\b miscanthus} * {\i miscanthus}, double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime}, double {\i Temp}, double {\i dailynetassim}, struct {\b senthermaltemp} * {\i senparms}, struct {\b canopyparms} * {\i canopyparms}, struct {\b frostParms} * {\i frostparms}, int {\i N}, double {\i delTT}, struct {\b respirationParms} * {\i RESP}, int {\i emergence})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 467 \{\par
468 \par
469   double remobStem,remobRoot,remobRhiz;\par
470   remobStem=canopyparms->remobFac;\par
471   remobRoot=canopyparms->remobFac;\par
472   remobRhiz=canopyparms->remobFac;\par
473   double deadleaf,deadstem,deadroot,deadrhiz;\par
474   double dailysenesced;\par
475   double remobilized;\par
476   double totalassimilate;\par
477   struct crop_phenology cropdbp;\par
478   double newleaf,newstem,newrhiz,newroot;\par
479   double kLeaf,kStem,kRoot,kRhizome;\par
480   double newLeaf,newStem,newRhizome,newRoot;\par
481   double newLeaflitter,newStemlitter,newRhizomelitter,newRootlitter;\par
482   double totalmaintenance;\par
483   double RemobilizedFromLitter,RemobilizedFromRhizome;\par
484   double SumofKpart,Dailybalance;\par
485 \par
486 // double getStemSenescence(struct stem *stem, struct littervec *littervec, double criticalTT, double Temp, double remobfa, struct frostParms *frostparms, int N)\par
487  // calculate senescing biomass for today based on Thermal Time, N conce. and Frost conditions \par
488  \par
489    getfrostparms(frostparms);\par
490    getsenescenceparms(senparms);\par
491    \par
492    \par
493    if(emergence ==1)\par
494    \{\par
495           cropcent_dbp(coefs,TherPrds,TherTime, &cropdbp);\par
496           kLeaf = cropdbp.DBP.kLeaf;\par
497           kStem = cropdbp.DBP.kStem;\par
498           kRoot = cropdbp.DBP.kRoot;\par
499           kRhizome = cropdbp.DBP.kRhiz;\par
500 \par
501            // calculate senescence, Remobilization due to senescece will contribute to growth of new plant organs\par
502           deadleaf=getLeafSenescence(&miscanthus->leaf,senparms->leafcriticalT,senparms->leaffr, Temp, frostparms,TherTime,canopyparms);\par
503           deadstem=getStemSenescence(&miscanthus->stem,senparms->stemcriticalT,senparms->stemfr, Temp, frostparms,TherTime);\par
504           deadroot=getRootSenescence(&miscanthus->root, senparms->rootcriticalT,senparms->rootfr, Temp, frostparms,TherTime);\par
505           deadrhiz=getRhizomeSenescence(&miscanthus->rhizome,senparms->rhizomecriticalT,senparms->rhizomefr, Temp, frostparms,TherTime);    \par
506           dailysenesced=deadleaf+deadstem+deadroot+deadrhiz;\par
507           //Calculate how much of dead biomass is remobilized based on a remobilization factor\par
508           RemobilizedFromLitter = dailysenesced*canopyparms->remobFac; // assuming all the dead organs remobilizes same fraction\par
509          \par
510          // Check and calculate whether carbohydrate in Rhizome is being remobilized baksed on K(negative value of partitioning coefficient)\par
511          if(kRhizome>=0)\par
512           \{\par
513             RemobilizedFromRhizome=0;          \par
514           \}\par
515           else\par
516           \{\par
517             // I need to multiply by (-1) because kRhizome is negative\par
518             RemobilizedFromRhizome=(-1)*kRhizome*miscanthus->rhizome.biomass;\par
519           \}\par
520           \par
521           // Total maintenance respiration, which is a temperature dependet function of existing biomass\par
522           totalmaintenance=miscanthus->autoresp.stemmaint+miscanthus->autoresp.rootmaint+miscanthus->autoresp.rhizomemaint;\par
523           // Total assimilate includes net canopy assimilation and remobilization from litter and rhizome, also it must satisfy total maintenance respiration\par
524           totalassimilate=dailynetassim+RemobilizedFromLitter+RemobilizedFromRhizome-totalmaintenance;\par
525           \par
526           // If total assimilate for growth (& growth respiration) is negative then this is provided by rhizome only (storage carb.) leaving other parts intacts\par
527           if(totalassimilate<=0.0)\par
528           \{\par
529           newLeaf=0.0;\par
530           miscanthus->autoresp.stemgrowth=0.0;\par
531           newStem=0.0;\par
532           miscanthus->autoresp.rootgrowth=0.0;\par
533           newRoot=0.0;\par
534           miscanthus->autoresp.rhizomegrowth=0.0;\par
535           // New rhizome must provide for total negative assimilate. Also we need to update remobilization\par
536           newRhizome=totalassimilate+RemobilizedFromRhizome;\par
537           miscanthus->autoresp.rhizomegrowth=0.0;\par
538           \}\par
539           else\par
540           \{\par
541           SumofKpart=((kLeaf>0)?kLeaf:0)+((kStem>0)?kStem:0)+((kRoot>0)?kRoot:0)+((kRhizome>0)?kRhizome:0);\par
542             if(SumofKpart!=1)\par
543             \{\par
544             error("Sum of Positive partitioning coefficient is not one");\par
545             \}\par
546           newLeaf=newbiomass(totalassimilate,kLeaf,0.0);          \par
547           newStem=newbiomass(totalassimilate,kStem,RESP->growth.stem);\par
548           miscanthus->autoresp.stemgrowth=CalculateGrowthResp(newStem,RESP->growth.stem);\par
549           newRoot=newbiomass(totalassimilate,kRoot,RESP->growth.root);\par
550           miscanthus->autoresp.rootgrowth=CalculateGrowthResp(newRoot,RESP->growth.stem);\par
551           // Make sure that remobilization termis taken care of in the calculation of newRhizome\par
552           newRhizome=(kRhizome>0)?newbiomass(totalassimilate,kRhizome,RESP->growth.rhizome):(-1)*RemobilizedFromRhizome;\par
553           \par
554           miscanthus->autoresp.rhizomegrowth=CalculateGrowthResp(newRhizome,RESP->growth.stem);\par
555           \}\par
556            \par
557          // Now we know growth respiration of each component & we can update total autotrophic respiration\par
558           miscanthus->autoresp.total=miscanthus->autoresp.leafdarkresp+totalmaintenance+miscanthus->autoresp.stemgrowth+miscanthus->autoresp.rootgrowth+miscanthus->autoresp.rhizomegrowth;\par
559          // Here, we are updating net primary productivity\par
560          miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
561           \par
562         // Here, we are evaluating new litter, This is fraction of dead biomass which was not remobilized  \par
563           newLeaflitter=(deadleaf>0)?deadleaf*(1-canopyparms->remobFac):0.0;\par
564           newStemlitter=(deadleaf>0)?deadstem*(1-canopyparms->remobFac):0.0;\par
565           newRootlitter=(deadroot>0)?deadroot*(1-canopyparms->remobFac):0.0;\par
566           newRhizomelitter=(deadrhiz>0)?deadrhiz*(1-canopyparms->remobFac):0.0;\par
567           \par
568 \par
569           Dailybalance=newLeaf- deadleaf+newRoot- deadroot+newStem- deadstem+newRhizome- deadrhiz+newLeaflitter+newStemlitter+newRootlitter + newRhizomelitter;\par
570          Dailybalance=Dailybalance-miscanthus->NPP;\par
571          if(Dailybalance>1e-10)\par
572           \{\par
573           Rprintf("\\nNPP and Daily Change inBiomass is not matching & difference is %f\\n", Dailybalance);\par
574           Rprintf("Thermal Time = %f, GPP = %f, Autotrophic Respiration = %f, NPP = %f, Remobilized from Litter = %f, Remobilized from Rhizome = %f \\n", TherTime,miscanthus->GPP, miscanthus->autoresp.total,miscanthus->NPP,RemobilizedFromLitter,RemobilizedFromRhizome);\par
575           Rprintf("kLeaf=%f, kstem=%f, kRoot=%f, kRhizome=%f \\n", kLeaf, kStem, kRoot,kRhizome);\par
576           Rprintf("NewLeaf = %f Dead Leaf=%f, newLeafLitter=%f\\n",newLeaf, deadleaf,newLeaflitter); \par
577           Rprintf("NewStem = %f Dead Stem=%f, newStemLitter=%f\\n",newStem, deadstem,newStemlitter);\par
578           Rprintf("NewRoot = %f Dead Root=%f, newRootLitter=%f\\n",newRoot, deadroot,newRootlitter);\par
579           Rprintf("NewRhizome = %f Dead Rhizome=%f, newRhizomeLitter=%f\\n",newRhizome, deadrhiz,newRhizomelitter);\par
580           Rprintf("LeafDarkResp=%f, Total maintenance (ExceptLeaf) = %f, StemGrowthResp=%f, RootGrowthResp=%f, RhizGrowthResp=%f\\n",miscanthus->autoresp.leafdarkresp,totalmaintenance,miscanthus->autoresp.stemgrowth,miscanthus->autoresp.rootgrowth,miscanthus->autoresp.rhizomegrowth);\par
581               Rprintf("Daily Biomas Balance Gain = %f", Dailybalance);\par
582               Rprintf("--------Emergence= %i-, N= %i---------------------\\n",emergence, N);\par
583           \}\par
584 \par
585           // Adding new biomass of green components\par
586           UpdateStandingbiomass(&miscanthus->leaf.biomass, newLeaf);\par
587           UpdateStandingbiomass(&miscanthus->stem.biomass, newStem);\par
588           UpdateStandingbiomass(&miscanthus->root.biomass, newRoot);\par
589           UpdateStandingbiomass(&miscanthus->rhizome.biomass, newRhizome);\par
590           \par
591           // Subtracting dead biomass from the green components\par
592           // before thant I must multiply all the dead leaf components by -1, so I can still use \par
593           // Updatestandingbiomass function for SUBTRACTING instead of ADDING\par
594           \par
595           deadleaf*=(-1);\par
596           deadstem*=(-1);\par
597           deadroot*=(-1);\par
598           deadrhiz*=(-1);\par
599           \par
600           UpdateStandingbiomass(&miscanthus->leaf.biomass, deadleaf);\par
601           UpdateStandingbiomass(&miscanthus->stem.biomass, deadstem);\par
602           UpdateStandingbiomass(&miscanthus->root.biomass, deadroot);\par
603           UpdateStandingbiomass(&miscanthus->rhizome.biomass, deadrhiz);\par
604           \par
605           \par
606           // Updating standing biomass of litter  components\par
607           UpdateStandingbiomass(&miscanthus->leaf.litter, newLeaflitter);\par
608           UpdateStandingbiomass(&miscanthus->stem.litter, newStemlitter);\par
609           UpdateStandingbiomass(&miscanthus->root.litter, newRootlitter);\par
610           UpdateStandingbiomass(&miscanthus->rhizome.litter, newRhizomelitter);\par
611           \par
612         \par
613           \par
614    \}\par
615    else // Dormant stange simulation, where rhizome provides for respiration loss\par
616    \{\par
617           miscanthus->stem.biomass=0.0;\par
618           miscanthus->autoresp.stemgrowth=0;\par
619           miscanthus->leaf.biomass=0.0;\par
620           miscanthus->autoresp.leafdarkresp=0.0;\par
621           \par
622           //Perhaps I can implement senescence rate of belowground components during dormant stage?\par
623 //          miscanthus->root.biomass=0.0;\par
624           miscanthus->autoresp.rootgrowth=0;\par
625 //          miscanthus->rhizome.biomass=0.0;\par
626           miscanthus->autoresp.rhizomegrowth=0;\par
627           \par
628           totalmaintenance=miscanthus->autoresp.stemmaint+miscanthus->autoresp.rootmaint+miscanthus->autoresp.rhizomemaint;\par
629           miscanthus->autoresp.total=miscanthus->autoresp.leafdarkresp+totalmaintenance+miscanthus->autoresp.stemgrowth+miscanthus->autoresp.rootgrowth+miscanthus->autoresp.rhizomegrowth;\par
630           miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
631           newRhizome=(-1)* miscanthus->autoresp.total;\par
632           UpdateStandingbiomass(&miscanthus->rhizome.biomass, newRhizome);\par
633           if(miscanthus->rhizome.biomass <0)error("rhizome has become negative");\par
634    \} \par
635     return;\par
636 \}\par
}
}
{\xe \v dailymiscanthusupdate\:crocent.h}
{\xe \v crocent.h\:dailymiscanthusupdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailymiscanthusupdate (struct {\b miscanthus} * {\i miscanthus}, struct {\b miscanthus} * {\i deltamiscanthus})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 730 \{\par
731   double toadd,toremove;\par
732   \par
733   toadd=deltamiscanthus->leaf.biomass;\par
734   toremove=deltamiscanthus->leaf.litter;\par
735   updatebiomass(&miscanthus->leaf.biomass,toadd,toremove);\par
736   updatebiomass(&miscanthus->leaf.litter,toremove,0.0);\par
737   \par
738   toadd=deltamiscanthus->stem.biomass;\par
739   toremove=deltamiscanthus->stem.litter;\par
740   updatebiomass(&miscanthus->stem.biomass,toadd,toremove);\par
741   updatebiomass(&miscanthus->stem.litter,toremove,0.0);\par
742   \par
743   toadd=deltamiscanthus->root.biomass;\par
744   toremove=deltamiscanthus->root.litter;\par
745   updatebiomass(&miscanthus->root.biomass,toadd,toremove);\par
746   updatebiomass(&miscanthus->root.litter,toremove,0.0);\par
747   \par
748   toadd=deltamiscanthus->rhizome.biomass;\par
749   toremove=deltamiscanthus->rhizome.litter;\par
750   updatebiomass(&miscanthus->rhizome.biomass,toadd,toremove);\par
751   updatebiomass(&miscanthus->rhizome.litter,toremove,0.0);\par
752    return;\par
753 \}\par
}
}
{\xe \v decomposeCROPCENT\:crocent.h}
{\xe \v crocent.h\:decomposeCROPCENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeCROPCENT (struct {\b cropcentlayer} * {\i CROPCENT}, int {\i woody}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeMETABC1\:crocent.h}
{\xe \v crocent.h\:decomposeMETABC1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeMETABC1 (struct {\b metabc1} * {\i metabc1}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeMETABC2\:crocent.h}
{\xe \v crocent.h\:decomposeMETABC2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeMETABC2 (struct {\b metabc2} * {\i metabc2}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSOM1C1\:crocent.h}
{\xe \v crocent.h\:decomposeSOM1C1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSOM1C1 (struct {\b som1c1} * {\i som1c1}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSOM1C2\:crocent.h}
{\xe \v crocent.h\:decomposeSOM1C2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSOM1C2 (struct {\b som1c2} * {\i som1c2}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSOM2C2\:crocent.h}
{\xe \v crocent.h\:decomposeSOM2C2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSOM2C2 (struct {\b som2c2} * {\i som2c2}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSOM3C\:crocent.h}
{\xe \v crocent.h\:decomposeSOM3C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSOM3C (struct {\b som3c} * {\i som3c}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSTRUCC1\:crocent.h}
{\xe \v crocent.h\:decomposeSTRUCC1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSTRUCC1 (struct {\b strucc1} * {\i strucc1}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeSTRUCC2\:crocent.h}
{\xe \v crocent.h\:decomposeSTRUCC2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeSTRUCC2 (struct {\b strucc2} * {\i strucc2}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeWOOD1\:crocent.h}
{\xe \v crocent.h\:decomposeWOOD1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeWOOD1 (struct {\b wood1} * {\i wood1}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeWOOD2\:crocent.h}
{\xe \v crocent.h\:decomposeWOOD2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeWOOD2 (struct {\b wood2} * {\i wood2}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decomposeWOOD3\:crocent.h}
{\xe \v crocent.h\:decomposeWOOD3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decomposeWOOD3 (struct {\b wood3} * {\i wood3}, struct {\b cropcentEnvironment} * {\i ENV}, int {\i flag}, int {\i Eflag})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetAnerbFac\:crocent.h}
{\xe \v crocent.h\:GetAnerbFac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GetAnerbFac (struct {\b AnaerobicParms} * {\i ANEREFF}, double {\i PET}, double {\i AWC}, double {\i drainage})}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetBioCroToCropcentParms\:crocent.h}
{\xe \v crocent.h\:GetBioCroToCropcentParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetBioCroToCropcentParms (struct {\b BioCroToCropcentParms} * {\i temp}, double * {\i getbiocrotocropcentparmsfromR})}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 674                                                                                                          \{\par
675   \par
676   temp->structometaSLOPE=-0.013;\par
677   temp->structometaINTERCEP=0.85;\par
678   temp->surfacedamrN=0.0;\par
679   temp->surfacedamrP=0.0;\par
680   temp->surfacedamrS=0.01;\par
681   temp->surfacedamrK=0.0;\par
682   temp->soildamrN=0.02;\par
683   temp->soildamrP=0.02;\par
684   temp->soildamrS=0.04;\par
685   temp->soildamrK=0.0;\par
686   temp->mindamrN=15.0;\par
687   temp->mindamrP=150.0;\par
688   temp->mindamrS=150.0;\par
689   temp->mindamrK=0.0;\par
690   temp->pabres=100;\par
691   return;\par
692 \}}
}
{\xe \v GetC13Parms\:crocent.h}
{\xe \v crocent.h\:GetC13Parms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetC13Parms (struct {\b C13Parms} * {\i temp}, double * {\i getc13parmsfromR})}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 645 \{ \par
646   temp->DRESP=0.999; \par
647   temp->DLIGDF=-4.0;\par
648   return;\par
649 \}\par
}
}
{\xe \v GetCropCentStateVar\:crocent.h}
{\xe \v crocent.h\:GetCropCentStateVar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetCropCentStateVar (struct {\b cropcentEnvironment} * {\i ENV}, double * {\i getcropcentstatevarfromR})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448                                                                                            \{\par
449   \par
450   ENV->minN=1e-6;\par
451   ENV->minP=5.0;\par
452   ENV->minS=5.0;\par
453   ENV->minK=5.0;\par
454   ENV->surfaceTEMP=25.0;\par
455   ENV->soilTEMP=25.0;\par
456   ENV->surfaceRELWC=0.3;\par
457   ENV->soilRELWC=0.3;\par
458   ENV->leachedWATER=0.0;\par
459   ENV->PET=0.8;\par
460   ENV->AWC=0.8;\par
461   ENV->soilrad=100.0; // check unit for this variable\par
462   ENV->pH=7.0;\par
463   ENV->drainage=0.5;\par
464   /***************************/\par
465   if(ENV->minN <1e-6) ENV->minN=1e-6;\par
466   /*****************************/\par
467   return;\par
468 \}\par
}
}
{\xe \v getdailyclimate\:crocent.h}
{\xe \v crocent.h\:getdailyclimate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getdailyclimate (struct {\b dailyclimate} * {\i dailyclimate}, int * {\i doy}, double * {\i solar}, double * {\i temp}, double * {\i rh}, double * {\i windspeed}, double * {\i precip}, int {\i currenthour}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 688 \{\par
689   //For the first hour after planting\par
690   int i,indx;\par
691   if ((currenthour==0)||(currenthour==vecsize))\par
692       \{\par
693          dailyclimate->doy=*(doy+currenthour);\par
694          dailyclimate->solar=*(solar+currenthour);\par
695          dailyclimate->temp=*(temp+currenthour);\par
696          dailyclimate->rh=*(rh+currenthour);\par
697          dailyclimate->windspeed=*(windspeed+currenthour);\par
698          dailyclimate->precip=*(precip+currenthour);\par
699          dailyclimate->minimumTemp=*(temp+currenthour);\par
700       \}\par
701    else\par
702       \{\par
703         dailyclimate->solar=0.0;\par
704         dailyclimate->temp=0.0;\par
705         dailyclimate->minimumTemp=*(temp+currenthour);\par
706         dailyclimate->rh=0.0;\par
707         dailyclimate->windspeed=0.0;\par
708         dailyclimate->precip=0.0;\par
709           for(i=1;i<=24;i++)\par
710             \{\par
711               indx = currenthour-i+1;      \par
712               dailyclimate->solar+=*(solar+indx);\par
713               dailyclimate->temp+=*(temp+indx);\par
714               dailyclimate->rh+=*(rh+indx);\par
715               dailyclimate->windspeed+=*(windspeed+indx);\par
716               dailyclimate->precip+=*(precip+indx);\par
717               dailyclimate->minimumTemp=(dailyclimate->minimumTemp>(*(temp+indx)))?(*(temp+indx)):dailyclimate->minimumTemp;\par
718             \}\par
719             dailyclimate->solar=dailyclimate->solar/24.0;\par
720             dailyclimate->temp=dailyclimate->temp/24.0;\par
721             dailyclimate->rh=dailyclimate->rh/24.0;\par
722             dailyclimate->windspeed= dailyclimate->windspeed/24.0;\par
723             dailyclimate->doy=*(doy+currenthour);\par
724       \}\par
725      return;     \par
726 \}\par
}
}
{\xe \v Getdefac\:crocent.h}
{\xe \v crocent.h\:Getdefac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Getdefac (struct {\b TempEffectParms} * {\i Temp}, struct {\b SoilWaterEffectParms} * {\i swc}, double {\i RELWC}, double {\i TEMP})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetErosionParms\:crocent.h}
{\xe \v crocent.h\:GetErosionParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetErosionParms (struct {\b ErosionParms} * {\i temp}, double * {\i geterosionparmsfromR})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 651                                                                             \{\par
652   \par
653   temp->LHZF[0]=0.2; \par
654   temp->LHZF[1]=0.4;\par
655   temp->LHZF[2]=0.8;\par
656   temp->EDEPTH=0.2; \par
657   temp->ENRICH=2.0;\par
658   return;\par
659 \}\par
}
}
{\xe \v getfrostparms\:crocent.h}
{\xe \v crocent.h\:getfrostparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getfrostparms (struct {\b frostParms} * {\i frostparms})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 431 \{\par
432    frostparms->leafT0=0.0;\par
433    frostparms->leafT100=-5.0;\par
434    frostparms->stemT0=0.0;\par
435    frostparms->stemT100=-10.0;\par
436    frostparms->rootT0=-200.0;\par
437    frostparms->rootT100=-200.0;\par
438    frostparms->rhizomeT0=-200.0;\par
439    frostparms->rhizomeT100=-200.0;\par
440    return;\par
441 \}\par
}
}
{\xe \v GetInFlowCERatio\:crocent.h}
{\xe \v crocent.h\:GetInFlowCERatio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetInFlowCERatio (struct {\b flowrestriction} * {\i INFLOWRESTRICT}, struct {\b minerals} * {\i output}, struct {\b cropcentEnvironment} * {\i ENV})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 583                                                                                                                        \{\par
584   /****************************************\par
585    * Purpose:\par
586    * This function calculates CE ratio of the flow structure flow nased on cropcent environment and restriction critera\par
587    * Input\par
588    * cropcent Environment ENV\par
589    * flow restriction criteria input\par
590    * OUTPUT\par
591    * flow structure output\par
592    * **************************************/\par
593    double temp;\par
594 \par
595         if(ENV->minN <= 0.0) // when mineral N is too low in the crocent environment\par
596         \{\par
597           output->CN=INFLOWRESTRICT->maxCN;\par
598         \}\par
599         if((ENV->minN > 0.0)&&(ENV->minN < INFLOWRESTRICT->minN)) // when mineral N is sufficient but lower than required to obtain MINIMUM CN ratio of flow\par
600         \{\par
601           temp=(1.0-ENV->minN)/INFLOWRESTRICT->minN;\par
602           output->CN=temp*(INFLOWRESTRICT->maxCN-INFLOWRESTRICT->minCN)+INFLOWRESTRICT->minCN;\par
603         \}\par
604         if(ENV->minN >= INFLOWRESTRICT->minN)// when mineral N of crocent environment is greater than what is required for min CN ratio of INFLOWRESTRICT\par
605         \{\par
606           output->CN=INFLOWRESTRICT->minCN;\par
607         \}\par
608   return;\par
609 \}\par
}
}
{\xe \v GetLeachate\:crocent.h}
{\xe \v crocent.h\:GetLeachate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b flow} GetLeachate (double {\i tcflow}, struct {\b minerals} * {\i E}, double {\i leachedWATER}, double {\i sand}, struct {\b OrgLeachParms} * {\i temp})}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getLeafSenescence\:crocent.h}
{\xe \v crocent.h\:getLeafSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getLeafSenescence (struct {\b leaf} * {\i leaf}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT}, struct {\b canopyparms} * {\i canopyparm})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 299 \{\par
300   /******************************************************\par
301    * Purpose:\par
302    * This function calculates Leaf Senescence\par
303    * \par
304    * Input Arguments:\par
305    * stem : is a pointer to stem structure\par
306    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
307    * Temp: minimum daily temperature\par
308    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
309    * TT: is current [daily] value of accumutaed thermal time\par
310    * \par
311    * Output/Returns\par
312    * Biomass  to be semesced due to aging (thermal time) and frost, together\par
313    * ****************************************************/\par
314   double ttsen, frostsen, Nsen;\par
315   double totalsen;\par
316   Nsen=0.0;\par
317   ttsen=getThermalSenescence(criticalTT,TT,leaf->biomass,senefraction);\par
318 //  Rprintf("TSEN=%f,critcalT=%f, TT=%f, biomass=%f, senfraction=%f \\n",ttsen,criticalTT, TT,leaf->biomass,senefraction);\par
319   frostsen=getFrostdamage(frostparms->leafT0,frostparms->leafT100, Temp,leaf->biomass);\par
320   // Nsen=canopyNsenescence(leaf, canopyparm->SLA, canopyparm->kN,canopyparm->leafNsen);\par
321   totalsen=ttsen+frostsen+Nsen;\par
322   totalsen= (totalsen>(leaf->biomass))?(leaf->biomass):totalsen;\par
323   return(totalsen);\par
324 \}\par
}
}
{\xe \v GetMDR\:crocent.h}
{\xe \v crocent.h\:GetMDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GetMDR (double {\i a}, double {\i b}, double {\i x1}, double {\i x2}, double {\i soilrad})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetMTI\:crocent.h}
{\xe \v crocent.h\:GetMTI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GetMTI (double {\i a}, double {\i b}, double {\i x1}, double {\i x2}, double {\i soilrad})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GetPHfac\:crocent.h}
{\xe \v crocent.h\:GetPHfac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double GetPHfac (struct {\b PHParms} * {\i PHEFF}, double {\i pH})}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getRhizomeSenescence\:crocent.h}
{\xe \v crocent.h\:getRhizomeSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getRhizomeSenescence (struct {\b rhizome} * {\i rhizome}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 379 \{\par
380   /******************************************************\par
381    * Purpose:\par
382    * This function calculates Root Senescence\par
383    * \par
384    * Input Arguments:\par
385    * stem : is a pointer to stem structure\par
386    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
387    * Temp: minimum daily temperature\par
388    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
389    * TT: is current [daily] value of accumutaed thermal time\par
390    * \par
391    * Output/Returns\par
392    * Biomass  to be senesced due to aging (thermal time) and frost, together\par
393    * ****************************************************/\par
394   double ttsen, frostsen;\par
395   double totalsen;\par
396   frostsen=0.0;\par
397   ttsen=getThermalSenescence(criticalTT,TT,rhizome->biomass,senefracion);\par
398   frostsen=getFrostdamage(frostparms->rhizomeT0, frostparms->rhizomeT100, Temp,rhizome->biomass);\par
399   totalsen=ttsen+frostsen;\par
400   totalsen= (totalsen>(rhizome->biomass))?(rhizome->biomass):totalsen;\par
401   return(totalsen);\par
402 \}\par
}
}
{\xe \v getRootSenescence\:crocent.h}
{\xe \v crocent.h\:getRootSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getRootSenescence (struct {\b root} * {\i root}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353 \{\par
354   /******************************************************\par
355    * Purpose:\par
356    * This function calculates Root Senescence\par
357    * \par
358    * Input Arguments:\par
359    * stem : is a pointer to stem structure\par
360    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
361    * Temp: minimum daily temperature\par
362    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
363    * TT: is current [daily] value of accumutaed thermal time\par
364    * \par
365    * Output/Returns\par
366    * Biomassto be semesced due to aging (thermal time) and frost, together\par
367    * ****************************************************/\par
368   double ttsen, frostsen;\par
369   double totalsen;\par
370   frostsen=0.0;\par
371   ttsen=getThermalSenescence(criticalTT,TT,root->biomass,senefracion);\par
372   frostsen=getFrostdamage(frostparms->rootT0, frostparms->rootT100, Temp,root->biomass);\par
373   totalsen=ttsen+frostsen;\par
374   totalsen= (totalsen>(root->biomass))?(root->biomass):totalsen;\par
375   return(totalsen);\par
376 \}\par
}
}
{\xe \v getsenescenceparms\:crocent.h}
{\xe \v crocent.h\:getsenescenceparms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getsenescenceparms (struct {\b senthermaltemp} * {\i senparms})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 443 \{\par
444     senparms->leafcriticalT = 3600;\par
445     senparms->leaffr=0.05;\par
446     senparms->stemcriticalT = 3600;\par
447     senparms->stemfr=0.02;\par
448     senparms->rootcriticalT = 3600;\par
449     senparms->rootfr=0.05;\par
450     senparms->rhizomecriticalT = 3600;\par
451     senparms->rhizomefr=0.001;\par
452   return;\par
453 \}\par
}
}
{\xe \v GetSoilTexture\:crocent.h}
{\xe \v crocent.h\:GetSoilTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetSoilTexture (struct {\b SoilTexture} * {\i temp}, double * {\i getsoiltexturefromR})}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 661                                                                            \{\par
662 /**************************************************************************\par
663 //  I am chaning it back to constant value to avoid error now as ther eis not pointer passed from R for now\par
664   temp->sand=*getsoiltexturefromR;\par
665   temp->silt=*(getsoiltexturefromR+1);\par
666   temp->clay=*(getsoiltexturefromR+2);\par
667   *************************************************************************/\par
668   temp->sand=0.33;\par
669   temp->silt=0.33;\par
670   temp->clay=0.34;\par
671   return;\par
672 \}\par
}
}
{\xe \v getStemSenescence\:crocent.h}
{\xe \v crocent.h\:getStemSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getStemSenescence (struct {\b stem} * {\i stem}, double {\i criticalTT}, double {\i senefracion}, double {\i Temp}, struct {\b frostParms} * {\i frostparms}, double {\i TT})}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327 \{\par
328   /******************************************************\par
329    * Purpose:\par
330    * This function calculates Stem Senescence\par
331    * \par
332    * Input Arguments:\par
333    * stem : is a pointer to stem structure\par
334    * criticalTT: is critical value of accumulated thermal time where senesence begins\par
335    * Temp: minimum daily temperature\par
336    * frostparms: is a pointer to structure containing parameters to somulate damage due to frost\par
337    * TT: is current [daily] value of accumutaed thermal time\par
338    * \par
339    * Output/Returns\par
340    * Biomass to be semesced due to aging (thermal time) and frost, together\par
341    * ****************************************************/\par
342   double ttsen, frostsen;\par
343   double totalsen;\par
344   frostsen=0.0;\par
345   ttsen=getThermalSenescence(criticalTT,TT,stem->biomass,senefracion);\par
346   frostsen=getFrostdamage(frostparms->stemT0, frostparms->stemT100, Temp,stem->biomass);\par
347   totalsen=ttsen+frostsen;\par
348   totalsen= (totalsen>(stem->biomass))?(stem->biomass):totalsen;\par
349   return(totalsen);\par
350 \}\par
}
}
{\xe \v GetSymbNFixationParms\:crocent.h}
{\xe \v crocent.h\:GetSymbNFixationParms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void GetSymbNFixationParms (struct {\b SymbNFixationParms} * {\i temp}, double * {\i getsymbnfixationparmsfromR})}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 621 \{//Rprintf("%f, %f, %f \\n", *getsymbnfixationparmsfromR,*(getsymbnfixationparmsfromR+1),*(getsymbnfixationparmsfromR+2));\par
622   temp->FXMCA=-0.125;\par
623   temp->FXMCB=0.005;\par
624   temp->FXMXS=0.35;\par
625   temp->FXNPB=7.0;\par
626   temp->NSNFIX=0;\par
627   temp->NTSPM=4.0;\par
628   return;\par
629 \}\par
}
}
{\xe \v getThermalSenescence\:crocent.h}
{\xe \v crocent.h\:getThermalSenescence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getThermalSenescence (double {\i criticalTT}, double {\i currentTT}, double {\i biomass}, double {\i dailyfractionalloss})}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214 \{\par
215   /*************************************\par
216    * Purpose\par
217    * To calculate senescence as a constant fraction of exisiting biomass after a critical threshold temperature\par
218    * Input:\par
219    * criticalTT: This is critical Thermal temperature, beyond which senescence begins\par
220    * currentTT: Current thermal TT or phenological stage\par
221    * biomass: Exisiting biomass\par
222    * dailyfractionalloss: Fraction of biomass which will be lost\par
223    * Output:\par
224    * \par
225    * Returns senesced biomass\par
226    * \par
227    * **********************************/\par
228    double tmp;\par
229   if(currentTT <= criticalTT)\par
230   \{\par
231    tmp=0.0;\par
232   \}\par
233   else\par
234   \{\par
235    tmp=biomass*dailyfractionalloss;\par
236   \}\par
237   return(tmp);\par
238 \}\par
}
}
{\xe \v getThermaltime\:crocent.h}
{\xe \v crocent.h\:getThermaltime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double getThermaltime (double {\i temp}, double {\i Tbase})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 206 \{\par
207   double res;\par
208   res =(temp<=Tbase)? 0.0:(temp-Tbase);\par
209   return(res);\par
210 \}\par
}
}
{\xe \v line\:crocent.h}
{\xe \v crocent.h\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double line (double {\i x}, double {\i x1}, double {\i y1}, double {\i x2}, double {\i y2})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v newbiomass\:crocent.h}
{\xe \v crocent.h\:newbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double newbiomass (double {\i AcanopyNet}, double {\i k}, double {\i GrowthRespCoeff})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 423 \{\par
424   double tmp;\par
425   \par
426   tmp=(k>=0.0)?AcanopyNet*k/(1+GrowthRespCoeff):0.0;\par
427   return(tmp);\par
428 \}\par
}
}
{\xe \v printcropcentout\:crocent.h}
{\xe \v crocent.h\:printcropcentout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printcropcentout (struct {\b cropcentlayer} {\i CROPCENT}, double * {\i totalSOC}, double * {\i strucc1}, double * {\i strucc2}, double * {\i metabc1}, double * {\i metabc2}, double * {\i som1c1}, double * {\i som1c2}, double * {\i som2c1}, double * {\i som2c2}, double * {\i som3c}, double * {\i minN})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                                                     \{\par
9   double cbalance;\par
10   \par
11   *totalSOC = CROPCENT.strucc1.C.totalC +CROPCENT.strucc2.C.totalC+CROPCENT.metabc1.C.totalC+CROPCENT.metabc2.C.totalC\par
12               +CROPCENT.som1c1.C.totalC+CROPCENT.som1c2.C.totalC + CROPCENT.som2c1.C.totalC+CROPCENT.som2c2.C.totalC\par
13               +CROPCENT.som3c.C.totalC;\par
14               \par
15       *strucc1 = CROPCENT.strucc1.C.totalC;\par
16       *strucc2 = CROPCENT.strucc2.C.totalC;\par
17       *metabc1 = CROPCENT.metabc1.C.totalC;\par
18       *metabc2 = CROPCENT.metabc2.C.totalC;\par
19       *som1c1 = CROPCENT.som1c1.C.totalC;\par
20       *som1c2 = CROPCENT.som1c2.C.totalC;\par
21        *som2c1 = CROPCENT.som2c1.C.totalC;\par
22       *som2c2 = CROPCENT.som2c2.C.totalC;\par
23        *som3c = CROPCENT.som3c.C.totalC;\par
24        *minN=CROPCENT.ENV.minN;\par
25      \par
26               \par
27   /*\par
28   Rprintf("SOM1c1\\n");\par
29   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som1c1.Flux.hetresp);\par
30   cbalance=CROPCENT.som1c1.Flux.som1c1TOsom1c1.C.totalC+CROPCENT.som1c1.Flux.som1c1TOsom2c1.C.totalC+CROPCENT.som1c1.Flux.hetresp;\par
31   Rprintf("Cbalance=%f\\n",cbalance);\par
32   \par
33   Rprintf("SOM1c2\\n");\par
34   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som1c2.Flux.hetresp);\par
35    cbalance=CROPCENT.som1c2.Flux.som1c2TOsom1c2.C.totalC+CROPCENT.som1c2.Flux.som1c2TOsom2c2.C.totalC+CROPCENT.som1c2.Flux.hetresp\par
36   +CROPCENT.som1c2.Flux.som1c2TOsom3c.C.totalC+CROPCENT.som1c2.Flux.som1c2TOleachate.C.totalC;\par
37   Rprintf("Cbalance=%f\\n",cbalance);\par
38   Rprintf("leachate Losses = %f\\n",CROPCENT.som1c2.Flux.som1c2TOleachate.C.totalC);\par
39   Rprintf("leachate CN = %f, som1c2 CN= %f\\n",CROPCENT.som1c2.Flux.som1c2TOleachate.E.CP,CROPCENT.som1c2.E.CP);\par
40   \par
41   Rprintf("SOM2c1\\n");\par
42   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som2c1.Flux.hetresp);\par
43   cbalance=CROPCENT.som2c1.Flux.som2c1TOsom2c1.C.totalC+CROPCENT.som2c1.Flux.som2c1TOsom1c1.C.totalC+CROPCENT.som2c1.Flux.hetresp\par
44   +CROPCENT.som2c1.Flux.som2c1TOsom2c2.C.totalC;\par
45   Rprintf("Cbalance=%f\\n",cbalance);\par
46   \par
47   \par
48   Rprintf("SOM2c2\\n");\par
49   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som2c2.Flux.hetresp);\par
50   cbalance=CROPCENT.som3c.Flux.som3cTOsom3c.C.totalC+CROPCENT.som3c.Flux.som3cTOsom1c2.C.totalC+CROPCENT.som3c.Flux.hetresp;\par
51   Rprintf("Cbalance=%f\\n",cbalance);\par
52   \par
53   \par
54   Rprintf("SOM3c\\n");\par
55   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som3c.Flux.hetresp);\par
56   cbalance=CROPCENT.som3c.Flux.som3cTOsom3c.C.totalC+CROPCENT.som3c.Flux.som3cTOsom1c2.C.totalC+CROPCENT.som3c.Flux.hetresp;\par
57   Rprintf("Cbalance=%f\\n",cbalance);\par
58   \par
59   \par
60    //  Printing wood1\par
61     Rprintf("WOOD1\\n");\par
62   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.wood1.Flux.hetresp);\par
63   Rprintf("wood1TOSOM1C1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOsom1c1.C.totalC);\par
64   Rprintf("wood1TOSOM2C1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOsom2c1.C.totalC);\par
65   Rprintf("wood1TOwood1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOwood1.C.totalC);\par
66   \par
67   cbalance=CROPCENT.wood1.Flux.wood1TOwood1.C.totalC+CROPCENT.wood1.Flux.wood1TOsom2c1.C.totalC\par
68   +CROPCENT.wood1.Flux.wood1TOsom1c1.C.totalC+CROPCENT.wood1.Flux.hetresp;\par
69   \par
70   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
71   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
72   \par
73   Rprintf("wood1TOSOM1C2, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOsom1c1.E.CN);\par
74   Rprintf("wood1TOSOM2C2, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOsom2c1.E.CN);\par
75   Rprintf("wood1TOwood1, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOwood1.E.CN);\par
76   \par
77  Rprintf("METABC2\\n");\par
78   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.metabc2.Flux.hetresp);\par
79   Rprintf("METABC2TOSOM1C2, totalC=%f \\n",CROPCENT.metabc2.Flux.metabc2TOsom1c2.C.totalC);\par
80   Rprintf("METABC2TOMETABC2, totalC=%f \\n",CROPCENT.metabc2.Flux.metabc2TOmetabc2.C.totalC);\par
81   \par
82   cbalance=CROPCENT.metabc2.Flux.metabc2TOmetabc2.C.totalC+CROPCENT.metabc2.Flux.metabc2TOsom1c2.C.totalC\par
83   +CROPCENT.metabc2.Flux.hetresp;\par
84   Rprintf("Flux Balance of metabc2=%f\\n",cbalance);\par
85   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
86   Rprintf("METABC2TOMETABC2, CN=%f \\n",CROPCENT.metabc2.Flux.metabc2TOmetabc2.E.CN);\par
87   Rprintf("METABC2TOSOM1C2, CN=%f \\n",CROPCENT.metabc2.Flux.metabc2TOsom1c2.E.CN);\par
88 \par
89   \par
90  Rprintf("METABC1\\n");\par
91   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.metabc1.Flux.hetresp);\par
92   Rprintf("METABC1TOSOM1C1, totalC=%f \\n",CROPCENT.metabc1.Flux.metabc1TOsom1c1.C.totalC);\par
93   Rprintf("METABC1TOMETABC1, totalC=%f \\n",CROPCENT.metabc1.Flux.metabc1TOmetabc1.C.totalC);\par
94   \par
95   cbalance=CROPCENT.metabc1.Flux.metabc1TOmetabc1.C.totalC+CROPCENT.metabc1.Flux.metabc1TOsom1c1.C.totalC\par
96   +CROPCENT.metabc1.Flux.hetresp;\par
97   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
98 \par
99   \par
100   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
101   \par
102   Rprintf("METABC1TOMETABC1, CN=%f \\n",CROPCENT.metabc1.Flux.metabc1TOmetabc1.E.CN);\par
103   Rprintf("METABC1TOSOM1C1, CN=%f \\n",CROPCENT.metabc1.Flux.metabc1TOsom1c1.E.CN);\par
104 \par
105   //  Printing strucc2\par
106   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.strucc2.Flux.hetresp);\par
107   Rprintf("STRUCC2TOSOM1C2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom1c2.C.totalC);\par
108   Rprintf("STRUCC2TOSOM2C2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom2c2.C.totalC);\par
109   Rprintf("STRUCC2TOSTRUCC2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOstrucc2.C.totalC);\par
110   \par
111   cbalance=CROPCENT.strucc2.Flux.strucc2TOstrucc2.C.totalC+CROPCENT.strucc2.Flux.strucc2TOsom2c2.C.totalC\par
112   +CROPCENT.strucc2.Flux.strucc2TOsom1c2.C.totalC+CROPCENT.strucc2.Flux.hetresp;\par
113   \par
114   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
115   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
116   \par
117   Rprintf("STRUCC2TOSOM1C2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom1c2.E.CN);\par
118   Rprintf("STRUCC2TOSOM2C2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom2c2.E.CN);\par
119   Rprintf("STRUCC2TOSTRUCC2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOstrucc2.E.CN);\par
120 */\par
121  // Printing STRUCC1\par
122  /*\par
123    Rprintf("C Pool = %f\\n", CROPCENT.strucc1.C.totalC);\par
124    Rprintf("C Pool unlablto labl Ratio= %f \\n", CROPCENT.strucc1.C.unlablTOlabl);\par
125   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.strucc1.Flux.hetresp);\par
126   Rprintf("STRUCC1TOMETABC1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOmetabc1.C.totalC);\par
127   Rprintf("STRUCC1TOSOM1C1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom1c1.C.totalC);\par
128   Rprintf("STRUCC1TOSOM2C1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom2c1.C.totalC);\par
129   Rprintf("STRUCC1TOSTRUCC1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOstrucc1.C.totalC);\par
130   \par
131   cbalance=CROPCENT.strucc1.Flux.strucc1TOstrucc1.C.totalC+CROPCENT.strucc1.Flux.strucc1TOsom2c1.C.totalC\par
132   +CROPCENT.strucc1.Flux.strucc1TOsom1c1.C.totalC+CROPCENT.strucc1.Flux.strucc1TOmetabc1.C.totalC\par
133   +CROPCENT.strucc1.Flux.hetresp;\par
134   \par
135   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
136   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
137   \par
138   Rprintf("STRUCC1TOMETABC1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOmetabc1.E.CN);\par
139   Rprintf("STRUCC1TOSOM1C1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom1c1.E.CN);\par
140   Rprintf("STRUCC1TOSOM2C1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom2c1.E.CN);\par
141   Rprintf("STRUCC1TOSTRUCC1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOstrucc1.E.CN);\par
142   */\par
143   return;\par
144   \}}
}
{\xe \v replaceMineralStruct\:crocent.h}
{\xe \v crocent.h\:replaceMineralStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void replaceMineralStruct (struct {\b minerals} * {\i FROM}, struct {\b minerals} * {\i TO})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 611 \{\par
612   TO->CN=FROM->CN;\par
613   TO->CP=FROM->CP;\par
614   TO->CS=FROM->CS;\par
615   TO->CK=FROM->CK;\par
616   return;\par
617 \}\par
}
}
{\xe \v timescaling\:crocent.h}
{\xe \v crocent.h\:timescaling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double timescaling (double {\i k}, double {\i t})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateafteremergence\:crocent.h}
{\xe \v crocent.h\:updateafteremergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateafteremergence (struct {\b miscanthus} * {\i miscanthus}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42 \{\par
43   miscanthus->leaf.biomass=(management->emergenceparms.StoragetoLeaffraction)* miscanthus->rhizome.biomass;\par
44   miscanthus->rhizome.biomass= miscanthus->rhizome.biomass - miscanthus->leaf.biomass;\par
45   return;\par
46 \}}
}
{\xe \v updateafterharvest\:crocent.h}
{\xe \v crocent.h\:updateafterharvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateafterharvest (struct {\b miscanthus} * {\i miscanthus}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26 \{\par
27   miscanthus->leaf.biomass=(1-management->harvestparms.frleaf)*miscanthus->leaf.biomass;\par
28   miscanthus->leaf.litter=(1-management->harvestparms.frleaflitter)*miscanthus->leaf.litter;\par
29   \par
30   miscanthus->stem.biomass=(1-management->harvestparms.frstem)*miscanthus->stem.biomass;\par
31   miscanthus->stem.litter=(1-management->harvestparms.frstemlitter)*miscanthus->stem.litter;\par
32   \par
33   miscanthus->root.biomass=(1-management->harvestparms.frdeadroot)*miscanthus->root.biomass;\par
34   miscanthus->root.litter=management->harvestparms.frdeadroot*miscanthus->root.biomass;\par
35   \par
36   miscanthus->rhizome.biomass=(1-management->harvestparms.frdeadrhizome)*miscanthus->rhizome.biomass;\par
37   miscanthus->rhizome.litter=management->harvestparms.frdeadrhizome*miscanthus->rhizome.biomass;\par
38   return;\par
39 \}\par
}
}
{\xe \v updatebiomass\:crocent.h}
{\xe \v crocent.h\:updatebiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatebiomass (double * {\i res}, double {\i toadd}, double {\i toremove})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 417 \{\par
418   *res=*res+toadd-toremove;\par
419   return;\par
420 \}\par
}
}
{\xe \v UpdateC3treeAfterEmergence\:crocent.h}
{\xe \v crocent.h\:UpdateC3treeAfterEmergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateC3treeAfterEmergence (struct {\b c3tree} * {\i willow}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13   willow->leaf.biomass=(management->emergenceparms.StoragetoLeaffraction)* willow->rhizome.biomass +\par
14                       (management->emergenceparms.StemtoLeaffraction)* willow->stem.biomass;\par
15   willow->rhizome.biomass= (1-management->emergenceparms.StoragetoLeaffraction)*willow->rhizome.biomass;\par
16   willow->stem.biomass=(1-management->emergenceparms.StemtoLeaffraction)* willow->stem.biomass;\par
17   return;\par
18 \}\par
}
}
{\xe \v updateCarbonStructure\:crocent.h}
{\xe \v crocent.h\:updateCarbonStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateCarbonStructure (struct {\b carbon} * {\i toupdateC}, struct {\b carbon} {\i flow})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateCEafterleachate\:crocent.h}
{\xe \v crocent.h\:updateCEafterleachate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateCEafterleachate (struct {\b som1c2} * {\i som1c2})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updatecropcentpools\:crocent.h}
{\xe \v crocent.h\:updatecropcentpools}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatecropcentpools (struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9   double delN, delP, delS,delK;\par
10   double out, in;\par
11   \par
12   delN=0.0;\par
13   delP=0.0;\par
14   delS=0.0;\par
15   delK=0.0;\par
16   CROPCENT->ENV.newminN=0.0;\par
17   CROPCENT->ENV.newminP=0.0;\par
18   CROPCENT->ENV.newminS=0.0;\par
19   CROPCENT->ENV.newminK=0.0;\par
20   \par
21   // updating strucc1 flux [only source is self-negative outflow]\par
22   // step 1: chnage in mineral N of CropCENT layer due to flow from strucc1\par
23   out=(CROPCENT->strucc1.Flux.strucc1TOstrucc1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOstrucc1.E.CN); // This is always negative\par
24   in=(CROPCENT->strucc1.Flux.strucc1TOmetabc1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOmetabc1.E.CN)\par
25       +(CROPCENT->strucc1.Flux.strucc1TOsom1c1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOsom1c1.E.CN)\par
26       +(CROPCENT->strucc1.Flux.strucc1TOsom2c1.C.totalC)/(CROPCENT->strucc1.Flux.strucc1TOsom2c1.E.CN); // This is always positive\par
27   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
28   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
29   CROPCENT->ENV.newminN+=delN;\par
30   // now update CN ratioi snot required as all outflow CE ratio is same as of source pool\par
31   // finally update C structure of the pool\par
32   updateCarbonStructure(&CROPCENT->strucc1.C, CROPCENT->strucc1.Flux.strucc1TOstrucc1.C);\par
33   updateCarbonStructure(&CROPCENT->metabc1.C, CROPCENT->strucc1.Flux.strucc1TOmetabc1.C);\par
34   updateMineralStructure(&CROPCENT->metabc1.C, &CROPCENT->metabc1.E, CROPCENT->strucc1.Flux.strucc1TOmetabc1.C, CROPCENT->strucc1.Flux.strucc1TOmetabc1.E);\par
35   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->strucc1.Flux.strucc1TOsom1c1.C);\par
36   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->strucc1.Flux.strucc1TOsom1c1.C, CROPCENT->strucc1.Flux.strucc1TOsom1c1.E);\par
37   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->strucc1.Flux.strucc1TOsom2c1.C);\par
38   updateMineralStructure(&CROPCENT->som2c1.C, &CROPCENT->som2c1.E, CROPCENT->strucc1.Flux.strucc1TOsom2c1.C, CROPCENT->strucc1.Flux.strucc1TOsom2c1.E);\par
39 \par
40   // updating strucc2 flux [ only source is self-negative outflow]\par
41   out=(CROPCENT->strucc2.Flux.strucc2TOstrucc2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOstrucc2.E.CN); // This is always negative\par
42   in= (CROPCENT->strucc2.Flux.strucc2TOsom1c2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOsom1c2.E.CN)\par
43       +(CROPCENT->strucc2.Flux.strucc2TOsom2c2.C.totalC)/(CROPCENT->strucc2.Flux.strucc2TOsom2c2.E.CN); // This is always positive\par
44   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
45   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
46   CROPCENT->ENV.newminN+=delN;\par
47   // now update CN ratio, which does not change because outflow CE is same as CE of pool. Only CE ratio of receiving flux changes\par
48   // finally update C structure of the pool\par
49   updateCarbonStructure(&CROPCENT->strucc2.C, CROPCENT->strucc2.Flux.strucc2TOstrucc2.C);\par
50   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->strucc2.Flux.strucc2TOsom1c2.C);\par
51   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->strucc2.Flux.strucc2TOsom1c2.C, CROPCENT->strucc2.Flux.strucc2TOsom1c2.E);\par
52   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->strucc2.Flux.strucc2TOsom2c2.C);\par
53   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->strucc2.Flux.strucc2TOsom2c2.C, CROPCENT->strucc2.Flux.strucc2TOsom2c2.E);\par
54   \par
55   // updating metabc1 flux [source is self -negative outflow and from strucc1]\par
56   out=(CROPCENT->metabc1.Flux.metabc1TOmetabc1.C.totalC)/(CROPCENT->metabc1.Flux.metabc1TOmetabc1.E.CN); \par
57   in=(CROPCENT->metabc1.Flux.metabc1TOsom1c1.C.totalC)/(CROPCENT->metabc1.Flux.metabc1TOsom1c1.E.CN); \par
58   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
59   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
60   CROPCENT->ENV.newminN+=delN;\par
61   updateCarbonStructure(&CROPCENT->metabc1.C, CROPCENT->metabc1.Flux.metabc1TOmetabc1.C);\par
62   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->metabc1.Flux.metabc1TOsom1c1.C);\par
63   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->metabc1.Flux.metabc1TOsom1c1.C, CROPCENT->metabc1.Flux.metabc1TOsom1c1.E);\par
64   \par
65   // updating metabc2 flux [source is self -negative outflow and from strucc1]\par
66   out=(CROPCENT->metabc2.Flux.metabc2TOmetabc2.C.totalC)/(CROPCENT->metabc2.Flux.metabc2TOmetabc2.E.CN); \par
67   in=(CROPCENT->metabc2.Flux.metabc2TOsom1c2.C.totalC)/(CROPCENT->metabc2.Flux.metabc2TOsom1c2.E.CN); \par
68   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
69   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
70   CROPCENT->ENV.newminN+=delN;\par
71   updateCarbonStructure(&CROPCENT->metabc2.C, CROPCENT->metabc2.Flux.metabc2TOmetabc2.C);\par
72   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->metabc2.Flux.metabc2TOsom1c2.C);\par
73   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->metabc2.Flux.metabc2TOsom1c2.C, CROPCENT->metabc2.Flux.metabc2TOsom1c2.E);\par
74   \par
75   // updating som1c1 Fluxes\par
76   out=(CROPCENT->som1c1.Flux.som1c1TOsom1c1.C.totalC)/(CROPCENT->som1c1.Flux.som1c1TOsom1c1.E.CN); \par
77   in=(CROPCENT->som1c1.Flux.som1c1TOsom2c1.C.totalC)/(CROPCENT->som1c1.Flux.som1c1TOsom2c1.E.CN); \par
78   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
79   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
80   CROPCENT->ENV.newminN+=delN;\par
81   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->som1c1.Flux.som1c1TOsom1c1.C);\par
82   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->som1c1.Flux.som1c1TOsom2c1.C);\par
83   updateMineralStructure(&CROPCENT->som2c1.C, &CROPCENT->som2c1.E, CROPCENT->som1c1.Flux.som1c1TOsom2c1.C, CROPCENT->som1c1.Flux.som1c1TOsom2c1.E);\par
84   \par
85   \par
86   // updating som2c1 Fluxes\par
87   out=(CROPCENT->som2c1.Flux.som2c1TOsom2c1.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom2c1.E.CN); \par
88   in=(CROPCENT->som2c1.Flux.som2c1TOsom1c1.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom1c1.E.CN)\par
89     +(CROPCENT->som2c1.Flux.som2c1TOsom2c2.C.totalC)/(CROPCENT->som2c1.Flux.som2c1TOsom2c2.E.CN); \par
90   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
91   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
92   CROPCENT->ENV.newminN+=delN;\par
93   updateCarbonStructure(&CROPCENT->som2c1.C, CROPCENT->som2c1.Flux.som2c1TOsom2c1.C);\par
94   updateCarbonStructure(&CROPCENT->som1c1.C, CROPCENT->som2c1.Flux.som2c1TOsom1c1.C);\par
95   updateMineralStructure(&CROPCENT->som1c1.C, &CROPCENT->som1c1.E, CROPCENT->som2c1.Flux.som2c1TOsom1c1.C, CROPCENT->som2c1.Flux.som2c1TOsom1c1.E);\par
96   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c1.Flux.som2c1TOsom2c2.C);\par
97   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som2c1.Flux.som2c1TOsom2c2.C, CROPCENT->som2c1.Flux.som2c1TOsom2c2.E);\par
98   \par
99   \par
100   // updating som1c2 Fluxes\par
101   out=(CROPCENT->som1c2.Flux.som1c2TOsom1c2.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom1c2.E.CN); \par
102   in=(CROPCENT->som1c2.Flux.som1c2TOsom2c2.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom2c2.E.CN)\par
103     +(CROPCENT->som1c2.Flux.som1c2TOsom3c.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOsom3c.E.CN)\par
104     +(CROPCENT->som1c2.Flux.som1c2TOleachate.C.totalC)/(CROPCENT->som1c2.Flux.som1c2TOleachate.E.CN);\par
105   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
106   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
107   CROPCENT->ENV.newminN+=delN;\par
108   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som1c2.Flux.som1c2TOsom1c2.C);\par
109   // remember here we need to modify CN ratio of the som1c2 pool because CN ratio of leachate loss is much larger\par
110   // This modified ratio can be obtained in th below function\par
111   updateCEafterleachate(&CROPCENT->som1c2);\par
112  \par
113   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som1c2.Flux.som1c2TOsom2c2.C);\par
114   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som1c2.Flux.som1c2TOsom2c2.C, CROPCENT->som1c2.Flux.som1c2TOsom2c2.E);\par
115    \par
116   updateCarbonStructure(&CROPCENT->som3c.C, CROPCENT->som1c2.Flux.som1c2TOsom3c.C);\par
117   updateMineralStructure(&CROPCENT->som3c.C, &CROPCENT->som3c.E, CROPCENT->som1c2.Flux.som1c2TOsom3c.C, CROPCENT->som1c2.Flux.som1c2TOsom3c.E);\par
118   \par
119   \par
120   // updating som2c2 Fluxes\par
121   out=(CROPCENT->som2c2.Flux.som2c2TOsom2c2.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom2c2.E.CN); \par
122   in=(CROPCENT->som2c2.Flux.som2c2TOsom3c.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom3c.E.CN)\par
123     +(CROPCENT->som2c2.Flux.som2c2TOsom1c2.C.totalC)/(CROPCENT->som2c2.Flux.som2c2TOsom1c2.E.CN); \par
124   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
125   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
126   CROPCENT->ENV.newminN+=delN;\par
127   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c2.Flux.som2c2TOsom2c2.C);\par
128   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som2c2.Flux.som2c2TOsom1c2.C);\par
129   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->som2c2.Flux.som2c2TOsom1c2.C, CROPCENT->som2c2.Flux.som2c2TOsom1c2.E);\par
130   updateCarbonStructure(&CROPCENT->som2c2.C, CROPCENT->som2c2.Flux.som2c2TOsom3c.C);\par
131   updateMineralStructure(&CROPCENT->som2c2.C, &CROPCENT->som2c2.E, CROPCENT->som2c2.Flux.som2c2TOsom3c.C, CROPCENT->som2c2.Flux.som2c2TOsom3c.E);\par
132  \par
133  // updating som3c Fluxes\par
134   out=(CROPCENT->som3c.Flux.som3cTOsom3c.C.totalC)/(CROPCENT->som3c.Flux.som3cTOsom3c.E.CN); \par
135   in=(CROPCENT->som3c.Flux.som3cTOsom1c2.C.totalC)/(CROPCENT->som3c.Flux.som3cTOsom1c2.E.CN);\par
136    \par
137   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization\par
138   CROPCENT->ENV.minN = CROPCENT->ENV.minN-delN;\par
139   CROPCENT->ENV.newminN+=delN;\par
140   updateCarbonStructure(&CROPCENT->som3c.C, CROPCENT->som3c.Flux.som3cTOsom3c.C);\par
141   updateCarbonStructure(&CROPCENT->som1c2.C, CROPCENT->som3c.Flux.som3cTOsom1c2.C);\par
142   updateMineralStructure(&CROPCENT->som1c2.C, &CROPCENT->som1c2.E, CROPCENT->som3c.Flux.som3cTOsom1c2.C, CROPCENT->som3c.Flux.som3cTOsom1c2.E);\par
143   \par
144   CROPCENT->ENV.newminN=(-1)*CROPCENT->ENV.newminN; // Because negative value represents mineralization and net mineralization is postiive for trace gas calculations\par
145   return;\par
146 \}\par
}
}
{\xe \v UpdateCropcentPoolsFromBioCro\:crocent.h}
{\xe \v crocent.h\:UpdateCropcentPoolsFromBioCro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateCropcentPoolsFromBioCro (struct {\b cropcentlayer} * {\i CROPCENT}, struct {\b InputToCropcent} * {\i INCROPCENT})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updatedailyvec\:crocent.h}
{\xe \v crocent.h\:updatedailyvec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatedailyvec (struct {\b dailyvec} * {\i dailyvec}, double {\i newbiomass}, double {\i newlitter}, int {\i N}, double {\i delTT})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 405 \{\par
406   int i;\par
407   for (i=0; i<=N;i++)\par
408   \{\par
409      dailyvec[i].ageinTT+=delTT;\par
410   \}\par
411   dailyvec[N].newbiomass=newbiomass;\par
412   dailyvec[N].newlitter=newlitter;\par
413   return;\par
414 \}\par
}
}
{\xe \v UpdateDirectAbsorp\:crocent.h}
{\xe \v crocent.h\:UpdateDirectAbsorp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateDirectAbsorp (struct {\b InputToCropcent} * {\i INCROCENT}, struct {\b BioCroToCropcentParms} * {\i parms}, struct {\b cropcentEnvironment} * {\i ENV})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updatedormantstage\:crocent.h}
{\xe \v crocent.h\:updatedormantstage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatedormantstage (struct {\b miscanthus} * {\i miscanthus})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 759 \{\par
760   double LostinRespiration,availablecarb,newcarb;\par
761   LostinRespiration=miscanthus->autoresp.stemmaint + miscanthus->autoresp.rootmaint +  miscanthus->autoresp.rhizomemaint;\par
762   // This loss will occur at the expense of carbohydrate fraction of rhizome, resulting in change in the carbohydrate fraction of the rhizome\par
763   availablecarb= miscanthus->rhizome.biomass*miscanthus->rhizome.carbohydratefraction;\par
764   newcarb=availablecarb-LostinRespiration;\par
765   miscanthus->rhizome.biomass= miscanthus->rhizome.biomass- LostinRespiration;\par
766  \par
767   if((miscanthus->rhizome.carbohydratefraction)<0.05)miscanthus->rhizome.carbohydratefraction=0.05;\par
768   if(miscanthus->rhizome.biomass <0)error("rhizome has become negative");\par
769 \par
770 \par
771   miscanthus->autoresp.stemgrowth=0;\par
772   miscanthus->autoresp.rootgrowth=0;\par
773   miscanthus->autoresp.rhizomegrowth=0;\par
774   miscanthus->autoresp.leafdarkresp=0.0;\par
775   miscanthus->autoresp.total= LostinRespiration;\par
776   miscanthus->NPP=miscanthus->GPP-miscanthus->autoresp.total;\par
777   // Do i need to specify root death rate ? or probably Ican simply kill the roots at the time of harvest\par
778   \par
779 \}\par
}
}
{\xe \v updatelittervec\:crocent.h}
{\xe \v crocent.h\:updatelittervec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updatelittervec (struct {\b littervec} * {\i littervec}, double {\i newbiomass}, int {\i N}, double {\i delTT})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v updateMineralStructure\:crocent.h}
{\xe \v crocent.h\:updateMineralStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void updateMineralStructure (struct {\b carbon} * {\i toupdateC}, struct {\b minerals} * {\i toupdateE}, struct {\b carbon} {\i flowC}, struct {\b minerals} {\i flowE})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateStandingbiomass\:crocent.h}
{\xe \v crocent.h\:UpdateStandingbiomass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingbiomass (double * {\i standing}, double {\i newbiomass})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 639 \{\par
640   *standing= *standing +newbiomass;\par
641    return;\par
642 \}\par
}
}
{\xe \v UpdateStandingLeaf\:crocent.h}
{\xe \v crocent.h\:UpdateStandingLeaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingLeaf (struct {\b leaf} * {\i leaf}, double {\i newbiomass}, double {\i deadleaf}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 646 \{\par
647   leaf->biomass+=newbiomass-deadleaf;\par
648   leaf->litter+=deadleaf*(1-remobFactor);\par
649   return;\par
650 \}\par
}
}
{\xe \v UpdateStandingRhizome\:crocent.h}
{\xe \v crocent.h\:UpdateStandingRhizome}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingRhizome (struct {\b rhizome} * {\i rhizome}, double {\i newbiomass}, double {\i deadrhizome}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 667 \{\par
668   rhizome->biomass+=newbiomass-deadrhizome;\par
669   rhizome->litter+=deadrhizome*(1-remobFactor);\par
670   return;\par
671 \}\par
}
}
{\xe \v UpdateStandingRoot\:crocent.h}
{\xe \v crocent.h\:UpdateStandingRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingRoot (struct {\b root} * {\i root}, double {\i newbiomass}, double {\i deadroot}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 660 \{\par
661   root->biomass+=newbiomass-deadroot;\par
662   root->litter+=deadroot*(1-remobFactor);\par
663   return;\par
664 \}\par
}
}
{\xe \v UpdateStandingStem\:crocent.h}
{\xe \v crocent.h\:UpdateStandingStem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateStandingStem (struct {\b stem} * {\i stem}, double {\i newbiomass}, double {\i deadstem}, double {\i remobFactor})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 653 \{\par
654   stem->biomass+=newbiomass-deadstem;\par
655   stem->litter+=deadstem*(1-remobFactor);\par
656   return;\par
657 \}\par
}
}
{\xe \v UpdateWillowAfterHarvest\:crocent.h}
{\xe \v crocent.h\:UpdateWillowAfterHarvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateWillowAfterHarvest (struct {\b c3tree} * {\i willow}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58 \{\par
59   willow->leaf.biomass=(1-management->harvestparms.frleaf)*willow->leaf.biomass;\par
60   willow->leaf.litter=(1-management->harvestparms.frleaflitter)*willow->leaf.litter;\par
61   \par
62   willow->stem.biomass=(1-management->harvestparms.frstem)*willow->stem.biomass;\par
63   willow->stem.litter=(1-management->harvestparms.frstemlitter)*willow->stem.litter;\par
64   \par
65   willow->root.biomass=(1-management->harvestparms.frdeadroot)*willow->root.biomass;\par
66   willow->root.litter=management->harvestparms.frdeadroot*willow->root.biomass;\par
67   \par
68   willow->rhizome.biomass=(1-management->harvestparms.frdeadrhizome)*willow->rhizome.biomass;\par
69   willow->rhizome.litter=management->harvestparms.frdeadrhizome*willow->rhizome.biomass;\par
70   return;\par
71 \}\par
}
}
{\xe \v weightavg\:crocent.h}
{\xe \v crocent.h\:weightavg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double weightavg (double {\i W1}, double {\i v1}, double {\i W2}, double {\i v2})}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/cropcent.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/cropcent.c}
{\xe \v /home/dlebauer/dev/biocro/src/cropcent.c}
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "n2o_model.h"}\par
{\f2 #include "swconst.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for cropcent.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cropcent_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b cropcent} (SEXP FAKE)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v cropcent\:cropcent.c}
{\xe \v cropcent.c\:cropcent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP cropcent (SEXP {\i FAKE})}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11 \{\par
12   struct cropcentlayer CROPCENT;\par
13 //  SOIL_SPT soil;\par
14   double hetResp;\par
15   int woody, Eflag;\par
16   double *fake;\par
17   woody = 0; // not testing for woody for now\par
18   Eflag=1; //N simulation for now\par
19 //  assignPools(&CROPCENT);\par
20 //  assignParms(&CROPCENT);\par
21   CROPCENTTimescaling(&CROPCENT);\par
22 //  assignENV(&CROPCENT);\par
23   assignFluxRatios(&CROPCENT);\par
24   Rprintf("Before Decomposition\\n");\par
25   printcropcentout(CROPCENT,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake);\par
26   decomposeCROPCENT(&CROPCENT, woody,Eflag);\par
27   Rprintf("After Decomposition \\n");\par
28   printcropcentout(CROPCENT,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake);\par
29   Rprintf("After updating\\n");\par
30   updatecropcentpools(&CROPCENT);\par
31   printcropcentout(CROPCENT,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake,fake);\par
32   SEXP res;\par
33   PROTECT(res=allocVector(REALSXP,1));\par
34   REAL(res)[0]=1.0;\par
35   UNPROTECT(1);\par
36   return(res);\par
37 \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/CropGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/CropGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/CropGro.c}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "crocent.h"}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "function_prototype.h"}\par
{\f2 #include "n2o_model.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CropGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_crop_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b CropGro} (SEXP LAT, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP KD, SEXP CHILHF, SEXP NLAYERS, SEXP RHIZOME, SEXP IRTL, SEXP SENCOEFS, SEXP TIMESTEP, SEXP VECSIZE, SEXP SPLEAF, SEXP SPD, SEXP DBPCOEFS, SEXP THERMALP, SEXP VMAX, SEXP ALPHA, SEXP KPARM, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP WS, SEXP SOILCOEFS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP WSFUN, SEXP CENTCOEFS, SEXP CENTTIMESTEP, SEXP CENTKS, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP NNITROP, SEXP SOMPOOLSfromR, SEXP SOILTEXTUREfromR)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CropGro\:CropGro.c}
{\xe \v CropGro.c\:CropGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP CropGro (SEXP {\i LAT}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i NLAYERS}, SEXP {\i RHIZOME}, SEXP {\i IRTL}, SEXP {\i SENCOEFS}, SEXP {\i TIMESTEP}, SEXP {\i VECSIZE}, SEXP {\i SPLEAF}, SEXP {\i SPD}, SEXP {\i DBPCOEFS}, SEXP {\i THERMALP}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i KPARM}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i WS}, SEXP {\i SOILCOEFS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i WSFUN}, SEXP {\i CENTCOEFS}, SEXP {\i CENTTIMESTEP}, SEXP {\i CENTKS}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i NNITROP}, SEXP {\i SOMPOOLSfromR}, SEXP {\i SOILTEXTUREfromR})}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 75 \{\par
76     int vecsize = INTEGER(VECSIZE)[0];\par
77     int dailyvecsize = vecsize/24;\par
78 //    Rprintf("%i\\n",vecsize);\par
79    /*********** CROCENT VARIABLES***********************/\par
80    struct cropcentlayer CROPCENT;\par
81    double *fake;\par
82    // Get Default parameters for miscanthus\par
83      assignParms(&CROPCENT, fake);\par
84   // Get Initial Values oof Pool for C and N\par
85      assignPools(&CROPCENT, &REAL(SOMPOOLSfromR)[0]);\par
86   // More parameters   \par
87      GetBioCroToCropcentParms(&CROPCENT.BcroTOCentParms,fake);\par
88    // Timestep is alreadt set to 1440.0 minutes (1 day) in the assignParms. We need to change the parameters to daily time step\par
89      CROPCENTTimescaling(&CROPCENT);\par
90      \par
91    double oldstandingN, newstandingN, Ndemand;   \par
92    struct crop_phenology cropdbp;\par
93    struct miscanthus miscanthus, deltamiscanthus;\par
94    createNULLmiscanthus(&miscanthus,vecsize);\par
95 \par
96 //   miscanthus.leafvec[vecsize].newbiomass=(double)vecsize;\par
97 //   Rprintf("%f, %i\\n",miscanthus.leafvec[vecsize].newbiomass, vecsize);\par
98    double dailynetassim, CanopyAGross, dailyGPP;\par
99    double mrespLeaf, mrespStem, mrespRoot, mrespRhizome;\par
100    struct senthermaltemp senthermaltemp;\par
101    struct canopyparms canopyparms;\par
102    struct frostParms frostparms;\par
103    dailynetassim=0.0;\par
104    dailyGPP=0.0;\par
105    mrespLeaf=0.0;\par
106    mrespStem=0.0;\par
107    mrespRoot=0.0;\par
108    mrespRhizome=0.0;\par
109    frostparms.leafT0=-8.0;\par
110    frostparms.leafT100=-16.0;\par
111    frostparms.stemT0=-16.0;\par
112    frostparms.stemT100=-16.0;\par
113    \par
114    \par
115    /***********Management Variables *************/\par
116    struct management management;\par
117    assignManagement(&management);\par
118    /********************************************/\par
119    \par
120         /* This creates vectors which will collect the senesced plant\par
121            material. This is needed to calculate litter and therefore carbon\par
122            in the soil and then N in the soil. */\par
123 \par
124          double upperT=REAL(UPPERTEMP)[0];\par
125          double lowerT=REAL(LOWERTEMP)[0];\par
126 /*Reading NitroP Variables */\par
127         struct nitroParms nitroparms;\par
128         double TEMPdoubletoint;\par
129         nitroparms.ileafN=REAL(NNITROP)[0];\par
130   nitroparms.kln=REAL(NNITROP)[1];\par
131         nitroparms.Vmaxb1=REAL(NNITROP)[2];\par
132         nitroparms.Vmaxb0=REAL(NNITROP)[3];\par
133         nitroparms.alphab1=REAL(NNITROP)[4];\par
134         nitroparms.alphab0=REAL(NNITROP)[5];\par
135   nitroparms.Rdb1=REAL(NNITROP)[6];\par
136         nitroparms.Rdb0=REAL(NNITROP)[7];\par
137         nitroparms.kpLN=REAL(NNITROP)[8];\par
138         nitroparms.lnb0=REAL(NNITROP)[9];\par
139         nitroparms.lnb1=REAL(NNITROP)[10];\par
140         TEMPdoubletoint=REAL(NNITROP)[11];\par
141         nitroparms.lnFun=(int)TEMPdoubletoint;\par
142         nitroparms.maxln=REAL(NNITROP)[12];\par
143         nitroparms.minln=REAL(NNITROP)[13];\par
144         nitroparms.daymaxln=REAL(NNITROP)[14];\par
145 \par
146 \par
148   double iSp, Sp , propLeaf;\par
149         int i, i2, i3;\par
150 \par
151         double vmax1;\par
152         double alpha1;\par
153         double kparm1;\par
154         double theta;\par
155         double beta;\par
156         double Rd1, Ca;\par
157         double b01, b11;\par
158 \par
159         double Leaf, Stem, Root, LAI, Grain = 0.0;\par
160         double TTc = 0.0;\par
161         double kLeaf = 0.0, kStem = 0.0, kRoot = 0.0, kRhizome = 0.0, kGrain = 0.0;\par
162         double newLeaf, newStem = 0.0, newRoot, newRhizome, newGrain = 0.0;\par
163 \par
164         /* Variables needed for collecting litter */\par
165         double LeafLitter = REAL(CENTCOEFS)[20], StemLitter = REAL(CENTCOEFS)[21];\par
166         double RootLitter = REAL(CENTCOEFS)[22], RhizomeLitter = REAL(CENTCOEFS)[23];\par
167         double LeafLitter_d = 0.0, StemLitter_d = 0.0;\par
168         double RootLitter_d = 0.0, RhizomeLitter_d = 0.0;\par
169         double ALitter = 0.0, BLitter = 0.0;\par
170         /* Maintenance respiration */\par
171 \par
172         double mrc1 = REAL(MRESP)[0];\par
173         double mrc2 = REAL(MRESP)[1]; \par
174 \par
175         double waterCont;\par
176         double StomWS = 1, LeafWS = 1;\par
177         int timestep;\par
178         double CanopyA, CanopyT;\par
179 \par
180         double Rhizome;\par
181 \par
182         /* Soil Parameters*/\par
183         double FieldC, WiltP, phi1, phi2, soilDepth;\par
184         int soilType, wsFun;\par
185         double LeafN, LeafN_0, kLN;\par
186         double soilEvap, TotEvap;\par
187         int soillayers = INTEGER(SOILLAYERS)[0];\par
188         double cwsVec[soillayers];\par
189         for(i2=0;i2<soillayers;i2++)\{\par
190                 cwsVec[i2] = REAL(CWS)[i2];\par
191         \}\par
192         double cwsVecSum = 0.0;\par
193         /* Some soil related empirical coefficients */\par
194         double rfl = REAL(SECS)[0];  /* root factor lambda */\par
195         double rsec = REAL(SECS)[1]; /* radiation soil evaporation coefficient */\par
196         double rsdf = REAL(SECS)[2]; /* root soil depth factor */\par
197         double scsf = REAL(SOILCOEFS)[6]; /* stomatal conductance sensitivity factor */ /* Rprintf("scsf %.2f",scsf); */\par
198         double transpRes = REAL(SOILCOEFS)[7]; /* Resistance to transpiration from soil to leaf */\par
199         double leafPotTh = REAL(SOILCOEFS)[8]; /* Leaf water potential threshold */\par
200 \par
201         /* Parameters for calculating leaf water potential */\par
202         double LeafPsim = 0.0;\par
203 \par
204         /* Effect of Nitrogen */\par
205         double kpLN = REAL(KPLN)[0];\par
206         double lnb0 = REAL(LNB0)[0]; \par
207         double lnb1 = REAL(LNB1)[0];\par
208         int lnfun = INTEGER(LNFUN)[0];\par
209 \par
210         /* Century */\par
211         double MinNitro = REAL(CENTCOEFS)[19];\par
212         int doyNfert = REAL(CENTCOEFS)[18];\par
213         double Nfert;\par
214         double SCCs[9];\par
215         double Resp = 0.0;\par
216         int centTimestep = INTEGER(CENTTIMESTEP)[0];\par
217 \par
218         double SeneLeaf, SeneStem, SeneRoot = 0.0, SeneRhizome = 0.0 ;\par
219         double *sti , *sti2, *sti3, *sti4; \par
220         double Remob;\par
221         int k = 0, q = 0, m = 0, n = 0;\par
222         int ri = 0;\par
223 \par
224         struct Can_Str Canopy;\par
225         struct ws_str WaterS;\par
226         struct dbp_str dbpS;\par
227         struct cenT_str centS; \par
228         struct soilML_str soilMLS;\par
229         struct soilText_str soTexS; /* , *soTexSp = &soTexS; */\par
230   int DayCentSoilType,SoilClassification;\par
231         soTexS = soilTchoose(INTEGER(SOILTYPE)[0]);\par
232   soTexS.sand=REAL(SOILTEXTUREfromR)[0];\par
233   soTexS.silt=REAL(SOILTEXTUREfromR)[1];\par
234   soTexS.clay=REAL(SOILTEXTUREfromR)[2];\par
235   //Based on Texture, Get Bulk Density, Field Capacity, and DayCent Soil Type\par
236   getsoilprop(&soTexS.sand, &soTexS.silt, &soTexS.clay, &soTexS.bulkd,&soTexS.fieldc, &DayCentSoilType,&SoilClassification);\par
237 //  Filling_BioCro_SoilStructure(&soilMLS, &soTexS, soillayers,REAL(SOILDEPTHS));\par
238         centS.SCs[0] = 0.0;\par
239         centS.SCs[1] = 0.0;\par
240         centS.SCs[2] = 0.0;\par
241         centS.SCs[3] = 0.0;\par
242         centS.SCs[4] = 0.0;\par
243         centS.SCs[5] = 0.0;\par
244         centS.SCs[6] = 0.0;\par
245         centS.SCs[7] = 0.0;\par
246         centS.SCs[8] = 0.0;\par
247         centS.Resp = 0.0;\par
248 \par
249         SEXP lists, names;\par
250 \par
251         SEXP DayofYear;\par
252         SEXP Hour;\par
253         SEXP CanopyAssim;\par
254         SEXP CanopyTrans;\par
255         SEXP Leafy;\par
256         SEXP Stemy;\par
257         SEXP Rooty;\par
258         SEXP Rhizomey;\par
259         SEXP Grainy;\par
260         SEXP LAIc;\par
261         SEXP TTTc;\par
262         SEXP SoilWatCont;\par
263         SEXP StomatalCondCoefs;\par
264         SEXP LeafReductionCoefs;\par
265         SEXP LeafNitrogen;\par
266         SEXP AboveLitter;\par
267         SEXP BelowLitter;\par
268         SEXP VmaxVec;\par
269         SEXP AlphaVec;\par
270         SEXP SpVec;\par
271         SEXP MinNitroVec;\par
272         SEXP RespVec;\par
273         SEXP SoilEvaporation;\par
274         SEXP cwsMat;\par
275         SEXP psimMat; /* Holds the soil water potential */\par
276         SEXP rdMat;\par
277   SEXP waterfluxMat; /* holds water flux in m3/m2 hr */\par
278         SEXP SCpools;\par
279         SEXP SNpools;\par
280         SEXP LeafPsimVec;\par
281 // From here, we have daily (instead of hourly) output vectors\par
282   SEXP DayafterPlanting;\par
283   SEXP GDD; // daily vector of growing degree day\par
284   SEXP GPP; // Gross Primary Productivity\par
285   SEXP NPP; // Net Primary Productivity\par
286   SEXP autoRESP; // Autotrophic Respiration\par
287   SEXP hetRESP; // Heterotrophic Respiration\par
288   SEXP NER; // Net Ecosystem Respiration\par
289   SEXP StemMResp;\par
290   SEXP RootMResp;\par
291   SEXP RhizomeMResp;\par
292   SEXP LeafDarkResp;\par
293   SEXP Stemd;\par
294   SEXP Leafd;\par
295   SEXP Rootd;\par
296   SEXP Rhizomed;\par
297   SEXP Stemlitterd;\par
298   SEXP Leaflitterd;\par
299   SEXP Rootlitterd;\par
300   SEXP Rhizomelitterd;\par
301   SEXP LAId;\par
302   SEXP totalSOC;\par
303   SEXP strucc1;\par
304   SEXP strucc2;\par
305   SEXP metabc1;\par
306   SEXP metabc2;\par
307   SEXP som1c1;\par
308   SEXP som1c2;\par
309   SEXP som2c1;\par
310   SEXP som2c2;\par
311   SEXP som3c;\par
312   SEXP minN;\par
313   \par
314 // Declaring Daily variables\par
315  double  accumulatedGDD=0.0;\par
316 \par
317 \par
318 \par
319 \par
320 \par
321 //      vecsize = length(DOY);\par
322         PROTECT(lists = allocVector(VECSXP,61));\par
323         PROTECT(names = allocVector(STRSXP,61));\par
324 \par
325         PROTECT(DayofYear = allocVector(REALSXP,vecsize));\par
326         PROTECT(Hour = allocVector(REALSXP,vecsize));\par
327         PROTECT(CanopyAssim = allocVector(REALSXP,vecsize));\par
328         PROTECT(CanopyTrans = allocVector(REALSXP,vecsize));\par
329         PROTECT(Leafy = allocVector(REALSXP,vecsize));\par
330         PROTECT(Stemy = allocVector(REALSXP,vecsize));\par
331         PROTECT(Rooty = allocVector(REALSXP,vecsize));\par
332         PROTECT(Rhizomey = allocVector(REALSXP,vecsize));\par
333         PROTECT(Grainy = allocVector(REALSXP,vecsize));\par
334         PROTECT(LAIc = allocVector(REALSXP,vecsize));\par
335         PROTECT(TTTc = allocVector(REALSXP,vecsize));\par
336         PROTECT(SoilWatCont = allocVector(REALSXP,vecsize));\par
337         PROTECT(StomatalCondCoefs = allocVector(REALSXP,vecsize));\par
338         PROTECT(LeafReductionCoefs = allocVector(REALSXP,vecsize));\par
339         PROTECT(LeafNitrogen = allocVector(REALSXP,vecsize));\par
340         PROTECT(AboveLitter = allocVector(REALSXP,vecsize));\par
341         PROTECT(BelowLitter = allocVector(REALSXP,vecsize));\par
342         PROTECT(VmaxVec = allocVector(REALSXP,vecsize));\par
343         PROTECT(AlphaVec = allocVector(REALSXP,vecsize));\par
344         PROTECT(SpVec = allocVector(REALSXP,vecsize));\par
345         PROTECT(MinNitroVec = allocVector(REALSXP,vecsize));\par
346         PROTECT(RespVec = allocVector(REALSXP,vecsize));\par
347         PROTECT(SoilEvaporation = allocVector(REALSXP,vecsize));\par
348         PROTECT(cwsMat = allocMatrix(REALSXP,soillayers,vecsize));\par
349   PROTECT(waterfluxMat = allocMatrix(REALSXP,soillayers,vecsize));\par
350         PROTECT(psimMat = allocMatrix(REALSXP,soillayers,vecsize));\par
351         PROTECT(rdMat = allocMatrix(REALSXP,soillayers,vecsize));\par
352         PROTECT(SCpools = allocVector(REALSXP,9));\par
353         PROTECT(SNpools = allocVector(REALSXP,9));\par
354         PROTECT(LeafPsimVec = allocVector(REALSXP,vecsize));\par
355   PROTECT(DayafterPlanting = allocVector(REALSXP,dailyvecsize));\par
356   PROTECT(GDD = allocVector(REALSXP,dailyvecsize));\par
357   PROTECT(GPP = allocVector(REALSXP,dailyvecsize));\par
358   PROTECT(NPP = allocVector(REALSXP,dailyvecsize));\par
359   PROTECT(autoRESP = allocVector(REALSXP,dailyvecsize));\par
360   PROTECT(hetRESP = allocVector(REALSXP,dailyvecsize));\par
361   PROTECT(NER = allocVector(REALSXP,dailyvecsize));\par
362   PROTECT(StemMResp= allocVector(REALSXP,dailyvecsize));\par
363   PROTECT(RootMResp = allocVector(REALSXP,dailyvecsize));\par
364   PROTECT(RhizomeMResp = allocVector(REALSXP,dailyvecsize));\par
365   PROTECT(LeafDarkResp = allocVector(REALSXP,dailyvecsize));\par
366   PROTECT(Stemd = allocVector(REALSXP,dailyvecsize));\par
367   PROTECT(Leafd = allocVector(REALSXP,dailyvecsize));\par
368   PROTECT(Rootd = allocVector(REALSXP,dailyvecsize));\par
369   PROTECT(Rhizomed = allocVector(REALSXP,dailyvecsize));\par
370   PROTECT(Stemlitterd = allocVector(REALSXP,dailyvecsize));\par
371   PROTECT(Leaflitterd = allocVector(REALSXP,dailyvecsize));\par
372   PROTECT(Rootlitterd = allocVector(REALSXP,dailyvecsize));\par
373   PROTECT(Rhizomelitterd = allocVector(REALSXP,dailyvecsize));\par
374   PROTECT(LAId = allocVector(REALSXP,dailyvecsize));\par
375   PROTECT(totalSOC = allocVector(REALSXP,dailyvecsize));\par
376   PROTECT(strucc1 = allocVector(REALSXP,dailyvecsize));\par
377    PROTECT(strucc2 = allocVector(REALSXP,dailyvecsize));\par
378   PROTECT(metabc1 = allocVector(REALSXP,dailyvecsize));\par
379   PROTECT(metabc2 = allocVector(REALSXP,dailyvecsize));\par
380    PROTECT(som1c1 = allocVector(REALSXP,dailyvecsize));\par
381   PROTECT(som1c2 = allocVector(REALSXP,dailyvecsize));\par
382   PROTECT(som2c1 = allocVector(REALSXP,dailyvecsize));\par
383    PROTECT(som2c2 = allocVector(REALSXP,dailyvecsize));\par
384   PROTECT(som3c = allocVector(REALSXP,dailyvecsize));\par
385   PROTECT(minN = allocVector(REALSXP,dailyvecsize));\par
386         /* Picking vmax, alpha and kparm */\par
387         vmax1 = REAL(VMAX)[0];\par
388         alpha1 = REAL(ALPHA)[0];\par
389         kparm1 = REAL(KPARM)[0];\par
390         theta = REAL(THETA)[0];\par
391         beta = REAL(BETA)[0];\par
392         Rd1 = REAL(RD)[0];\par
393         Ca = REAL(CATM)[0];\par
394         b01 = REAL(B0)[0];\par
395         b11 = REAL(B1)[0];\par
396 \par
397         LeafN_0 = REAL(ILEAFN)[0];\par
398         LeafN = LeafN_0; /* Initial value of N in the leaf */\par
399         kLN = REAL(KLN)[0];\par
400         timestep = INTEGER(TIMESTEP)[0];\par
401 \par
402         Rhizome = REAL(RHIZOME)[0];\par
403         Sp = REAL(SPLEAF)[0]; \par
404         SeneLeaf = REAL(SENCOEFS)[0];\par
405         SeneStem = REAL(SENCOEFS)[1];\par
406         SeneRoot = REAL(SENCOEFS)[2];\par
407         SeneRhizome = REAL(SENCOEFS)[3];\par
408 \par
409         /* Soil Parameters */\par
410         FieldC = REAL(SOILCOEFS)[0];\par
411         WiltP = REAL(SOILCOEFS)[1];\par
412         phi1 = REAL(SOILCOEFS)[2];\par
413         phi2 = REAL(SOILCOEFS)[3];\par
414         soilDepth = REAL(SOILCOEFS)[4];\par
415         waterCont = REAL(SOILCOEFS)[5];\par
416         wsFun = INTEGER(WSFUN)[0];\par
417         soilType = INTEGER(SOILTYPE)[0];\par
418   // Modify SOil Type Based on Texture Information entered\par
419   soilType=SoilClassification; // DayCent Soil Type goes from 1-11, and BioCro from 0-10\par
420   if(soilType<0 || soilType > 10)\par
421   \{ \par
422     soilType=1;\par
423   \} // This is a temporary fix to avoid unknown SoilType\par
424 \par
425         SCCs[0] = REAL(CENTCOEFS)[0];\par
426         SCCs[1] = REAL(CENTCOEFS)[1];\par
427         SCCs[2] = REAL(CENTCOEFS)[2];\par
428         SCCs[3] = REAL(CENTCOEFS)[3];\par
429         SCCs[4] = REAL(CENTCOEFS)[4];\par
430         SCCs[5] = REAL(CENTCOEFS)[5];\par
431         SCCs[6] = REAL(CENTCOEFS)[6];\par
432         SCCs[7] = REAL(CENTCOEFS)[7];\par
433         SCCs[8] = REAL(CENTCOEFS)[8];\par
434 \par
435 \par
436 /* Creating pointers to avoid calling functions REAL and INTEGER so much */\par
437 //  int *pt_doy=INTEGER(DOY);\par
438           int *pt_doy;\par
439     pt_doy = malloc(vecsize*sizeof(pt_doy));\par
440     pt_doy=INTEGER(DOY);\par
441   \par
442 //      int *pt_hr = INTEGER(HR);\par
443     int *pt_hr;\par
444     pt_hr = malloc(vecsize*sizeof(pt_hr));\par
445     pt_hr=INTEGER(HR);\par
446     \par
447 //      double *pt_solar = REAL(SOLAR);\par
448    double *pt_solar;\par
449     pt_solar = malloc(vecsize*sizeof(pt_solar));\par
450     pt_solar=REAL(SOLAR);\par
451   \par
452 //      double *pt_temp = REAL(TEMP);\par
453     double *pt_temp;\par
454     pt_temp = malloc(vecsize*sizeof(pt_temp));\par
455     pt_temp=REAL(TEMP);\par
456     \par
457 //      double *pt_rh = REAL(RH);\par
458     double *pt_rh;\par
459     pt_rh = malloc(vecsize*sizeof(pt_rh));\par
460     pt_rh=REAL(RH);\par
461 //      double *pt_windspeed = REAL(WINDSPEED);\par
462    double *pt_windspeed;\par
463     pt_windspeed = malloc(vecsize*sizeof(pt_windspeed));\par
464     pt_windspeed=REAL(WINDSPEED);\par
465 //      double *pt_precip = REAL(PRECIP);\par
466    double *pt_precip;\par
467     pt_precip = malloc(vecsize*sizeof(pt_precip));\par
468     pt_precip=REAL(PRECIP);\par
469 \par
470 \par
471   \par
472    \par
473         double lat = REAL(LAT)[0];\par
474         int nlayers = INTEGER(NLAYERS)[0];\par
475         int ws = INTEGER(WS)[0];\par
476         double kd = REAL(KD)[0];\par
477         double chil = REAL(CHILHF)[0];\par
478         double hf = REAL(CHILHF)[1];\par
479 \par
480  \par
481  /***Initialize Daily Variables *********/\par
482   struct respirationParms RESP;\par
483  RESP.growth.stem=0.3;\par
484  RESP.growth.root=0.3;\par
485  RESP.growth.rhizome=0.3;\par
486  \par
487  RESP.maint.Qstem=2.0;\par
488  RESP.maint.mstem=0.004;\par
489  \par
490  RESP.maint.Qroot=2.0;\par
491  RESP.maint.mroot=0.002;\par
492  \par
493  RESP.maint.Qrhizome=2.0;\par
494  RESP.maint.mrhizome=0.002;\par
495 //  Resp.growth.stem=0.3;\par
496   \par
497   double LeafResp,StemResp,RootResp,RhizResp;  \par
498   double gRespCoeff = 0.0;\par
499   double dailydelTT = 0.0;\par
500   double delTT;\par
501   double Tbase=0.0;\par
502   dailynetassim=0.0;\par
503   senthermaltemp.leafcriticalT=REAL(SENCOEFS)[0];\par
504   senthermaltemp.stemcriticalT=REAL(SENCOEFS)[1];\par
505   senthermaltemp.rootcriticalT=REAL(SENCOEFS)[2];\par
506   senthermaltemp.rhizomecriticalT=REAL(SENCOEFS)[3];\par
507   canopyparms.kN=0.1;\par
508   canopyparms.SLA=0.1;\par
509   canopyparms.remobFac=0.1;\par
510   canopyparms.leafNsen=40;\par
511   frostparms.leafT0=-20.0; //REAL(FROSTP)[0];\par
512   frostparms.leafT100=-20.0;//REAL(FROSTP)[1];\par
513   frostparms.stemT0=-20.0;//REAL(FROSTP)[2];\par
514   frostparms.stemT100=-20.0;//REAL(FROSTP)[3];\par
515  \par
516   propLeaf = REAL(IRTL)[0]; \par
517         /* It is useful to assume that there is a small amount of\par
518            leaf area at the begining of the growing season. */\par
519 //      Leaf = Rhizome * 0.001; \par
520         /* Initial proportion of the rhizome that is turned\par
521            into leaf the first hour */\par
522 //      Stem = Rhizome * 0.001;\par
523 //      Root = Rhizome * 0.001;\par
524           /**********Assining Canopy Parameters********************/\par
525       canopyparms.remobFac=0.5;\par
526       int dap=0;\par
527       /*******************************************************/\par
528   miscanthus.leaf.biomass=0.0;\par
529   miscanthus.stem.biomass=0.0;\par
530   miscanthus.root.biomass=0.0;\par
531   miscanthus.rhizome.biomass=management.emergenceparms.plantingrate;\par
532  \par
533   int emergence=0;\par
534   struct dailyclimate dailyclimate;\par
535   TTc=0.0;\par
536   REAL(TTTc)[0]=TTc;\par
537   \par
538   // Initializing daily soil layer flux to Zero\par
539    for(i3=0;i3<soillayers;i3++)\par
540           \{\par
541             soilMLS.dailyWflux[i3]=0.0;  \par
542           \}\par
543   \par
544  /**************************************/\par
545   updateafteremergence(&miscanthus,&management);\par
546   LAI = miscanthus.leaf.biomass*Sp;\par
547   int phototype;\par
548   phototype=1;\par
549 \par
550   CROPCENT.ENV.minN=12.0; //120*1000/10000 g N/m2\par
551         for(i=0;i<vecsize;i++)\par
552 //    for(i=0;i<3;i++)\par
553         \{\par
554                 /* First calculate the elapsed Thermal Time*/\par
555                 /* The idea is that here I need to divide by the time step\par
556                    to calculate the thermal time. For example, a 3 hour time interval\par
557                    would mean that the division would need to by 8 */\par
558 //       delTT=*(pt_temp+i) / (24/timestep);\par
559         delTT=getThermaltime(*(pt_temp+i), Tbase);\par
560         delTT=delTT/24;\par
561 //    dailydelTT+=delTT;\par
562 //    Rprintf("index=%i,temp=%f, delTT= %f\\n", i,*(pt_temp+i),delTT);\par
563 //         LAI=6.0;\par
564         if(emergence==0)\par
565             \{\par
566             TTc +=delTT;\par
567             REAL(TTTc)[i] =REAL(TTTc)[i-1]+delTT ;\par
568             CanopyA = 0.0;\par
569             CanopyAGross =0.0;\par
570                         CanopyT = 0.0;\par
571             miscanthus.autoresp.leafdarkresp=0;\par
572             \}\par
573         else\par
574             \{\par
575 //         Rprintf("Before Canopy Function, Phototype = %i, i= %i, Assim=%f, Leaf=%f, LAI=%f, Specific Leaf Area = %f \\n", phototype,i, Canopy.Assim, miscanthus.leaf.biomass, LAI,Sp);\par
576                         TTc +=delTT;\par
577                         REAL(TTTc)[i] =REAL(TTTc)[i-1]+delTT ;\par
578             \par
579            \par
580                 Canopy = CanAC(LAI, *(pt_doy+i), *(pt_hr+i),\par
581                                *(pt_solar+i), *(pt_temp+i),\par
582                                *(pt_rh+i), *(pt_windspeed+i),\par
583                                lat, nlayers,\par
584                                vmax1,alpha1,kparm1,\par
585                                theta,beta,Rd1,Ca,b01,b11,StomWS,\par
586                                ws, kd,\par
587                                chil, hf,LeafN, kpLN, lnb0, lnb1, lnfun,upperT,lowerT,nitroparms);\par
588 \par
589                         CanopyA = Canopy.Assim * timestep;\par
590             CanopyAGross =Canopy.GrossAssim*timestep;\par
591                         CanopyT = Canopy.Trans * timestep;\par
592             \}\par
593                 /* Inserting the multilayer model */\par
594                   if(soillayers > 1)\par
595             \{\par
596                         soilMLS = soilML(*(pt_precip+i), CanopyT, &cwsVec[0], soilDepth, REAL(SOILDEPTHS), FieldC, WiltP,\par
597                             phi1, phi2, soTexS, wsFun, INTEGER(SOILLAYERS)[0], miscanthus.root.biomass, \par
598                                                     LAI, 0.68, *(pt_temp+i), *(pt_solar), *(pt_windspeed+i), *(pt_rh+i), \par
599                                                     INTEGER(HYDRDIST)[0], rfl, rsec, rsdf);\par
600 \par
601             StomWS = soilMLS.rcoefPhoto;\par
602             LeafWS = soilMLS.rcoefSpleaf;\par
603             soilEvap = soilMLS.SoilEvapo;\par
604                                 for(i3=0;i3<soillayers;i3++)\par
605                       \{\par
606                                         cwsVec[i3] = soilMLS.cws[i3];\par
607                                         cwsVecSum += cwsVec[i3];\par
608                                         REAL(cwsMat)[i3 + i*soillayers] = soilMLS.cws[i3];\par
609                                         REAL(rdMat)[i3 + i*soillayers] = soilMLS.rootDist[i3];\par
610                       REAL(waterfluxMat)[i3 + i*soillayers] = soilMLS.hourlyWflux[i3];\par
611                       soilMLS.dailyWflux[i3]+=soilMLS.hourlyWflux[i3];\par
612                                   \}\par
613 \par
614                               waterCont = cwsVecSum / soillayers;\par
615                               cwsVecSum = 0.0;\par
616 \par
617                       \}\par
618       else\par
619           \{\par
620 \par
621                         soilEvap = SoilEvapo(LAI, 0.68, *(pt_temp+i), *(pt_solar+i), waterCont, FieldC, WiltP, \par
622                                                    *(pt_windspeed+i), *(pt_rh+i), rsec);\par
623                         TotEvap = soilEvap + CanopyT;\par
624                         WaterS = watstr(*(pt_precip+i),TotEvap,waterCont,soilDepth,FieldC,WiltP,phi1,phi2,soilType, wsFun);   \par
625                         waterCont = WaterS.awc;\par
626                         StomWS = WaterS.rcoefPhoto ; \par
627                         LeafWS = WaterS.rcoefSpleaf;\par
628                         REAL(cwsMat)[i] = waterCont;\par
629                         REAL(psimMat)[i] = WaterS.psim;\par
630                 \}\par
631           \par
632           \par
633 /**** this can be moved to a separate function **********************************/                                    \par
634 /****************Evaluating Daily Maintenance R espiration and Gross canopy assimilation******************/\par
635 \par
636   StemResp=MRespiration(miscanthus.stem.biomass, RESP.maint.Qstem, RESP.maint.mstem, *(pt_temp+i), timestep);\par
637   miscanthus.autoresp.stemmaint+=StemResp;\par
638   RootResp=MRespiration(miscanthus.root.biomass, RESP.maint.Qroot, RESP.maint.mroot, *(pt_temp+i), timestep);\par
639   miscanthus.autoresp.rootmaint+=RootResp;\par
640   RhizResp=MRespiration(miscanthus.rhizome.biomass, RESP.maint.Qrhizome, RESP.maint.mrhizome, *(pt_temp+i), timestep);\par
641   miscanthus.autoresp.rhizomemaint+=RhizResp;\par
642   miscanthus.autoresp.leafdarkresp+=(CanopyAGross-CanopyA);\par
643   dailynetassim+=CanopyA;//Net Canopy Assimilation\par
644   miscanthus.GPP+=CanopyAGross;\par
645 \par
646 \par
647 \par
648    if(i % 24== 0)\par
649    \{\par
650      /*************************************************************************************************************\par
651       * Now we are entering in the daily loop, for plant biomass updating as well as for biogeochemistry calculations\par
652       * In the daily loop,we need\par
653       * --(1) daily climate data for calculation of biogeochemical cycle.Function call to getdailyclimate is made to update structure dailyclimate\par
654       * --(2) dailyThermalTime (GDD) is also updated, this is used in main dailygrowth function of miscanthus\par
655       * --(3) dailymiscanthus function is called to update the biomass of plant for the current day, along with logical variable emergence\par
656       * --(4) LAI is updated based on current biomass of miscanthus leaf and SLA\par
657       * LAI CAN BE INCLUDED IN THE MISCANTHUS STRUCTURE TO AVOID AN EXTRA HANGING LINE OF CALCULATIONS, CALL TO CANOPY  MUST BE MADE USING \par
658       * MISCANTHUS->LAI INSTEAD OF SIMPLY LAI\par
659       * *************************************************************************************************************/\par
660      getdailyclimate(&dailyclimate, pt_doy,pt_solar,pt_temp, pt_rh, pt_windspeed,pt_precip,i,vecsize);  \par
661      dailydelTT = (emergence ==1) ? getThermaltime(dailyclimate.temp, Tbase):0.0;\par
662      accumulatedGDD+=dailydelTT; \par
663      dailymiscanthus(&miscanthus, REAL(DBPCOEFS),REAL(THERMALP),accumulatedGDD, *(pt_temp+i), dailynetassim,&senthermaltemp, &canopyparms,&frostparms,i,dailydelTT,&RESP,emergence); \par
664      LAI=miscanthus.leaf.biomass*Sp;\par
665              /*****************************************************************************************************************\par
666              * If plant is already emerged then \par
667              * --\par
668              * --Test if today is harvest day, If no set back emergence to zero and update miscanthus structure[ usually leaving zero above ground biomass or a fraction]\par
669              * Else\par
670              * --\par
671              * --We need to check if today is the emergence date based on logical value returned by CheckEmergence Function\par
672              * -- (1)If today indeed is emergence date then initialuze leaf biomass by calling updateafteremergence\par
673              * ---(2)also, emergence mean we need to set accumulated GDD back to zero so paritioning calendar is reset\par
674              * -- (3) setting initial LAI based on initial fraction to leaf and SLA\par
675              * ---(4) Fertilization on the date of emergence\par
676              * THIS WHOLE IF ELSE LOOP CAN BE REPLACED BY A FUNCTION CALL WHICH TAKED CURRENT DAY,& SCHEDULE DATA FRAME (E.G. DATE OF HARVEST, FERTILIZATION)\par
677              * TO UPDATE PLANT BIOMASS POOLS AND SOIL BIOGEOCHEMICAL POOLS\par
678              * ***************************************************************************************************************/   \par
679                         if(emergence==1)\par
680                         \{\par
681                                if(dailyclimate.doy==management.harvestparms.harvestdoy)\par
682                               \{\par
683                                 emergence=0;                        //Emergence is set back to zero\par
684                                 REAL(GDD)[dap]=0.0;                 //Set GDD back to zero to restart phenology from beginning\par
685                                 updateafterharvest(&miscanthus,&management); // Use harvest parameters to implement pracices such as removingor leaving residues \par
686                               \}         \par
687                         \}\par
688                       \par
689                         else\par
690                         \{             \par
691                                 emergence=CheckEmergence(&dailyclimate,management.emergenceparms.emergenceTemp); \par
692                                 if((dailyclimate.doy==120)&&(phototype==2))emergence=1;\par
693                                 if(emergence==1)\par
694                                 \{\par
695                                 updateafteremergence(&miscanthus,&management);\par
696                                 accumulatedGDD=0.0;\par
697                                 TTc=0.0;\par
698                                 LAI = miscanthus.leaf.biomass* Sp;\par
699                                 CROPCENT.ENV.minN+=12.0; // adding fertilization on the emergence day\par
700                                 \}\par
701                         \}\par
702           \par
703               /******************************************************************************************************************************\par
704                *  Base on a logical [FlagBiogeochem=1], following four steps will be performed. Or, productivity will not be influenced by \par
705                *  by N availability and no output of soil C and GHG will be available [ all zeros will be output]\par
706                * \par
707                * (1) I need to copy soil water profile from BioCro function to CROPCENT.soil \par
708                * \par
709                * (2) Assign Average Soil Properties to each layer of the soilprofile of cropcentlayer\par
710                * \par
711                * (2) Now we have updated plant biomass and litter content of each component.We need to input litter (based on a user defined \par
712                *     falling rate) to soil biogeochemical cycle and perform decomposition of soil organic pool for today. Important thing is to \par
713                *     use correct C:N ratio of litter, call SCHEDULING FUNCTION to modify decomposition rates as per tillage implementation and \par
714                *     addition of external Fertilizers and manures etc. Output of this exercise  will be updated pools of soil organic carbon and\par
715                *     newmineral N in the top 15 cm layer.\par
716                * \par
717                * (3) I can use newmineral N pool for distributing it into multilayers then canclulate GHG emission and N leaching, and distribution\par
718                *     of mineral N in different soil layers.\par
719                * \par
720                * (4) I can calculate demand of N for today and accordingly modify mineral N content of different soil layers.\par
721                * \par
722                * (5) If There is not enough mineral N then C:N ratio of plant is modified, which will eventually result in lower productivity\par
723                *     because photosynthesis parameters are a linear function of leaf N content. Thus Limited N will reduce productivity\par
724                *\par
725                * *****************************************************************************************************************************/\par
726                 \par
727                 int FlagBiogeochem =1;// MOVE THIS UP & ALLOW IT TO VARY FROM R ENVIRONMENT\par
728  \par
729 \par
730                 if(FlagBiogeochem==1)\par
731                 \{\par
732 //                Assign_Soil_Properties_To_CropCent(bulkd,swclimit,fieldc,pH,tcoeff, baseflow,stormflow,frlechd,&CROPCENT);\par
733                 Copy_SoilWater_BioCro_To_CropCent(&soilMLS,&CROPCENT);\par
734 //                Rprintf("soilMLS.dpthmn[1]=%f,CROPCENT.soilprofile.properties.dpthmn[1]=%f\\n",soilMLS.dpthmn[1],CROPCENT.soilprofile.properties.dpthmn[1]);\par
735 //                CalculateBiogeochem(&miscanthus, &CROPCENT,&dailyclimate);\par
736                 \}\par
737               \par
738                /******************* This part can go to a Separate Function - Nremobilization**************************************************/\par
739                \par
740                /*********This Part is to Model N response on Productivity**********************************************************************\par
741                *   D=getTodayNDemand(&miscanthus) all positive partitioning for nutrients or non-decreasing N concentration\par
742                *   S=getTodayInternalNSupply(&miscanthus) due to mobilization from senescing plant organs or phenology (Rhizome in the beginning, leaf & Stem in the end)\par
743                *   if(S>D) satisfy all demand and remaining S will go to rhizome (storage organ)\par
744                *   if(S<D) && (D-S)< soil Mineral N total\par
745                *   Meet all the D and reduce soil mineral N by (D-S)\par
746                *   if (S<D) && (D-S) > soil mineral N total\par
747                *   make soil Mineral N = 0\par
748                *   reduce all the N supply bu a factor k such that k*D-S= soil mineral\par
749                *   Meet only a fraction(k) of demand D and reduce nutrient concentration of all the elements\par
750                *  *******************************************************************************************************************************   \par
751                * This reduced C:N ratio of leaf will eventually reduce photosynthesis as photosynthesis parameters are expressed in terms of SLN\par
752                * *******************************************************************************************************************************/   \par
753       \par
754          for(i3=0;i3<soillayers;i3++)\par
755           \{\par
756             soilMLS.dailyWflux[i3]=0.0;  \par
757           \}\par
758                         \par
759        printcropcentout(CROPCENT,\par
760                         &REAL(totalSOC)[dap],\par
761                         &REAL(strucc1)[dap],\par
762                         &REAL(strucc2)[dap],\par
763                         &REAL(metabc1)[dap],\par
764                         &REAL(metabc2)[dap],\par
765                         &REAL(som1c1)[dap],\par
766                         &REAL(som1c2)[dap],\par
767                         &REAL(som2c1)[dap],\par
768                         &REAL(som2c2)[dap],\par
769                         &REAL(som3c)[dap],\par
770                         &REAL(minN)[dap]);\par
771 \par
772 \par
773 /***************************************************************************/\par
774    REAL(GPP)[dap]=miscanthus.GPP;\par
775    REAL(LeafDarkResp)[dap]=miscanthus.autoresp.leafdarkresp;\par
776    REAL(StemMResp)[dap]=miscanthus.autoresp.stemmaint;\par
777    REAL(RootMResp)[dap]=miscanthus.autoresp.rootmaint;\par
778    REAL(RhizomeMResp)[dap]=miscanthus.autoresp.rhizomemaint;\par
779    REAL(autoRESP)[dap]= miscanthus.autoresp.total;\par
780    miscanthus.NPP=miscanthus.GPP-miscanthus.autoresp.total;\par
781    REAL(NPP)[dap]=miscanthus.NPP;\par
782    REAL(Stemd)[dap]=miscanthus.stem.biomass;\par
783    REAL(Leafd)[dap]=miscanthus.leaf.biomass;\par
784    REAL(Rootd)[dap]=miscanthus.root.biomass;\par
785    REAL(Rhizomed)[dap]=miscanthus.rhizome.biomass;\par
786    REAL(Stemlitterd)[dap]=miscanthus.stem.litter;\par
787    REAL(Leaflitterd)[dap]=miscanthus.leaf.litter;\par
788    REAL(Rootlitterd)[dap]=miscanthus.root.litter;\par
789    REAL(Rhizomelitterd)[dap]=miscanthus.rhizome.litter;\par
790    REAL(DayafterPlanting)[dap]=dap;  \par
791    REAL(GDD)[dap]=accumulatedGDD;\par
792    REAL(LAId)[dap]=LAI;\par
793    \par
794     miscanthus.autoresp.leafdarkresp=0.0;\par
795     miscanthus.autoresp.stemmaint=0.0;\par
796     miscanthus.autoresp.rootmaint=0.0;\par
797     miscanthus.autoresp.rhizomemaint=0.0;  \par
798     miscanthus.GPP=0;\par
799     miscanthus.NPP=0;\par
800     dailynetassim=0.0;\par
801     dailyGPP=0.0;\par
802     dap+=1;\par
803                 \}\par
804 \par
805 \par
806 \par
807                 MinNitro = centS.MinN; /* These should be kg / m^2 per week? */\par
808                 Resp = centS.Resp;\par
809                 SCCs[0] = centS.SCs[0];\par
810                 SCCs[1] = centS.SCs[1];\par
811                 SCCs[2] = centS.SCs[2];\par
812                 SCCs[3] = centS.SCs[3];\par
813                 SCCs[4] = centS.SCs[4];\par
814                 SCCs[5] = centS.SCs[5];\par
815                 SCCs[6] = centS.SCs[6];\par
816                 SCCs[7] = centS.SCs[7];\par
817                 SCCs[8] = centS.SCs[8];\par
818 \par
819 \par
820 \par
821                 ALitter = LeafLitter + StemLitter;\par
822                 BLitter = RootLitter + RhizomeLitter;\par
823     \par
824                 /* Here I could add a soil and nitrogen carbon component. I have soil\par
825                    moisture, I have temperature and root and rhizome biomass */\par
826 \par
827                 REAL(DayofYear)[i] =  INTEGER(DOY)[i];\par
828                 REAL(Hour)[i] =  INTEGER(HR)[i];\par
829                 REAL(CanopyAssim)[i] =  CanopyA;\par
830                 REAL(CanopyTrans)[i] =  CanopyT; \par
831                 REAL(Leafy)[i] = miscanthus.leaf.biomass; //Leaf;\par
832                 REAL(Stemy)[i] = miscanthus.stem.biomass; // Stem;\par
833                 REAL(Rooty)[i] =  miscanthus.root.biomass; //Root;\par
834                 REAL(Rhizomey)[i] = miscanthus.rhizome.biomass; //Rhizome;\par
835                 REAL(Grainy)[i] = Grain;\par
836                 REAL(LAIc)[i] = LAI;\par
837                 REAL(SoilWatCont)[i] = waterCont;\par
838                 REAL(StomatalCondCoefs)[i] = StomWS;\par
839                 REAL(LeafReductionCoefs)[i] = LeafWS;\par
840                 REAL(LeafNitrogen)[i] = LeafN;\par
841                 REAL(AboveLitter)[i] = ALitter;\par
842                 REAL(BelowLitter)[i] = BLitter;\par
843                 REAL(VmaxVec)[i] = vmax1;\par
844                 REAL(AlphaVec)[i] = alpha1;\par
845                 REAL(SpVec)[i] = Sp;\par
846                 REAL(MinNitroVec)[i] = MinNitro/ (24*centTimestep);\par
847                 REAL(RespVec)[i] = Resp / (24*centTimestep);\par
848                 REAL(SoilEvaporation)[i] = soilEvap;\par
849                 REAL(LeafPsimVec)[i] = LeafPsim;\par
850     \par
851 \}\par
852 \par
853 /* Populating the results of the Century model */\par
854 \par
855                 REAL(SCpools)[0] = centS.SCs[0];\par
856                 REAL(SCpools)[1] = centS.SCs[1];\par
857                 REAL(SCpools)[2] = centS.SCs[2];\par
858                 REAL(SCpools)[3] = centS.SCs[3];\par
859                 REAL(SCpools)[4] = centS.SCs[4];\par
860                 REAL(SCpools)[5] = centS.SCs[5];\par
861                 REAL(SCpools)[6] = centS.SCs[6];\par
862                 REAL(SCpools)[7] = centS.SCs[7];\par
863                 REAL(SCpools)[8] = centS.SCs[8];\par
864 \par
865                 REAL(SNpools)[0] = centS.SNs[0];\par
866                 REAL(SNpools)[1] = centS.SNs[1];\par
867                 REAL(SNpools)[2] = centS.SNs[2];\par
868                 REAL(SNpools)[3] = centS.SNs[3];\par
869                 REAL(SNpools)[4] = centS.SNs[4];\par
870                 REAL(SNpools)[5] = centS.SNs[5];\par
871                 REAL(SNpools)[6] = centS.SNs[6];\par
872                 REAL(SNpools)[7] = centS.SNs[7];\par
873                 REAL(SNpools)[8] = centS.SNs[8];\par
874 \par
875         SET_VECTOR_ELT(lists,0,DayofYear);\par
876         SET_VECTOR_ELT(lists,1,Hour);\par
877         SET_VECTOR_ELT(lists,2,CanopyAssim);\par
878         SET_VECTOR_ELT(lists,3,CanopyTrans);\par
879         SET_VECTOR_ELT(lists,4,Leafy);\par
880         SET_VECTOR_ELT(lists,5,Stemy);\par
881         SET_VECTOR_ELT(lists,6,Rooty);\par
882         SET_VECTOR_ELT(lists,7,Rhizomey);\par
883         SET_VECTOR_ELT(lists,8,Grainy);\par
884         SET_VECTOR_ELT(lists,9,LAIc);\par
885         SET_VECTOR_ELT(lists,10,TTTc);\par
886         SET_VECTOR_ELT(lists,11,SoilWatCont);\par
887         SET_VECTOR_ELT(lists,12,StomatalCondCoefs);\par
888         SET_VECTOR_ELT(lists,13,LeafReductionCoefs);\par
889         SET_VECTOR_ELT(lists,14,LeafNitrogen);\par
890         SET_VECTOR_ELT(lists,15,AboveLitter);\par
891         SET_VECTOR_ELT(lists,16,BelowLitter);\par
892         SET_VECTOR_ELT(lists,17,VmaxVec);\par
893         SET_VECTOR_ELT(lists,18,AlphaVec);\par
894         SET_VECTOR_ELT(lists,19,SpVec);\par
895         SET_VECTOR_ELT(lists,20,MinNitroVec);\par
896         SET_VECTOR_ELT(lists,21,RespVec);\par
897         SET_VECTOR_ELT(lists,22,SoilEvaporation);\par
898         SET_VECTOR_ELT(lists,23,cwsMat);\par
899         SET_VECTOR_ELT(lists,24,psimMat);\par
900         SET_VECTOR_ELT(lists,25,rdMat);\par
901         SET_VECTOR_ELT(lists,26,SCpools);\par
902         SET_VECTOR_ELT(lists,27,SNpools);\par
903         SET_VECTOR_ELT(lists,28,LeafPsimVec);\par
904   SET_VECTOR_ELT(lists,29,DayafterPlanting);\par
905   SET_VECTOR_ELT(lists,30,GDD);\par
906   SET_VECTOR_ELT(lists,31,GPP);\par
907   SET_VECTOR_ELT(lists,32,NPP);\par
908   SET_VECTOR_ELT(lists,33,autoRESP);  \par
909   SET_VECTOR_ELT(lists,34,hetRESP);\par
910   SET_VECTOR_ELT(lists,35,NER);\par
911   SET_VECTOR_ELT(lists,36,StemMResp);\par
912   SET_VECTOR_ELT(lists,37,RootMResp);\par
913   SET_VECTOR_ELT(lists,38,RhizomeMResp);\par
914   SET_VECTOR_ELT(lists,39,LeafDarkResp);\par
915   SET_VECTOR_ELT(lists,40,Stemd);\par
916   SET_VECTOR_ELT(lists,41,Leafd);\par
917   SET_VECTOR_ELT(lists,42,Rootd);\par
918   SET_VECTOR_ELT(lists,43,Rhizomed);\par
919   SET_VECTOR_ELT(lists,44,Stemlitterd);\par
920   SET_VECTOR_ELT(lists,45,Leaflitterd);\par
921   SET_VECTOR_ELT(lists,46,Rootlitterd);\par
922   SET_VECTOR_ELT(lists,47,Rhizomelitterd);\par
923   SET_VECTOR_ELT(lists,48,LAId);\par
924   SET_VECTOR_ELT(lists,49,totalSOC);\par
925   SET_VECTOR_ELT(lists,50,strucc1);\par
926   SET_VECTOR_ELT(lists,51,strucc2);\par
927   SET_VECTOR_ELT(lists,52,metabc1);\par
928   SET_VECTOR_ELT(lists,53,metabc1);\par
929   SET_VECTOR_ELT(lists,54,som1c1);\par
930   SET_VECTOR_ELT(lists,55,som1c2);\par
931   SET_VECTOR_ELT(lists,56,som2c1);\par
932   SET_VECTOR_ELT(lists,57,som2c2);\par
933   SET_VECTOR_ELT(lists,58,som3c);\par
934   SET_VECTOR_ELT(lists,59,minN);\par
935   SET_VECTOR_ELT(lists,60,waterfluxMat);\par
936 \par
937 \par
938         SET_STRING_ELT(names,0,mkChar("DayofYear"));\par
939         SET_STRING_ELT(names,1,mkChar("Hour"));\par
940         SET_STRING_ELT(names,2,mkChar("CanopyAssim"));\par
941         SET_STRING_ELT(names,3,mkChar("CanopyTrans"));\par
942         SET_STRING_ELT(names,4,mkChar("Leaf"));\par
943         SET_STRING_ELT(names,5,mkChar("Stem"));\par
944         SET_STRING_ELT(names,6,mkChar("Root"));\par
945         SET_STRING_ELT(names,7,mkChar("Rhizome"));\par
946         SET_STRING_ELT(names,8,mkChar("Grain"));\par
947         SET_STRING_ELT(names,9,mkChar("LAI"));\par
948         SET_STRING_ELT(names,10,mkChar("ThermalT"));\par
949         SET_STRING_ELT(names,11,mkChar("SoilWatCont"));\par
950         SET_STRING_ELT(names,12,mkChar("StomatalCondCoefs"));\par
951         SET_STRING_ELT(names,13,mkChar("LeafReductionCoefs"));\par
952         SET_STRING_ELT(names,14,mkChar("LeafNitrogen"));\par
953         SET_STRING_ELT(names,15,mkChar("AboveLitter"));\par
954         SET_STRING_ELT(names,16,mkChar("BelowLitter"));\par
955         SET_STRING_ELT(names,17,mkChar("VmaxVec"));\par
956         SET_STRING_ELT(names,18,mkChar("AlphaVec"));\par
957         SET_STRING_ELT(names,19,mkChar("SpVec"));\par
958         SET_STRING_ELT(names,20,mkChar("MinNitroVec"));\par
959         SET_STRING_ELT(names,21,mkChar("RespVec"));\par
960         SET_STRING_ELT(names,22,mkChar("SoilEvaporation"));\par
961         SET_STRING_ELT(names,23,mkChar("cwsMat"));\par
962         SET_STRING_ELT(names,24,mkChar("psimMat"));\par
963         SET_STRING_ELT(names,25,mkChar("rdMat"));\par
964         SET_STRING_ELT(names,26,mkChar("SCpools"));\par
965         SET_STRING_ELT(names,27,mkChar("SNpools"));\par
966         SET_STRING_ELT(names,28,mkChar("LeafPsimVec"));\par
967   SET_STRING_ELT(names,29,mkChar("DayafterPlanting"));\par
968   SET_STRING_ELT(names,30,mkChar("GDD"));\par
969   SET_STRING_ELT(names,31,mkChar("GPP"));\par
970   SET_STRING_ELT(names,32,mkChar("NPP"));\par
971   SET_STRING_ELT(names,33,mkChar("autoRESP"));\par
972   SET_STRING_ELT(names,34,mkChar("hetRESP"));\par
973   SET_STRING_ELT(names,35,mkChar("NER"));\par
974   SET_STRING_ELT(names,36,mkChar("StemMResp"));\par
975   SET_STRING_ELT(names,37,mkChar("RootMResp"));\par
976   SET_STRING_ELT(names,38,mkChar("RhizomeMResp"));\par
977   SET_STRING_ELT(names,39,mkChar("LeafDarkResp"));\par
978   SET_STRING_ELT(names,40,mkChar("Stemd"));\par
979   SET_STRING_ELT(names,41,mkChar("Leafd"));\par
980   SET_STRING_ELT(names,42,mkChar("Rootd"));\par
981   SET_STRING_ELT(names,43,mkChar("Rhizomed"));\par
982   SET_STRING_ELT(names,44,mkChar("Stemlitterd"));\par
983   SET_STRING_ELT(names,45,mkChar("Leaflitterd"));\par
984   SET_STRING_ELT(names,46,mkChar("Rootlitterd"));\par
985   SET_STRING_ELT(names,47,mkChar("Rhizomelitterd"));\par
986   SET_STRING_ELT(names,48,mkChar("LAId"));\par
987   SET_STRING_ELT(names,49,mkChar("totalSOC"));\par
988   SET_STRING_ELT(names,50,mkChar("strucc1"));\par
989   SET_STRING_ELT(names,51,mkChar("strucc2"));\par
990   SET_STRING_ELT(names,52,mkChar("metabc1"));\par
991   SET_STRING_ELT(names,53,mkChar("metabc1"));\par
992   SET_STRING_ELT(names,54,mkChar("som1c1"));\par
993   SET_STRING_ELT(names,55,mkChar("som1c2"));\par
994   SET_STRING_ELT(names,56,mkChar("som2c1"));\par
995   SET_STRING_ELT(names,57,mkChar("som2c2"));\par
996   SET_STRING_ELT(names,58,mkChar("som3c"));\par
997    SET_STRING_ELT(names,59,mkChar("minN"));\par
998    SET_STRING_ELT(names,60,mkChar("waterfluxMat"));\par
999         setAttrib(lists,R_NamesSymbol,names);\par
1000         UNPROTECT(63);\par
1001         return(lists);\par
1002 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/dailywillow.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/dailywillow.c}
{\xe \v /home/dlebauer/dev/biocro/src/dailywillow.c}
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for dailywillow.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dailywillow_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateC3treeAfterEmergence} (struct {\b c3tree} *willow, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b createNULLwillow} (struct {\b c3tree} *willow, int vecsize)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateWillowAfterHarvest} (struct {\b c3tree} *willow, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateWillowAfterEmergence} (struct {\b c3tree} *willow, struct {\b management} *{\b management})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dailywillow} (struct {\b c3tree} *willow, double coefs[25], double TherPrds[6], double TherTime, double Temp, double dailynetassim, struct {\b senthermaltemp} *senparms, struct {\b canopyparms} *{\b canopyparms}, struct {\b frostParms} *frostparms, int N, double delTT, struct {\b respirationParms} *RESP, int emergence)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v createNULLwillow\:dailywillow.c}
{\xe \v dailywillow.c\:createNULLwillow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void createNULLwillow (struct {\b c3tree} * {\i willow}, int {\i vecsize})}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\par
22    int i;\par
23    willow->leafvec=malloc((vecsize+1)*sizeof(*willow->leafvec));\par
24    willow->stemvec=malloc((vecsize+1)*sizeof(*willow->stemvec));\par
25    willow->rootvec=malloc((vecsize+1)*sizeof(*willow->rootvec));\par
26    willow->rhizomevec=malloc((vecsize+1)*sizeof(*willow->rhizomevec));\par
27   \par
28    for (i = 0; i<=vecsize;i++)\par
29    \{\par
30       willow->leafvec[i].newbiomass=0.0;\par
31       willow->leafvec[i].newlitter=0.0;\par
32        willow->leafvec[i].ageinTT=0.0;\par
33        willow->stemvec[i].newbiomass=0.0;\par
34       willow->stemvec[i].newlitter=0.0;\par
35        willow->stemvec[i].ageinTT=0.0;\par
36        willow->rootvec[i].newbiomass=0.0;\par
37       willow->rootvec[i].newlitter=0.0;\par
38        willow->rootvec[i].ageinTT=0.0;\par
39        willow->rhizomevec[i].newbiomass=0.0;\par
40       willow->rhizomevec[i].newlitter=0.0;\par
41        willow->rhizomevec[i].ageinTT=0.0;\par
42        \par
43    \}\par
44    \par
45    willow->leaf.biomass=0.0;\par
46    willow->stem.biomass=0.0;\par
47    willow->root.biomass=0.0;\par
48    willow->rhizome.biomass=0.0;\par
49    willow->leaf.litter=0.0;\par
50    willow->stem.litter=0.0;\par
51    willow->root.litter=0.0;\par
52    willow->rhizome.litter=0.0;\par
53    willow->rhizome.carbohydratefraction=0.6; // Lets assume that in the beginning carbohydrate fraction of dry biomass is  60%\par
54    return;\par
55 \}\par
}
}
{\xe \v dailywillow\:dailywillow.c}
{\xe \v dailywillow.c\:dailywillow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dailywillow (struct {\b c3tree} * {\i willow}, double {\i coefs}[25], double {\i TherPrds}[6], double {\i TherTime}, double {\i Temp}, double {\i dailynetassim}, struct {\b senthermaltemp} * {\i senparms}, struct {\b canopyparms} * {\i canopyparms}, struct {\b frostParms} * {\i frostparms}, int {\i N}, double {\i delTT}, struct {\b respirationParms} * {\i RESP}, int {\i emergence})}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85 \{\par
86 \par
87   double remobStem,remobRoot,remobRhiz;\par
88   remobStem=canopyparms->remobFac;\par
89   remobRoot=canopyparms->remobFac;\par
90   remobRhiz=canopyparms->remobFac;\par
91   double deadleaf,deadstem,deadroot,deadrhiz;\par
92   double dailysenesced;\par
93   double remobilized;\par
94   double totalassimilate;\par
95   struct crop_phenology cropdbp;\par
96   double newleaf,newstem,newrhiz,newroot;\par
97   double kLeaf,kStem,kRoot,kRhizome;\par
98   double newLeaf,newStem,newRhizome,newRoot;\par
99   double newLeaflitter,newStemlitter,newRhizomelitter,newRootlitter;\par
100   double totalmaintenance;\par
101   double RemobilizedFromLitter,RemobilizedFromRhizome;\par
102   double SumofKpart,Dailybalance;\par
103 \par
104 // double getStemSenescence(struct stem *stem, struct littervec *littervec, double criticalTT, double Temp, double remobfa, struct frostParms *frostparms, int N)\par
105  // calculate senescing biomass for today based on Thermal Time, N conce. and Frost conditions \par
106  \par
107    getfrostparms(frostparms);\par
108    getsenescenceparms(senparms);\par
109    \par
110    \par
111    if(emergence ==1)\par
112    \{\par
113           cropcent_dbp(coefs,TherPrds,TherTime, &cropdbp);\par
114           kLeaf = cropdbp.DBP.kLeaf;\par
115           kStem = cropdbp.DBP.kStem;\par
116           kRoot = cropdbp.DBP.kRoot;\par
117           kRhizome = cropdbp.DBP.kRhiz;\par
118 \par
119            // calculate senescence, Remobilization due to senescece will contribute to growth of new plant organs\par
120           deadleaf=getLeafSenescence(&willow->leaf,senparms->leafcriticalT,senparms->leaffr, Temp, frostparms,TherTime,canopyparms);\par
121           deadstem=getStemSenescence(&willow->stem,senparms->stemcriticalT,senparms->stemfr, Temp, frostparms,TherTime);\par
122           deadroot=getRootSenescence(&willow->root, senparms->rootcriticalT,senparms->rootfr, Temp, frostparms,TherTime);\par
123           deadrhiz=getRhizomeSenescence(&willow->rhizome,senparms->rhizomecriticalT,senparms->rhizomefr, Temp, frostparms,TherTime);    \par
124           dailysenesced=deadleaf+deadstem+deadroot+deadrhiz;\par
125           //Calculate how much of dead biomass is remobilized based on a remobilization factor\par
126           RemobilizedFromLitter = dailysenesced*canopyparms->remobFac; // assuming all the dead organs remobilizes same fraction\par
127          \par
128          // Check and calculate whether carbohydrate in Rhizome is being remobilized baksed on K(negative value of partitioning coefficient)\par
129          if(kRhizome>=0)\par
130           \{\par
131             RemobilizedFromRhizome=0;          \par
132           \}\par
133           else\par
134           \{\par
135             // I need to multiply by (-1) because kRhizome is negative\par
136             RemobilizedFromRhizome=(-1)*kRhizome*willow->rhizome.biomass;\par
137           \}\par
138           \par
139           // Total maintenance respiration, which is a temperature dependet function of existing biomass\par
140           totalmaintenance=willow->autoresp.stemmaint+willow->autoresp.rootmaint+willow->autoresp.rhizomemaint;\par
141           // Total assimilate includes net canopy assimilation and remobilization from litter and rhizome, also it must satisfy total maintenance respiration\par
142           totalassimilate=dailynetassim+RemobilizedFromLitter+RemobilizedFromRhizome-totalmaintenance;\par
143           \par
144           // If total assimilate for growth (& growth respiration) is negative then this is provided by rhizome only (storage carb.) leaving other parts intacts\par
145           if(totalassimilate<=0.0)\par
146           \{\par
147           newLeaf=0.0;\par
148           willow->autoresp.stemgrowth=0.0;\par
149           newStem=0.0;\par
150           willow->autoresp.rootgrowth=0.0;\par
151           newRoot=0.0;\par
152           willow->autoresp.rhizomegrowth=0.0;\par
153           // New rhizome must provide for total negative assimilate. Also we need to update remobilization\par
154           newRhizome=totalassimilate+RemobilizedFromRhizome;\par
155           willow->autoresp.rhizomegrowth=0.0;\par
156           \}\par
157           else\par
158           \{\par
159           SumofKpart=((kLeaf>0)?kLeaf:0)+((kStem>0)?kStem:0)+((kRoot>0)?kRoot:0)+((kRhizome>0)?kRhizome:0);\par
160             if((SumofKpart-1.0)>1e-10)\par
161             \{\par
162 //            Rprintf("Kleaf=%f,kStem=%f,kRoot=%f,kRhiz=%f, Sum=%f\\n",kLeaf,kStem,kRoot,kRhizome,SumofKpart);\par
163  //           error("Sum of Positive partitioning coefficient is not one");\par
164             \par
165             \}\par
166           newLeaf=newbiomass(totalassimilate,kLeaf,0.0);          \par
167           newStem=newbiomass(totalassimilate,kStem,RESP->growth.stem);\par
168           willow->autoresp.stemgrowth=CalculateGrowthResp(newStem,RESP->growth.stem);\par
169           newRoot=newbiomass(totalassimilate,kRoot,RESP->growth.root);\par
170           willow->autoresp.rootgrowth=CalculateGrowthResp(newRoot,RESP->growth.stem);\par
171           // Make sure that remobilization termis taken care of in the calculation of newRhizome\par
172           newRhizome=(kRhizome>0)?newbiomass(totalassimilate,kRhizome,RESP->growth.rhizome):(-1)*RemobilizedFromRhizome;\par
173           \par
174           willow->autoresp.rhizomegrowth=CalculateGrowthResp(newRhizome,RESP->growth.stem);\par
175           \}\par
176            \par
177          // Now we know growth respiration of each component & we can update total autotrophic respiration\par
178           willow->autoresp.total=willow->autoresp.leafdarkresp+totalmaintenance+willow->autoresp.stemgrowth+willow->autoresp.rootgrowth+willow->autoresp.rhizomegrowth;\par
179          // Here, we are updating net primary productivity\par
180          willow->NPP=willow->GPP-willow->autoresp.total;\par
181           \par
182         // Here, we are evaluating new litter, This is fraction of dead biomass which was not remobilized  \par
183           newLeaflitter=(deadleaf>0)?deadleaf*(1-canopyparms->remobFac):0.0;\par
184           newStemlitter=(deadleaf>0)?deadstem*(1-canopyparms->remobFac):0.0;\par
185           newRootlitter=(deadroot>0)?deadroot*(1-canopyparms->remobFac):0.0;\par
186           newRhizomelitter=(deadrhiz>0)?deadrhiz*(1-canopyparms->remobFac):0.0;\par
187           \par
188 \par
189          Dailybalance=newLeaf- deadleaf+newRoot- deadroot+newStem- deadstem+newRhizome- deadrhiz+newLeaflitter+newStemlitter+newRootlitter + newRhizomelitter;\par
190          Dailybalance=Dailybalance-willow->NPP;\par
191          if(Dailybalance>1e-10)\par
192           \{\par
193           /*\par
194           Rprintf("\\nNPP and Daily Change inBiomass is not matching & difference is %f\\n", Dailybalance);\par
195           Rprintf("Thermal Time = %f, GPP = %f, Autotrophic Respiration = %f, NPP = %f, Remobilized from Litter = %f, Remobilized from Rhizome = %f \\n", TherTime,willow->GPP, willow->autoresp.total,willow->NPP,RemobilizedFromLitter,RemobilizedFromRhizome);\par
196           Rprintf("kLeaf=%f, kstem=%f, kRoot=%f, kRhizome=%f \\n", kLeaf, kStem, kRoot,kRhizome);\par
197           Rprintf("NewLeaf = %f Dead Leaf=%f, newLeafLitter=%f\\n",newLeaf, deadleaf,newLeaflitter); \par
198           Rprintf("NewStem = %f Dead Stem=%f, newStemLitter=%f\\n",newStem, deadstem,newStemlitter);\par
199           Rprintf("NewRoot = %f Dead Root=%f, newRootLitter=%f\\n",newRoot, deadroot,newRootlitter);\par
200           Rprintf("NewRhizome = %f Dead Rhizome=%f, newRhizomeLitter=%f\\n",newRhizome, deadrhiz,newRhizomelitter);\par
201           Rprintf("LeafDarkResp=%f, Total maintenance (ExceptLeaf) = %f, StemGrowthResp=%f, RootGrowthResp=%f, RhizGrowthResp=%f\\n",willow->autoresp.leafdarkresp,totalmaintenance,willow->autoresp.stemgrowth,willow->autoresp.rootgrowth,willow->autoresp.rhizomegrowth);\par
202               Rprintf("Daily Biomas Balance Gain = %f", Dailybalance);\par
203               Rprintf("--------Emergence= %i-, N= %i---------------------\\n",emergence, N);\par
204           */\par
205           \}\par
206 \par
207           // Adding new biomass of green components\par
208           UpdateStandingbiomass(&willow->leaf.biomass, newLeaf);\par
209           UpdateStandingbiomass(&willow->stem.biomass, newStem);\par
210           UpdateStandingbiomass(&willow->root.biomass, newRoot);\par
211           UpdateStandingbiomass(&willow->rhizome.biomass, newRhizome);\par
212           \par
213           // Subtracting dead biomass from the green components\par
214           // before thant I must multiply all the dead leaf components by -1, so I can still use \par
215           // Updatestandingbiomass function for SUBTRACTING instead of ADDING\par
216           \par
217           deadleaf*=(-1);\par
218           deadstem*=(-1);\par
219           deadroot*=(-1);\par
220           deadrhiz*=(-1);\par
221           \par
222           UpdateStandingbiomass(&willow->leaf.biomass, deadleaf);\par
223           UpdateStandingbiomass(&willow->stem.biomass, deadstem);\par
224           UpdateStandingbiomass(&willow->root.biomass, deadroot);\par
225           UpdateStandingbiomass(&willow->rhizome.biomass, deadrhiz);\par
226           \par
227           \par
228           // Updating standing biomass of litter  components\par
229           UpdateStandingbiomass(&willow->leaf.litter, newLeaflitter);\par
230           UpdateStandingbiomass(&willow->stem.litter, newStemlitter);\par
231           UpdateStandingbiomass(&willow->root.litter, newRootlitter);\par
232           UpdateStandingbiomass(&willow->rhizome.litter, newRhizomelitter);\par
233           \par
234         \par
235           \par
236    \}\par
237    else // Dormant stange simulation, where rhizome provides for respiration loss\par
238    \{\par
239           willow->stem.biomass=0.0;\par
240           willow->autoresp.stemgrowth=0;\par
241           willow->leaf.biomass=0.0;\par
242           willow->autoresp.leafdarkresp=0.0;\par
243           \par
244           //Perhaps I can implement senescence rate of belowground components during dormant stage?\par
245 //          willow->root.biomass=0.0;\par
246           willow->autoresp.rootgrowth=0;\par
247 //          willow->rhizome.biomass=0.0;\par
248           willow->autoresp.rhizomegrowth=0;\par
249           \par
250           totalmaintenance=willow->autoresp.stemmaint+willow->autoresp.rootmaint+willow->autoresp.rhizomemaint;\par
251           willow->autoresp.total=willow->autoresp.leafdarkresp+totalmaintenance+willow->autoresp.stemgrowth+willow->autoresp.rootgrowth+willow->autoresp.rhizomegrowth;\par
252           willow->NPP=willow->GPP-willow->autoresp.total;\par
253           newRhizome=(-1)* willow->autoresp.total;\par
254           UpdateStandingbiomass(&willow->rhizome.biomass, newRhizome);\par
255           if(willow->rhizome.biomass <0)error("rhizome has become negative");\par
256    \} \par
257     return;\par
258 \}\par
}
}
{\xe \v UpdateC3treeAfterEmergence\:dailywillow.c}
{\xe \v dailywillow.c\:UpdateC3treeAfterEmergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateC3treeAfterEmergence (struct {\b c3tree} * {\i willow}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13   willow->leaf.biomass=(management->emergenceparms.StoragetoLeaffraction)* willow->rhizome.biomass +\par
14                       (management->emergenceparms.StemtoLeaffraction)* willow->stem.biomass;\par
15   willow->rhizome.biomass= (1-management->emergenceparms.StoragetoLeaffraction)*willow->rhizome.biomass;\par
16   willow->stem.biomass=(1-management->emergenceparms.StemtoLeaffraction)* willow->stem.biomass;\par
17   return;\par
18 \}\par
}
}
{\xe \v UpdateWillowAfterEmergence\:dailywillow.c}
{\xe \v dailywillow.c\:UpdateWillowAfterEmergence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateWillowAfterEmergence (struct {\b c3tree} * {\i willow}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74 \{\par
75   willow->leaf.biomass= willow->stem.biomass*management->emergenceparms.StemtoLeaffraction + willow->rhizome.biomass*management->emergenceparms.StoragetoLeaffraction;\par
76   willow->stem.biomass=(1-management->emergenceparms.StemtoLeaffraction)*willow->stem.biomass;\par
77   willow->rhizome.biomass=(1-management->emergenceparms.StoragetoLeaffraction)*willow->rhizome.biomass;\par
78   return;\par
79 \}\par
}
}
{\xe \v UpdateWillowAfterHarvest\:dailywillow.c}
{\xe \v dailywillow.c\:UpdateWillowAfterHarvest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void UpdateWillowAfterHarvest (struct {\b c3tree} * {\i willow}, struct {\b management} * {\i management})}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58 \{\par
59   willow->leaf.biomass=(1-management->harvestparms.frleaf)*willow->leaf.biomass;\par
60   willow->leaf.litter=(1-management->harvestparms.frleaflitter)*willow->leaf.litter;\par
61   \par
62   willow->stem.biomass=(1-management->harvestparms.frstem)*willow->stem.biomass;\par
63   willow->stem.litter=(1-management->harvestparms.frstemlitter)*willow->stem.litter;\par
64   \par
65   willow->root.biomass=(1-management->harvestparms.frdeadroot)*willow->root.biomass;\par
66   willow->root.litter=management->harvestparms.frdeadroot*willow->root.biomass;\par
67   \par
68   willow->rhizome.biomass=(1-management->harvestparms.frdeadrhizome)*willow->rhizome.biomass;\par
69   willow->rhizome.litter=management->harvestparms.frdeadrhizome*willow->rhizome.biomass;\par
70   return;\par
71 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/denitrify.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/denitrify.c}
{\xe \v /home/dlebauer/dev/biocro/src/denitrify.c}
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "n2o_model.h"}\par
{\f2 #include "soilwater.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for denitrify.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "denitrify_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b M_PI}\~ 3.1415926536\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b denitrify} (double *newCO2, double *newNO3, double nitrate[{\b MAXLYR}], double wfluxout[{\b MAXLYR}], double *critflow, double frlechd[], double stream[], double *basef, double *stormf, double *inorglch, double *Dn2oflux, double *Dn2flux, double stdfieldc, double stdbulkd, double dN2lyr[], double dN2Olyr[], int *jday, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v M_PI\:denitrify.c}
{\xe \v denitrify.c\:M_PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define M_PI\~ 3.1415926536}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v denitrify\:denitrify.c}
{\xe \v denitrify.c\:denitrify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void denitrify (double * {\i newCO2}, double * {\i newNO3}, double {\i nitrate}[MAXLYR], double {\i wfluxout}[MAXLYR], double * {\i critflow}, double {\i frlechd}[], double {\i stream}[], double * {\i basef}, double * {\i stormf}, double * {\i inorglch}, double * {\i Dn2oflux}, double * {\i Dn2flux}, double {\i stdfieldc}, double {\i stdbulkd}, double {\i dN2lyr}[], double {\i dN2Olyr}[], int * {\i jday}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers})}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147     \{ \par
148       int    debug;\par
149       int    ilyr;\par
150       double a;\par
151       double fDno3; \par
152       double fDco2; \par
153       double fDwfps; \par
154       double Dtotflux; \par
155       double fRno3_co2;\par
156       double fRwfps;\par
157       double A[4];\par
158       double ntotflux[MAXLYR];\par
159       double n2oflux;\par
160       double grams_soil[MAXLYR];\par
161       double nitratePPM[MAXLYR];\par
162       double wfps_fc[MAXLYR];\par
163       double co2PPM[MAXLYR];\par
164       double co2_correction[MAXLYR];\par
165       double Rn2n2o;\par
166       double n2ofrac, n2frac;\par
167       double excess;\par
168       double min_nitrate;\par
169       double min_nitrate_end;\par
170       double fluxout;\par
171       double K;\par
172       double k[MAXLYR], ksum;\par
173       double k1, M;\par
174       double  dD0_fc;\par
175       double  x_inflection;\par
176       double  WFPS_threshold;\par
177       double ug_per_gram;\par
178       double grams_per_ug;\par
179       double  CM_per_METER;\par
180 \par
181 /*\par
182       extern LAYERPAR_SPT layers;\par
183       extern SITEPAR_SPT sitepar;\par
184 */\par
185       /* Initializations */\par
186       debug = 0;\par
187       min_nitrate = 0.1;\par
188       min_nitrate_end = 0.05;\par
189       K = -0.1;\par
190       ug_per_gram = 1.0E6;\par
191       grams_per_ug = 1.0E-6;\par
192       CM_per_METER = 100.0;\par
193       for (ilyr=0; ilyr < MAXLYR; ilyr++) \{\par
194         co2PPM[ilyr] = 0.0;\par
195         dN2lyr[ilyr] = 0.0;\par
196         dN2Olyr[ilyr] = 0.0;\par
197       \}\par
198 \par
199       *Dn2oflux = 0.0;\par
200       *Dn2flux = 0.0;\par
201 \par
202       ksum = 0.0;\par
203       for (ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
204 /*        k[ilyr] = exp(K*layers->dpthmn[ilyr]) -  exp(K*layers->dpthmx[ilyr]); */\par
205         /* Use rooting density from soils.in file to weight CO2 by depth, */\par
206         /* cak - 04/07/04 */\par
207         k[ilyr] = max(layers->tcoeff[ilyr], 0.001);\par
208         ksum += k[ilyr];\par
209         ntotflux[ilyr] = 0.0;\par
210       \}\par
211 \par
212       for (ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
213         k[ilyr] /= ksum;\par
214         nitrate[ilyr] += k[ilyr] * (*newNO3);\par
215       \}\par
216       /* newNO3 used up after being distributed thru the soil profile */\par
217       *newNO3 = 0;\par
218 \par
219       wfps(layers);\par
220 \par
221       /* Mineral leaching */\par
222         \par
223       leachdly(wfluxout, layers->numlyrs, nitrate, *critflow, frlechd, stream,\par
224                *basef, *stormf, inorglch);\par
225 \par
226       for (ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
227 \par
228         /* Denitrification occurs over all layers */\par
229         /* Convert nitrate (gN/m2) to nitratePPM (ppm N) */\par
230         grams_soil[ilyr] = layers->bulkd[ilyr] * layers->width[ilyr] *\par
231                            CM_per_METER * CM_per_METER;\par
232         nitratePPM[ilyr] = nitrate[ilyr] / grams_soil[ilyr] * ug_per_gram;\par
233         if (nitratePPM[ilyr] < min_nitrate) \{\par
234           if (debug) \{\par
235             fprintf(stdout, "CANNOT DENITRIFY layer %1d, nitrate[%1d] = %f\\n",\par
236                     ilyr, ilyr, nitrate[ilyr]);\par
237           \}\par
238           continue;\par
239         \}\par
240         co2PPM[ilyr] = k[ilyr] * (*newCO2) / grams_soil[ilyr] *\par
241                        ug_per_gram;\par
242 /*        wfps_fc[ilyr] = stdfieldc / (1.0 - stdbulkd/PARTDENS); */\par
243         wfps_fc[ilyr] = layers->fieldc[ilyr] /\par
244                         (1.0 - layers->bulkd[ilyr]/PARTDENS);\par
245 /*        dD0_fc = diffusiv(&stdfieldc, &stdbulkd, &wfps_fc[ilyr]); */\par
246         /* dD0 calc changed 6/20/00 -mdh */\par
247         dD0_fc = diffusiv(&layers->fieldc[ilyr], &layers->bulkd[ilyr],\par
248                           &wfps_fc[ilyr]);\par
249         WFPS_threshold = (dD0_fc >= 0.15) ? 0.80 : (dD0_fc*250 + 43)/100;\par
250         if (layers->wfps[ilyr] <= WFPS_threshold) \{\par
251           co2_correction[ilyr] =  co2PPM[ilyr];\par
252         \} else \{\par
253           a = (dD0_fc >= 0.15) ? 0.004 : (-0.1 * dD0_fc + 0.019);\par
254           co2_correction[ilyr] = co2PPM[ilyr] * (1.0 + a *\par
255                                  (layers->wfps[ilyr] - WFPS_threshold)*100);\par
256         \}\par
257 \par
258         /* Compute the Nitrate effect on Denitrification */\par
259         /* Changed NO3 effect on denitrification based on */\par
260         /* paper  "General model for N2O and N2 gas emissions from */\par
261         /* soils due to denitrification", Del Grosso et. al, GBC, */\par
262         /* 12/00,  -mdh 5/16/00 */\par
263 \par
264 /*        fDno3 = 1.15 * pow(nitratePPM[ilyr], 0.57);*/\par
265         A[0] = 9.23;\par
266         A[1] = 1.556;\par
267         A[2] = 76.91;\par
268         A[3] = 0.00222;\par
269 \par
270         fDno3 = f_arctangent(nitratePPM[ilyr], A);\par
271         fDno3 = max(0.0, fDno3);\par
272 \par
273         /* Compute the Carbon Dioxide effect on Denitrification */\par
274         /* (fDco2, ppm N) */\par
275         /* Changed CO2 effect on denitrification based on */\par
276         /* paper "General model for N2O and N2 gas emissions from */\par
277         /* soils due to denitrification", Del Grosso et. al, GBC, */\par
278         /* 12/00,  -mdh 5/16/00 */\par
279 \par
280 /*        fDco2 = 0.1 * pow(co2PPM[ilyr], 1.3);*/\par
281         /* The CO2 effect calculation should take into account the */\par
282         /* corrected CO2 concentration, cak - 07/31/02 */\par
283 /*        fDco2 = max(0.0, ((0.1 * pow(co2PPM[ilyr], 1.3)) - min_nitrate)); */\par
284         fDco2 = max(0.0,\par
285                     ((0.1 * pow(co2_correction[ilyr], 1.3)) - min_nitrate));\par
286 \par
287         /* Compute wfps effect on denitrification, (fDwfps, 0-1) */\par
288         /* Changed wfps effect on denitrification based on */\par
289         /* paper "General model for N2O and N2 gas emissions from */\par
290         /* soils due to denitrification", Del Grosso et. al, GBC, */\par
291         /* 12/00,  -mdh 5/16/00 */\par
292 \par
293         M = min(0.113, dD0_fc) * (-1.25) + 0.145;\par
294         /* The x_inflection calculation should take into account the */\par
295         /* corrected CO2 concentration, cak - 07/31/02 */\par
296 /*        x_inflection = (9.0 - M); */\par
297         x_inflection = (9.0 - M * co2_correction[ilyr]);\par
298 \par
299         /* Changed fDwfps calculation - cak - 9/18/00 */\par
300 /*        fDwfps = 0.5 +\par
301                  (atan(0.6*M_PI*(0.1*layers->wfps[ilyr]*100-x_inflection))) /\par
302                  M_PI; */\par
303         fDwfps = (0.45 +\par
304                          (atan(0.6*M_PI*(10.0*layers->wfps[ilyr]-\par
305                           x_inflection))) / M_PI);\par
306         fDwfps = max(0.0, fDwfps);\par
307 \par
308         if (debug) \{\par
309           fprintf(stdout, "\\n%6s  %6s  %6s\\n","fDwfps","fDno3","fDco2");\par
310           fprintf(stdout, "%6.4lf  %6.4lf  %6.4lf\\n", fDwfps,fDno3,fDco2); \par
311         \}\par
312    \par
313         /* Compute the N fluxes (N2 + N2O) for the current layer, ppm N */\par
314         /* If desired, do not include CO2 effect on denitrification between */\par
315         /* given Julian days, cak - 02/19/04 */\par
316         if (*jday >= sitepar->jdayStart && *jday <= sitepar->jdayEnd) \{\par
317           Dtotflux = fDno3;\par
318         \} else \{\par
319           Dtotflux = (fDno3 < fDco2) ? fDno3 : fDco2;\par
320         \}\par
321 \par
322         /* Minimum value for potential denitrification in top 2 soil layers */\par
323         /* ppm N, 9/18/00 -cindyk */\par
324         if (ilyr < 2) \{\par
325           Dtotflux = max(0.066, Dtotflux);\par
326         \}\par
327         /* Account for water limitation */\par
328         Dtotflux *= fDwfps;\par
329         if (debug) \{\par
330           fprintf(stdout, "Dtotflux = %8.4lf\\n", Dtotflux);\par
331         \}\par
332 \par
333         /* Nitrate effect on the ratio of N2 to N2O.  */\par
334         /* Maximum N2/N2O ratio soil respiration function */\par
335         /* Changed the NO3 and CO2 effect on the N2/N2O ratio based on */\par
336         /* paper "General model for N2O and N2 gas emissions from */\par
337         /* soils due to denitrification", Del Grosso et. al, GBC, */\par
338         /* 12/00,  -mdh 5/16/00 */\par
339         /* fRno3_co2 estimates the ratio as a function of electron */\par
340         /* donor to substrate -mdh 5/17/00 */\par
341 \par
342         k1 = max(1.5, 38.4 - 350 * dD0_fc);\par
343         fRno3_co2 = max(0.16 * k1, k1 * exp(-0.8 * nitratePPM[ilyr]/co2PPM[ilyr]));\par
344 \par
345         /* WFPS effect on the N2/N2O Ratio */\par
346         /* Changed wfps effect on the N2/N2O ratio based on */\par
347         /* paper "General model for N2O and N2 gas emissions from */\par
348         /* soils due to denitrification", Del Grosso et. al, GBC, */\par
349         /* 12/00,  -mdh 5/16/00 */\par
350 \par
351         fRwfps = max(0.1, 0.015 * layers->wfps[ilyr]*100 - 0.32);\par
352 \par
353         /* Compute the N2:N2O Ratio */\par
354 \par
355         Rn2n2o = fRno3_co2 * fRwfps; \par
356         if (Rn2n2o < 0.1) \{\par
357           Rn2n2o = 0.1;\par
358         \}\par
359 \par
360         if (debug) \{\par
361           fprintf(stdout, "\\n%6s  %8s  %8s  %9s  %2s  %3s\\n","fRwfps",\par
362                   "nitratePPM","co2PPM","fRno3_co2","k1","dD0");\par
363           fprintf(stdout, "%6.4lf  %6.4lf  %6.4lf  %6.4lf  %6.4lf  %6.4lf\\n",\par
364                   fRwfps,nitratePPM[ilyr],co2PPM[ilyr],fRno3_co2,k1,dD0_fc);\par
365           fprintf(stdout, "Ratio N2:N2O = %12.10lf\\n", Rn2n2o);\par
366         \}\par
367 \par
368         /* Compute N2 and N2O flux by layer (Denitrification) */\par
369         /* convert ppm N to gN/m^2 */\par
370    \par
371         ntotflux[ilyr] = Dtotflux * grams_soil[ilyr] * grams_per_ug;\par
372         n2oflux = ntotflux[ilyr] / (Rn2n2o + 1.0);\par
373         *Dn2oflux += n2oflux;\par
374         dN2Olyr[ilyr] = n2oflux;\par
375         *Dn2flux += ntotflux[ilyr] - n2oflux;\par
376         dN2lyr[ilyr] = ntotflux[ilyr] - n2oflux;\par
377         if (debug) \{\par
378           fprintf(stdout, "\\n%3s  %6s  %6s  %6s  %6s\\n", "lyr", "n2o", "n2",\par
379                   "co2", "no3");\par
380           fprintf(stdout, "%3d  %6.4lf  %6.4lf  %6.4lf\\n", ilyr,\par
381                   n2oflux, co2PPM[ilyr], nitratePPM[ilyr]);\par
382         \}\par
383       \} /* for ilyr */\par
384 \par
385       if (debug) \{\par
386         fprintf(stdout, "\\nIn denitrify, Dn2oflux (gN/m2/day) = %12.10lf\\n",\par
387                         *Dn2oflux);\par
388         fprintf(stdout, "In denitrify, Dn2flux (gN/m2/day) = %12.10lf\\n",\par
389                         *Dn2flux);\par
390       \}\par
391 \par
392       if (*Dn2oflux < 1.0E-25) \{\par
393         *Dn2oflux = 0.0;\par
394       \}\par
395       if (*Dn2flux < 1.0E-25) \{\par
396         *Dn2flux = 0.0;\par
397       \}\par
398 \par
399       if (debug) \{\par
400         fprintf(stdout, "In denitrify(1), Dn2oflux = %12.10lf\\n", *Dn2oflux);\par
401         fprintf(stdout, "In denitrify(1), Dn2flux = %12.10lf\\n", *Dn2flux);\par
402       \}\par
403 \par
404       /* Reduce nitrate in soil by the amount of N2-N N2O-N that is lost */\par
405       /* Do not let nitrate in any layer go below min_nitrate */\par
406 \par
407       if (*Dn2oflux + *Dn2flux > 1.0E-30) \{\par
408         n2ofrac = *Dn2oflux/(*Dn2oflux + *Dn2flux);  \par
409         n2frac = *Dn2flux/(*Dn2oflux + *Dn2flux);  \par
410         excess = 0.0;\par
411    \par
412         for (ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
413           if (nitratePPM[ilyr] < min_nitrate) \{\par
414             /* No trace gas flux from this layer */\par
415             excess += ntotflux[ilyr];\par
416             if (debug) \{\par
417               printf("First IF check in loop, excess = %12.10lf\\n", excess);\par
418             \}\par
419           \} else if ((nitrate[ilyr] - ntotflux[ilyr]) >\par
420                       (min_nitrate_end * grams_soil[ilyr] * grams_per_ug)) \{\par
421             /* Remove N in calculated trace gas flux from the layer */\par
422             nitrate[ilyr] -= ntotflux[ilyr];\par
423             if (debug) \{\par
424               printf("Second IF check in loop, nitrate[%1d] = %12.10lf", ilyr,\par
425                      nitrate[ilyr]);\par
426               printf("    nitratePPM[%1d] = %12.10lf\\n", ilyr, nitratePPM[ilyr]);\par
427             \}\par
428           \} else \{\par
429             /* Reduce trace gas flux in layer so soil N won't fall below */\par
430             /* the minimum value */\par
431             fluxout = (nitratePPM[ilyr] - min_nitrate_end) *\par
432                       grams_soil[ilyr] * grams_per_ug; \par
433             excess += (ntotflux[ilyr] - fluxout); \par
434             nitrate[ilyr] = min_nitrate_end * grams_soil[ilyr] * grams_per_ug;\par
435             if (debug) \{\par
436               printf("Third IF check in loop, excess = %12.10lf\\n",excess);\par
437               printf("nitrate[%1d] = %12.10lf", ilyr, nitrate[ilyr]);\par
438               printf("     nitratePPM[%1d] = %12.10lf\\n", ilyr, nitratePPM[ilyr]);\par
439             \}\par
440           \}\par
441         \} /* for ilyr */\par
442 \par
443         *Dn2oflux -= n2ofrac * excess;\par
444         *Dn2flux -= n2frac * excess;\par
445 \par
446         if (debug) \{\par
447           printf("   n2ofrac = %12f\\n", n2ofrac);\par
448           printf("   n2frac = %12f\\n", n2frac);\par
449           fprintf(stdout, "   n2o_excess = %12.10lf\\n", n2ofrac * excess);\par
450           fprintf(stdout, "   n2_excess = %12.10lf\\n", n2frac * excess);\par
451         \}\par
452       \} else \{\par
453         *Dn2oflux = 0.0;\par
454         *Dn2flux = 0.0;\par
455       \}\par
456 \par
457       if (debug) \{\par
458         fprintf(stdout, "In denitrify(2), Dn2oflux = %12.10lf\\n", *Dn2oflux);\par
459         fprintf(stdout, "In denitrify(2), Dn2flux = %12.10lf\\n", *Dn2flux);\par
460       \}\par
461       return;\par
462     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/diffusiv.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/diffusiv.c}
{\xe \v /home/dlebauer/dev/biocro/src/diffusiv.c}
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for diffusiv.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "diffusiv_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PARTDENS}\~ 2.65           /* Particle Density (g/cm3) */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b min}(a, b)\~ (((a) < (b)) ? (a) : (b))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b max}(a, b)\~ (((a) > (b)) ? (a) : (b))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b diffusiv} (double *A, double *bulkden, double *{\b wfps})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v max\:diffusiv.c}
{\xe \v diffusiv.c\:max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define max( a,  b)\~ (((a) > (b)) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min\:diffusiv.c}
{\xe \v diffusiv.c\:min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define min( a,  b)\~ (((a) < (b)) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PARTDENS\:diffusiv.c}
{\xe \v diffusiv.c\:PARTDENS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PARTDENS\~ 2.65           /* Particle Density (g/cm3) */}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v diffusiv\:diffusiv.c}
{\xe \v diffusiv.c\:diffusiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double diffusiv (double * {\i A}, double * {\i bulkden}, double * {\i wfps})}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70     \{\par
71       double porosity;\par
72       double theta_A, theta_P, theta_V, my_theta_V;\par
73       double tp1, tp2, tp3, tp4, tp5, tp6, tp7, tp8;\par
74       double vfrac;\par
75       double s_wat, sw_p;\par
76       double pfc;\par
77       double dDO;\par
78       int   debug;\par
79 \par
80       /* Initialization */\par
81       debug = 0;\par
82 \par
83       porosity = 1.0 - (*bulkden)/PARTDENS;\par
84       if ((porosity - (*A)) < 0.0) \{\par
85         printf("ERROR:  Mis-match between bulk density and field capacity\\n");\par
86         printf("value in soils.in file.  Ending simulation!\\n");\par
87         exit(1);\par
88       \}\par
89 \par
90       pfc = (*wfps)*100 /((*A)/porosity);\par
91  \par
92       if (pfc >= 100.0) \{\par
93         vfrac = ((*wfps)*porosity - *A) / (porosity - (*A));\par
94       \} else \{\par
95         vfrac = 0.0;\par
96       \}\par
97   \par
98       if (pfc < 100.0) \{\par
99         theta_V = (pfc/100.0)*(*A);\par
100       \} else \{\par
101         theta_V = (*A) + (min(vfrac,1.0) * (porosity - (*A)));\par
102       \}\par
103 \par
104       my_theta_V = *wfps * (1.0 - *bulkden/PARTDENS);\par
105 \par
106       theta_P = (theta_V < (*A)) ? 0.0 : theta_V - (*A);\par
107       theta_A = (theta_V > (*A)) ? (*A) : theta_V;\par
108 \par
109       if (debug) \{\par
110         printf("In SUB, vfrac = %f\\n", vfrac);\par
111         printf("In SUB, porosity - A = %f\\n", (porosity - (*A)));\par
112         printf("In SUB, (*A) = %f\\n", (*A));\par
113         printf("In SUB, (*wfps) = %f\\n", (*wfps));\par
114         printf("In SUB, pfc = %f\\n", pfc);\par
115         printf("In SUB, porosity = %f\\n", porosity);\par
116         printf("In SUB, theta_V = %f\\n", theta_V);\par
117         printf("In SUB, my_theta_V = %f\\n", my_theta_V);\par
118         printf("In SUB, theta_P = %f\\n", theta_P);\par
119         printf("In SUB, theta_A = %f\\n", theta_A);\par
120       \}\par
121 \par
122       s_wat = min(1.0, theta_V/(*A));\par
123       sw_p = min(1.0, theta_P/(porosity-(*A)));\par
124 \par
125       tp1 = pow((1.0 - s_wat), 2.0);\par
126       tp2 = ((*A) - theta_A) / ((*A) + (1.0 - porosity));\par
127       tp3 = pow(tp2,(0.5*tp2 + 1.16));\par
128       tp4 = (1.0 - pow(((porosity-(*A))),\par
129                               (0.5*((porosity-(*A))) + 1.16)));\par
130       tp5 = (porosity-(*A))-theta_P;\par
131       if (tp5 > 0.0) \{\par
132         tp6 = pow(tp5, (0.5*tp5 + 1.16));\par
133       \} else \{\par
134         tp6 = 0.0;\par
135       \}\par
136       tp7 = pow((1.0-sw_p), 2.0);\par
137       tp8 = max(0.0, (tp1*tp3*tp4*(tp5-tp6)) /\par
138                       (1.0E-6 + (tp1*tp3*tp4) + tp5 - tp6) * 1.0E7);\par
139 \par
140       if (debug) printf("From SUB: %f %f %f %f %f %f %f %f\\n",\par
141                         tp1, tp2, tp3, tp4, tp5, tp6, tp7, tp8);\par
142       dDO = max(0.0, (tp8/1.0E7 + tp7*tp6));\par
143       if (debug) \{\par
144             printf("In SUB, dDO = %f\\n", dDO);\par
145       \}\par
146 \par
147 /*      dDO /= 0.20;\par
148       dDO = min(dDO, 1.0); */\par
149 \par
150       return(dDO);\par
151     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/eC4photo.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/eC4photo.c}
{\xe \v /home/dlebauer/dev/biocro/src/eC4photo.c}
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "CanA.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for eC4photo.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "e_c4photo_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b eC4photoC} (double QP, double TEMP, double RH, double CA, double OA, double VCMAX, double VPMAX, double VPR, double JMAX)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b eCanA} (SEXP lai, SEXP Doy, SEXP Hr, SEXP SolarR, SEXP ATemp, SEXP RelH, SEXP WindS, SEXP CA, SEXP OA, SEXP VCMAX, SEXP VPMAX, SEXP VPR, SEXP JMAX, SEXP STOMATAWS)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b eC4photo} (SEXP QP, SEXP TEMP, SEXP RH, SEXP CA, SEXP OA, SEXP VCMAX, SEXP VPMAX, SEXP VPR, SEXP JMAX)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b RsqeC4photo} (double oAssim[{\b enObs}], double oQp[{\b enObs}], double oTemp[{\b enObs}], double oRH[{\b enObs}], double Ca, double Oa, double Vcmax, double Vpmax, double Vpr, double Jmax)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b McMCEc4photo} (SEXP oASSIM, SEXP oQP, SEXP oTEMP, SEXP oRelH, SEXP NITER, SEXP iCA, SEXP iOA, SEXP iVCMAX, SEXP iVPMAX, SEXP iJMAX, SEXP THRESH, SEXP SCALE)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b enObs}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v eC4photo\:eC4photo.c}
{\xe \v eC4photo.c\:eC4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP eC4photo (SEXP {\i QP}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i CA}, SEXP {\i OA}, SEXP {\i VCMAX}, SEXP {\i VPMAX}, SEXP {\i VPR}, SEXP {\i JMAX})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 294 \{\par
295   int nqp, i;\par
296   nqp = length(QP);\par
297     /* CONSTANTS */\par
298   double P = 101.3;\par
299   double G1 = 3;\par
300   double G0 = 0.08;\par
301 \par
302     const double  gs = 3 * 1e-3 ;\par
303     /* mol m-2 s-1 physical conductance to CO2 leakage*/\par
304     /* const double gammaStar = 0.000193  */\par
305     const double gammaStar =  0.000193 ;\par
306     /* half the reciprocal of Rubisco specificity */\par
307     /*    const double go = 0.047 * gs     at 25 C */\par
308     const double alpha = 0.01 ; /* alpha in the notes*/\par
309     double Kp = 80 ; /*  mu bar */\par
310     double theta = 0.7;\par
311     const double R = 0.008314472; /* Gas constant J K-1 mol-1 */\par
312     /* in the units stated should be 8.314 but \par
313        XGZ determined it is * 1e-3 */ \par
314     const double Kelvin0 = 273.15;\par
315     const double Kelvin25 = 298.15;\par
316     /* This is 0 and 25 Celsius degrees in the Kelvin scale */\par
317 \par
318     /* ADDING THE TEMPERATURE RESPONSE FUNCTION */\par
319     double Epr = 46.8 ; /* Activation energy of PPDK kj/mol*/\par
320     double Ep  = 47.1 ; /* Activation energy of PEPc kj/mol */\par
321     double Erb = 72 ; /* Activation energy of Rubisco kj/mol */\par
322     /*    const double Q10bf = 1.7 */\par
323     double ERd = 46.39;\par
324     double EKc = 79.43;\par
325     double EKo = 36.38;\par
326     double Q10cb = 1.7;\par
327 \par
328     /* double Ko = 450 ;  mbar at 25 C */\par
329     double Ko2 = 450 ; /* mbar at 25 C */\par
330     /* double Kc = 650   mu bar at 25 C */\par
331     double Kc2 = 650 ; /*  mu bar at 25 C */\par
332     \par
333     /* VAriables */ \par
334     double Kc, Ko;\par
335     double StomCond;\par
336     double Idir, AirTemp, rh, Ca, Oa;\par
337     double Vcmax1, Vpmax1, Jmax1;\par
338     double Vcmax, Vpmax, Vpr, Jmax;\par
339 \par
340     double Q10pr, Q10p, Q10rb, Q10Rd, Q10Kc, Q10Ko;\par
341     double Cm, Om;\par
342     double Rd, Rm, Rs;\par
343 \par
344     double I2, J, Aj;\par
345     double Vp, Ko1 , Om1;\par
346     double a1, b1, c1 , c3, Ac0;\par
347     double AcLCO2, Ac, A;\par
348     double Os, Cs;\par
349     double Cs0, Cs1;\par
350 \par
351     double aa, bb, cc;\par
352 \par
353     SEXP names, lists;\par
354     SEXP Assim;\par
355     SEXP Gs;\par
356     SEXP Ci;\par
357     SEXP Oxy;\par
358 \par
359     PROTECT(lists = allocVector(VECSXP,4));\par
360     PROTECT(names = allocVector(STRSXP,4));\par
361 \par
362     PROTECT(Assim = allocVector(REALSXP,nqp));\par
363     PROTECT(Gs = allocVector(REALSXP,nqp));\par
364     PROTECT(Ci = allocVector(REALSXP,nqp));\par
365     PROTECT(Oxy = allocVector(REALSXP,nqp));\par
366 \par
367     Ca = REAL(CA)[0];\par
368     Oa = REAL(OA)[0];\par
369     Vcmax1 = REAL(VCMAX)[0];\par
370     Vpmax1 = REAL(VPMAX)[0];\par
371     Vpr = REAL(VPR)[0];\par
372     Jmax1 = REAL(JMAX)[0];\par
373 \par
374     for(i = 0;i < nqp;i++)\{\par
375 \par
376     Idir = REAL(QP)[i];\par
377     AirTemp = REAL(TEMP)[i];\par
378     rh = REAL(RH)[i];\par
379 \par
380 \par
381     Q10pr = exp(Epr *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
382     Q10p = exp(Ep *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
383     Q10rb = exp(Erb *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
384     Q10Rd = exp(ERd *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
385     Q10Kc = exp(EKc *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
386     Q10Ko = exp(EKo *(1/(R * Kelvin25)-1/(R * (AirTemp + Kelvin0))));\par
387 \par
388     Vcmax = Vcmax1 * Q10rb;\par
389     Kc = Kc2 * Q10Kc;\par
390     Ko = Ko2 * Q10Ko;\par
391     Vpmax = Vpmax1 * Q10p;        \par
392     Jmax = Jmax1 * pow(Q10cb,(AirTemp-25)/10);\par
393 \par
394     Cm = 0.4 * Ca ; \par
395     Om = Oa ;\par
396         \par
397     /*    Rd = 0.01 * Vcmax; */\par
398     Rd = 0.08;\par
399     Rm = 0.5 * Rd ;\par
400     Rs = 0.5 * Rd;\par
401         \par
402     /* Light limited */\par
403     I2 = (Idir * 0.85)/2;\par
404     J = (Jmax + I2  - sqrt(pow(Jmax+I2,2) - 4 * theta * I2 * Jmax ))/2*theta;        \par
405     /* Long formula for light limited */\par
406 \par
407     aa = 1 - (7 * gammaStar * alpha )/3 * 0.047;\par
408     bb = -(((0.4 * J)/2 - Rm + gs * Cm) + ((1-0.4)*J/3-Rd) + \par
409            gs*(7*gammaStar*Om/3) + \par
410            (alpha*gammaStar/0.047)*((1-0.04)*J/3 + 7*Rd/3));\par
411     cc = ((0.4 * J)/2 - Rm + gs * Cm)*((1-0.4)*J/3-Rd) -\par
412       gs * gammaStar * Om *((1-0.4)*J/3 + 7*Rd/3);\par
413 \par
414     Aj = (-bb - sqrt(pow(bb,2)-4*aa*cc))/2*aa;\par
415 \par
416     /* Other part */\par
417     Vp = (Cm * Vpmax) / (Cm + Kp) ;\par
418     if(Vpr < Vp)\{\par
419       Vp = Vpr;\par
420     \}\par
421                 \par
422     /* Alternative formula */\par
423     Ko1 = Ko * 1e3;\par
424     Om1 = Om * 1e3;\par
425 \par
426     a1 = 1 - alpha / 0.047 * Kc/Ko1 ;\par
427     b1 = -((Vp - Rm + gs * Cm)+\par
428            (Vcmax - Rd)+\par
429            gs*(Kc*(1+Om1/Ko1))+\par
430            ((alpha/0.047)*(gammaStar*Vcmax+Rd*Kc/Ko1)));\par
431     c1 = (Vcmax - Rd)*(Vp-Rm+gs*Cm)-\par
432           (Vcmax * gs * gammaStar * Om1 + Rd*gs*Kc*(1+Om1/Ko1));\par
433          \par
434     c3 = pow(b1,2) - 4*a1*c1;\par
435       if(c3 < 0)\{\par
436         c3 = 0;\par
437       \}\par
438     Ac0 = (-b1 - sqrt(c3)) / 2*a1 ;\par
439 \par
440     AcLCO2 = (Cm * Vpmax/(Cm+Kp)) - Rm + gs * Cm;\par
441     \par
442     if(Ac0 < AcLCO2)\{\par
443       Ac = Ac0;\par
444     \}else\{\par
445       Ac = AcLCO2;\par
446     \}\par
447 \par
448     if(Aj < Ac)\{\par
449       A = Aj;\par
450     \}else\{\par
451       A = Ac;\par
452     \}\par
453         \par
454     Os = alpha * A / 0.047 * gs + Om;\par
455 \par
456      if(Aj <= Ac)\{ \par
457        Cs = Cm + (Vp - Aj - Rm)/gs;\par
458       \}else\{ \par
459           Cs0 = gammaStar * Os + Kc*(1+Os/Ko)*((Ac+Rd)/Vcmax); \par
460           Cs1 = 1 - (Ac+Rd)/Vcmax; \par
461           Cs = Cs0/Cs1;\par
462            \}\par
463 \par
464     /* Calculating Gs */\par
465      if(A < 0)\{\par
466        StomCond = G0;\par
467      \}else\{\par
468        StomCond = G1 * (A * rh * P) / (Cm*1e-1) + G0;\par
469      \}\par
470     /* Organizing the results */\par
471     REAL(Assim)[i] = A;\par
472     REAL(Gs)[i] = StomCond;\par
473     REAL(Ci)[i] = Cs;\par
474     REAL(Oxy)[i] = Os;\par
475     \}\par
476 \par
477     SET_VECTOR_ELT(lists,0,Assim);\par
478     SET_VECTOR_ELT(lists,1,Gs);\par
479     SET_VECTOR_ELT(lists,2,Ci);\par
480     SET_VECTOR_ELT(lists,3,Oxy);\par
481 \par
482     SET_STRING_ELT(names,0,mkChar("Assim"));\par
483     SET_STRING_ELT(names,1,mkChar("Gs"));\par
484     SET_STRING_ELT(names,2,mkChar("Ci"));\par
485     SET_STRING_ELT(names,3,mkChar("Oxy"));\par
486     setAttrib(lists,R_NamesSymbol,names);\par
487     UNPROTECT(6);\par
488     return(lists);\par
489 \}\par
}
}
{\xe \v eC4photoC\:eC4photo.c}
{\xe \v eC4photo.c\:eC4photoC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double eC4photoC (double {\i QP}, double {\i TEMP}, double {\i RH}, double {\i CA}, double {\i OA}, double {\i VCMAX}, double {\i VPMAX}, double {\i VPR}, double {\i JMAX})}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143 \{\par
144     /* CONSTANTS */\par
145     const double  gs = 3 * 1e-3 ;\par
146     /* mol m-2 s-1 physical conductance to CO2 leakage*/\par
147     /* const double gammaStar = 0.000193  */\par
148     const double gammaStar =  0.0002239473      ;\par
149     /* half the reciprocal of Rubisco specificity */\par
150     /*    const double go = 0.047 * gs     at 25 C */\par
151     const double a = 0.01 ; /* alpha in the notes*/\par
152     const double Kp = 80 ; /*  mu bar */\par
153     /* const double Kc1 = 650 * 1e-3  mbar at 25 C */\par
154     const double Kc1 = 1020 * 1e-3; /*  mbar at 25 C */\par
155 \par
156     const double theta = 0.7;\par
157 \par
158     /* ADDING THE TEMPERATURE RESPONSE FUNCTION */\par
159     const double Epr = 46.8 ; /* Activation energy of PPDK kj/mol*/\par
160     const double Ep  = 47.1 ; /* Activation energy of PEPc kj/mol */\par
161     const double Erb = 72 ; /* Activation energy of Rubisco kj/mol */\par
162     /*    const double Q10bf = 1.7 */\par
163     const double ERd = 46.39;\par
164     const double EKc = 79.43;\par
165     const double EKo = 36.38;\par
166     const double Q10cb = 1.7;\par
167 \par
168     /* double Ko = 450 ;  mbar at 25 C */\par
169     double Ko = 532.9 ; /* mbar at 25 C */\par
170     /* double Kc = 650   mu bar at 25 C */\par
171     double Kc = 1020 ; /*  mu bar at 25 C */\par
172     \par
173     /* VAriables */ \par
174     double Idir, AirTemp, rh, Ca, Oa;\par
175     double Vcmax, Vpmax, Vpr, Jmax;\par
176 \par
177     double Q10pr, Q10p, Q10rb, Q10Rd, Q10Kc, Q10Ko;\par
178     double Cm, Om;\par
179     double Rd, Rm, Rs;\par
180 \par
181     double I2, J, Aj0, Aj1, Aj;\par
182     double Vp, Ko1 , Om1;\par
183     double a1, b1, c1 , c3, Ac0;\par
184     double AcLCO2, Ac, A;\par
185     double Os, Cs;\par
186     double Cs0, Cs1;\par
187 \par
188 \par
189     Idir = QP;\par
190     AirTemp = TEMP;\par
191     rh = RH;\par
192     Ca = CA;\par
193     Oa = OA;\par
194     Vcmax = VCMAX;\par
195     Vpmax = VPMAX;\par
196     Vpr = VPR;\par
197     Jmax = JMAX;\par
198 \par
199     Q10pr = exp(Epr *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
200     Q10p = exp(Ep *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
201     Q10rb = exp(Erb *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
202     Q10Rd = exp(ERd *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
203     Q10Kc = exp(EKc *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
204     Q10Ko = exp(EKo *(1/(0.008314*298.15)-1/(0.008314*(AirTemp+273.15))));\par
205 \par
206     Vcmax = Vcmax * Q10rb;\par
207     Kc = Kc * Q10Kc;\par
208     Ko = Ko * Q10Ko;\par
209     Vpmax = Vpmax * Q10p;        \par
210     Jmax = Jmax * pow(Q10cb,(AirTemp-25)/10);\par
211 \par
212     Cm = 0.4 * Ca ; \par
213     Om = Oa ;\par
214         \par
215     /*    Rd = 0.01 * Vcmax; */\par
216     Rd = 0.08;\par
217     Rm = 0.5 * Rd ;\par
218     Rs = 0.5 * Rd;\par
219         \par
220     /* Light limited */\par
221     I2 = (Idir * 0.85)/2;\par
222     J = (Jmax + I2  - sqrt(pow(Jmax+I2,2) - 4 * theta * I2 * Jmax ))/2*theta;        \par
223     Aj0 = 0.4 * J - Rm + gs * Cm;        \par
224     Aj1 = (1-0.4)*J/3-Rd;\par
225 \par
226     if(Aj0 < Aj1)\{\par
227       Aj = Aj0;\par
228     \}else\{\par
229       Aj = Aj1;\par
230     \}\par
231         \par
232 \par
233     /* Other part */\par
234     Vp = (Cm * Vpmax) / (Cm + Kp) ;\par
235     if(Vpr < Vp)\{\par
236       Vp = Vpr;\par
237     \}\par
238                 \par
239     /* Alternative formula */\par
240     Ko1 = Ko * 1e3;\par
241     Om1 = Om * 1e3;\par
242 \par
243     a1 = 1 - a / 0.047 * Kc/Ko1 ;\par
244     b1 = -((Vp - Rm + gs * Cm)+\par
245            (Vcmax - Rd)+\par
246            gs*(Kc*(1+Om1/Ko1))+\par
247            ((a/0.047)*(gammaStar*Vcmax+Rd*Kc/Ko1)));\par
248     c1 = (Vcmax - Rd)*(Vp-Rm+gs*Cm)-\par
249           (Vcmax * gs * gammaStar * Om1 + Rd*gs*Kc*(1+Om1/Ko1));\par
250          \par
251     c3 = pow(b1,2) - 4*a1*c1;\par
252       if(c3 < 0)\{\par
253         c3 = 0;\par
254       \}\par
255     Ac0 = (-b1 - sqrt(c3)) / 2*a1 ;\par
256 \par
257     AcLCO2 = (Cm * Vpmax/(Cm+Kp)) - Rm + gs * Cm;\par
258     \par
259     if(Ac0 < AcLCO2)\{\par
260       Ac = Ac0;\par
261     \}else\{\par
262       Ac = AcLCO2;\par
263     \}\par
264 \par
265     if(Aj < Ac)\{\par
266       A = Aj;\par
267     \}else\{\par
268       A = Ac;\par
269     \}\par
270         \par
271     Os = a * A / 0.047 * gs + Om;\par
272     if(Aj <= Ac)\{\par
273       Cs0 = (gammaStar * Os)*(7/3*(Aj + Rd) + (1-0.4)*J/3);\par
274       Cs1 = (1-0.4)*J/3-(Aj) ; \par
275       Cs = Cs0/Cs1;\par
276     \}else\{\par
277       Cs0 = gammaStar * Os + Kc1*(1+Os/Ko)*((Ac+Rd)/Vcmax);\par
278           if((Ac+Rd) >= Vcmax)\{\par
279             Ac = Vcmax - Rd - 0.5 ;\par
280           \}\par
281           Cs1 = 1 - (Ac+Rd)/Vcmax;\par
282           Cs = Cs0/Cs1;\par
283     \}\par
284     return(A);\par
285 \}\par
}
}
{\xe \v eCanA\:eC4photo.c}
{\xe \v eC4photo.c\:eCanA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP eCanA (SEXP {\i lai}, SEXP {\i Doy}, SEXP {\i Hr}, SEXP {\i SolarR}, SEXP {\i ATemp}, SEXP {\i RelH}, SEXP {\i WindS}, SEXP {\i CA}, SEXP {\i OA}, SEXP {\i VCMAX}, SEXP {\i VPMAX}, SEXP {\i VPR}, SEXP {\i JMAX}, SEXP {\i STOMATAWS})}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 31 \{\par
32   /* const int NLAYERS = 3;  this should eventually be replaced with\par
33                             an argument coming in from R */\par
34   struct ET_Str tmp5, tmp6;\par
35 \par
36 \par
37   int i;\par
38   double Idir, Idiff, cosTh;\par
39   double LAIc;\par
40   double IDir, IDiff, Itot, rh, WS;\par
41   double pLeafsun, pLeafshade;\par
42   double Leafsun, Leafshade;\par
43 \par
44 /*   double tmp5,tmp6; */\par
45   double TempIdir,TempIdiff,AssIdir,AssIdiff;\par
46 \par
47   double CanopyA;\par
48   double CanHeight;\par
49 \par
50   const double cf = 3600 * 1e-6 ;\par
51 \par
52   int DOY , hr;\par
53   double LAI, solarR, Temp, RH, WindSpeed;\par
54   double Ca, Oa, Vcmax, Vpmax, Vpr, Jmax;\par
55   double upperT=27.5, lowerT=3.0;\par
56 \par
57   double lat = 40;\par
58   int nlayers = 3;\par
59   double kd = 0.1;\par
60   double chil = 1;\par
61   double stomataws;\par
62 \par
63   SEXP growth;\par
64 \par
65   PROTECT(growth = allocVector(REALSXP,1));\par
66 \par
67 \par
68   LAI = REAL(lai)[0];\par
69   DOY = INTEGER(Doy)[0];\par
70   hr = INTEGER(Hr)[0];\par
71   solarR = REAL(SolarR)[0];\par
72   Temp = REAL(ATemp)[0];\par
73   RH = REAL(RelH)[0];\par
74   WindSpeed = REAL(WindS)[0];\par
75   Ca = REAL(CA)[0];\par
76   Oa = REAL(OA)[0];\par
77   Vcmax = REAL(VCMAX)[0];\par
78   Vpmax = REAL(VPMAX)[0];\par
79   Vpr = REAL(VPR)[0];\par
80   Jmax = REAL(JMAX)[0];\par
81   stomataws = REAL(STOMATAWS)[0];\par
82 \par
83   lightME(lat,DOY,hr);\par
84 \par
85   Idir = tmp1[0] * solarR;\par
86   Idiff = tmp1[1] * solarR;\par
87   cosTh = tmp1[2];\par
88     \par
89   sunML(Idir,Idiff,LAI,nlayers,cosTh,kd,chil, 3);\par
90 \par
91   /* results from multilayer model */\par
92   LAIc = LAI / nlayers;\par
93   /* Next I need the RH and wind profile */\par
94   RHprof(RH,nlayers);\par
95   WINDprof(WindSpeed,LAI,nlayers);\par
96 \par
97   /* Next use the EvapoTrans function */\par
98   CanopyA=0.0;\par
99   for(i=0;i<nlayers;i++)\par
100     \{\par
101       IDir = layIdir[--sp1];\par
102       Itot = layItotal[--sp3];\par
103 \par
104       rh = tmp4[--tp4];\par
105       WS = tmp3[--tp3];\par
106       pLeafsun = layFsun[--sp4];\par
107       CanHeight = layHeight[--sp6];\par
108       Leafsun = LAIc * pLeafsun;\par
109       tmp5 = EvapoTrans(IDir,Itot,Temp,rh,WS,Leafsun,CanHeight,stomataws,1,39,0.04,0.7,0.83,0.93,0.8,0.01,3,upperT,lowerT);\par
110       /* not the right thing to do here to add these values at the end of the ET function\par
111 but just a simple fix for now. The problem is that the eC4photoC function should have its own\par
112 EvapoTrans function. */\par
113       TempIdir = Temp + tmp5.Deltat;\par
114       AssIdir = eC4photoC(IDir,TempIdir,rh,Ca,Oa,Vcmax,\par
115                          Vpmax,Vpr,Jmax);\par
116 \par
117       IDiff = layIdiff[--sp2];\par
118       pLeafshade = layFshade[--sp5];\par
119       Leafshade = LAIc * pLeafshade;\par
120       tmp6 = EvapoTrans(IDiff,Itot,Temp,rh,WS,Leafshade,CanHeight,stomataws,1,39,0.04,0.7,0.83,0.93,0.8,0.01,3,upperT,lowerT);\par
121       /* not the right thing to do here to add these values at the end of the ET function\par
122 but just a simple fix for now*/\par
123       TempIdiff = Temp + tmp6.Deltat;\par
124       AssIdiff = eC4photoC(IDiff,TempIdiff,rh,Ca,Oa,Vcmax,\par
125                           Vpmax,Vpr,Jmax);\par
126 \par
127      CanopyA += Leafsun * AssIdir + Leafshade * AssIdiff;\par
128    \}\par
129   /* These are micro mols of CO2 per m2 per sec\par
130     Need to convert to \par
131     3600 converts seconds to hours\par
132     10^-6 converts micro mols to mols\par
133     */\par
134   REAL(growth)[0] = cf * CanopyA ;\par
135   UNPROTECT(1);  \par
136   return(growth);\par
137 \par
138    \}\par
}
}
{\xe \v McMCEc4photo\:eC4photo.c}
{\xe \v eC4photo.c\:McMCEc4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP McMCEc4photo (SEXP {\i oASSIM}, SEXP {\i oQP}, SEXP {\i oTEMP}, SEXP {\i oRelH}, SEXP {\i NITER}, SEXP {\i iCA}, SEXP {\i iOA}, SEXP {\i iVCMAX}, SEXP {\i iVPMAX}, SEXP {\i iJMAX}, SEXP {\i THRESH}, SEXP {\i SCALE})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 503                                                        \{\par
504   /* First manipulate R objects */\par
505   int niter;\par
506   enObs = length(oASSIM);\par
507   niter = INTEGER(NITER)[0];\par
508 \par
509   /* Second define the needed variables */\par
510   double oldRsq = 0.5;\par
511   int n1 = 0;\par
512   int n2 = 0;\par
513   int n3 = 0;\par
514   int iters = 0;\par
515   int i, k;\par
516   double crit = 1 ;\par
517   double thresh = REAL(THRESH)[0];\par
518   double scale = REAL(SCALE)[0];\par
519   double sd1, sd2, sd3;\par
520 \par
521   double index;\par
522   double rlnum , rlden;\par
523   double ratio;\par
524   double U;\par
525 \par
526   double Rsq;\par
527   double poldRsq;\par
528   double Ca, Oa;\par
529   double  poldVcmax, poldVpmax, poldVpr, poldJmax;\par
530   double rnewVcmax, rnewVpmax, rnewVpr, rnewJmax;\par
531   double  oldVcmax, oldVpmax, oldVpr, oldJmax;\par
532 \par
533   double assim[enObs], qp[enObs];\par
534   double  temp[enObs], rh[enObs];\par
535 \par
536   for(k = 0; k < enObs; k++)\{\par
537      assim[k] = REAL(oASSIM)[k];\par
538      qp[k] = REAL(oQP)[k];\par
539      temp[k] = REAL(oTEMP)[k];\par
540      rh[k] = REAL(oRelH)[k];\par
541   \}\par
542 \par
543   SEXP lists;\par
544   SEXP names;\par
545 \par
546   SEXP mat1;\par
547   SEXP mat2;\par
548 \par
549   SEXP accept1;\par
550   SEXP accept2;\par
551   SEXP accept3;\par
552 \par
553   SEXP RsqBI;\par
554   SEXP CoefBI;\par
555 \par
556   PROTECT(lists = allocVector(VECSXP,7));\par
557   PROTECT(names = allocVector(STRSXP,7));\par
558 \par
559   PROTECT(mat1 = allocMatrix(REALSXP,4,niter));\par
560   PROTECT(mat2 = allocMatrix(REALSXP,4,niter));\par
561 \par
562   PROTECT(accept1 = allocVector(REALSXP,1));\par
563   PROTECT(accept2 = allocVector(REALSXP,1));\par
564   PROTECT(accept3 = allocVector(REALSXP,1));\par
565 \par
566   PROTECT(RsqBI = allocVector(REALSXP,1));\par
567   PROTECT(CoefBI = allocVector(REALSXP,3));\par
568 \par
569   GetRNGstate();\par
570 \par
571   Ca = REAL(iCA)[0];\par
572   Oa = REAL(iOA)[0];\par
573   oldVcmax = REAL(iVCMAX)[0];\par
574   oldVpmax = REAL(iVPMAX)[0];\par
575   oldVpr   = 80;\par
576   /* Vpr is not optimized */\par
577   oldJmax = REAL(iJMAX)[0];\par
578   sd1 = 0.05 * oldVcmax * scale;\par
579   sd2 = 0.05 * oldVpmax * scale;\par
580   sd3 = 0.05 * oldJmax * scale;\par
581  \par
582    while((iters < niter) && (crit > thresh))\{ \par
583      iters++;\par
584      /* Replacing the rnormCV */\par
585      index = floor(runif(1,4)); \par
586 \par
587        rnewVcmax = oldVcmax;\par
588        rnewVpmax = oldVpmax;\par
589        rnewVpr = oldVpr;\par
590        rnewJmax = oldJmax;\par
591 \par
592      if(index == 1)\{ \par
593        rnewVcmax = oldVcmax + rnorm(0,sd1);\par
594      \}\par
595      if(index == 2)\{ \par
596        rnewVpmax = oldVpmax  + rnorm(0,sd2);\par
597      \}\par
598      /*     if(index == 3)\{ \par
599        rnewVpr = oldVpr + rnorm(0,0.8);\par
600        \} */ \par
601      if(index == 3)\{ \par
602        rnewJmax = oldJmax + rnorm(0,sd3);\par
603      \}  \par
604 \par
605      /* Finish of the rnormCV function */\par
606       Rsq = RsqeC4photo(assim,qp,temp,rh,Ca,Oa,\par
607                        rnewVcmax,rnewVpmax,rnewVpr,\par
608                        rnewJmax);\par
609 \par
610       if(Rsq > oldRsq)\{\par
611         oldRsq = Rsq;\par
612         oldVcmax = rnewVcmax;\par
613         oldVpmax = rnewVpmax;\par
614         oldVpr = rnewVpr;\par
615         oldJmax = rnewJmax;\par
616         REAL(mat1)[n1*4] = oldVcmax;\par
617         REAL(mat1)[1 + n1*4] = oldVpmax;\par
618         /*      REAL(mat1)[2 + n1*5] = oldVpr;*/\par
619         REAL(mat1)[2 + n1*4] = oldJmax;\par
620         REAL(mat1)[3 + n1*4] = oldRsq;\par
621         crit = (1 - Rsq)/Rsq;\par
622         n1++;\par
623       \}\par
624      \}\par
625 \par
626     poldRsq = oldRsq;\par
627     poldVcmax = oldVcmax;\par
628     poldVpmax = oldVpmax;\par
629     poldVpr = oldVpr;\par
630     poldJmax = oldJmax;\par
631 \par
632     for(i = 0; i < niter; i++)\{\par
633 \par
634       /* Replacing the rnormC4 function */\par
635      index = floor(runif(1,4)); \par
636 \par
637        rnewVcmax = oldVcmax;\par
638        rnewVpmax = oldVpmax;\par
639        rnewVpr = oldVpr;\par
640        rnewJmax = oldJmax;\par
641 \par
642      if(index == 1)\{ \par
643        rnewVcmax = oldVcmax + rnorm(0,sd1);\par
644      \}\par
645      if(index == 2)\{ \par
646        rnewVpmax = oldVpmax  + rnorm(0,sd2);\par
647      \}\par
648      /*     if(index == 3)\{ \par
649        rnewVpr = oldVpr + rnorm(0,0.8);\par
650      \}  */\par
651      if(index == 3)\{ \par
652        rnewJmax = oldJmax + rnorm(0,sd3);\par
653      \}  \par
654       /* This is the end of the random generation */\par
655 \par
656       Rsq = RsqeC4photo(assim,qp,temp,rh,Ca,Oa,\par
657                        rnewVcmax,rnewVpmax,rnewVpr,\par
658                        rnewJmax);\par
659 \par
660         if(Rsq > poldRsq)\{\par
661           /* This time I'm suming to avoid overflow */\par
662           /* So I've taken the log */\par
663           rlnum = dnorm(rnewVcmax,oldVcmax,sd1,0) +\par
664                   dnorm(rnewVpmax,oldVpmax,sd2,0) +\par
665             /*          dnorm(rnewVpr,oldVpr,1.2,0) +*/\par
666                   dnorm(rnewJmax,oldJmax,sd3,0);\par
667 \par
668           rlden = dnorm(oldVcmax,oldVcmax,sd1,0) +\par
669                   dnorm(oldVpmax,oldVpmax,sd2,0) +\par
670             /*            dnorm(oldVpr,oldVpr,1.2,0) +*/\par
671                   dnorm(oldJmax,oldJmax,sd3,0);\par
672           \par
673           /* This is in the log scale */\par
674           ratio = (rlnum - rlden);\par
675 \par
676           U = runif(0,1);\par
677           if(ratio > log(U))\{\par
678             oldVcmax = rnewVcmax;\par
679             oldVpmax = rnewVpmax;\par
680             oldVpr = rnewVpr;\par
681             oldJmax = rnewJmax;\par
682             n3++;\par
683           \}\par
684           REAL(mat2)[n2*4] = rnewVcmax;\par
685           REAL(mat2)[n2*4 + 1] = rnewVpmax;\par
686           /*      REAL(mat2)[n2*4 + 2] = rnewVpr; */\par
687           REAL(mat2)[n2*4 + 2] = rnewJmax;\par
688           REAL(mat2)[n2*4 + 3] = Rsq;\par
689           n2++;\par
690         \}\par
691      \par
692     \}\par
693 \par
694     REAL(accept1)[0] = n1;\par
695     REAL(accept2)[0] = n2;\par
696     REAL(accept3)[0] = n3;\par
697     REAL(RsqBI)[0] = poldRsq;\par
698     REAL(CoefBI)[0] = poldVcmax;\par
699     REAL(CoefBI)[1] = poldVpmax;\par
700     /*    REAL(CoefBI)[2] = poldVpr;*/\par
701     REAL(CoefBI)[2] = poldJmax;\par
702 \par
703 \par
704     SET_VECTOR_ELT(lists,0,RsqBI);\par
705     SET_VECTOR_ELT(lists,1,CoefBI);\par
706     SET_VECTOR_ELT(lists,2,accept1);\par
707     SET_VECTOR_ELT(lists,3,mat1);\par
708     SET_VECTOR_ELT(lists,4,mat2);\par
709     SET_VECTOR_ELT(lists,5,accept2);\par
710     SET_VECTOR_ELT(lists,6,accept3);\par
711 \par
712     SET_STRING_ELT(names,0,mkChar("RsqBI"));\par
713     SET_STRING_ELT(names,1,mkChar("CoefBI"));\par
714     SET_STRING_ELT(names,2,mkChar("accept1"));\par
715     SET_STRING_ELT(names,3,mkChar("resuBI"));\par
716     SET_STRING_ELT(names,4,mkChar("resuMC"));\par
717     SET_STRING_ELT(names,5,mkChar("accept2"));\par
718     SET_STRING_ELT(names,6,mkChar("accept3"));\par
719     setAttrib(lists,R_NamesSymbol,names);\par
720     UNPROTECT(9);\par
721     PutRNGstate();\par
722     return(lists);\par
723 \}\par
}
}
{\xe \v RsqeC4photo\:eC4photo.c}
{\xe \v eC4photo.c\:RsqeC4photo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double RsqeC4photo (double {\i oAssim}[enObs], double {\i oQp}[enObs], double {\i oTemp}[enObs], double {\i oRH}[enObs], double {\i Ca}, double {\i Oa}, double {\i Vcmax}, double {\i Vpmax}, double {\i Vpr}, double {\i Jmax})}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 731                                                          \{\par
732 \par
733   double vec1[enObs];\par
734   int i, j;\par
735   double SST = 0.0, SSE = 0.0, diff;\par
736   double Rsquare = 0.0;\par
737 \par
738   for(i = 0;i < enObs; i++)\{\par
739 \par
740     vec1[i] = eC4photoC(oQp[i],oTemp[i],\par
741                        oRH[i],COa,O2a,Vcmax,Vpmax,\par
742                        Vpr,Jmax);\par
743   \}\par
744    \par
745   for(j = 0 ; j < enObs; j++)\{\par
746     SST += pow(oAssim[j],2);\par
747     diff = oAssim[j] - vec1[j];\par
748     SSE += pow(diff,2);\par
749   \}\par
750 \par
751   Rsquare = (SST - SSE)/SST ; \par
752   return(Rsquare);\par
753 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v enObs\:eC4photo.c}
{\xe \v eC4photo.c\:enObs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int enObs}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/Filling_BioCro_SoilStructure.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/Filling_BioCro_SoilStructure.c}
{\xe \v /home/dlebauer/dev/biocro/src/Filling_BioCro_SoilStructure.c}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AuxBioCro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Filling_BioCro_SoilStructure.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "_filling___bio_cro___soil_structure_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Filling_BioCro_SoilStructure} (struct {\b soilML_str} *soilMLS, struct {\b soilText_str} *soTexS, int soillayers, double *depths)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Filling_BioCro_SoilStructure\:Filling_BioCro_SoilStructure.c}
{\xe \v Filling_BioCro_SoilStructure.c\:Filling_BioCro_SoilStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Filling_BioCro_SoilStructure (struct {\b soilML_str} * {\i soilMLS}, struct {\b soilText_str} * {\i soTexS}, int {\i soillayers}, double * {\i depths})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3  \{\par
4     /*************************************************************************************\par
5     *Purpose\par
6     * \par
7     * Surrently Soil water module of BioCro is very simple, using a multi-layer concept but\par
8     * average soil properties and all layers must be of same size.\par
9     * \par
10     * We have added additional elements in soil multilayer structure used in BioCro where\par
11     * each layer is explicitly defined and also additional properties which are required for\par
12     * biogeochemical calculations are also defined for each layer\par
13     * \par
14     * We are simply filling these additional elements in a way that it is consistent with the \par
15     * current BioCro-soil water module [average soil properties for all the layers, each layer is\par
16     * about 5 cm depth] so that older function of soilML can be used.I have to ensure from R that each layer is 5 cm \par
17     * by defining  Nlayers such that Nlayers= round(Rooting depth/5 , 0).\par
18     * \par
19     * Once Explicit definition of soil layers are used, Error associated with Rooting depth will disappear\par
20     * \par
21     * IN future, I can use additional information to write more sophisticated soil water function\par
22     * which cansiders effect of varying soil properties within a single soil profile and also\par
23     * effect of using non-uniform discretization of the soil profile\par
24     * \par
25     * Variables Initialized\par
26     * soilMLS->\par
27     * width\par
28     * dpthmn\par
29     * dpthmx\par
30     * bulkd\par
31     * fieldc\par
32     * pH\par
33     * swclimit\par
34     * ***********************************************************************************/\par
35     int i;\par
36     soilMLS->Num_BioCro_soil_layers= soillayers;\par
37     \par
38     for (i=0; i <soillayers;i++)\par
39       \{\par
40                 if(i == 0)\par
41                 \{\par
42                  soilMLS->width[i] = depths[1];\par
43                  soilMLS->dpthmn[i]=0.0;\par
44                  soilMLS->dpthmx[i]=depths[1];\par
45                  \par
46                 \} \par
47                 else\par
48                 \{\par
49                  soilMLS->width[i] = depths[i] - depths[i-1];\par
50                  soilMLS->dpthmn[i]=depths[i-1];\par
51                  soilMLS->dpthmx[i]=depths[i];\par
52                 \}\par
53           soilMLS->pH[i]=7.0;\par
54           soilMLS->swclimit[i]=soTexS->wiltp-0.0008; // soil/in file says swc limit = wiltpoint - deltamin, which is 0.0008 in example file\par
55           soilMLS->bulkd[i]=soTexS->bulkd;\par
56           soilMLS->fieldc[i]=soTexS->fieldc;\par
57           soilMLS->sand[i]=soTexS->sand;\par
58           soilMLS->silt[i]=soTexS->silt;\par
59           soilMLS->clay[i]=soTexS->clay;\par
60       \}\par
61    return;\par
62  \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/function_prototype.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/function_prototype.h}
{\xe \v /home/dlebauer/dev/biocro/src/function_prototype.h}
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "AuxBioCro.h"}\par
{\f2 #include "crocent.h"}\par
{\f2 #include "soilwater.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for function_prototype.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__prototype_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "function__prototype_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Copy_SoilWater_BioCro_To_CropCent} (struct {\b soilML_str} *soilMLS, struct {\b cropcentlayer} *CROPCENT)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CalculateBiogeochem} (struct {\b miscanthus} *{\b miscanthus}, struct {\b cropcentlayer} *CROPCENT, struct {\b dailyclimate} *{\b dailyclimate})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Filling_BioCro_SoilStructure} (struct {\b soilML_str} *soilMLS, struct {\b soilText_str} *soTexS, int soillayers, double *depths)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Calculate_Soil_Layer_Temperature} (double soiltavg[], int num_layers, struct {\b dailyclimate} *{\b dailyclimate})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Copy_CropCent_To_DayCent_Structures} (struct {\b cropcentlayer} *CROPCENT, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Calculate_Soil_Layer_Temperature\:function_prototype.h}
{\xe \v function_prototype.h\:Calculate_Soil_Layer_Temperature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Calculate_Soil_Layer_Temperature (double {\i soiltavg}[], int {\i num_layers}, struct {\b dailyclimate} * {\i dailyclimate})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3 \{\par
4   /************************************************************************\par
5    * Purpose:\par
6    * To calculate average  temperature of multiple soil layer\par
7    * Input\par
8    * daily climate structure\par
9    * number of layers in soil profile num_layers\par
10    * Output\par
11    * soiltavg[num_layers]\par
12    * \par
13    * Currently I am assuming temperature of all the soil layers is same as air temperature\par
14    * This is similar to what i got in the version Melaniie gave me.\par
15    * I need to change it to make it more sophisticated, \par
16    * Also, perhaps I will need to include maxm and minm temperature of layers too \par
17    * *********************************************************************/\par
18   int i;\par
19   for (i=0; i<num_layers; i++)\par
20   \{\par
21     soiltavg[i]=dailyclimate->temp;\par
22   \}\par
23   return;\par
24 \}}
}
{\xe \v CalculateBiogeochem\:function_prototype.h}
{\xe \v function_prototype.h\:CalculateBiogeochem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CalculateBiogeochem (struct {\b miscanthus} * {\i miscanthus}, struct {\b cropcentlayer} * {\i CROPCENT}, struct {\b dailyclimate} * {\i dailyclimate})}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7 \{\par
8  \par
9   /**********************************************************************************************************************\par
10    * Purpose:\par
11    * To Evaluate biogeochemical cycle for the current day\par
12    * \par
13    * Inputs/Outputs:\par
14    * \par
15    * (1)\par
16    * A pointer to a structure miscanthus. This is defineed in crocent.h \par
17    * This structure contain standing biomass of different plant organs and also litter components.\par
18    * Idea is to use these litter component, create structures that can be send as input to soil decomposition\par
19    * and update the standing biomass pool\par
20    * \par
21    * (2)\par
22    * A pointer to structure cropcentlayer. This is defined in crocent.h \par
23    * This contain all the parameters and input/output required to perform soil biogeochemistry calculations which is a function of\par
24    * incoming litter, environmental conditions, soil properties. \par
25    * This structures contain all the input/output pool and after function call, all pools are updated for today.\par
26    * \par
27    * (3)\par
28    * A pointer to a structure dailyclimate. This is defined in crocent.h\par
29    *This is a structure for storing daily climate. This is required to perform decomposition of SOC/ and calculations of trace gas \par
30    *which are done daily and require daily climate data \par
31    * \par
32    * Summary/Main output of interest:-\par
33    *     (a)  Updated plant structure (after taking care of fall rate of leaf litter).\par
34    *     (b)  Updated SOC pools\par
35    *     (c)  Updated NH4 pool\par
36    *     (d)  Updated NO3 in Layers\par
37    *     (e)  Updated Flux of N from different Layers\par
38    *     (f)  gaseous flux from soil, CH4, N20, N2, CO2\par
39    *     (g)  Leaching of Organic matter and Nitrogen \par
40    * ***************************************************************************************************************************/\par
41   // Structure Definition from DayCent Code Provided by Melanie that will be used in function call to trace gas calculations\par
42   SITEPAR_SPT sitepar;\par
43   LAYERPAR_SPT layers;\par
44   SOIL_SPT soil;\par
45   \par
46   // these variable are in argument to trace_gas_model but are not used, I am defining them for consistency. I can remove them later on.\par
47   double time,sand,silt,clay,nreduce,NOabsorp_grass,NOabsorp_tree,tree_lai;\par
48   int texture;\par
49   time= 0.0;\par
50   texture=2;\par
51   nreduce=1.0;\par
52   CROPCENT->ENV.nit_amt=0.0;\par
53   tree_lai=0.0;\par
54   NOabsorp_grass=0.0;// These are outputs\par
55   NOabsorp_tree=0.0;// These are outputs\par
56   \par
57   \par
58   // These are local variables, some of them need to move them somewhere else later\par
59    struct InputToCropcent leaflitter,stemlitter,rootlitter,rhizomelitter;\par
60    struct minerals leaflitterE,stemlitterE,rootlitterE,rhizomelitterE;\par
61    int woody, Eflag;\par
62    double *fake;\par
63    woody = 0 ; // No woody Material for now\par
64    Eflag = 1; // For N simulations only\par
65  // The below parameters aee RCESTR from fix.100 representing CE Ratio of structural material\par
66    leaflitterE.CN=200.0;\par
67    leaflitterE.CP=500.0;\par
68    leaflitterE.CS=500.0;\par
69    leaflitterE.CS=500.0;\par
70    stemlitterE = leaflitterE;\par
71    rootlitterE=  leaflitterE;\par
72    rhizomelitterE=leaflitterE;\par
73    \par
74 //***********WE CAN DEFINE ALL THE FALL RATES & OTHER PARAMETERS IN MISCANTHUS STRUCTURE THEN  SEND ALL OF THIS IN A SEPARATE FUNCTION *******  //\par
75    //Now here We are simpyl taking litter vector and creating new structures to send to soil biogeochemistry simulations\par
76   \par
77     BiocroToCrocent(&miscanthus->leaf.litter,1.0,0.2, &leaflitterE, 1.0, 1, 0,&leaflitter);\par
78     BiocroToCrocent(&miscanthus->stem.litter,1.0,0.2, &stemlitterE, 1.0, 1, 0,&stemlitter);\par
79     BiocroToCrocent(&miscanthus->root.litter,1.0,0.2, &rootlitterE, 1.0, 0, 0,&rootlitter);\par
80     BiocroToCrocent(&miscanthus->rhizome.litter,1.0,0.2, &rhizomelitterE, 1.0, 0, 0,&rhizomelitter);\par
81 \par
82    \par
83    \par
84    \par
85 //********* THIS CAN GO INTO A SEPARATE FUNCTION*********************************************************/\par
86    \par
87     if(leaflitter.C.totalC >0.0) \par
88      \{\par
89       UpdateCropcentPoolsFromBioCro(&CROPCENT, &leaflitter);\par
90      \}\par
91       if(stemlitter.C.totalC >0.0) \par
92      \{\par
93       UpdateCropcentPoolsFromBioCro(&CROPCENT, &stemlitter);\par
94      \}\par
95       if(rootlitter.C.totalC >0.0) \par
96      \{\par
97       UpdateCropcentPoolsFromBioCro(&CROPCENT, &rootlitter);\par
98      \}\par
99       if(rhizomelitter.C.totalC >0.0) \par
100      \{\par
101       UpdateCropcentPoolsFromBioCro(&CROPCENT, &rhizomelitter);\par
102      \}\par
103 \par
104  \par
105 \par
106      // Calculate Top Layer 0-15 cm Properties based on Multi-layer soil Structure\par
107      //**************FILL IN THE FUNCTION****************************************/\par
108      Calculate_Soil_Layer_Temperature(CROPCENT->soilprofile.properties.soiltavg,CROPCENT->soilprofile.number_layers, dailyclimate);\par
109      \par
110      //Call Function to Assign Environmental Variables in the top 0-15 cm depth for Decomposition\par
111      assignENV(&CROPCENT,fake,fake,fake,fake,fake,fake,fake);\par
112        \par
113      // When Management is Implemented, Use this space two modify decomposition rates (tillage) and Soil N (fertilization)\par
114      //************INSERT IMPLEMENT MANAGEMENT FUNCTION HERE***********************\par
115      \par
116      // Call Function  to Assign Flux Ratios for movement between different Pools  \par
117      assignFluxRatios(&CROPCENT);\par
118      \par
119      // Call Function to Decompose SOC in the top 0-15 cm layer\par
120      decomposeCROPCENT(&CROPCENT, woody,Eflag);\par
121        \par
122     // Call Function to Update All the Pools\par
123       updatecropcentpools(&CROPCENT);\par
124     \par
125   // Copying to DayCent Structures from CropCent multilayer Soil Structure Before Calling Trace_gas_Model\par
126    Copy_CropCent_To_DayCent_Structures(&CROPCENT->soilprofile, sitepar,layers, soil);\par
127     \par
128      \par
129   // call the tracegas model\par
130  \par
131    trace_gas_model(&dailyclimate->doy,&time, &CROPCENT->ENV.newminN,&CROPCENT->ENV.ammonium,CROPCENT->soilprofile.pools.nitrate,\par
132                   &texture,&sand,&silt,&clay,\par
133                   &CROPCENT->ENV.SOILTEX.fieldc,&CROPCENT->ENV.SOILTEX.bulkd,&CROPCENT->sitepar.maxt,&dailyclimate->precip,\par
134                   &dailyclimate->snow,&CROPCENT->ENV.SOILTEX.avgwfps,&CROPCENT->Emission.stormf,\par
135                   &CROPCENT->Emission.basef, CROPCENT->soilprofile.flux.frlechd,CROPCENT->soilprofile.flux.stream,\par
136                   &CROPCENT->Emission.inorglch, &CROPCENT->soilprofile.critflow,CROPCENT->soilprofile.flux.waterflux,\par
137                   &CROPCENT->Emission.newCO2, &CROPCENT->Emission.NOflux, &CROPCENT->Emission.Nn20flux,&CROPCENT->Emission.Dn20flux,\par
138                   &CROPCENT->Emission.Dn2flux,&CROPCENT->Emission.CH4,&CROPCENT->sitepar.isdecid, \par
139                   &CROPCENT->sitepar.isagri, &miscanthus->LAI,&tree_lai,\par
140                   &NOabsorp_grass,&NOabsorp_tree,\par
141                   &CROPCENT->ENV.nit_amt,&nreduce,\par
142                   CROPCENT->soilprofile.flux.dN2lyr,CROPCENT->soilprofile.flux.dN2Olyr,sitepar,layers,soil);\par
143                   \par
144                   \par
145    /*\par
146    trace_gas_model(int *jday, double *time, double *newminrl, double *ammonium, double nitrate[],\par
147                          int *texture, double *sand, double *silt, double *clay,\par
148                          double *afiel, double *bulkd, double *maxt, double *ppt,\par
149                          double *snow, double *avgwfps, double *stormf,\par
150                          double *basef, double frlechd[], double stream[],\par
151                          double *inorglch, double *critflow, double wfluxout[],\par
152                          double *newCO2, double *NOflux, double *Nn2oflux, double *Dn2oflux,\par
153                          double *Dn2flux, double *CH4, int *isdecid,\par
154                          int *isagri, double *grass_lai, double *tree_lai,\par
155                          double *NOabsorp_grass, double *NOabsorp_tree,\par
156                          double *nit_amt, double *nreduce, \par
157                          double dN2lyr[], double dN2Olyr[],SITEPAR_SPT sitepar,LAYERPAR_SPT layers,SOIL_SPT soil);\par
158                          \par
159  */ \par
160   // Write All the Variables of Interest in the Cropcentlayer structure\par
161   \par
162   //***********Update CROPCENT********************************************\par
163  \par
164 \}\par
}
}
{\xe \v Copy_CropCent_To_DayCent_Structures\:function_prototype.h}
{\xe \v function_prototype.h\:Copy_CropCent_To_DayCent_Structures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Copy_CropCent_To_DayCent_Structures (struct {\b cropcentlayer} * {\i CROPCENT}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 \{\par
7   int i;\par
8       \par
9       layers->numlyrs=CROPCENT->soilprofile.number_layers;\par
10       for (i=0; i<CROPCENT->soilprofile.number_layers; i++)\par
11       \{\par
12         layers->width[i]= CROPCENT->soilprofile.properties.width[i];\par
13         layers->swc[i]= CROPCENT->soilprofile.pools.swc[i];\par
14         layers->swclimit[i]= CROPCENT->soilprofile.properties.swclimit[i];\par
15         layers->pH[i]= CROPCENT->soilprofile.properties.pH[i];\par
16         layers->bulkd[i]= CROPCENT->soilprofile.properties.bulkd[i];\par
17         layers->fieldc[i]= CROPCENT->soilprofile.properties.fieldc[i];\par
18         layers->dpthmx[i]= CROPCENT->soilprofile.properties.dpthmx[i];\par
19         layers->dpthmn[i]= CROPCENT->soilprofile.properties.dpthmn[i];\par
20         layers->tcoeff[i]=CROPCENT->soilprofile.pools.rootbiomass[i];\par
21         soil->soiltavg[i]=CROPCENT->soilprofile.properties.soiltavg[i];\par
22       \}\par
23       sitepar->Ncoeff=CROPCENT->sitepar.Ncoeff;\par
24       sitepar->jdayStart=CROPCENT->sitepar.jdayStart;\par
25       sitepar->jdayEnd=CROPCENT->sitepar.jdayEnd;\par
26       sitepar->N2Oadjust=CROPCENT->sitepar.N2Oadjust;\par
27 \}}
}
{\xe \v Copy_SoilWater_BioCro_To_CropCent\:function_prototype.h}
{\xe \v function_prototype.h\:Copy_SoilWater_BioCro_To_CropCent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Copy_SoilWater_BioCro_To_CropCent (struct {\b soilML_str} * {\i soilMLS}, struct {\b cropcentlayer} * {\i CROPCENT})}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 \{\par
5   /***************************************************************************************\par
6    * File Name:Copy_SoilWater_BioCro_To_CropCent.c\par
7    * \par
8    * Function Name: Copy_SoilWater_BioCro_To_CropCent\par
9    * \par
10    * Purpose: Soil Water Module of BioCro is used to update multilayer soil structure of cropcent layer,\par
11    *          which will be eventually used for the calculation of soil biogeochemistry cycling\par
12    * \par
13    * Input:\par
14    * struct soilML_str *soilMLS:  pointer to structure soilMLS defined in AuxBioCro.h This structure \par
15    *                   contains calculations of soul hydrology \par
16    * int soillayers:  Number of soil layers being used in the calculations\par
17    * struct cropcentlayer *CROPCENT: Pointer to structure cropcent defined in crocent.h\par
18    * \par
19    * Output:\par
20    * soilprofile of CROPCENT is updated\par
21    * ************************************************************************************/\par
22     int i;\par
23      CROPCENT->soilprofile.number_layers = soilMLS->Num_BioCro_soil_layers;\par
24       for (i = 0; i < CROPCENT->soilprofile.number_layers; i++)\par
25         \{\par
26         CROPCENT->soilprofile.pools.rootbiomass[i]=soilMLS->rootDist[i];\par
27         CROPCENT->soilprofile.pools.swc[i]=soilMLS->cws[i];\par
28         CROPCENT->soilprofile.flux.waterflux[i]=soilMLS->dailyWflux[i]; \par
29         CROPCENT->soilprofile.properties.width[i]=soilMLS->width[i];\par
30         CROPCENT->soilprofile.properties.dpthmx[i]=soilMLS->dpthmx[i];\par
31         CROPCENT->soilprofile.properties.dpthmn[i]=soilMLS->dpthmn[i];\par
32         CROPCENT->soilprofile.properties.pH[i]=soilMLS->pH[i];\par
33         CROPCENT->soilprofile.properties.bulkd[i]=soilMLS->bulkd[i];\par
34         CROPCENT->soilprofile.properties.swclimit[i]=soilMLS->swclimit[i];\par
35         CROPCENT->soilprofile.properties.fieldc[i]=soilMLS->fieldc[i];\par
36         \}      \par
37       return;\par
38 \}\par
}
}
{\xe \v Filling_BioCro_SoilStructure\:function_prototype.h}
{\xe \v function_prototype.h\:Filling_BioCro_SoilStructure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Filling_BioCro_SoilStructure (struct {\b soilML_str} * {\i soilMLS}, struct {\b soilText_str} * {\i soTexS}, int {\i soillayers}, double * {\i depths})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3  \{\par
4     /*************************************************************************************\par
5     *Purpose\par
6     * \par
7     * Surrently Soil water module of BioCro is very simple, using a multi-layer concept but\par
8     * average soil properties and all layers must be of same size.\par
9     * \par
10     * We have added additional elements in soil multilayer structure used in BioCro where\par
11     * each layer is explicitly defined and also additional properties which are required for\par
12     * biogeochemical calculations are also defined for each layer\par
13     * \par
14     * We are simply filling these additional elements in a way that it is consistent with the \par
15     * current BioCro-soil water module [average soil properties for all the layers, each layer is\par
16     * about 5 cm depth] so that older function of soilML can be used.I have to ensure from R that each layer is 5 cm \par
17     * by defining  Nlayers such that Nlayers= round(Rooting depth/5 , 0).\par
18     * \par
19     * Once Explicit definition of soil layers are used, Error associated with Rooting depth will disappear\par
20     * \par
21     * IN future, I can use additional information to write more sophisticated soil water function\par
22     * which cansiders effect of varying soil properties within a single soil profile and also\par
23     * effect of using non-uniform discretization of the soil profile\par
24     * \par
25     * Variables Initialized\par
26     * soilMLS->\par
27     * width\par
28     * dpthmn\par
29     * dpthmx\par
30     * bulkd\par
31     * fieldc\par
32     * pH\par
33     * swclimit\par
34     * ***********************************************************************************/\par
35     int i;\par
36     soilMLS->Num_BioCro_soil_layers= soillayers;\par
37     \par
38     for (i=0; i <soillayers;i++)\par
39       \{\par
40                 if(i == 0)\par
41                 \{\par
42                  soilMLS->width[i] = depths[1];\par
43                  soilMLS->dpthmn[i]=0.0;\par
44                  soilMLS->dpthmx[i]=depths[1];\par
45                  \par
46                 \} \par
47                 else\par
48                 \{\par
49                  soilMLS->width[i] = depths[i] - depths[i-1];\par
50                  soilMLS->dpthmn[i]=depths[i-1];\par
51                  soilMLS->dpthmx[i]=depths[i];\par
52                 \}\par
53           soilMLS->pH[i]=7.0;\par
54           soilMLS->swclimit[i]=soTexS->wiltp-0.0008; // soil/in file says swc limit = wiltpoint - deltamin, which is 0.0008 in example file\par
55           soilMLS->bulkd[i]=soTexS->bulkd;\par
56           soilMLS->fieldc[i]=soTexS->fieldc;\par
57           soilMLS->sand[i]=soTexS->sand;\par
58           soilMLS->silt[i]=soTexS->silt;\par
59           soilMLS->clay[i]=soTexS->clay;\par
60       \}\par
61    return;\par
62  \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/getsoilprop.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/getsoilprop.c}
{\xe \v /home/dlebauer/dev/biocro/src/getsoilprop.c}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for getsoilprop.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "getsoilprop_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NCLASS}\~ 14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COARSE}\~ 1                /* texture type for sandy soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MEDIUM}\~ 2                /* texture type for medium (loamy) soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FINE}\~ 3                  /* texture type for fine soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VERYFINE}\~ 4              /* texture type for volcanic soil */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getsoilprop} (double *asand, double *asilt, double *aclay, double *bulkden, double *fieldcap, int *texture, int *soilclassification)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v COARSE\:getsoilprop.c}
{\xe \v getsoilprop.c\:COARSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COARSE\~ 1                /* texture type for sandy soil */}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FINE\:getsoilprop.c}
{\xe \v getsoilprop.c\:FINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FINE\~ 3                  /* texture type for fine soil */}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MEDIUM\:getsoilprop.c}
{\xe \v getsoilprop.c\:MEDIUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MEDIUM\~ 2                /* texture type for medium (loamy) soil */}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NCLASS\:getsoilprop.c}
{\xe \v getsoilprop.c\:NCLASS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NCLASS\~ 14}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VERYFINE\:getsoilprop.c}
{\xe \v getsoilprop.c\:VERYFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VERYFINE\~ 4              /* texture type for volcanic soil */}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v getsoilprop\:getsoilprop.c}
{\xe \v getsoilprop.c\:getsoilprop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getsoilprop (double * {\i asand}, double * {\i asilt}, double * {\i aclay}, double * {\i bulkden}, double * {\i fieldcap}, int * {\i texture}, int * {\i soilclassification})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 75     \{\par
76       static double satcond[NCLASS] = \{0.0, 0.000176, 0.0001563,\par
77                                       0.00003467, 0.0000072, 0.00000695,\par
78                                       0.0000063, 0.0000017, 0.00000245,\par
79                                       0.000002167, 0.000001033,\par
80                                       0.000001283, 0.0000080, 0.0000080\};\par
81       static double bulk_density[NCLASS] = \{0.0, 1.55, 1.50, 1.43, 1.36,\par
82                                            1.39, 1.35, 1.24, 1.30, 1.28,\par
83                                            1.19, 1.15, 1.40, 0.75\};\par
84       static double field_capacity[NCLASS] = \{0.0, 0.14, 0.18, 0.22, 0.32,\par
85                                              0.29, 0.28, 0.40, 0.36,\par
86                                              0.36, 0.46, 0.45, 0.33,\par
87                                              0.70\};\par
88       int   soil_indx;\par
89       double ksat;\par
90       double sand, silt, clay;\par
91 \par
92       sand = *asand * 100;\par
93       silt = *asilt * 100;\par
94       clay = *aclay * 100;\par
95 \par
96       if ((sand > 100 || sand < 0) || (silt > 100 || silt < 0) ||\par
97           (clay > 100 || clay < 0)) \{\par
98         fprintf(stderr, "Invalid texture in getsoilprop: sand = %f,", sand);\par
99         fprintf(stderr, " silt = %f, clay = %f\\n", silt, clay);\par
100         exit(1);\par
101       \}\par
102 \par
103       if (*texture == VERYFINE) \{\par
104         /* volcanic */\par
105         soil_indx = 13;\par
106       \} else if ((sand >= 85) && ((-2.0/3.0)*silt - clay + 10 >= 0)) \{\par
107         /* sand */\par
108         soil_indx = 1;\par
109       \} else if (((-2.0/3.0)*silt - clay + 10 <= 0) &&\par
110                  (-0.5*silt - clay + 15 >= 0)) \{\par
111         /* loamy sand */\par
112         soil_indx = 2;\par
113       \} else if (((-0.5*silt-clay+15 <= 0) && (clay <= 20) && (sand >= 52)) ||\par
114                  ((sand <= 52) && (silt <= 50) && (clay <= 7))) \{\par
115         /* sandy loam */\par
116         soil_indx = 3;\par
117       \} else if ((sand <= 50) && (silt >= 50) && (clay <= 27)) \{\par
118         if ((sand <= 20) && (clay <= 10)) \{\par
119           /* silt */\par
120           soil_indx = 12;\par
121         \} else \{\par
122           /* silt loam */\par
123           soil_indx = 4;\par
124         \}\par
125       \} else if ((sand >= 23 && sand <= 52) && (silt >= 28 && silt <= 50) &&\par
126                  (clay >= 7 && clay <= 27)) \{\par
127         /* loam */\par
128         soil_indx = 5;\par
129       \} else if ((sand >= 45 && sand <= 80) && (silt <= 28) &&\par
130                  (clay >= 20 && clay <= 35)) \{\par
131         /* sandy clay loam */\par
132         soil_indx = 6;\par
133       \} else if ((sand <= 20) && (clay >= 27 && clay <= 40)) \{\par
134         /* silty clay loam */\par
135         soil_indx = 7;\par
136       \} else if ((sand >= 20 && sand <= 45) && (clay >= 27 && clay <= 40)) \{\par
137         /* clay loam */\par
138         soil_indx = 8;\par
139       \} else if ((sand >= 45 && sand <= 65) && (silt <= 20) &&\par
140                  (clay >= 35 && clay <= 55)) \{\par
141         /* sandy clay */\par
142         soil_indx = 9;\par
143       \} else if ((sand <= 20) && (silt >= 40 && silt <= 60) &&\par
144                  (clay >= 40 && clay <= 60)) \{\par
145         /* silty clay */\par
146         soil_indx = 10;\par
147       \} else if ((sand <= 45) && (silt <= 40) && (clay >= 40)) \{\par
148         /* clay */\par
149         soil_indx = 11;\par
150       \} else \{\par
151         fprintf(stderr, "Unknown texture type: sand = %f, silt = %f,", sand,\par
152                 silt);\par
153         fprintf(stderr, " clay = %f\\n", clay);\par
154         exit(1);\par
155       \}\par
156 \par
157       *bulkden = bulk_density[soil_indx];\par
158       *fieldcap = field_capacity[soil_indx];\par
159       ksat = satcond[soil_indx]*100.0;    /* Convert m/sec to cm/sec */\par
160       *soilclassification=soil_indx-1;\par
161 \par
162 /*      printf("Soil classification = %1d\\n", soil_indx);\par
163       printf("standard_bulkden = %10.6lf\\n", *bulkden);\par
164       printf("standard_fieldcap = %10.6lf\\n", *fieldcap);\par
165       printf("standard_ksat = %10.6lf\\n", ksat); */\par
166 \par
167       return;\par
168     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/leachdly.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/leachdly.c}
{\xe \v /home/dlebauer/dev/biocro/src/leachdly.c}
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "swconst.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for leachdly.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "leachdly_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b leachdly} (double wfluxout[], int numlyrs, double nitrate[], double critflow, double frlechd[], double stream[], double basef, double stormf, double *inorglch)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v leachdly\:leachdly.c}
{\xe \v leachdly.c\:leachdly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void leachdly (double {\i wfluxout}[], int {\i numlyrs}, double {\i nitrate}[], double {\i critflow}, double {\i frlechd}[], double {\i stream}[], double {\i basef}, double {\i stormf}, double * {\i inorglch})}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61     \{\par
62 \par
63       int lyr, nxt;\par
64       int iel = 0;  /* nitrogen */\par
65       double amtlea[MAXLYR];\par
66       double strm_N;\par
67       double base_N;\par
68       double linten;\par
69 \par
70       strm_N = 0.0;\par
71       base_N = 0.0;\par
72       *inorglch = 0.0;\par
73 \par
74       for(lyr=0; lyr < numlyrs; lyr++) \{\par
75         amtlea[lyr] = 0.0;\par
76         nxt = lyr + 1;\par
77 \par
78         /* wfluxout > 0. indicates a saturated water flow out of layer lyr */\par
79 \par
80         if ((wfluxout[lyr] >  0.0) && (nitrate[lyr] > 1.0E-10)) \{\par
81           linten = min(1.0 - (critflow - wfluxout[lyr]) / critflow, 1.0);\par
82           linten = max(linten, 0.0);\par
83           amtlea[lyr] = (frlechd[iel]) * nitrate[lyr] * linten;\par
84 \par
85           /* If you are at the bottom layer, compute storm flow. */\par
86           if (lyr == numlyrs-1) \{\par
87             strm_N = amtlea[lyr] * stormf;\par
88           \}\par
89           if (amtlea[lyr] < nitrate[lyr]) \{\par
90             nitrate[lyr] = nitrate[lyr] - amtlea[lyr];\par
91             nitrate[nxt] = nitrate[nxt] + (amtlea[lyr] - strm_N);\par
92           \}\par
93         \}\par
94       \}\par
95 \par
96       /* Compute base flow and mineral stream flows. */\par
97       /* Check for underflow. -mdh */\par
98 \par
99       if (nitrate[nxt] >= 1.0E-10) \{\par
100         base_N = nitrate[nxt] * basef;\par
101         nitrate[nxt] = nitrate[nxt] - base_N;\par
102       \}\par
103 \par
104       /* Note: stream flow indices differ from mineral element */ \par
105       /*       indices by 1 (eg  stream(2) is stream flow for nitrogen). */\par
106 \par
107       stream[iel+1] = stream[iel+1] + (strm_N + base_N);\par
108       *inorglch = strm_N + base_N;\par
109 \par
110       return;\par
111     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/maizeGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/maizeGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/maizeGro.c}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "maizeGro.h"}\par
{\f2 #include "AuxMaizeGro.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for maizeGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "maize_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b maizeGro} (SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP DATES, SEXP PHENOP, SEXP PHOTOP, SEXP CANOPYP, SEXP NITROP, SEXP LAIP, SEXP MALLOCP, SEXP LAT, SEXP TIMESTEP, SEXP PLANTDENSITY, SEXP SOILP, SEXP SOILP2, SEXP SOILDEPTHS, SEXP CWS, SEXP SENEP, SEXP NNITROP)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v maizeGro\:maizeGro.c}
{\xe \v maizeGro.c\:maizeGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP maizeGro (SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i DATES}, SEXP {\i PHENOP}, SEXP {\i PHOTOP}, SEXP {\i CANOPYP}, SEXP {\i NITROP}, SEXP {\i LAIP}, SEXP {\i MALLOCP}, SEXP {\i LAT}, SEXP {\i TIMESTEP}, SEXP {\i PLANTDENSITY}, SEXP {\i SOILP}, SEXP {\i SOILP2}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i SENEP}, SEXP {\i NNITROP})}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40 \{\par
41 \par
42 /* Initializing variables  */\par
43 \par
44         int vecsize = 8760 ; /* 365 days * 24 hours  */\par
45         int i, i2, i3, i4;\par
46 \par
47         struct nitroParms nitroparms;\par
48         double TEMPdoubletoint;\par
49         nitroparms.ileafN=REAL(NNITROP)[0];\par
50         nitroparms.kln=REAL(NNITROP)[1];\par
51         nitroparms.Vmaxb1=REAL(NNITROP)[2];\par
52         nitroparms.Vmaxb0=REAL(NNITROP)[3];\par
53         nitroparms.alphab1=REAL(NNITROP)[4];\par
54         nitroparms.alphab0=REAL(NNITROP)[5];\par
55         nitroparms.Rdb1=REAL(NNITROP)[6];\par
56         nitroparms.Rdb0=REAL(NNITROP)[7];\par
57         nitroparms.kpLN=REAL(NNITROP)[8];\par
58         nitroparms.lnb0=REAL(NNITROP)[9];\par
59         nitroparms.lnb1=REAL(NNITROP)[10];\par
60         TEMPdoubletoint=REAL(NNITROP)[11];\par
61         nitroparms.lnFun=(int)TEMPdoubletoint;\par
62         nitroparms.maxln=REAL(NNITROP)[12];\par
63         nitroparms.minln=REAL(NNITROP)[13];\par
64         nitroparms.daymaxln=REAL(NNITROP)[14];\par
65 \par
66 \par
67 \par
68 /* Some structures */\par
69         struct lai_str tmpLAI;\par
70         struct maize_dbp_str tmpDBP;\par
71         struct soilML_str soilMLS;\par
72         struct soilText_str soTexS; \par
73         struct ws_str WaterS;\par
74 \par
75         int plantDate, emergeDate, harvestDate;\par
76         double baseTemp, maxLeaves;\par
77         double plantEmerge, phyllochron1, phyllochron2;\par
78         double R1, R2, R3, R4, R5, R6;\par
79         double phenoStage = 0.0;\par
80 \par
81         double TTc = 0.0, TTc_V10 = 0.0, TTc_Vn = 0.0;\par
82 \par
83         double LAI = 0.0;\par
84 \par
85         double lat = REAL(LAT)[0];\par
86         int timestep = INTEGER(TIMESTEP)[0];\par
87 \par
88 /* Variables for photosynthesis */\par
89         double vmax1, vmax11, vmax12, alpha1, kparm1, theta, beta, Rd11, Rd12, Rd1,upperT,lowerT;\par
90         double vmax;\par
91         double alpha;\par
92         double Ca, b01, b11, ws_0;\par
93         int ws;\par
94         double StomWS = 1;\par
95         double CanopyA, CanopyT;\par
96         struct Can_Str Canopy;\par
97 \par
98 /* Variables for canopy */\par
99         double Sp, SpD, nlayers, kd, chil, heightFactor;\par
100         double mrc1, mrc2;\par
101 \par
102 /* Variables for senescence */\par
103         double seneLeaf, seneStem, seneRoot;\par
104         double newLeafcol[8760];\par
105         double newStemcol[8760];\par
106         double newRootcol[8760];\par
107         double *sti, *sti2, *sti3;\par
108         int k = 0, j = 0, q = 0, m = 0;\par
109         sti = &newLeafcol[0];\par
110         sti2 = &newStemcol[0];\par
111         sti3 = &newRootcol[0];\par
112 \par
113 /* Variables for nitrogen */\par
114         double iLeafN, kLN, vmax_b1, alpha_b1, kpLN, lnb0, lnb1, lnFun_0;\par
115         double LeafN, LeafNR;\par
116         int lnFun; \par
117 \par
118 /* Variables for leaf area index */\par
119         double laiMethod, TTcoef, maxLAI;\par
120         double Ax, LNx, LT, a1, a2, k0, L0, LLx, Lx, LNl, Amax, c1, c2, c3, \par
121           c4, a, b, x0, f, g;\par
122 \par
123 /* Variables for C allocation */\par
124         double kLeaf, kStem, kRoot, kGrain;\par
125         double newLeaf, newStem, newRoot, newGrain;\par
126         double Leaf = 0.0, Stem = 0.0, Root = 0.0, Grain = 0.0;\par
127 \par
128         double plantdensity = REAL(PLANTDENSITY)[0];\par
129 \par
130 /* Variables for soil parameters */\par
131         double FieldC, WiltP, phi1, phi2, soilDepth;\par
132         int soilType, wsFun, hydrDist;\par
133         double soilEvap, TotEvap;\par
134         double waterCont = 0.3;\par
135         double LeafWS = 1;\par
136         int soillayers = INTEGER(SOILP2)[1];\par
137         double cwsVec[soillayers];\par
138         for(i3=0;i3<soillayers;i3++)\{\par
139                 cwsVec[i3] = REAL(CWS)[i3];\par
140         \} \par
141         double cwsVecSum = 0.0;\par
142         double rfl;  /* root factor lambda */\par
143         double rsec; /* radiation soil evaporation coefficient */\par
144         double rsdf; /* root soil depth factor */\par
145         double scsf; /* stomatal conductance sensitivity factor */\par
146         double transpRes; /* Resistance to transpiration from soil to leaf */\par
147         double leafPotTh; /* Leaf water potential threshold */\par
148 \par
149         /* Parameters for calculating leaf water potential */\par
150         double LeafPsim = 0.0;\par
151 \par
152 /* Extracting dates */\par
153 \par
154         plantDate = INTEGER(DATES)[0];\par
155         emergeDate = INTEGER(DATES)[1];\par
156         harvestDate = INTEGER(DATES)[2];\par
157 \par
158 /* Extracting phenology parameters */\par
159 \par
160         baseTemp = REAL(PHENOP)[0];\par
161         maxLeaves = REAL(PHENOP)[1];\par
162         plantEmerge = REAL(PHENOP)[2];\par
163         phyllochron1 = REAL(PHENOP)[3];\par
164         phyllochron2 = REAL(PHENOP)[4];\par
165         R1 = REAL(PHENOP)[5];\par
166         R2 = REAL(PHENOP)[6];\par
167         R3 = REAL(PHENOP)[7];\par
168         R4 = REAL(PHENOP)[8];\par
169         R5 = REAL(PHENOP)[9];\par
170         R6 = REAL(PHENOP)[10];\par
171 \par
172 /* Extracting photosynthesis parameters */\par
173 \par
174         vmax11 = REAL(PHOTOP)[0];\par
175         vmax12 = REAL(PHOTOP)[1];\par
176         vmax = vmax11;\par
177         alpha1 = REAL(PHOTOP)[2];\par
178         alpha = alpha1;\par
179         kparm1 = REAL(PHOTOP)[3];\par
180         theta = REAL(PHOTOP)[4];\par
181         beta = REAL(PHOTOP)[5];\par
182         Rd11 = REAL(PHOTOP)[6];\par
183         Rd12 = REAL(PHOTOP)[7];\par
184         Ca = REAL(PHOTOP)[8];\par
185         b01 = REAL(PHOTOP)[9];\par
186         b11 = REAL(PHOTOP)[10];\par
187         ws_0 = REAL(PHOTOP)[11];\par
188         ws = ws_0;\par
189         upperT = REAL(PHOTOP)[12];\par
190         lowerT= REAL(PHOTOP)[13];\par
191 \par
192 /* Extracting canopy parameters */\par
193         Sp = REAL(CANOPYP)[0];\par
194         SpD = REAL(CANOPYP)[1];\par
195         nlayers = REAL(CANOPYP)[2];\par
196         kd = REAL(CANOPYP)[3];\par
197         chil = REAL(CANOPYP)[4];\par
198         mrc1 = REAL(CANOPYP)[5];\par
199         mrc2 = REAL(CANOPYP)[6];\par
200         heightFactor = REAL(CANOPYP)[7];\par
201 \par
202 /* Extracting senescence parameters */\par
203         seneStem = REAL(SENEP)[0];\par
204         seneLeaf = REAL(SENEP)[1];\par
205         seneRoot = REAL(SENEP)[2];\par
206 \par
207 /* Extracting nitrogen parameters */\par
208         iLeafN = REAL(NITROP)[0];\par
209         LeafN = iLeafN;\par
210         kLN = REAL(NITROP)[1];\par
211         vmax_b1 = REAL(NITROP)[2];\par
212         alpha_b1 = REAL(NITROP)[3];\par
213         kpLN = REAL(NITROP)[4];\par
214         lnb0 = REAL(NITROP)[5];\par
215         lnb1 = REAL(NITROP)[6];\par
216         lnFun_0 = REAL(NITROP)[7];\par
217         lnFun = lnFun_0;\par
218 \par
219 /* Extracting LAI parms */\par
220         laiMethod = REAL(LAIP)[0];\par
221         TTcoef = REAL(LAIP)[1];\par
222         maxLAI = REAL(LAIP)[2];\par
223         Ax = REAL(LAIP)[3];\par
224         LT = REAL(LAIP)[4];\par
225         a1 = REAL(LAIP)[5];\par
226         a2 = REAL(LAIP)[6];\par
227         k0 = REAL(LAIP)[7];\par
228         L0 = REAL(LAIP)[8];\par
229         LLx = REAL(LAIP)[9];\par
230         Lx = REAL(LAIP)[10];\par
231         LNl = REAL(LAIP)[11];\par
232         Amax = REAL(LAIP)[12];\par
233         c1 = REAL(LAIP)[13];\par
234         c2 = REAL(LAIP)[14];\par
235         c3 = REAL(LAIP)[15];\par
236         c4 = REAL(LAIP)[16];\par
237         a = REAL(LAIP)[17];\par
238         b = REAL(LAIP)[18];\par
239         x0 = REAL(LAIP)[19];\par
240         f = REAL(LAIP)[20];\par
241         g = REAL(LAIP)[21];\par
242 \par
243 /* Extracting soil parameters */\par
244 \par
245         FieldC = REAL(SOILP)[0];\par
246         WiltP = REAL(SOILP)[1];\par
247         phi1 = REAL(SOILP)[2];\par
248         phi2 = REAL(SOILP)[3];\par
249         soilDepth = REAL(SOILP)[4];\par
250         scsf = REAL(SOILP)[5];\par
251         transpRes = REAL(SOILP)[6];\par
252         leafPotTh = REAL(SOILP)[7];\par
253         rfl = REAL(SOILP)[8];\par
254         rsec = REAL(SOILP)[9];\par
255         rsdf = REAL(SOILP)[10];\par
256 \par
257 /* Extracting soil parameters 2 */\par
258         soilType = INTEGER(SOILP2)[0];\par
259         wsFun = INTEGER(SOILP2)[2];\par
260         hydrDist = INTEGER(SOILP2)[3];\par
261 \par
262         soTexS = soilTchoose(soilType);\par
263 \par
264 /* Create list components */\par
265 \par
266         SEXP lists;\par
267         SEXP names;\par
268 \par
269         SEXP DayofYear;\par
270         SEXP Hour;\par
271         SEXP TTTc;\par
272         SEXP PhenoStage;\par
273         SEXP CanopyAssim;\par
274         SEXP CanopyTrans;\par
275         SEXP LAIc;\par
276         SEXP LeafVec;\par
277         SEXP StemVec;\par
278         SEXP RootVec;\par
279         SEXP GrainVec;\par
280         SEXP LAImat;\par
281         SEXP VmaxVec;\par
282         SEXP LeafNVec;\par
283         SEXP cwsMat;\par
284         SEXP psimMat; /* Holds the soil water potential */\par
285         SEXP rdMat;\par
286         SEXP SCpools;\par
287         SEXP SNpools;\par
288         SEXP LeafPsimVec;\par
289         SEXP SoilEvaporation;\par
290         SEXP SoilWatCont;\par
291         SEXP StomatalCondCoefs;\par
292 \par
293         PROTECT(lists = allocVector(VECSXP,23)); /* 1 */\par
294         PROTECT(names = allocVector(STRSXP,23)); /* 2 */  \par
295 \par
296         PROTECT(DayofYear = allocVector(REALSXP,vecsize)); /* 3 */\par
297         PROTECT(Hour = allocVector(REALSXP,vecsize)); /* 4 */\par
298         PROTECT(TTTc = allocVector(REALSXP,vecsize)); /* 5 */\par
299         PROTECT(PhenoStage = allocVector(REALSXP,vecsize)); /* 6 */\par
300         PROTECT(CanopyAssim = allocVector(REALSXP,vecsize)); /* 7 */\par
301         PROTECT(CanopyTrans = allocVector(REALSXP,vecsize)); /* 8 */\par
302         PROTECT(LAIc = allocVector(REALSXP,vecsize)); /* 9 */\par
303         PROTECT(LeafVec = allocVector(REALSXP,vecsize)); /* 10 */\par
304         PROTECT(StemVec = allocVector(REALSXP,vecsize)); /* 11 */\par
305         PROTECT(RootVec = allocVector(REALSXP,vecsize)); /* 12 */\par
306         PROTECT(GrainVec = allocVector(REALSXP,vecsize)); /* 13 */\par
307         PROTECT(LAImat = allocMatrix(REALSXP,MAXLEAFNUMBER,vecsize)); /* 14 */\par
308         PROTECT(VmaxVec = allocVector(REALSXP,vecsize)); /* 15 */\par
309         PROTECT(LeafNVec = allocVector(REALSXP,vecsize)); /* 16 */\par
310         PROTECT(cwsMat = allocMatrix(REALSXP,soillayers,vecsize)); /* 17 */\par
311         PROTECT(psimMat = allocMatrix(REALSXP,soillayers,vecsize)); /* 18 */\par
312         PROTECT(rdMat = allocMatrix(REALSXP,soillayers,vecsize)); /* 19 */\par
313         PROTECT(SCpools = allocVector(REALSXP,9)); /* 20 */\par
314         PROTECT(SNpools = allocVector(REALSXP,9)); /* 21 */\par
315         PROTECT(LeafPsimVec = allocVector(REALSXP,vecsize)); /* 22 */\par
316         PROTECT(SoilEvaporation = allocVector(REALSXP,vecsize)); /* 23 */\par
317         PROTECT(SoilWatCont = allocVector(REALSXP,vecsize)); /* 24 */\par
318         PROTECT(StomatalCondCoefs = allocVector(REALSXP,vecsize)); /* 25 */\par
319 \par
320         int *pt_doy = INTEGER(DOY);\par
321         int *pt_hr = INTEGER(HR);\par
322         double *pt_temp = REAL(TEMP);\par
323         double *pt_solar = REAL(SOLAR);\par
324         double *pt_rh = REAL(RH);\par
325         double *pt_windspeed = REAL(WINDSPEED);\par
326         double *pt_precip = REAL(PRECIP);\par
327 \par
328         for(i=0;i<vecsize;i++)\par
329         \{\par
330                 /* First calculate the elapsed Thermal Time*/\par
331                 /* The idea is that here I need to divide by the time step\par
332                    to calculate the thermal time. For example, a 3 hour time interval\par
333                    would mean that the division would need to by 8 */\par
334 \par
335                 /* If before planting date phenology is not calculated */\par
336                 if(*(pt_doy+i) < plantDate)\{\par
337                         REAL(PhenoStage)[i] = -1;\par
338                         REAL(TTTc)[i] = 0;\par
339                 \}else\{\par
340 \par
341                         if(*(pt_doy+i) >= harvestDate)\{\par
342                                 REAL(TTTc)[i] = TTc;\par
343                                 REAL(PhenoStage)[i] = -1;\par
344                         \}else\{\par
345                                 if(*(pt_temp+i) > baseTemp)\{\par
346                                         TTc += (*(pt_temp+i) - baseTemp)  / (24/timestep); \par
347                                 \}\par
348                                 REAL(TTTc)[i] = TTc; \par
349                                 \par
350                                 if(TTc < plantEmerge || *(pt_doy+i) < emergeDate)\{\par
351                                         REAL(PhenoStage)[i] = 0.0;\par
352                                 \}else\{\par
353                                         if(REAL(PhenoStage)[i-1] < 0.10)\{\par
354                                                 REAL(PhenoStage)[i] = floor(TTc / phyllochron1) / 100;\par
355                                                 TTc_V10 = TTc;\par
356                                         \}else\par
357                                                 if(REAL(PhenoStage)[i-1] < 1)\{\par
358                                                         REAL(PhenoStage)[i] = 0.10 + \par
359                                                                 floor((TTc - TTc_V10) / phyllochron2) / 100;\par
360                                                         TTc_Vn = TTc;\par
361                                                 \}\par
362                                         \par
363                                         if(TTc > R1) REAL(PhenoStage)[i] = 1;\par
364                                         \par
365                                         if(TTc > R2) REAL(PhenoStage)[i] = 2;\par
366                                         \par
367                                         if(TTc > R3) REAL(PhenoStage)[i] = 3;\par
368                                         \par
369                                         if(TTc > R4) REAL(PhenoStage)[i] = 4;\par
370                                         \par
371                                         if(TTc > R5) REAL(PhenoStage)[i] = 5;\par
372                                         \par
373                                         if(TTc > R6) REAL(PhenoStage)[i] = 6;\par
374                                 \par
375                                         /* if(*(pt_doy+i) >= harvestDate) REAL(PhenoStage)[i] = -1; */\par
376                                 \}\par
377 \par
378                         \}\par
379                 \}\par
380                 \par
381 \par
382 \par
383 /* There are several possible approaches to modleing LAI. One is solely based on thermal time */\par
384 /* another one is based on specific leaf area and the third one in based on modeling individual leaves */\par
385 /* citations below */\par
386 \par
387                /* LAI following Lizaso J, Batchelor WD, Westgate ME. A\par
388                 * leaf area model to simulate cultivar-specific\par
389                 * expansion and senescence of maize leaves. Field\par
390                 * Crops Research. 2003;80(1):1-17. Available at:\par
391                 * http://linkinghub.elsevier.com/retrieve/pii/S037842900200151X. */\par
392 \par
393                 phenoStage = REAL(PhenoStage)[i];\par
394                 if(*(pt_doy+i) < emergeDate)\{\par
395                         LAI = 0.0;\par
396                         CanopyA = 0.0;\par
397                         CanopyT = 0.0;\par
398                         for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
399                                 REAL(LAImat)[i2 + i*MAXLEAFNUMBER] = 0.0;\par
400                         \}\par
401                 \}else\{\par
402                         if(laiMethod == 0.0)\{\par
403                 /* Implementing the simplest method based on thermal time */\par
404                                 LAI = fabs(TTc * TTcoef - plantEmerge * TTcoef);\par
405                         \}\par
406                         \par
407                         if(laiMethod == 1.0)\{\par
408                                 LAI = Leaf * Sp + 1e-3;\par
409                         \}\par
410 \par
411                         if(laiMethod == 2.0)\{\par
412                                 tmpLAI = laiLizasoFun(TTc, phenoStage, phyllochron1,\par
413                                                       phyllochron2, Ax, LT, k0,\par
414                                                       a1, a2, L0, LLx, Lx, LNl);\par
415 \par
416                                 for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
417                                         REAL(LAImat)[i2 + i*MAXLEAFNUMBER] = tmpLAI.leafarea[i2];\par
418                                 \}\par
419                                 LAI = tmpLAI.totalLeafArea * 1e-4 * plantdensity; \par
420                         \}\par
421 \par
422                         if(laiMethod == 3.0)\{\par
423                                 tmpLAI = laiBirchdiscontinuousFun(phenoStage, LT, Amax, \par
424                                                                   c1, c2, c3, c4); \par
425                                 /* Amax = area of largest leaf (-1 if unspecified in which\par
426                                  * case it will be calculated by Birch eq 13), c1 is coefficient\par
427                                  * for Birch eq 15, c2 is coefficient for Birch eq 16, c3 and c4\par
428                                  * are the first and second coefficients in Birch eq 17\par
429                                  */\par
430                                 for (i2 = 0; i2 < MAXLEAFNUMBER; i2++)\{\par
431                                         REAL(LAImat)[i2 + i * MAXLEAFNUMBER] = tmpLAI.leafarea[i2];\par
432                                 \}\par
433                                 LAI = tmpLAI.totalLeafArea * 1e-4 * plantdensity;\par
434                         \}\par
435 \par
436                         if(laiMethod == 4.0)\{\par
437                                 tmpLAI = laiBirchcontinuousFun(phenoStage, a, b, Amax, x0, \par
438                                                                            f, g, TTc, LT);\par
439                                 /* a and b are coefficients to Birch Eq 5, x0 is leaf number\par
440                                  * of largest leaf, and f and g are coefficients to Birch\par
441                                  * Eq 11.\par
442                                  */\par
443                                 for (i2 = 0; i2 < MAXLEAFNUMBER; i2++)\{\par
444                                         REAL(LAImat)[i2 + i * MAXLEAFNUMBER] = tmpLAI.leafarea[i2];\par
445                                 \}\par
446                                 LAI = tmpLAI.totalLeafArea / 1e4 * plantdensity;\par
447                         \}\par
448                  /* Total leaf area will be in cm2, for a meter squared I need to divide by 1e4*/\par
449                         if(LAI > maxLAI) LAI = maxLAI;\par
450                         if(LAI < 1e-3) LAI = 1e-3;\par
451                 \}\par
452                       \par
453 \par
454 /* There is a different value of Rd for vegetative vs. reproductive */\par
455                 if(phenoStage < 1)\{\par
456                         Rd1 = Rd11;\par
457                         vmax1 = vmax11;\par
458                 \}else\{\par
459                         Rd1 = Rd12;\par
460                         vmax1 = vmax12;\par
461                 \}\par
462 \par
463                /* Calculate Canopy Assimilation  */\par
464 /* Canopy Assimilation should only happen between emergence and R6 */\par
465                 /* if(*(pt_doy+i) > emergeDate && *(pt_doy+i) < harvestDate)\{ */\par
466                 if(*(pt_doy+i) > emergeDate && TTc < R6)\{\par
467 \par
468                         Canopy = CanAC(LAI, *(pt_doy+i), *(pt_hr+i),\par
469                                        *(pt_solar+i), *(pt_temp+i),\par
470                                        *(pt_rh+i), *(pt_windspeed+i),\par
471                                        lat, nlayers,\par
472                                        vmax,alpha,kparm1,\par
473                                        theta,beta,Rd1,Ca,b01,b11,StomWS,\par
474                                        ws, kd,\par
475                                        chil, heightFactor,\par
476                                        LeafN, kpLN, lnb0, lnb1, lnFun,upperT,lowerT,nitroparms);\par
477 \par
478                         /* Rprintf("LAI: %.4f, vmax: %.1f",LAI,vmax);  */\par
479 \par
480                         CanopyA = Canopy.Assim * timestep;\par
481                         CanopyT = Canopy.Trans * timestep;\par
482                         q++;\par
483                 \}else\{\par
484                         CanopyA = 0.0;\par
485                         CanopyT = 0.0;\par
486                 \}\par
487 \par
488                /* Section about N deficiency on Vmax */\par
489                /* The equation below works well for the vegetative part */\par
490                 if(phenoStage < 1)\{\par
491                         LeafN = iLeafN * pow(Stem + Leaf,-kLN); \par
492                         if(LeafN > iLeafN) LeafN = iLeafN;\par
493                         LeafNR = LeafN;\par
494                 \}else\{\par
495                         LeafN = LeafNR - (TTc - R1) * (kLN * 0.0045);\par
496                         if(LeafN < 1e-3) LeafN = 1e-3;  \par
497                 \}\par
498                 \par
499                 if(phenoStage == -1) LeafN = 0;\par
500 \par
501                 /* vmax = (iLeafN - LeafN) * vmax_b1 + vmax1; */\par
502                 vmax = vmax1 * (2/(1 + exp(-vmax_b1*(LeafN - 0.02))) - 1); \par
503                 /* if(vmax < 0)\{ */\par
504                 /*      Rprintf("vmax1: %.1f, vmax_b1: %.3f, LeafN: %.1f",vmax1,vmax_b1,LeafN); */\par
505                 /*         error("stop here"); */\par
506                 /* \} */\par
507 \par
508                 alpha = (iLeafN - LeafN) * alpha_b1 + alpha1; \par
509 \par
510 \par
511                 /* Inserting the multilayer model */\par
512                 if(soillayers > 1)\{\par
513                         soilMLS = soilML(*(pt_precip+i), CanopyT, &cwsVec[0], soilDepth, \par
514                                          REAL(SOILDEPTHS), FieldC, WiltP,\par
515                                          phi1, phi2, soTexS, wsFun, soillayers, Root, \par
516                                          LAI, 0.68, *(pt_temp+i), *(pt_solar), *(pt_windspeed+i), *(pt_rh+i), \par
517                                          hydrDist, rfl, rsec, rsdf);\par
518 \par
519                         StomWS = soilMLS.rcoefPhoto;\par
520                         LeafWS = soilMLS.rcoefSpleaf;\par
521                         soilEvap = soilMLS.SoilEvapo;\par
522                         for(i4=0;i4<soillayers;i4++)\{\par
523                                 cwsVec[i4] = soilMLS.cws[i4];\par
524                                 cwsVecSum += cwsVec[i4];\par
525                                 REAL(cwsMat)[i4 + i*soillayers] = soilMLS.cws[i4];\par
526                                 REAL(rdMat)[i4 + i*soillayers] = soilMLS.rootDist[i4];\par
527                         \}\par
528 \par
529                         waterCont = cwsVecSum / soillayers;\par
530                         cwsVecSum = 0.0;\par
531 \par
532                 \}else\{\par
533 \par
534                         soilEvap = SoilEvapo(LAI, 0.68, *(pt_temp+i), *(pt_solar+i), waterCont, FieldC, WiltP, \par
535                                              *(pt_windspeed+i), *(pt_rh+i), rsec);\par
536                         TotEvap = soilEvap + CanopyT;\par
537                         WaterS = watstr(*(pt_precip+i),TotEvap,waterCont,soilDepth,FieldC,WiltP,phi1,phi2,soilType, wsFun);   \par
538                         waterCont = WaterS.awc;\par
539                         StomWS = WaterS.rcoefPhoto ; \par
540                         LeafWS = WaterS.rcoefSpleaf;\par
541                         REAL(cwsMat)[i] = waterCont;\par
542                         REAL(psimMat)[i] = WaterS.psim;\par
543                 \}\par
544 \par
545 /* An alternative way of computing water stress is by doing the leaf\par
546  * water potential. This is done if the wsFun is equal to 4 */\par
547 \par
548                 if(wsFun == 4)\{\par
549                         /* Calculating the leaf water potential */\par
550                         /* From Campbell E = (Psim_s - Psim_l)/R or\par
551                          * evaporation is equal to the soil water potential\par
552                          * minus the leaf water potential divided by the resistance.\par
553                          * This can be rearranged to Psim_l = Psim_s - E x R   */\par
554                         /* It is assumed that total resistance is 5e6 m^4 s^-1\par
555                          * kg^-1 \par
556                          * Transpiration is in Mg ha-2 hr-1\par
557                          * Multiply by 1e3 to go from Mg to kg\par
558                          * Multiply by 1e-4 to go from ha to m^2 \par
559                          * This needs to go from hours to seconds that's\par
560                          * why the conversion factor is (1/3600).*/\par
561                         LeafPsim = WaterS.psim - (CanopyT * 1e3 * 1e-4 * 1.0/3600.0) * transpRes;\par
562 \par
563                         /* From WIMOVAVC the proposed equation to simulate the effect of water\par
564                          * stress on stomatal conductance */\par
565                         if(LeafPsim < leafPotTh)\{\par
566                                 /* StomWS = 1 - ((LeafPsim - leafPotTh)/1000 *\par
567                                  * scsf); In WIMOVAC this equation is used but\par
568                                  * the absolute values are taken from the\par
569                                  * potentials. Since they both should be\par
570                                  * negative and leafPotTh is greater than\par
571                                  * LeafPsim this can be rearranged to*/ \par
572                                 StomWS = 1 - ((leafPotTh - LeafPsim)/1000 * scsf);\par
573                                 /* StomWS = 1; */\par
574                                 if(StomWS < 0.1) StomWS = 0.1;\par
575                         \}else\{\par
576                                 StomWS = 1;\par
577                         \}\par
578                 \}else\{\par
579                         LeafPsim = 0;\par
580                 \}\par
581 \par
582                /* Soil Carbon Pools place holder*/\par
583                 REAL(SCpools)[0] = 1;\par
584                 REAL(SCpools)[1] = 1;\par
585                 REAL(SCpools)[2] = 1;\par
586                 REAL(SCpools)[3] = 1;\par
587                 REAL(SCpools)[4] = 1;\par
588                 REAL(SCpools)[5] = 1;\par
589                 REAL(SCpools)[6] = 1;\par
590                 REAL(SCpools)[7] = 1;\par
591                 REAL(SCpools)[8] = 1;\par
592 \par
593                 REAL(SNpools)[0] = 1;\par
594                 REAL(SNpools)[1] = 1;\par
595                 REAL(SNpools)[2] = 1;\par
596                 REAL(SNpools)[3] = 1;\par
597                 REAL(SNpools)[4] = 1;\par
598                 REAL(SNpools)[5] = 1;\par
599                 REAL(SNpools)[6] = 1;\par
600                 REAL(SNpools)[7] = 1;\par
601                 REAL(SNpools)[8] = 1;\par
602 \par
603                /* Need to incoporate the partitioning of carbon to plant components  */\par
604                 tmpDBP = maize_sel_dbp_coef(REAL(MALLOCP), phenoStage);\par
605 \par
606                 kLeaf = tmpDBP.kLeaf;\par
607                 kStem = tmpDBP.kStem;\par
608                 kRoot = tmpDBP.kRoot;\par
609                 kGrain = tmpDBP.kGrain;\par
610 \par
611                 /* if(i == 300)\{ */\par
612                 /*      Rprintf("kLeaf %.2f",kLeaf,"\\n"); */\par
613                 /*      Rprintf("kStem %.2f",kStem,"\\n"); */\par
614                 /*      Rprintf("kRoot %.2f",kRoot,"\\n"); */\par
615                 /*      Rprintf("kGrain %.2f",kGrain,"\\n"); */\par
616                 /* \} */\par
617                /* Creating the increase in biomass for each component */\par
618         \par
619                 if(kLeaf > 0 || TTc > R6)\{\par
620                         newLeaf = CanopyA * kLeaf * LeafWS;\par
621                         newLeaf = resp(newLeaf, mrc1, *(pt_temp+i));\par
622                 \}else\{\par
623                         newLeaf = Leaf * kLeaf;\par
624                         Stem += kStem * -newLeaf   * 0.9;\par
625                         Root += kRoot * -newLeaf * 0.9;\par
626                         Grain += kGrain * -newLeaf * 0.9;\par
627                 \}\par
628 \par
629                 if(kStem > 0 || TTc > R6)\{\par
630                         newStem = CanopyA * kStem;\par
631                         newStem = resp(newStem, mrc1, *(pt_temp+i));\par
632                 \}else\{\par
633                         newStem = Stem * kStem;\par
634                         Leaf += kLeaf * -newStem   * 0.9;\par
635                         Root += kRoot * -newStem * 0.9;\par
636                         Grain += kGrain * -newStem * 0.9;\par
637                 \}\par
638 \par
639                 newRoot = CanopyA * kRoot;\par
640 \par
641 /* I need a better implementation of reproductive specific stress */\par
642                 if(LeafWS < StomWS)\{\par
643                         newGrain = CanopyA * kGrain * LeafWS;\par
644                 \}else\{\par
645                         newGrain = CanopyA * kGrain * StomWS;\par
646                 \}\par
647 \par
648 \par
649                 if(*(pt_doy+i) < emergeDate + 7)\{\par
650                         if(newLeaf < 0) newLeaf = 0.0;\par
651                         if(newStem < 0) newStem = 0.0;\par
652                         if(newRoot < 0) newRoot = 0.0;\par
653                         if(newGrain < 0) newGrain = 0.0;\par
654                 \}\par
655 \par
656                 Grain += newGrain;\par
657 \par
658 /* Implementing senescence */\par
659                 *(sti+q) = newLeaf;\par
660                 *(sti2+q) = newStem;\par
661                 *(sti3+q) = newRoot;\par
662 \par
663 /* Senescence for leaf */\par
664                 if(TTc < seneLeaf || TTc > R6)\{\par
665                         Leaf += newLeaf;\par
666                 \}else\{\par
667                         Leaf += newLeaf - *(sti+k);\par
668                         k++;\par
669                 \}\par
670 \par
671 /* Senescence for stem */\par
672                 if(TTc < seneStem || TTc > R6)\{\par
673                         Stem += newStem;\par
674                 \}else\{\par
675                         Stem += newStem - *(sti2+j);\par
676                         j++;\par
677                 \}\par
678 \par
679 /* Senescence for root */\par
680                 if(TTc < seneRoot || TTc > R6)\{\par
681                         Root += newRoot;\par
682                 \}else\{\par
683                         Root += newRoot - *(sti3+m);\par
684                         m++;\par
685                 \}\par
686 \par
687                 /* Collecting results */\par
688                 REAL(DayofYear)[i] =  *(pt_doy+i);\par
689                 REAL(Hour)[i] =  *(pt_hr+i);\par
690                 REAL(CanopyAssim)[i] =  CanopyA;\par
691                 REAL(CanopyTrans)[i] =  CanopyT; \par
692                 REAL(LAIc)[i] = LAI;\par
693                 REAL(LeafVec)[i] = Leaf;\par
694                 REAL(StemVec)[i] = Stem;\par
695                 REAL(RootVec)[i] = Root;\par
696                 REAL(GrainVec)[i] = Grain;\par
697                 REAL(VmaxVec)[i] = vmax;\par
698                 REAL(LeafNVec)[i] = LeafN;\par
699                 REAL(SoilEvaporation)[i] = soilEvap;\par
700                 REAL(LeafPsimVec)[i] = LeafPsim;\par
701                 REAL(SoilWatCont)[i] = waterCont;\par
702                 REAL(StomatalCondCoefs)[i] = StomWS;\par
703         \}\par
704 \par
705         SET_VECTOR_ELT(lists, 0, DayofYear);\par
706         SET_VECTOR_ELT(lists, 1, Hour);\par
707         SET_VECTOR_ELT(lists, 2, TTTc);\par
708         SET_VECTOR_ELT(lists, 3, PhenoStage);\par
709         SET_VECTOR_ELT(lists, 4, CanopyAssim);\par
710         SET_VECTOR_ELT(lists, 5, CanopyTrans);\par
711         SET_VECTOR_ELT(lists, 6, LAIc);\par
712         SET_VECTOR_ELT(lists, 7, LeafVec);\par
713         SET_VECTOR_ELT(lists, 8, StemVec);\par
714         SET_VECTOR_ELT(lists, 9, RootVec);\par
715         SET_VECTOR_ELT(lists, 10, GrainVec);\par
716         SET_VECTOR_ELT(lists, 11, LAImat);\par
717         SET_VECTOR_ELT(lists, 12, VmaxVec);\par
718         SET_VECTOR_ELT(lists, 13, LeafNVec);\par
719         SET_VECTOR_ELT(lists, 14, cwsMat);\par
720         SET_VECTOR_ELT(lists, 15, psimMat);\par
721         SET_VECTOR_ELT(lists, 16, rdMat);\par
722         SET_VECTOR_ELT(lists, 17, SCpools);\par
723         SET_VECTOR_ELT(lists, 18, SNpools);\par
724         SET_VECTOR_ELT(lists, 19, LeafPsimVec);\par
725         SET_VECTOR_ELT(lists, 20, SoilEvaporation);\par
726         SET_VECTOR_ELT(lists, 21, SoilWatCont);\par
727         SET_VECTOR_ELT(lists, 22, StomatalCondCoefs);\par
728 \par
729         SET_STRING_ELT(names,0,mkChar("DayofYear"));\par
730         SET_STRING_ELT(names,1,mkChar("Hour"));\par
731         SET_STRING_ELT(names,2,mkChar("TTTc"));\par
732         SET_STRING_ELT(names,3,mkChar("PhenoStage"));\par
733         SET_STRING_ELT(names,4,mkChar("CanopyAssim"));\par
734         SET_STRING_ELT(names,5,mkChar("CanopyTrans"));\par
735         SET_STRING_ELT(names,6,mkChar("LAI"));\par
736         SET_STRING_ELT(names,7,mkChar("Leaf"));\par
737         SET_STRING_ELT(names,8,mkChar("Stem"));\par
738         SET_STRING_ELT(names,9,mkChar("Root"));\par
739         SET_STRING_ELT(names,10,mkChar("Grain"));\par
740         SET_STRING_ELT(names,11,mkChar("LAImat"));\par
741         SET_STRING_ELT(names,12,mkChar("VmaxVec"));\par
742         SET_STRING_ELT(names,13,mkChar("LeafNVec"));\par
743         SET_STRING_ELT(names,14,mkChar("cwsMat"));\par
744         SET_STRING_ELT(names,15,mkChar("psimMat"));\par
745         SET_STRING_ELT(names,16,mkChar("rdMat"));\par
746         SET_STRING_ELT(names,17,mkChar("SCpools"));\par
747         SET_STRING_ELT(names,18,mkChar("SNpools"));\par
748         SET_STRING_ELT(names,19,mkChar("LeafPsimVec"));\par
749         SET_STRING_ELT(names,20,mkChar("SoilEvaporation"));\par
750         SET_STRING_ELT(names,21,mkChar("SoilWatCont"));\par
751         SET_STRING_ELT(names,22,mkChar("StomatalCondCoefs"));\par
752 \par
753         setAttrib(lists,R_NamesSymbol,names);\par
754         UNPROTECT(25);\par
755         return(lists);\par
756 \par
757 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/maizeGro.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/maizeGro.h}
{\xe \v /home/dlebauer/dev/biocro/src/maizeGro.h}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "maize_gro_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Can_Str} {\b CanAC} (double LAI, int DOY, int hr, double solarR, double Temp, double RH, double WindSpeed, double lat, int nlayers, double Vmax, double Alpha, double Kparm, double theta, double beta, double Rd, double Catm, double b0, double b1, double StomataWS, int ws, double kd, double chil, double heightf, double leafN, double kpLN, double lnb0, double lnb1, int lnfun, double upperT, double lowerT, struct {\b nitroParms} nitroP)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiLizasoFun} (double thermalt, double phenostage, double phyllochron1, double phyllochron2, double Ax, double LT, double k0, double a1, double a2, double L0, double LLx, double Lx, double LNl)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiBirchdiscontinuousFun} (double phenostage, double Lt, double Amax, double c1, double c2, double c3, double c4)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lai_str} {\b laiBirchcontinuousFun} (double phenostage, double a, double b, double Amax, double x0, double f, double g, double TT, double LT)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v CanAC\:maizeGro.h}
{\xe \v maizeGro.h\:CanAC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Can_Str} CanAC (double {\i LAI}, int {\i DOY}, int {\i hr}, double {\i solarR}, double {\i Temp}, double {\i RH}, double {\i WindSpeed}, double {\i lat}, int {\i nlayers}, double {\i Vmax}, double {\i Alpha}, double {\i Kparm}, double {\i theta}, double {\i beta}, double {\i Rd}, double {\i Catm}, double {\i b0}, double {\i b1}, double {\i StomataWS}, int {\i ws}, double {\i kd}, double {\i chil}, double {\i heightf}, double {\i leafN}, double {\i kpLN}, double {\i lnb0}, double {\i lnb1}, int {\i lnfun}, double {\i upperT}, double {\i lowerT}, struct {\b nitroParms} {\i nitroP})}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 545 \{\par
546 \par
547         struct ET_Str tmp5_ET, tmp6_ET;\par
548         struct Can_Str ans;\par
549         struct c4_str tmpc4;\par
550         struct c4_str tmpc42;\par
551 \par
552         int i;\par
553         double Idir, Idiff, cosTh;\par
554         double LAIc;\par
555         double IDir, IDiff, Itot, rh, WS;\par
556         double pLeafsun, pLeafshade;\par
557         double Leafsun, Leafshade;\par
558         double CanHeight;\par
559 \par
560         double vmax1, leafN_lay;\par
561         double TempIdir,TempIdiff,AssIdir,AssIdiff,GAssIdir,GAssIdiff;\par
562 \par
563         double CanopyA, CanopyT,GCanopyA;\par
564 \par
565         const double cf = 3600 * 1e-6 * 30 * 1e-6 * 10000;\par
566         const double cf2 = 3600 * 1e-3 * 18 * 1e-6 * 10000; \par
567 \par
568         /* For Assimilation */\par
569         /* 3600 converts seconds to hours */\par
570         /* 1e-6 converts micro mols to mols */\par
571         /* 30 is the grams in one mol of CO2 */\par
572         /* 1e-6 converts g to Mg */\par
573         /* 10000 scales from meter squared to hectare */\par
574 \par
575         /* For Transpiration */\par
576         /* 3600 converts seconds to hours */\par
577         /* 1e-3 converts mili mols to mols */\par
578         /* 18 is the grams in one mol of H20 */\par
579         /* 1e-6 converts g to Mg */\par
580         /* 10000 scales from meter squared to hectare */\par
581 \par
582         lightME(lat,DOY,hr);\par
583 \par
584         Idir = tmp1[0] * solarR;\par
585         Idiff = tmp1[1] * solarR;\par
586         cosTh = tmp1[2];\par
587     \par
588         sunML(Idir,Idiff,LAI,nlayers,cosTh, kd, chil, heightf);\par
589 \par
590         /* results from multilayer model */\par
591         LAIc = LAI / nlayers;\par
592         /* Next I need the RH and wind profile */\par
593         RHprof(RH,nlayers);\par
594         WINDprof(WindSpeed,LAI,nlayers);\par
595 \par
596         LNprof(leafN, LAI, nlayers, kpLN);\par
597         /* It populates tmp5 */\par
598 \par
599         /* Next use the EvapoTrans function */\par
600         CanopyA=0.0;\par
601         GCanopyA=0.0;\par
602         CanopyT=0.0;\par
603         for(i=0;i<nlayers;i++)\par
604         \{\par
605                 leafN_lay = tmp5[--tp5];\par
606                 if(lnfun == 0)\{\par
607                         vmax1 = Vmax;\par
608                 \}else\{\par
609                         vmax1=nitroP.Vmaxb1*leafN_lay+nitroP.Vmaxb0;\par
610                                               if(vmax1<0) vmax1=0.0;\par
611                                                       Alpha=nitroP.alphab1*leafN_lay+nitroP.alphab0;\par
612                                                        Rd=nitroP.Rdb1*leafN_lay+nitroP.Rdb0;\par
613                /* For now alpha is not affected by leaf nitrogen */\par
614                 \}\par
615 \par
616                 IDir = layIdir[--sp1];\par
617                 Itot = layItotal[--sp3];\par
618 \par
619                 rh = tmp4[--tp4];\par
620                 WS = tmp3[--tp3];\par
621                 pLeafsun = layFsun[--sp4];\par
622                 CanHeight = layHeight[--sp6];\par
623                 Leafsun = LAIc * pLeafsun;\par
624                 tmp5_ET = EvapoTrans(IDir,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
625                 TempIdir = Temp + tmp5_ET.Deltat;\par
626                 tmpc4 = c4photoC(IDir,TempIdir,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
627                 AssIdir = tmpc4.Assim;\par
628                 GAssIdir =tmpc4.GrossAssim;\par
629 \par
630                 IDiff = layIdiff[--sp2];\par
631                 pLeafshade = layFshade[--sp5];\par
632                 Leafshade = LAIc * pLeafshade;\par
633                 tmp6_ET = EvapoTrans(IDiff,Itot,Temp,rh,WS,LAIc,CanHeight,StomataWS,ws,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,upperT,lowerT,Catm);\par
634                 TempIdiff = Temp + tmp6_ET.Deltat;\par
635                 tmpc42 = c4photoC(IDiff,TempIdiff,rh,vmax1,Alpha,Kparm,theta,beta,Rd,b0,b1,StomataWS, Catm, ws,upperT,lowerT);\par
636                 AssIdiff = tmpc42.Assim;\par
637                 GAssIdiff = tmpc42.GrossAssim;\par
638                 CanopyA += Leafsun * AssIdir + Leafshade * AssIdiff;\par
639                 GCanopyA += Leafsun * GAssIdir + Leafshade * GAssIdiff;\par
640 // I am evaluating CanopyT using Penman Method because it gives realistic results\par
641 // IN future canopyT needs to be fixed\par
642 //                CanopyT += Leafsun * tmp5_ET.TransR + Leafshade * tmp6_ET.TransR;\par
643                 CanopyT += Leafsun * tmp5_ET.EPenman + Leafshade * tmp6_ET.EPenman;\par
644         \}\par
645         /*## These are micro mols of CO2 per m2 per sec for Assimilation\par
646           ## and mili mols of H2O per m2 per sec for Transpiration\par
647           ## Need to convert to \par
648           ## 3600 converts seconds to hours\par
649           ## 10^-6 converts micro mols to mols\par
650           ## 30 converts mols of CO2 to grams\par
651           ## (1/10^6) converts grams to Mg\par
652           ## 10000 scales up to ha */\par
653 /* A similar conversion is made for water but\par
654    replacing 30 by 18 and mili mols are converted to\par
655    mols (instead of micro) */\par
656         ans.Assim = cf * CanopyA ;\par
657         ans.Trans = cf2 * CanopyT; \par
658         ans.GrossAssim=cf*GCanopyA;\par
659         return(ans);\par
660 \}\par
}
}
{\xe \v laiBirchcontinuousFun\:maizeGro.h}
{\xe \v maizeGro.h\:laiBirchcontinuousFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiBirchcontinuousFun (double {\i phenostage}, double {\i a}, double {\i b}, double {\i Amax}, double {\i x0}, double {\i f}, double {\i g}, double {\i TT}, double {\i LT})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143                                                \{\par
144         struct lai_str tmp;\par
145         double leafnumber = 0.0, totalLAI = 0.0, SLA = 0.0, TPLAmax = 0.0;\par
146 \par
147         int i, i2, i3, ln, ln2;\par
148 \par
149         for(i2 = 0; i2 < MAXLEAFNUMBER; i2++)\{\par
150                 tmp.leafarea[i2] = 0.0;\par
151         \}\par
152 \par
153         if (phenostage <= 0) \{\par
154           leafnumber = 0;\par
155         \}else\{\par
156           if (phenostage < 1)\{\par
157             leafnumber = phenostage* 100;\par
158           \}else\{\par
159             leafnumber = LT;\par
160           \}\par
161         \}         \par
162         if (Amax == -1)\{\par
163                 /* Eq 13 in Birch*/\par
164                 Amax = 1000 * exp(-1.17 + 0.047 * LT);\par
165         \}\par
166         if (a == -1)\{\par
167                 /* Eq 18 in Birch */\par
168                 a = -0.009 - exp(-0.2 * LT);\par
169         \}\par
170         if (b == -1)\{\par
171                 /* Eq 19 in Birch */\par
172                 b = 0.0006 - exp(-0.43 * LT);\par
173         \}\par
174         if (x0 == -1)\{\par
175                 /* Eq 14 in Birch */\par
176                 x0 = 0.67 * LT;\par
177         \}\par
178         if (g == -1)\{\par
179                 /* Eq 20 in Birch */\par
180                 g = 107.9 * LT - 327;\par
181         \}\par
182 \par
183         for(i3 = 0; i3 < LT; i3++)\{\par
184                 ln2 = i3 + 1;\par
185                 TPLAmax += Amax * exp(a * (ln2 - x0) * (ln2 - x0) + b *\par
186                              (ln2 - x0) * (ln2 - x0) * (ln2 - x0));\par
187         \}\par
188 \par
189         /* Birch Eq 11*/\par
190         SLA = TPLAmax / (1 + exp(-f * (TT - g)));\par
191 \par
192         for (i = 0; i < leafnumber; i++)\{\par
193           ln = i + 1;\par
194           tmp.leafarea[i] = Amax * exp(a * (ln - x0) * (ln - x0) + b *\par
195                              (ln - x0) * (ln - x0) * (ln - x0));\par
196 \par
197            totalLAI += tmp.leafarea[i];\par
198          \}\par
199          tmp.totalLeafArea = totalLAI - SLA;\par
200          return (tmp);\par
201 \}\par
}
}
{\xe \v laiBirchdiscontinuousFun\:maizeGro.h}
{\xe \v maizeGro.h\:laiBirchdiscontinuousFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiBirchdiscontinuousFun (double {\i phenostage}, double {\i Lt}, double {\i Amax}, double {\i c1}, double {\i c2}, double {\i c3}, double {\i c4})}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99                                                              \{\par
100         struct lai_str tmp;\par
101         double leafnumber, totalLAI = 0.0;\par
102         if (phenostage <= 0) \{\par
103           leafnumber = 0;\par
104         \}else\{\par
105           if (phenostage < 1)\{\par
106             leafnumber = phenostage* 100;\par
107           \}else\{\par
108             leafnumber = LT;\par
109           \}\par
110         \}         \par
111         if (Amax == -1)\{\par
112           /* Eq 13 in Birch*/\par
113           Amax = 1000 * exp(-1.17 + 0.047 * LT);\par
114         \}\par
115         int i, i2, ln;\par
116         for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
117           tmp.leafarea[i2] = 0.0;\par
118         \}\par
119         for (i = 0; i<leafnumber; i++)\{\par
120           ln = i + 1;\par
121           if (ln <= 3)\{\par
122             /* Eq 14 in Birch */\par
123             tmp.leafarea[i] = c1 * ln;\par
124           \}else\{\par
125             if (ln <= 11)\{\par
126               /* Eq 15 in Birch */\par
127               tmp.leafarea[i] = c2* ln * ln;\par
128             \}else\{\par
129               /* Eq 16 in Birch */\par
130               tmp.leafarea[i] = c3 * Amax + c4 * ln * ln;\par
131             \}\par
132           \}\par
133           totalLAI += tmp.leafarea[i];\par
134         \}\par
135         tmp.totalLeafArea = totalLAI;\par
136         return (tmp);\par
137 \}\par
}
}
{\xe \v laiLizasoFun\:maizeGro.h}
{\xe \v maizeGro.h\:laiLizasoFun}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b lai_str} laiLizasoFun (double {\i thermalt}, double {\i phenostage}, double {\i phyllochron1}, double {\i phyllochron2}, double {\i Ax}, double {\i LT}, double {\i k0}, double {\i a1}, double {\i a2}, double {\i L0}, double {\i LLx}, double {\i Lx}, double {\i LNl})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                                     \{\par
14 \par
15         struct lai_str tmp;\par
16         double A, kei, tei;\par
17         double LNx = 0.67 * LT;\par
18         double te1 = 25;\par
19         double te2 = 50;\par
20         double tti;\par
21         double tsi;\par
22         double leafnumber ;\par
23         double totalLAI = 0.0;\par
24 \par
25         if (phenostage <= 0) \{\par
26           leafnumber = 0;\par
27         \}else\{\par
28           if (phenostage < 1)\{\par
29             leafnumber = phenostage* 100;\par
30           \}else\{\par
31             leafnumber = LT;\par
32           \}\par
33         \}\par
34 \par
35 /* Longevity */\par
36 \par
37         /* Eq 11 in Lisazo 2003 */\par
38         if (LNl == -1)\{ \par
39             LNl = 3.59 + 0.498 * LT;\par
40         \}\par
41         /* Eq 12 in Lisazo 2003 */\par
42         /* double Wl = 0.333333 * LT; not used ? */\par
43         double LLi;\par
44 \par
45         double Wk = LT / 8.18;\par
46 \par
47         int i, i2, ln = 0;\par
48 \par
49         for(i2=0;i2<MAXLEAFNUMBER;i2++)\{\par
50                 tmp.leafarea[i2] = 0.0;\par
51         \}\par
52 \par
53         for(i=0;i<leafnumber;i++)\{\par
54 \par
55                 /* Eq 7 in Lizaso 2003 */\par
56                 ln = i + 1;\par
57                 tti = (ln - 2) * phyllochron1 + te2;\par
58 \par
59                 /* Eq 8 in Lizaso 2003 */\par
60                 kei = k0 + 0.174 * exp( - ((ln - 1)*(ln - 1))/(2 * Wk * Wk));\par
61 \par
62                 /* Eq 10 in Lizaso 2003 */\par
63                 LLi = L0 + Lx * exp( - (ln - LNl)*(ln - LNl)/ (2*Wk*Wk));\par
64                 \par
65 \par
66                 /* Eq 6 in Lizaso 2003 */\par
67                 if(ln == 1) tei = te1;\par
68                 if(ln == 2)\{\par
69                         tei = te2;\par
70                 \}else\{\par
71                         tei = tti + (2.197 /kei);\par
72                 \}\par
73                 \par
74                 /* calculating time of 50% senescence from time of 50%\par
75                  * expansion and leaf longevity */\par
76                 tsi = LLi + tei;\par
77 \par
78                 /* Applying Eq 4 in Lizaso 2003 */\par
79                 A = Aei(ln, Ax, LNx, a1, a2);\par
80 \par
81                 /* Applying Eq 2 in Lizaso 2003 */\par
82                 tmp.leafarea[i] = Alogistic(thermalt, A, kei, tei);\par
83 \par
84                 /* calculating senesced area for this leaf */\par
85                 tmp.leafarea[i] -= Alogistic(thermalt, A, kei, tsi);\par
86 \par
87                 /* Rprintf("leaf area %.1f \\n", tmp.leafarea[i]);  */\par
88                 totalLAI += tmp.leafarea[i];\par
89         \}\par
90 \par
91         tmp.totalLeafArea = totalLAI;\par
92         return(tmp);\par
93 \par
94 \par
95 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/management.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/management.h}
{\xe \v /home/dlebauer/dev/biocro/src/management.h}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b planting}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b harvesting}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b harvesting::input}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b harvesting::output}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Napplication}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b management}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/methane.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/methane.c}
{\xe \v /home/dlebauer/dev/biocro/src/methane.c}
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "n2o_model.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for methane.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "methane_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CH4DEPTH}\~ 15.0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b methane_oxidation} (double *CH4, int *isdecid, int *isagri, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CH4DEPTH\:methane.c}
{\xe \v methane.c\:CH4DEPTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CH4DEPTH\~ 15.0}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v methane_oxidation\:methane.c}
{\xe \v methane.c\:methane_oxidation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void methane_oxidation (double * {\i CH4}, int * {\i isdecid}, int * {\i isagri}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98     \{ \par
99       int    ilyr;\par
100       double  bulkdensity;\par
101       double  fieldcapacity;\par
102       double soiltemp;\par
103       double soilwater;\par
104       double wfps;\par
105       double CH4max;\par
106       double  Dopt;\par
107       double Wmin;\par
108       double Wmax;\par
109       double  Wopt;\par
110       double agri_adjust;\par
111       double temp_adjust;\par
112       double watr_adjust;\par
113       double wfps_adjust;\par
114       double  percentlayer;\par
115       double  temp;\par
116 \par
117 /*\par
118       extern LAYERPAR_SPT layers;\par
119       extern SOIL_SPT soil;\par
120 */\par
121       /* Compute a weighted average for soil temperature, field capacity, */\par
122       /* bulk density, water filled pore space, and volumetric soil water */\par
123       /* content in top 15 cm of soil profile */\par
124       ilyr = 0;\par
125       bulkdensity = 0.0;\par
126       fieldcapacity = 0.0;\par
127       soiltemp = 0.0;\par
128       soilwater = 0.0;\par
129       wfps = 0.0;\par
130       for (ilyr = 0; ilyr < layers->numlyrs; ilyr++) \{\par
131         if (layers->dpthmn[ilyr] < CH4DEPTH) \{\par
132           if (layers->dpthmx[ilyr] <= CH4DEPTH) \{\par
133             bulkdensity += layers->bulkd[ilyr] * layers->width[ilyr] / \par
134                            CH4DEPTH;\par
135             fieldcapacity += layers->fieldc[ilyr] * layers->width[ilyr] /\par
136                              CH4DEPTH;\par
137             soiltemp += soil->soiltavg[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
138             soilwater += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
139             wfps += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
140           \} else if ((layers->dpthmx[ilyr] - layers->dpthmn[ilyr]) > 0.0) \{\par
141             percentlayer = (CH4DEPTH - layers->dpthmn[ilyr]) / \par
142                            (layers->dpthmx[ilyr] - layers->dpthmn[ilyr]);\par
143             bulkdensity += layers->bulkd[ilyr] * layers->width[ilyr] /\par
144                            CH4DEPTH * percentlayer;\par
145             fieldcapacity += layers->fieldc[ilyr] * layers->width[ilyr] /\par
146                              CH4DEPTH * percentlayer;\par
147             soiltemp += soil->soiltavg[ilyr] * layers->width[ilyr] /\par
148                         CH4DEPTH * percentlayer;\par
149             soilwater += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH *\par
150                          percentlayer;\par
151             wfps += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH *\par
152                     percentlayer;\par
153           \}\par
154         \}\par
155       \}\par
156       /* Convert from water filled pore space to volumetric water */\par
157       soilwater = soilwater * (1.0 - (bulkdensity / PARTDENS));\par
158       soilwater *= 100.0;\par
159 \par
160       /* CH4 oxidation for a deciduous system */\par
161       if (*isdecid) \{\par
162         CH4max = 40.0 - 18.3 * bulkdensity;\par
163         temp_adjust = 0.0209 * soiltemp + 0.845;\par
164         /* Use bounded value for wfps_adjust if wfps falls below a critical */\par
165         /* value, cak - 11/12/02 */\par
166         if (wfps <= 0.05) \{\par
167           wfps_adjust = 0.1;\par
168         \} else \{\par
169           wfps_adjust = pow((10.0 * wfps - 0.5) / (1.84 - 0.5), 0.13);\par
170           wfps_adjust *= pow((10.0 * wfps - 55) / (1.84 - 55),\par
171                              (0.13 * (55 - 1.84)) / (1.84 - 0.5));\par
172           wfps_adjust = max(0.1, wfps_adjust);\par
173         \}\par
174         *CH4 = CH4max * wfps_adjust * temp_adjust;\par
175 \par
176       \} else \{\par
177         /* CH4 oxidation for a grassland/coniferous/tropical system */\par
178         Wmin = 3.0 * fieldcapacity - 0.28;\par
179         Wopt = 6.3 * fieldcapacity - 0.58;\par
180         Wmax = 10.6 * fieldcapacity + 1.9;\par
181         temp = Wopt * 0.1 / (1.0 - (bulkdensity / PARTDENS));\par
182         Dopt = diffusiv(&fieldcapacity, &bulkdensity, &temp);\par
183         CH4max = 53.8 * Dopt + 0.58;\par
184         if ((0.1*soilwater < Wmin) || 0.1*soilwater > Wmax) \{\par
185           watr_adjust = 0.1;\par
186         \} else \{\par
187           watr_adjust = pow(((0.1 * soilwater - Wmin) / (Wopt - Wmin)), 0.4) *\par
188                         pow(((0.1 * soilwater - Wmax) / (Wopt - Wmax)), \par
189                              ((0.4 * (Wmax - Wopt)) / (Wopt - Wmin))); \par
190           watr_adjust = max(0.1, watr_adjust);\par
191         \}\par
192         if (*isagri) \{\par
193           if (Dopt < 0.15) \{\par
194             agri_adjust = 0.9;\par
195           \} else if (Dopt > 0.28) \{\par
196             agri_adjust = 0.28;\par
197           \} else \{\par
198             agri_adjust = -4.6 * Dopt + 1.6;\par
199           \}\par
200         \} else \{\par
201           agri_adjust = 1.0;\par
202         \}\par
203         temp_adjust = (soiltemp * max(0.11, Dopt) * 0.095) + 0.9;\par
204         *CH4 = CH4max * watr_adjust * temp_adjust * agri_adjust;\par
205       \}\par
206 \par
207       return;\par
208     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/n2o_model.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/n2o_model.h}
{\xe \v /home/dlebauer/dev/biocro/src/n2o_model.h}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "n2o__model_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COARSE}\~ 1           /* texture type for sandy soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MEDIUM}\~ 2           /* texture type for medium (loamy) soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FINE}\~ 3             /* texture type for fine soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VERYFINE}\~ 4         /* texture type for volcanic soil */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MIN_NH4_CONC}\~ 0.05  /* minimum NH4 concentration (ppm) */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MIN_NO3_CONC}\~ 0.05  /* minimum NO3 concentration (ppm) */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nox_pulse} (double *ppt, double *snow)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getsoilprop} (double *asand, double *asilt, double *aclay, double *bulkden, double *fieldcap, int *texture, int *soilclassification)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b diffusiv} (double *A, double *bulkden, double *{\b wfps})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b leachdly} (double tfluxout[], int numlyrs, double nitrate[], double critflow, double frlechd[], double stream[], double basef, double stormf, double *inorglch)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_allometric} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_arctangent} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_exponential} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_gen_gompertz} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_logistic} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_gen_poisson_density} (double x, double A[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v COARSE\:n2o_model.h}
{\xe \v n2o_model.h\:COARSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COARSE\~ 1           /* texture type for sandy soil */}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FINE\:n2o_model.h}
{\xe \v n2o_model.h\:FINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FINE\~ 3             /* texture type for fine soil */}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MEDIUM\:n2o_model.h}
{\xe \v n2o_model.h\:MEDIUM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MEDIUM\~ 2           /* texture type for medium (loamy) soil */}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_NH4_CONC\:n2o_model.h}
{\xe \v n2o_model.h\:MIN_NH4_CONC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MIN_NH4_CONC\~ 0.05  /* minimum NH4 concentration (ppm) */}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN_NO3_CONC\:n2o_model.h}
{\xe \v n2o_model.h\:MIN_NO3_CONC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MIN_NO3_CONC\~ 0.05  /* minimum NO3 concentration (ppm) */}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VERYFINE\:n2o_model.h}
{\xe \v n2o_model.h\:VERYFINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VERYFINE\~ 4         /* texture type for volcanic soil */}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v diffusiv\:n2o_model.h}
{\xe \v n2o_model.h\:diffusiv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double diffusiv (double * {\i A}, double * {\i bulkden}, double * {\i wfps})}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70     \{\par
71       double porosity;\par
72       double theta_A, theta_P, theta_V, my_theta_V;\par
73       double tp1, tp2, tp3, tp4, tp5, tp6, tp7, tp8;\par
74       double vfrac;\par
75       double s_wat, sw_p;\par
76       double pfc;\par
77       double dDO;\par
78       int   debug;\par
79 \par
80       /* Initialization */\par
81       debug = 0;\par
82 \par
83       porosity = 1.0 - (*bulkden)/PARTDENS;\par
84       if ((porosity - (*A)) < 0.0) \{\par
85         printf("ERROR:  Mis-match between bulk density and field capacity\\n");\par
86         printf("value in soils.in file.  Ending simulation!\\n");\par
87         exit(1);\par
88       \}\par
89 \par
90       pfc = (*wfps)*100 /((*A)/porosity);\par
91  \par
92       if (pfc >= 100.0) \{\par
93         vfrac = ((*wfps)*porosity - *A) / (porosity - (*A));\par
94       \} else \{\par
95         vfrac = 0.0;\par
96       \}\par
97   \par
98       if (pfc < 100.0) \{\par
99         theta_V = (pfc/100.0)*(*A);\par
100       \} else \{\par
101         theta_V = (*A) + (min(vfrac,1.0) * (porosity - (*A)));\par
102       \}\par
103 \par
104       my_theta_V = *wfps * (1.0 - *bulkden/PARTDENS);\par
105 \par
106       theta_P = (theta_V < (*A)) ? 0.0 : theta_V - (*A);\par
107       theta_A = (theta_V > (*A)) ? (*A) : theta_V;\par
108 \par
109       if (debug) \{\par
110         printf("In SUB, vfrac = %f\\n", vfrac);\par
111         printf("In SUB, porosity - A = %f\\n", (porosity - (*A)));\par
112         printf("In SUB, (*A) = %f\\n", (*A));\par
113         printf("In SUB, (*wfps) = %f\\n", (*wfps));\par
114         printf("In SUB, pfc = %f\\n", pfc);\par
115         printf("In SUB, porosity = %f\\n", porosity);\par
116         printf("In SUB, theta_V = %f\\n", theta_V);\par
117         printf("In SUB, my_theta_V = %f\\n", my_theta_V);\par
118         printf("In SUB, theta_P = %f\\n", theta_P);\par
119         printf("In SUB, theta_A = %f\\n", theta_A);\par
120       \}\par
121 \par
122       s_wat = min(1.0, theta_V/(*A));\par
123       sw_p = min(1.0, theta_P/(porosity-(*A)));\par
124 \par
125       tp1 = pow((1.0 - s_wat), 2.0);\par
126       tp2 = ((*A) - theta_A) / ((*A) + (1.0 - porosity));\par
127       tp3 = pow(tp2,(0.5*tp2 + 1.16));\par
128       tp4 = (1.0 - pow(((porosity-(*A))),\par
129                               (0.5*((porosity-(*A))) + 1.16)));\par
130       tp5 = (porosity-(*A))-theta_P;\par
131       if (tp5 > 0.0) \{\par
132         tp6 = pow(tp5, (0.5*tp5 + 1.16));\par
133       \} else \{\par
134         tp6 = 0.0;\par
135       \}\par
136       tp7 = pow((1.0-sw_p), 2.0);\par
137       tp8 = max(0.0, (tp1*tp3*tp4*(tp5-tp6)) /\par
138                       (1.0E-6 + (tp1*tp3*tp4) + tp5 - tp6) * 1.0E7);\par
139 \par
140       if (debug) printf("From SUB: %f %f %f %f %f %f %f %f\\n",\par
141                         tp1, tp2, tp3, tp4, tp5, tp6, tp7, tp8);\par
142       dDO = max(0.0, (tp8/1.0E7 + tp7*tp6));\par
143       if (debug) \{\par
144             printf("In SUB, dDO = %f\\n", dDO);\par
145       \}\par
146 \par
147 /*      dDO /= 0.20;\par
148       dDO = min(dDO, 1.0); */\par
149 \par
150       return(dDO);\par
151     \}\par
}
}
{\xe \v f_allometric\:n2o_model.h}
{\xe \v n2o_model.h\:f_allometric}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_allometric (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56     \{\par
57       return x <= 0.0 ? 0.0 : A[0] * pow(x, A[1]);\par
58     \}\par
}
}
{\xe \v f_arctangent\:n2o_model.h}
{\xe \v n2o_model.h\:f_arctangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_arctangent (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72     \{\par
73       return(A[1] + (A[2] / PI) *\par
74              atan(PI * A[3] * (x - A[0])));\par
75     \}\par
}
}
{\xe \v f_exponential\:n2o_model.h}
{\xe \v n2o_model.h\:f_exponential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_exponential (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89     \{\par
90       return(A[0] * exp((A[1] * x)));\par
91     \}\par
}
}
{\xe \v f_gen_gompertz\:n2o_model.h}
{\xe \v n2o_model.h\:f_gen_gompertz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_gen_gompertz (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109     \{\par
110       double tmp1, tmp2;      /* temp values */\par
111 \par
112       if (A[1] <= 0.0) \{\par
113         return 0.0;\par
114       \}\par
115 \par
116       tmp1 = pow(A[1], (A[3] * x));\par
117       tmp2 = pow(A[1], A[2] / tmp1);\par
118 \par
119       return(A[0] / tmp2);\par
120     \}\par
}
}
{\xe \v f_gen_poisson_density\:n2o_model.h}
{\xe \v n2o_model.h\:f_gen_poisson_density}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_gen_poisson_density (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152     \{\par
153       double tmp1, tmp2, tmp3;\par
154 \par
155       if (A[1] == A[0]) \{\par
156         return(0.0);\par
157       \}\par
158 \par
159       tmp1 = ((A[1] - x) / (A[1] - A[0]));\par
160       if (tmp1 <= 0.0) \{\par
161         return 0.0;\par
162       \}\par
163 \par
164       tmp2 = 1.0 - pow(tmp1, A[3]);\par
165       tmp3 = pow(tmp1, A[2]);\par
166       return (exp(A[2] * tmp2 / A[3]) * tmp3);\par
167     \}\par
}
}
{\xe \v f_logistic\:n2o_model.h}
{\xe \v n2o_model.h\:f_logistic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_logistic (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 136     \{\par
137       return(A[0] / (1.0 + A[1] / exp((A[2] * x))));\par
138     \}\par
}
}
{\xe \v getsoilprop\:n2o_model.h}
{\xe \v n2o_model.h\:getsoilprop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getsoilprop (double * {\i asand}, double * {\i asilt}, double * {\i aclay}, double * {\i bulkden}, double * {\i fieldcap}, int * {\i texture}, int * {\i soilclassification})}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 75     \{\par
76       static double satcond[NCLASS] = \{0.0, 0.000176, 0.0001563,\par
77                                       0.00003467, 0.0000072, 0.00000695,\par
78                                       0.0000063, 0.0000017, 0.00000245,\par
79                                       0.000002167, 0.000001033,\par
80                                       0.000001283, 0.0000080, 0.0000080\};\par
81       static double bulk_density[NCLASS] = \{0.0, 1.55, 1.50, 1.43, 1.36,\par
82                                            1.39, 1.35, 1.24, 1.30, 1.28,\par
83                                            1.19, 1.15, 1.40, 0.75\};\par
84       static double field_capacity[NCLASS] = \{0.0, 0.14, 0.18, 0.22, 0.32,\par
85                                              0.29, 0.28, 0.40, 0.36,\par
86                                              0.36, 0.46, 0.45, 0.33,\par
87                                              0.70\};\par
88       int   soil_indx;\par
89       double ksat;\par
90       double sand, silt, clay;\par
91 \par
92       sand = *asand * 100;\par
93       silt = *asilt * 100;\par
94       clay = *aclay * 100;\par
95 \par
96       if ((sand > 100 || sand < 0) || (silt > 100 || silt < 0) ||\par
97           (clay > 100 || clay < 0)) \{\par
98         fprintf(stderr, "Invalid texture in getsoilprop: sand = %f,", sand);\par
99         fprintf(stderr, " silt = %f, clay = %f\\n", silt, clay);\par
100         exit(1);\par
101       \}\par
102 \par
103       if (*texture == VERYFINE) \{\par
104         /* volcanic */\par
105         soil_indx = 13;\par
106       \} else if ((sand >= 85) && ((-2.0/3.0)*silt - clay + 10 >= 0)) \{\par
107         /* sand */\par
108         soil_indx = 1;\par
109       \} else if (((-2.0/3.0)*silt - clay + 10 <= 0) &&\par
110                  (-0.5*silt - clay + 15 >= 0)) \{\par
111         /* loamy sand */\par
112         soil_indx = 2;\par
113       \} else if (((-0.5*silt-clay+15 <= 0) && (clay <= 20) && (sand >= 52)) ||\par
114                  ((sand <= 52) && (silt <= 50) && (clay <= 7))) \{\par
115         /* sandy loam */\par
116         soil_indx = 3;\par
117       \} else if ((sand <= 50) && (silt >= 50) && (clay <= 27)) \{\par
118         if ((sand <= 20) && (clay <= 10)) \{\par
119           /* silt */\par
120           soil_indx = 12;\par
121         \} else \{\par
122           /* silt loam */\par
123           soil_indx = 4;\par
124         \}\par
125       \} else if ((sand >= 23 && sand <= 52) && (silt >= 28 && silt <= 50) &&\par
126                  (clay >= 7 && clay <= 27)) \{\par
127         /* loam */\par
128         soil_indx = 5;\par
129       \} else if ((sand >= 45 && sand <= 80) && (silt <= 28) &&\par
130                  (clay >= 20 && clay <= 35)) \{\par
131         /* sandy clay loam */\par
132         soil_indx = 6;\par
133       \} else if ((sand <= 20) && (clay >= 27 && clay <= 40)) \{\par
134         /* silty clay loam */\par
135         soil_indx = 7;\par
136       \} else if ((sand >= 20 && sand <= 45) && (clay >= 27 && clay <= 40)) \{\par
137         /* clay loam */\par
138         soil_indx = 8;\par
139       \} else if ((sand >= 45 && sand <= 65) && (silt <= 20) &&\par
140                  (clay >= 35 && clay <= 55)) \{\par
141         /* sandy clay */\par
142         soil_indx = 9;\par
143       \} else if ((sand <= 20) && (silt >= 40 && silt <= 60) &&\par
144                  (clay >= 40 && clay <= 60)) \{\par
145         /* silty clay */\par
146         soil_indx = 10;\par
147       \} else if ((sand <= 45) && (silt <= 40) && (clay >= 40)) \{\par
148         /* clay */\par
149         soil_indx = 11;\par
150       \} else \{\par
151         fprintf(stderr, "Unknown texture type: sand = %f, silt = %f,", sand,\par
152                 silt);\par
153         fprintf(stderr, " clay = %f\\n", clay);\par
154         exit(1);\par
155       \}\par
156 \par
157       *bulkden = bulk_density[soil_indx];\par
158       *fieldcap = field_capacity[soil_indx];\par
159       ksat = satcond[soil_indx]*100.0;    /* Convert m/sec to cm/sec */\par
160       *soilclassification=soil_indx-1;\par
161 \par
162 /*      printf("Soil classification = %1d\\n", soil_indx);\par
163       printf("standard_bulkden = %10.6lf\\n", *bulkden);\par
164       printf("standard_fieldcap = %10.6lf\\n", *fieldcap);\par
165       printf("standard_ksat = %10.6lf\\n", ksat); */\par
166 \par
167       return;\par
168     \}\par
}
}
{\xe \v leachdly\:n2o_model.h}
{\xe \v n2o_model.h\:leachdly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void leachdly (double {\i tfluxout}[], int {\i numlyrs}, double {\i nitrate}[], double {\i critflow}, double {\i frlechd}[], double {\i stream}[], double {\i basef}, double {\i stormf}, double * {\i inorglch})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61     \{\par
62 \par
63       int lyr, nxt;\par
64       int iel = 0;  /* nitrogen */\par
65       double amtlea[MAXLYR];\par
66       double strm_N;\par
67       double base_N;\par
68       double linten;\par
69 \par
70       strm_N = 0.0;\par
71       base_N = 0.0;\par
72       *inorglch = 0.0;\par
73 \par
74       for(lyr=0; lyr < numlyrs; lyr++) \{\par
75         amtlea[lyr] = 0.0;\par
76         nxt = lyr + 1;\par
77 \par
78         /* wfluxout > 0. indicates a saturated water flow out of layer lyr */\par
79 \par
80         if ((wfluxout[lyr] >  0.0) && (nitrate[lyr] > 1.0E-10)) \{\par
81           linten = min(1.0 - (critflow - wfluxout[lyr]) / critflow, 1.0);\par
82           linten = max(linten, 0.0);\par
83           amtlea[lyr] = (frlechd[iel]) * nitrate[lyr] * linten;\par
84 \par
85           /* If you are at the bottom layer, compute storm flow. */\par
86           if (lyr == numlyrs-1) \{\par
87             strm_N = amtlea[lyr] * stormf;\par
88           \}\par
89           if (amtlea[lyr] < nitrate[lyr]) \{\par
90             nitrate[lyr] = nitrate[lyr] - amtlea[lyr];\par
91             nitrate[nxt] = nitrate[nxt] + (amtlea[lyr] - strm_N);\par
92           \}\par
93         \}\par
94       \}\par
95 \par
96       /* Compute base flow and mineral stream flows. */\par
97       /* Check for underflow. -mdh */\par
98 \par
99       if (nitrate[nxt] >= 1.0E-10) \{\par
100         base_N = nitrate[nxt] * basef;\par
101         nitrate[nxt] = nitrate[nxt] - base_N;\par
102       \}\par
103 \par
104       /* Note: stream flow indices differ from mineral element */ \par
105       /*       indices by 1 (eg  stream(2) is stream flow for nitrogen). */\par
106 \par
107       stream[iel+1] = stream[iel+1] + (strm_N + base_N);\par
108       *inorglch = strm_N + base_N;\par
109 \par
110       return;\par
111     \}\par
}
}
{\xe \v nox_pulse\:n2o_model.h}
{\xe \v n2o_model.h\:nox_pulse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nox_pulse (double * {\i ppt}, double * {\i snow})}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64     \{\par
65       static double cumppt[PPTDAYS] = \{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,\par
66                                       0.0,0.0,0.0,0.0,0.0,0.0,0.0\};\par
67       static double pl[PLDAYS] = \{1.0,1.0\};\par
68       static double pm[PMDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0\};\par
69       static double ph[PHDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,\par
70                                  1.0,1.0,1.0,1.0\};\par
71       static double mtplr[PHDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,\par
72                                     1.0,1.0,1.0,1.0,1.0\};\par
73       static int npl=0, npm=0, nph=0, nppt=0, mptr=0;\par
74       static int pflag=0;\par
75       double sumppt;\par
76       double retval;\par
77       int ii, indx;\par
78 \par
79       sumppt = 0.0;\par
80       cumppt[nppt] = *ppt;\par
81       for (ii=1; ii<PPTDAYS; ii++) \{\par
82         indx = (nppt+ii) % PPTDAYS;\par
83         sumppt += cumppt[indx];\par
84       \} \par
85 \par
86       /* Comparisons with data showed NO emissions to be about twice of */\par
87       /* what they should be, reduce the pulse multipliers, cak - 09/24/03 */\par
88       if (*snow) \{ \par
89         mtplr[mptr] = 0.0;\par
90       \} else if ((sumppt <= 1.0) && (*ppt > 0.1)) \{\par
91         /* initiate new pulse */\par
92         if (*ppt < 0.5) \{\par
93           for (ii=0; ii<PLDAYS; ii++) \{\par
94             indx = (npl+ii) % PLDAYS;\par
95             pl[indx] = 2.8 * exp(-0.805 * (ii+1));\par
96           \}\par
97           pflag = 2;\par
98         \} else if ((*ppt >= 0.5) && (*ppt <= 1.5)) \{\par
99           for (ii=0; ii<PMDAYS; ii++) \{\par
100             indx = (npm+ii) % PMDAYS;\par
101             pm[indx] = 3.67 * exp(-0.384 * (ii+1));\par
102           \}\par
103           pflag = 6;\par
104         \} else \{\par
105           for (ii=0; ii<PHDAYS; ii++) \{\par
106             indx = (nph+ii) % PHDAYS;\par
107             ph[indx] = 4.615 * exp(-0.208 * (ii+1));\par
108           \}\par
109           pflag = 13;\par
110         \}\par
111 \par
112         mtplr[mptr] = max3(pl[npl],pm[npm],ph[nph]);\par
113         pflag--;\par
114       \} else if (pflag > 0) \{\par
115         mtplr[mptr] = max3(pl[npl],pm[npm],ph[nph]);\par
116         pflag--;\par
117       \} else \{\par
118         mtplr[mptr] = 1.0;\par
119       \}\par
120 \par
121       retval = mtplr[mptr];\par
122       pl[npl] = 1.0;\par
123       pm[npm] = 1.0;\par
124       ph[nph] = 1.0;\par
125 \par
126       /* increment pointers in circular arrays */\par
127       npl = (npl+1) % PLDAYS;\par
128       npm = (npm+1) % PMDAYS;\par
129       nph = (nph+1) % PHDAYS;\par
130       nppt = (nppt+1) % PPTDAYS;\par
131       mptr = (mptr+1) % PHDAYS;\par
132 \par
133       return(retval);\par
134     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/nitrify.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/nitrify.c}
{\xe \v /home/dlebauer/dev/biocro/src/nitrify.c}
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "n2o_model.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nitrify.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nitrify_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b nitrify} (double *ammonium, double *nh4_2_no3, double *maxt, double *nreduce, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v nitrify\:nitrify.c}
{\xe \v nitrify.c\:nitrify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void nitrify (double * {\i ammonium}, double * {\i nh4_2_no3}, double * {\i maxt}, double * {\i nreduce}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86     \{\par
87       int debug = 0;\par
88       int ilyr;\par
89       double MaxRate = 0.15;\par
90       double base_flux;\par
91       double fNsoilt; \par
92       double fNwfps;\par
93       double fNnh4;\par
94       double fNph;\par
95       double A[4];    /* parameters to parton-innis functions */\par
96       double grams_soil;\par
97       double nh4_conc;\par
98       double avgwfps;\par
99       double min_ammonium = 0.03;\par
100       double abiotic;\par
101       double  rel_wc[4], avg_rel_wc, avgfc, avgstemp;\par
102       double absoluteMaxRate;\par
103 \par
104 /*\par
105       extern LAYERPAR_SPT layers;\par
106       extern SITEPAR_SPT sitepar;\par
107       extern SOIL_SPT soil;\par
108 */\par
109 \par
110       *nh4_2_no3 = 0.0;\par
111 \par
112       if (*ammonium < min_ammonium) \{\par
113         if (debug) \{\par
114           fprintf(stdout, "CANNOT NITRIFY, ammonium too small\\n");\par
115         \}\par
116         goto RET;\par
117       \}\par
118 \par
119       /* Convert ammonium (g/m2) to nh4_conc (ppm) */\par
120       /* Assume all ammonium occurs in the top 15 cm */\par
121 /* NOTE:  This should be changed so that nitrification occurs as a continuous\par
122           function by depth rather than assuming that the top 3 soil layers\par
123           will sum to 15 cm */\par
124 \par
125       grams_soil = (layers->bulkd[0]*layers->width[0] +\par
126                     layers->bulkd[1]*layers->width[1] +\par
127                     layers->bulkd[2]*layers->width[2])*100*100;\par
128 \par
129       nh4_conc = *ammonium/grams_soil*1.0E6;\par
130 \par
131       if (debug > 1) \{\par
132         fprintf(stdout, "ammonium = %10.4lf\\n", *ammonium);\par
133         fprintf(stdout, "nh4_conc = %10.4lf\\n", nh4_conc);\par
134       \}\par
135 \par
136       /* Compute the effect of soil water on Nitrification (0-1). */\par
137       /* Use relative water content for this calculation when the */\par
138       /* soil is drier than field capacity.  When the soil is wetter */\par
139       /* field capacity use water filled pore space.  cak - 06/16/04 */\par
140 \par
141       /* Compute relative water content in the 2nd and 3rd soil layers, */\par
142       /* cak - 08/19/04 */\par
143       for (ilyr = 1; ilyr < 3; ilyr ++) \{\par
144         rel_wc[ilyr] = (layers->swc[ilyr]/(layers->width[ilyr]) -\par
145                         layers->swclimit[ilyr]) /\par
146                         (layers->fieldc[ilyr] - layers->swclimit[ilyr]);\par
147         if (rel_wc[ilyr] < 0.0) \{\par
148           rel_wc[ilyr] = 0.0;\par
149         \} else if (rel_wc[ilyr] > 1.0) \{\par
150           rel_wc[ilyr] = 1.0;\par
151         \}\par
152         rel_wc[ilyr] *= layers->width[ilyr];\par
153       \}\par
154       avg_rel_wc = (rel_wc[1] + rel_wc[2]) /\par
155                    (layers->width[1] + layers->width[2]);\par
156 \par
157       if (avg_rel_wc < 1.0) \{\par
158         fNwfps = 1.0/(1.0 + 30.0 * exp(-9.0 * avg_rel_wc));\par
159       \} else \{\par
160         /* Compute average water filled pore space in 2nd and 3rd soil */\par
161         /* layers, cak - 08/19/04 */\par
162         wfps(layers);\par
163         avgwfps = (layers->wfps[1]*layers->width[1] +\par
164                    layers->wfps[2]*layers->width[2]) /\par
165                   (layers->width[1] + layers->width[2]);\par
166         if (debug > 1) \{\par
167           fprintf(stdout, "avgwfps = %6.2lf\\n", avgwfps);\par
168         \}\par
169         avgfc = (layers->fieldc[1]*layers->width[1] +\par
170                  layers->fieldc[2]*layers->width[2]) /\par
171                 (layers->width[1] + layers->width[2]);\par
172         /* Line function with two known points and a new X, calculate Y */\par
173         /* slope = (y2 - y1) / (x2 - x1) */\par
174         /* y = slope * (x - x2) + y2 */\par
175         fNwfps = (0.0 - 1.0) / (1.0 - avgfc) * (avgwfps - 1.0) + 0.0;\par
176       \}\par
177 \par
178       /* Compute the soil temperature effect on Nitrification */\par
179       A[0] = 35.0;\par
180       A[1] = -5.0;\par
181       A[2] = 4.5;\par
182       A[3] = 7.0;\par
183       /* Rates of nitrification were too low at low soil temperatures, */\par
184       /* shift the curve so that the nitrification rates are effectively */\par
185       /* higher for cooler sites, this change does not affect sites with */\par
186       /* hot temperatures, cak - 11/25/03 */\par
187       avgstemp = (soil->soiltavg[1] * layers->width[1] + \par
188                   soil->soiltavg[2] * layers->width[2]) /\par
189                  (layers->width[1] + layers->width[2]);\par
190       if (*maxt >= 35.0) \{\par
191         A[0] = *maxt;\par
192         fNsoilt = f_gen_poisson_density(avgstemp,A);\par
193       \} else \{\par
194         fNsoilt = f_gen_poisson_density(avgstemp+(A[0]-*maxt),A);\par
195       \}\par
196 \par
197       /* Compute pH effect on nitrification */\par
198       A[0] = 5.0;\par
199       A[1] = 0.56;\par
200       A[2] = 1.0;\par
201       A[3] = 0.45;\par
202       fNph = f_arctangent(layers->pH[1], A);\par
203 \par
204       /* Compute the Ammonium effect on Nitrification */\par
205       A[0] = 1.0;\par
206       A[1] = -0.0105;\par
207       A[2] = 0.0;\par
208       A[3] = 0.0;\par
209       fNnh4 = 1.0 - f_exponential(nh4_conc, A);\par
210 \par
211       /* Compute amount of ammonium that goes to nitrate during */\par
212       /* nitrification */\par
213       if (debug > 1) \{\par
214         fprintf(stdout, "%6s  %6s  %6s  %6s\\n","fNwfps","fNsoilt", "fNph",\par
215                 "fNnh4");\par
216         fprintf(stdout, "%6.4lf  %6.4lf  %6.4lf  %6.4lf\\n", fNwfps, fNsoilt, fNph,\par
217                 fNnh4);\par
218       \}\par
219       /* The base_flux is equivalent to 0.1 gN/ha/day */\par
220       base_flux = 0.1/10000.0;\par
221       abiotic = max(fNwfps * fNsoilt, sitepar->Ncoeff);\par
222       absoluteMaxRate = min(0.4, *ammonium * MaxRate);\par
223       *nh4_2_no3 = absoluteMaxRate * fNph * abiotic * *nreduce +\par
224                    base_flux;\par
225 \par
226       if ((*ammonium - *nh4_2_no3) > min_ammonium) \{\par
227         *ammonium -= *nh4_2_no3;\par
228       \} else \{\par
229         *nh4_2_no3 = min(*nh4_2_no3, *ammonium - min_ammonium);\par
230         *ammonium = min_ammonium;\par
231       \}\par
232 \par
233 RET:  return;\par
234     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/nox_pulse.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/nox_pulse.c}
{\xe \v /home/dlebauer/dev/biocro/src/nox_pulse.c}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for nox_pulse.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "nox__pulse_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PPTDAYS}\~ 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLDAYS}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PMDAYS}\~ 6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PHDAYS}\~ 13\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max3} (double a, double b, double c)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nox_pulse} (double *ppt, double *snow)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PHDAYS\:nox_pulse.c}
{\xe \v nox_pulse.c\:PHDAYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PHDAYS\~ 13}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PLDAYS\:nox_pulse.c}
{\xe \v nox_pulse.c\:PLDAYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLDAYS\~ 2}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PMDAYS\:nox_pulse.c}
{\xe \v nox_pulse.c\:PMDAYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PMDAYS\~ 6}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PPTDAYS\:nox_pulse.c}
{\xe \v nox_pulse.c\:PPTDAYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PPTDAYS\~ 15}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v max3\:nox_pulse.c}
{\xe \v nox_pulse.c\:max3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double max3 (double {\i a}, double {\i b}, double {\i c})}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 166     \{\par
167       double m;\par
168    \par
169       if (a > b) \par
170         m = a;\par
171       else\par
172         m = b;\par
173 \par
174       if (c > m)\par
175         m = c;\par
176 \par
177       return(m);\par
178     \}\par
}
}
{\xe \v nox_pulse\:nox_pulse.c}
{\xe \v nox_pulse.c\:nox_pulse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double nox_pulse (double * {\i ppt}, double * {\i snow})}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64     \{\par
65       static double cumppt[PPTDAYS] = \{0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,\par
66                                       0.0,0.0,0.0,0.0,0.0,0.0,0.0\};\par
67       static double pl[PLDAYS] = \{1.0,1.0\};\par
68       static double pm[PMDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0\};\par
69       static double ph[PHDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,\par
70                                  1.0,1.0,1.0,1.0\};\par
71       static double mtplr[PHDAYS] = \{1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,\par
72                                     1.0,1.0,1.0,1.0,1.0\};\par
73       static int npl=0, npm=0, nph=0, nppt=0, mptr=0;\par
74       static int pflag=0;\par
75       double sumppt;\par
76       double retval;\par
77       int ii, indx;\par
78 \par
79       sumppt = 0.0;\par
80       cumppt[nppt] = *ppt;\par
81       for (ii=1; ii<PPTDAYS; ii++) \{\par
82         indx = (nppt+ii) % PPTDAYS;\par
83         sumppt += cumppt[indx];\par
84       \} \par
85 \par
86       /* Comparisons with data showed NO emissions to be about twice of */\par
87       /* what they should be, reduce the pulse multipliers, cak - 09/24/03 */\par
88       if (*snow) \{ \par
89         mtplr[mptr] = 0.0;\par
90       \} else if ((sumppt <= 1.0) && (*ppt > 0.1)) \{\par
91         /* initiate new pulse */\par
92         if (*ppt < 0.5) \{\par
93           for (ii=0; ii<PLDAYS; ii++) \{\par
94             indx = (npl+ii) % PLDAYS;\par
95             pl[indx] = 2.8 * exp(-0.805 * (ii+1));\par
96           \}\par
97           pflag = 2;\par
98         \} else if ((*ppt >= 0.5) && (*ppt <= 1.5)) \{\par
99           for (ii=0; ii<PMDAYS; ii++) \{\par
100             indx = (npm+ii) % PMDAYS;\par
101             pm[indx] = 3.67 * exp(-0.384 * (ii+1));\par
102           \}\par
103           pflag = 6;\par
104         \} else \{\par
105           for (ii=0; ii<PHDAYS; ii++) \{\par
106             indx = (nph+ii) % PHDAYS;\par
107             ph[indx] = 4.615 * exp(-0.208 * (ii+1));\par
108           \}\par
109           pflag = 13;\par
110         \}\par
111 \par
112         mtplr[mptr] = max3(pl[npl],pm[npm],ph[nph]);\par
113         pflag--;\par
114       \} else if (pflag > 0) \{\par
115         mtplr[mptr] = max3(pl[npl],pm[npm],ph[nph]);\par
116         pflag--;\par
117       \} else \{\par
118         mtplr[mptr] = 1.0;\par
119       \}\par
120 \par
121       retval = mtplr[mptr];\par
122       pl[npl] = 1.0;\par
123       pm[npm] = 1.0;\par
124       ph[nph] = 1.0;\par
125 \par
126       /* increment pointers in circular arrays */\par
127       npl = (npl+1) % PLDAYS;\par
128       npm = (npm+1) % PMDAYS;\par
129       nph = (nph+1) % PHDAYS;\par
130       nppt = (nppt+1) % PPTDAYS;\par
131       mptr = (mptr+1) % PHDAYS;\par
132 \par
133       return(retval);\par
134     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/pi_funcs.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/pi_funcs.c}
{\xe \v /home/dlebauer/dev/biocro/src/pi_funcs.c}
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for pi_funcs.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pi__funcs_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ 3.14159265359\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_allometric} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_arctangent} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_exponential} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_gen_gompertz} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_logistic} (double x, double A[])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b f_gen_poisson_density} (double x, double A[])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v PI\:pi_funcs.c}
{\xe \v pi_funcs.c\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ 3.14159265359}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v f_allometric\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_allometric}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_allometric (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56     \{\par
57       return x <= 0.0 ? 0.0 : A[0] * pow(x, A[1]);\par
58     \}\par
}
}
{\xe \v f_arctangent\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_arctangent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_arctangent (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72     \{\par
73       return(A[1] + (A[2] / PI) *\par
74              atan(PI * A[3] * (x - A[0])));\par
75     \}\par
}
}
{\xe \v f_exponential\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_exponential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_exponential (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89     \{\par
90       return(A[0] * exp((A[1] * x)));\par
91     \}\par
}
}
{\xe \v f_gen_gompertz\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_gen_gompertz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_gen_gompertz (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 109     \{\par
110       double tmp1, tmp2;      /* temp values */\par
111 \par
112       if (A[1] <= 0.0) \{\par
113         return 0.0;\par
114       \}\par
115 \par
116       tmp1 = pow(A[1], (A[3] * x));\par
117       tmp2 = pow(A[1], A[2] / tmp1);\par
118 \par
119       return(A[0] / tmp2);\par
120     \}\par
}
}
{\xe \v f_gen_poisson_density\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_gen_poisson_density}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_gen_poisson_density (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 152     \{\par
153       double tmp1, tmp2, tmp3;\par
154 \par
155       if (A[1] == A[0]) \{\par
156         return(0.0);\par
157       \}\par
158 \par
159       tmp1 = ((A[1] - x) / (A[1] - A[0]));\par
160       if (tmp1 <= 0.0) \{\par
161         return 0.0;\par
162       \}\par
163 \par
164       tmp2 = 1.0 - pow(tmp1, A[3]);\par
165       tmp3 = pow(tmp1, A[2]);\par
166       return (exp(A[2] * tmp2 / A[3]) * tmp3);\par
167     \}\par
}
}
{\xe \v f_logistic\:pi_funcs.c}
{\xe \v pi_funcs.c\:f_logistic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double f_logistic (double {\i x}, double {\i A}[])}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 136     \{\par
137       return(A[0] / (1.0 + A[1] / exp((A[2] * x))));\par
138     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/printcropcentoutput.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/printcropcentoutput.c}
{\xe \v /home/dlebauer/dev/biocro/src/printcropcentoutput.c}
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for printcropcentoutput.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "printcropcentoutput_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printcropcentout} (struct {\b cropcentlayer} CROPCENT, double *totalSOC, double *{\b strucc1}, double *{\b strucc2}, double *{\b metabc1}, double *{\b metabc2}, double *{\b som1c1}, double *{\b som1c2}, double *{\b som2c1}, double *{\b som2c2}, double *{\b som3c}, double *minN)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v printcropcentout\:printcropcentoutput.c}
{\xe \v printcropcentoutput.c\:printcropcentout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printcropcentout (struct {\b cropcentlayer} {\i CROPCENT}, double * {\i totalSOC}, double * {\i strucc1}, double * {\i strucc2}, double * {\i metabc1}, double * {\i metabc2}, double * {\i som1c1}, double * {\i som1c2}, double * {\i som2c1}, double * {\i som2c2}, double * {\i som3c}, double * {\i minN})}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8                                                                     \{\par
9   double cbalance;\par
10   \par
11   *totalSOC = CROPCENT.strucc1.C.totalC +CROPCENT.strucc2.C.totalC+CROPCENT.metabc1.C.totalC+CROPCENT.metabc2.C.totalC\par
12               +CROPCENT.som1c1.C.totalC+CROPCENT.som1c2.C.totalC + CROPCENT.som2c1.C.totalC+CROPCENT.som2c2.C.totalC\par
13               +CROPCENT.som3c.C.totalC;\par
14               \par
15       *strucc1 = CROPCENT.strucc1.C.totalC;\par
16       *strucc2 = CROPCENT.strucc2.C.totalC;\par
17       *metabc1 = CROPCENT.metabc1.C.totalC;\par
18       *metabc2 = CROPCENT.metabc2.C.totalC;\par
19       *som1c1 = CROPCENT.som1c1.C.totalC;\par
20       *som1c2 = CROPCENT.som1c2.C.totalC;\par
21        *som2c1 = CROPCENT.som2c1.C.totalC;\par
22       *som2c2 = CROPCENT.som2c2.C.totalC;\par
23        *som3c = CROPCENT.som3c.C.totalC;\par
24        *minN=CROPCENT.ENV.minN;\par
25      \par
26               \par
27   /*\par
28   Rprintf("SOM1c1\\n");\par
29   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som1c1.Flux.hetresp);\par
30   cbalance=CROPCENT.som1c1.Flux.som1c1TOsom1c1.C.totalC+CROPCENT.som1c1.Flux.som1c1TOsom2c1.C.totalC+CROPCENT.som1c1.Flux.hetresp;\par
31   Rprintf("Cbalance=%f\\n",cbalance);\par
32   \par
33   Rprintf("SOM1c2\\n");\par
34   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som1c2.Flux.hetresp);\par
35    cbalance=CROPCENT.som1c2.Flux.som1c2TOsom1c2.C.totalC+CROPCENT.som1c2.Flux.som1c2TOsom2c2.C.totalC+CROPCENT.som1c2.Flux.hetresp\par
36   +CROPCENT.som1c2.Flux.som1c2TOsom3c.C.totalC+CROPCENT.som1c2.Flux.som1c2TOleachate.C.totalC;\par
37   Rprintf("Cbalance=%f\\n",cbalance);\par
38   Rprintf("leachate Losses = %f\\n",CROPCENT.som1c2.Flux.som1c2TOleachate.C.totalC);\par
39   Rprintf("leachate CN = %f, som1c2 CN= %f\\n",CROPCENT.som1c2.Flux.som1c2TOleachate.E.CP,CROPCENT.som1c2.E.CP);\par
40   \par
41   Rprintf("SOM2c1\\n");\par
42   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som2c1.Flux.hetresp);\par
43   cbalance=CROPCENT.som2c1.Flux.som2c1TOsom2c1.C.totalC+CROPCENT.som2c1.Flux.som2c1TOsom1c1.C.totalC+CROPCENT.som2c1.Flux.hetresp\par
44   +CROPCENT.som2c1.Flux.som2c1TOsom2c2.C.totalC;\par
45   Rprintf("Cbalance=%f\\n",cbalance);\par
46   \par
47   \par
48   Rprintf("SOM2c2\\n");\par
49   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som2c2.Flux.hetresp);\par
50   cbalance=CROPCENT.som3c.Flux.som3cTOsom3c.C.totalC+CROPCENT.som3c.Flux.som3cTOsom1c2.C.totalC+CROPCENT.som3c.Flux.hetresp;\par
51   Rprintf("Cbalance=%f\\n",cbalance);\par
52   \par
53   \par
54   Rprintf("SOM3c\\n");\par
55   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.som3c.Flux.hetresp);\par
56   cbalance=CROPCENT.som3c.Flux.som3cTOsom3c.C.totalC+CROPCENT.som3c.Flux.som3cTOsom1c2.C.totalC+CROPCENT.som3c.Flux.hetresp;\par
57   Rprintf("Cbalance=%f\\n",cbalance);\par
58   \par
59   \par
60    //  Printing wood1\par
61     Rprintf("WOOD1\\n");\par
62   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.wood1.Flux.hetresp);\par
63   Rprintf("wood1TOSOM1C1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOsom1c1.C.totalC);\par
64   Rprintf("wood1TOSOM2C1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOsom2c1.C.totalC);\par
65   Rprintf("wood1TOwood1, totalC=%f \\n",CROPCENT.wood1.Flux.wood1TOwood1.C.totalC);\par
66   \par
67   cbalance=CROPCENT.wood1.Flux.wood1TOwood1.C.totalC+CROPCENT.wood1.Flux.wood1TOsom2c1.C.totalC\par
68   +CROPCENT.wood1.Flux.wood1TOsom1c1.C.totalC+CROPCENT.wood1.Flux.hetresp;\par
69   \par
70   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
71   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
72   \par
73   Rprintf("wood1TOSOM1C2, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOsom1c1.E.CN);\par
74   Rprintf("wood1TOSOM2C2, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOsom2c1.E.CN);\par
75   Rprintf("wood1TOwood1, CN=%f \\n",CROPCENT.wood1.Flux.wood1TOwood1.E.CN);\par
76   \par
77  Rprintf("METABC2\\n");\par
78   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.metabc2.Flux.hetresp);\par
79   Rprintf("METABC2TOSOM1C2, totalC=%f \\n",CROPCENT.metabc2.Flux.metabc2TOsom1c2.C.totalC);\par
80   Rprintf("METABC2TOMETABC2, totalC=%f \\n",CROPCENT.metabc2.Flux.metabc2TOmetabc2.C.totalC);\par
81   \par
82   cbalance=CROPCENT.metabc2.Flux.metabc2TOmetabc2.C.totalC+CROPCENT.metabc2.Flux.metabc2TOsom1c2.C.totalC\par
83   +CROPCENT.metabc2.Flux.hetresp;\par
84   Rprintf("Flux Balance of metabc2=%f\\n",cbalance);\par
85   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
86   Rprintf("METABC2TOMETABC2, CN=%f \\n",CROPCENT.metabc2.Flux.metabc2TOmetabc2.E.CN);\par
87   Rprintf("METABC2TOSOM1C2, CN=%f \\n",CROPCENT.metabc2.Flux.metabc2TOsom1c2.E.CN);\par
88 \par
89   \par
90  Rprintf("METABC1\\n");\par
91   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.metabc1.Flux.hetresp);\par
92   Rprintf("METABC1TOSOM1C1, totalC=%f \\n",CROPCENT.metabc1.Flux.metabc1TOsom1c1.C.totalC);\par
93   Rprintf("METABC1TOMETABC1, totalC=%f \\n",CROPCENT.metabc1.Flux.metabc1TOmetabc1.C.totalC);\par
94   \par
95   cbalance=CROPCENT.metabc1.Flux.metabc1TOmetabc1.C.totalC+CROPCENT.metabc1.Flux.metabc1TOsom1c1.C.totalC\par
96   +CROPCENT.metabc1.Flux.hetresp;\par
97   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
98 \par
99   \par
100   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
101   \par
102   Rprintf("METABC1TOMETABC1, CN=%f \\n",CROPCENT.metabc1.Flux.metabc1TOmetabc1.E.CN);\par
103   Rprintf("METABC1TOSOM1C1, CN=%f \\n",CROPCENT.metabc1.Flux.metabc1TOsom1c1.E.CN);\par
104 \par
105   //  Printing strucc2\par
106   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.strucc2.Flux.hetresp);\par
107   Rprintf("STRUCC2TOSOM1C2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom1c2.C.totalC);\par
108   Rprintf("STRUCC2TOSOM2C2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom2c2.C.totalC);\par
109   Rprintf("STRUCC2TOSTRUCC2, totalC=%f \\n",CROPCENT.strucc2.Flux.strucc2TOstrucc2.C.totalC);\par
110   \par
111   cbalance=CROPCENT.strucc2.Flux.strucc2TOstrucc2.C.totalC+CROPCENT.strucc2.Flux.strucc2TOsom2c2.C.totalC\par
112   +CROPCENT.strucc2.Flux.strucc2TOsom1c2.C.totalC+CROPCENT.strucc2.Flux.hetresp;\par
113   \par
114   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
115   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
116   \par
117   Rprintf("STRUCC2TOSOM1C2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom1c2.E.CN);\par
118   Rprintf("STRUCC2TOSOM2C2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOsom2c2.E.CN);\par
119   Rprintf("STRUCC2TOSTRUCC2, CN=%f \\n",CROPCENT.strucc2.Flux.strucc2TOstrucc2.E.CN);\par
120 */\par
121  // Printing STRUCC1\par
122  /*\par
123    Rprintf("C Pool = %f\\n", CROPCENT.strucc1.C.totalC);\par
124    Rprintf("C Pool unlablto labl Ratio= %f \\n", CROPCENT.strucc1.C.unlablTOlabl);\par
125   Rprintf("heterotrophic Respiration = %f\\n",CROPCENT.strucc1.Flux.hetresp);\par
126   Rprintf("STRUCC1TOMETABC1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOmetabc1.C.totalC);\par
127   Rprintf("STRUCC1TOSOM1C1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom1c1.C.totalC);\par
128   Rprintf("STRUCC1TOSOM2C1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom2c1.C.totalC);\par
129   Rprintf("STRUCC1TOSTRUCC1, totalC=%f \\n",CROPCENT.strucc1.Flux.strucc1TOstrucc1.C.totalC);\par
130   \par
131   cbalance=CROPCENT.strucc1.Flux.strucc1TOstrucc1.C.totalC+CROPCENT.strucc1.Flux.strucc1TOsom2c1.C.totalC\par
132   +CROPCENT.strucc1.Flux.strucc1TOsom1c1.C.totalC+CROPCENT.strucc1.Flux.strucc1TOmetabc1.C.totalC\par
133   +CROPCENT.strucc1.Flux.hetresp;\par
134   \par
135   Rprintf("Flux Balance of strucc1=%f\\n",cbalance);\par
136   Rprintf("Environmental Mineral N= %f\\n",CROPCENT.ENV.minN);\par
137   \par
138   Rprintf("STRUCC1TOMETABC1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOmetabc1.E.CN);\par
139   Rprintf("STRUCC1TOSOM1C1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom1c1.E.CN);\par
140   Rprintf("STRUCC1TOSOM2C1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOsom2c1.E.CN);\par
141   Rprintf("STRUCC1TOSTRUCC1, CN=%f \\n",CROPCENT.strucc1.Flux.strucc1TOstrucc1.E.CN);\par
142   */\par
143   return;\par
144   \}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/soilwater.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/soilwater.h}
{\xe \v /home/dlebauer/dev/biocro/src/soilwater.h}
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include "swconst.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for soilwater.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "soilwater_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "soilwater_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FLAG_S}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b FILES_S}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LAYERPAR_S}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SITEPAR_S}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SOIL_S}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FILEPATH_MAX}\~ 60   /* Max # of chars in a file path-name */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INPTSTRLEN}\~ 120    /* Max length of input file {\b line} */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b OTPTSTRLEN}\~ 80     /* Max length of output file string */\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b FLAG_S} * {\b FLAG_SPT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b FILES_S} * {\b FILES_SPT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LAYERPAR_S} * {\b LAYERPAR_SPT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b SITEPAR_S} * {\b SITEPAR_SPT}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b SOIL_S} * {\b SOIL_SPT}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c_shwave} (int month, double rlatitude, int jday)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getdiff} (double *valsubt, double valtochk, double valmin)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initdaily} (int month, double biolive, double biodead, double blitter, double *biomass, double *blivelai, double *vegcov, double *totagb, double *stcrlai, {\b LAYERPAR_SPT} layers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initlyrs} (char *soilname, {\b LAYERPAR_SPT} layers, {\b FLAG_SPT} flags, {\b SITEPAR_SPT} sitepar)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initsite} (char *sitename, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b FLAG_SPT} flags, double sradadj[{\b NMONTH}], double *tminslope, double *tminintercept, double *maxphoto, double *bioabsorp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initsrad} (double elevation, double latitude, double aspect, double slope, double ehoriz, double whoriz, double daylength[{\b NDAY}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b litstcr_evap} (double *cwlit, double *cwstcr, double *petleft, double *aet, double totlit, double totstcr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b petrad} (int jday, int month, double cldcov, double windsp, double rhumid, double rlatitude, double avgtemp, double reflec, double solrad, double albedo, double snowpack)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pevapdly} (double tmin, double tmax, double sitlat, double tmn2m[], double tmx2m[], int jday, int month)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setamov} (double amovdly[{\b CENTMAXLYR}], int nlayer, double wfluxout[{\b MAXLYR}], int numlyrs, int lbnd[{\b CENTMAXLYR}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setasmos} (double asmos[{\b CENTMAXLYR}], int *nlayer, double swcinit[{\b MAXLYR}], int *numlyrs, double avh2o[3], double rwcf[{\b CENTMAXLYR}])\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b showlyrs} (double swc[{\b MAXLYR}], int numlyrs)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b svapor} (double atemp)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tanfunc} (double z, double a, double b, double c, double d)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b wfps} ({\b LAYERPAR_SPT} layers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b wfunc_pulse} (double *ppt, double *snow)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b nitrify} (double *ammonium, double *nh4_2_no3, double *maxt, double *nreduce, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b denitrify} (double *newCO2, double *newNO3, double nitrate[], double tfluxout[], double *critflow, double frlechd[], double stream[], double *basef, double *stormf, double *inorglch, double *Dn2oflux, double *Dn2flux, double stdfieldc, double stdbulkd, double dN2lyr[], double dN2Olyr[], int *jday, {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b methane_oxidation} (double *CH4, int *isdecid, int *isagri, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trace_gas_model} (int *jday, double *time, double *newminrl, double *ammonium, double nitrate[], int *texture, double *sand, double *silt, double *clay, double *afiel, double *bulkd, double *maxt, double *ppt, double *snow, double *avgwfps, double *stormf, double *basef, double frlechd[], double stream[], double *inorglch, double *critflow, double wfluxout[], double *newCO2, double *NOflux, double *Nn2oflux, double *Dn2oflux, double *Dn2flux, double *CH4, int *isdecid, int *isagri, double *grass_lai, double *tree_lai, double *NOabsorp_grass, double *NOabsorp_tree, double *nit_amt, double *nreduce, double dN2lyr[], double dN2Olyr[], {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FILEPATH_MAX\:soilwater.h}
{\xe \v soilwater.h\:FILEPATH_MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FILEPATH_MAX\~ 60   /* Max # of chars in a file path-name */}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INPTSTRLEN\:soilwater.h}
{\xe \v soilwater.h\:INPTSTRLEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INPTSTRLEN\~ 120    /* Max length of input file {\b line} */}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OTPTSTRLEN\:soilwater.h}
{\xe \v soilwater.h\:OTPTSTRLEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define OTPTSTRLEN\~ 80     /* Max length of output file string */}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v FILES_SPT\:soilwater.h}
{\xe \v soilwater.h\:FILES_SPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef  struct {\b FILES_S} * {\b FILES_SPT}}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FLAG_SPT\:soilwater.h}
{\xe \v soilwater.h\:FLAG_SPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef  struct {\b FLAG_S} * {\b FLAG_SPT}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LAYERPAR_SPT\:soilwater.h}
{\xe \v soilwater.h\:LAYERPAR_SPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef  struct {\b LAYERPAR_S} * {\b LAYERPAR_SPT}}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SITEPAR_SPT\:soilwater.h}
{\xe \v soilwater.h\:SITEPAR_SPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef  struct {\b SITEPAR_S} * {\b SITEPAR_SPT}}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SOIL_SPT\:soilwater.h}
{\xe \v soilwater.h\:SOIL_SPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef  struct {\b SOIL_S} * {\b SOIL_SPT}}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v c_shwave\:soilwater.h}
{\xe \v soilwater.h\:c_shwave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double c_shwave (int {\i month}, double {\i rlatitude}, int {\i jday})}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v denitrify\:soilwater.h}
{\xe \v soilwater.h\:denitrify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void denitrify (double * {\i newCO2}, double * {\i newNO3}, double {\i nitrate}[], double {\i tfluxout}[], double * {\i critflow}, double {\i frlechd}[], double {\i stream}[], double * {\i basef}, double * {\i stormf}, double * {\i inorglch}, double * {\i Dn2oflux}, double * {\i Dn2flux}, double {\i stdfieldc}, double {\i stdbulkd}, double {\i dN2lyr}[], double {\i dN2Olyr}[], int * {\i jday}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers})}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getdiff\:soilwater.h}
{\xe \v soilwater.h\:getdiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void getdiff (double * {\i valsubt}, double {\i valtochk}, double {\i valmin})}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initdaily\:soilwater.h}
{\xe \v soilwater.h\:initdaily}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void initdaily (int {\i month}, double {\i biolive}, double {\i biodead}, double {\i blitter}, double * {\i biomass}, double * {\i blivelai}, double * {\i vegcov}, double * {\i totagb}, double * {\i stcrlai}, {\b LAYERPAR_SPT} {\i layers})}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initlyrs\:soilwater.h}
{\xe \v soilwater.h\:initlyrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void initlyrs (char * {\i soilname}, {\b LAYERPAR_SPT} {\i layers}, {\b FLAG_SPT} {\i flags}, {\b SITEPAR_SPT} {\i sitepar})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initsite\:soilwater.h}
{\xe \v soilwater.h\:initsite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void initsite (char * {\i sitename}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b FLAG_SPT} {\i flags}, double {\i sradadj}[NMONTH], double * {\i tminslope}, double * {\i tminintercept}, double * {\i maxphoto}, double * {\i bioabsorp})}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initsrad\:soilwater.h}
{\xe \v soilwater.h\:initsrad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void initsrad (double {\i elevation}, double {\i latitude}, double {\i aspect}, double {\i slope}, double {\i ehoriz}, double {\i whoriz}, double {\i daylength}[NDAY])}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v litstcr_evap\:soilwater.h}
{\xe \v soilwater.h\:litstcr_evap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void litstcr_evap (double * {\i cwlit}, double * {\i cwstcr}, double * {\i petleft}, double * {\i aet}, double {\i totlit}, double {\i totstcr})}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v methane_oxidation\:soilwater.h}
{\xe \v soilwater.h\:methane_oxidation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void methane_oxidation (double * {\i CH4}, int * {\i isdecid}, int * {\i isagri}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98     \{ \par
99       int    ilyr;\par
100       double  bulkdensity;\par
101       double  fieldcapacity;\par
102       double soiltemp;\par
103       double soilwater;\par
104       double wfps;\par
105       double CH4max;\par
106       double  Dopt;\par
107       double Wmin;\par
108       double Wmax;\par
109       double  Wopt;\par
110       double agri_adjust;\par
111       double temp_adjust;\par
112       double watr_adjust;\par
113       double wfps_adjust;\par
114       double  percentlayer;\par
115       double  temp;\par
116 \par
117 /*\par
118       extern LAYERPAR_SPT layers;\par
119       extern SOIL_SPT soil;\par
120 */\par
121       /* Compute a weighted average for soil temperature, field capacity, */\par
122       /* bulk density, water filled pore space, and volumetric soil water */\par
123       /* content in top 15 cm of soil profile */\par
124       ilyr = 0;\par
125       bulkdensity = 0.0;\par
126       fieldcapacity = 0.0;\par
127       soiltemp = 0.0;\par
128       soilwater = 0.0;\par
129       wfps = 0.0;\par
130       for (ilyr = 0; ilyr < layers->numlyrs; ilyr++) \{\par
131         if (layers->dpthmn[ilyr] < CH4DEPTH) \{\par
132           if (layers->dpthmx[ilyr] <= CH4DEPTH) \{\par
133             bulkdensity += layers->bulkd[ilyr] * layers->width[ilyr] / \par
134                            CH4DEPTH;\par
135             fieldcapacity += layers->fieldc[ilyr] * layers->width[ilyr] /\par
136                              CH4DEPTH;\par
137             soiltemp += soil->soiltavg[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
138             soilwater += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
139             wfps += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH;\par
140           \} else if ((layers->dpthmx[ilyr] - layers->dpthmn[ilyr]) > 0.0) \{\par
141             percentlayer = (CH4DEPTH - layers->dpthmn[ilyr]) / \par
142                            (layers->dpthmx[ilyr] - layers->dpthmn[ilyr]);\par
143             bulkdensity += layers->bulkd[ilyr] * layers->width[ilyr] /\par
144                            CH4DEPTH * percentlayer;\par
145             fieldcapacity += layers->fieldc[ilyr] * layers->width[ilyr] /\par
146                              CH4DEPTH * percentlayer;\par
147             soiltemp += soil->soiltavg[ilyr] * layers->width[ilyr] /\par
148                         CH4DEPTH * percentlayer;\par
149             soilwater += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH *\par
150                          percentlayer;\par
151             wfps += layers->wfps[ilyr] * layers->width[ilyr] / CH4DEPTH *\par
152                     percentlayer;\par
153           \}\par
154         \}\par
155       \}\par
156       /* Convert from water filled pore space to volumetric water */\par
157       soilwater = soilwater * (1.0 - (bulkdensity / PARTDENS));\par
158       soilwater *= 100.0;\par
159 \par
160       /* CH4 oxidation for a deciduous system */\par
161       if (*isdecid) \{\par
162         CH4max = 40.0 - 18.3 * bulkdensity;\par
163         temp_adjust = 0.0209 * soiltemp + 0.845;\par
164         /* Use bounded value for wfps_adjust if wfps falls below a critical */\par
165         /* value, cak - 11/12/02 */\par
166         if (wfps <= 0.05) \{\par
167           wfps_adjust = 0.1;\par
168         \} else \{\par
169           wfps_adjust = pow((10.0 * wfps - 0.5) / (1.84 - 0.5), 0.13);\par
170           wfps_adjust *= pow((10.0 * wfps - 55) / (1.84 - 55),\par
171                              (0.13 * (55 - 1.84)) / (1.84 - 0.5));\par
172           wfps_adjust = max(0.1, wfps_adjust);\par
173         \}\par
174         *CH4 = CH4max * wfps_adjust * temp_adjust;\par
175 \par
176       \} else \{\par
177         /* CH4 oxidation for a grassland/coniferous/tropical system */\par
178         Wmin = 3.0 * fieldcapacity - 0.28;\par
179         Wopt = 6.3 * fieldcapacity - 0.58;\par
180         Wmax = 10.6 * fieldcapacity + 1.9;\par
181         temp = Wopt * 0.1 / (1.0 - (bulkdensity / PARTDENS));\par
182         Dopt = diffusiv(&fieldcapacity, &bulkdensity, &temp);\par
183         CH4max = 53.8 * Dopt + 0.58;\par
184         if ((0.1*soilwater < Wmin) || 0.1*soilwater > Wmax) \{\par
185           watr_adjust = 0.1;\par
186         \} else \{\par
187           watr_adjust = pow(((0.1 * soilwater - Wmin) / (Wopt - Wmin)), 0.4) *\par
188                         pow(((0.1 * soilwater - Wmax) / (Wopt - Wmax)), \par
189                              ((0.4 * (Wmax - Wopt)) / (Wopt - Wmin))); \par
190           watr_adjust = max(0.1, watr_adjust);\par
191         \}\par
192         if (*isagri) \{\par
193           if (Dopt < 0.15) \{\par
194             agri_adjust = 0.9;\par
195           \} else if (Dopt > 0.28) \{\par
196             agri_adjust = 0.28;\par
197           \} else \{\par
198             agri_adjust = -4.6 * Dopt + 1.6;\par
199           \}\par
200         \} else \{\par
201           agri_adjust = 1.0;\par
202         \}\par
203         temp_adjust = (soiltemp * max(0.11, Dopt) * 0.095) + 0.9;\par
204         *CH4 = CH4max * watr_adjust * temp_adjust * agri_adjust;\par
205       \}\par
206 \par
207       return;\par
208     \}\par
}
}
{\xe \v nitrify\:soilwater.h}
{\xe \v soilwater.h\:nitrify}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void nitrify (double * {\i ammonium}, double * {\i nh4_2_no3}, double * {\i maxt}, double * {\i nreduce}, {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86     \{\par
87       int debug = 0;\par
88       int ilyr;\par
89       double MaxRate = 0.15;\par
90       double base_flux;\par
91       double fNsoilt; \par
92       double fNwfps;\par
93       double fNnh4;\par
94       double fNph;\par
95       double A[4];    /* parameters to parton-innis functions */\par
96       double grams_soil;\par
97       double nh4_conc;\par
98       double avgwfps;\par
99       double min_ammonium = 0.03;\par
100       double abiotic;\par
101       double  rel_wc[4], avg_rel_wc, avgfc, avgstemp;\par
102       double absoluteMaxRate;\par
103 \par
104 /*\par
105       extern LAYERPAR_SPT layers;\par
106       extern SITEPAR_SPT sitepar;\par
107       extern SOIL_SPT soil;\par
108 */\par
109 \par
110       *nh4_2_no3 = 0.0;\par
111 \par
112       if (*ammonium < min_ammonium) \{\par
113         if (debug) \{\par
114           fprintf(stdout, "CANNOT NITRIFY, ammonium too small\\n");\par
115         \}\par
116         goto RET;\par
117       \}\par
118 \par
119       /* Convert ammonium (g/m2) to nh4_conc (ppm) */\par
120       /* Assume all ammonium occurs in the top 15 cm */\par
121 /* NOTE:  This should be changed so that nitrification occurs as a continuous\par
122           function by depth rather than assuming that the top 3 soil layers\par
123           will sum to 15 cm */\par
124 \par
125       grams_soil = (layers->bulkd[0]*layers->width[0] +\par
126                     layers->bulkd[1]*layers->width[1] +\par
127                     layers->bulkd[2]*layers->width[2])*100*100;\par
128 \par
129       nh4_conc = *ammonium/grams_soil*1.0E6;\par
130 \par
131       if (debug > 1) \{\par
132         fprintf(stdout, "ammonium = %10.4lf\\n", *ammonium);\par
133         fprintf(stdout, "nh4_conc = %10.4lf\\n", nh4_conc);\par
134       \}\par
135 \par
136       /* Compute the effect of soil water on Nitrification (0-1). */\par
137       /* Use relative water content for this calculation when the */\par
138       /* soil is drier than field capacity.  When the soil is wetter */\par
139       /* field capacity use water filled pore space.  cak - 06/16/04 */\par
140 \par
141       /* Compute relative water content in the 2nd and 3rd soil layers, */\par
142       /* cak - 08/19/04 */\par
143       for (ilyr = 1; ilyr < 3; ilyr ++) \{\par
144         rel_wc[ilyr] = (layers->swc[ilyr]/(layers->width[ilyr]) -\par
145                         layers->swclimit[ilyr]) /\par
146                         (layers->fieldc[ilyr] - layers->swclimit[ilyr]);\par
147         if (rel_wc[ilyr] < 0.0) \{\par
148           rel_wc[ilyr] = 0.0;\par
149         \} else if (rel_wc[ilyr] > 1.0) \{\par
150           rel_wc[ilyr] = 1.0;\par
151         \}\par
152         rel_wc[ilyr] *= layers->width[ilyr];\par
153       \}\par
154       avg_rel_wc = (rel_wc[1] + rel_wc[2]) /\par
155                    (layers->width[1] + layers->width[2]);\par
156 \par
157       if (avg_rel_wc < 1.0) \{\par
158         fNwfps = 1.0/(1.0 + 30.0 * exp(-9.0 * avg_rel_wc));\par
159       \} else \{\par
160         /* Compute average water filled pore space in 2nd and 3rd soil */\par
161         /* layers, cak - 08/19/04 */\par
162         wfps(layers);\par
163         avgwfps = (layers->wfps[1]*layers->width[1] +\par
164                    layers->wfps[2]*layers->width[2]) /\par
165                   (layers->width[1] + layers->width[2]);\par
166         if (debug > 1) \{\par
167           fprintf(stdout, "avgwfps = %6.2lf\\n", avgwfps);\par
168         \}\par
169         avgfc = (layers->fieldc[1]*layers->width[1] +\par
170                  layers->fieldc[2]*layers->width[2]) /\par
171                 (layers->width[1] + layers->width[2]);\par
172         /* Line function with two known points and a new X, calculate Y */\par
173         /* slope = (y2 - y1) / (x2 - x1) */\par
174         /* y = slope * (x - x2) + y2 */\par
175         fNwfps = (0.0 - 1.0) / (1.0 - avgfc) * (avgwfps - 1.0) + 0.0;\par
176       \}\par
177 \par
178       /* Compute the soil temperature effect on Nitrification */\par
179       A[0] = 35.0;\par
180       A[1] = -5.0;\par
181       A[2] = 4.5;\par
182       A[3] = 7.0;\par
183       /* Rates of nitrification were too low at low soil temperatures, */\par
184       /* shift the curve so that the nitrification rates are effectively */\par
185       /* higher for cooler sites, this change does not affect sites with */\par
186       /* hot temperatures, cak - 11/25/03 */\par
187       avgstemp = (soil->soiltavg[1] * layers->width[1] + \par
188                   soil->soiltavg[2] * layers->width[2]) /\par
189                  (layers->width[1] + layers->width[2]);\par
190       if (*maxt >= 35.0) \{\par
191         A[0] = *maxt;\par
192         fNsoilt = f_gen_poisson_density(avgstemp,A);\par
193       \} else \{\par
194         fNsoilt = f_gen_poisson_density(avgstemp+(A[0]-*maxt),A);\par
195       \}\par
196 \par
197       /* Compute pH effect on nitrification */\par
198       A[0] = 5.0;\par
199       A[1] = 0.56;\par
200       A[2] = 1.0;\par
201       A[3] = 0.45;\par
202       fNph = f_arctangent(layers->pH[1], A);\par
203 \par
204       /* Compute the Ammonium effect on Nitrification */\par
205       A[0] = 1.0;\par
206       A[1] = -0.0105;\par
207       A[2] = 0.0;\par
208       A[3] = 0.0;\par
209       fNnh4 = 1.0 - f_exponential(nh4_conc, A);\par
210 \par
211       /* Compute amount of ammonium that goes to nitrate during */\par
212       /* nitrification */\par
213       if (debug > 1) \{\par
214         fprintf(stdout, "%6s  %6s  %6s  %6s\\n","fNwfps","fNsoilt", "fNph",\par
215                 "fNnh4");\par
216         fprintf(stdout, "%6.4lf  %6.4lf  %6.4lf  %6.4lf\\n", fNwfps, fNsoilt, fNph,\par
217                 fNnh4);\par
218       \}\par
219       /* The base_flux is equivalent to 0.1 gN/ha/day */\par
220       base_flux = 0.1/10000.0;\par
221       abiotic = max(fNwfps * fNsoilt, sitepar->Ncoeff);\par
222       absoluteMaxRate = min(0.4, *ammonium * MaxRate);\par
223       *nh4_2_no3 = absoluteMaxRate * fNph * abiotic * *nreduce +\par
224                    base_flux;\par
225 \par
226       if ((*ammonium - *nh4_2_no3) > min_ammonium) \{\par
227         *ammonium -= *nh4_2_no3;\par
228       \} else \{\par
229         *nh4_2_no3 = min(*nh4_2_no3, *ammonium - min_ammonium);\par
230         *ammonium = min_ammonium;\par
231       \}\par
232 \par
233 RET:  return;\par
234     \}\par
}
}
{\xe \v petrad\:soilwater.h}
{\xe \v soilwater.h\:petrad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double petrad (int {\i jday}, int {\i month}, double {\i cldcov}, double {\i windsp}, double {\i rhumid}, double {\i rlatitude}, double {\i avgtemp}, double {\i reflec}, double {\i solrad}, double {\i albedo}, double {\i snowpack})}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pevapdly\:soilwater.h}
{\xe \v soilwater.h\:pevapdly}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pevapdly (double {\i tmin}, double {\i tmax}, double {\i sitlat}, double {\i tmn2m}[], double {\i tmx2m}[], int {\i jday}, int {\i month})}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setamov\:soilwater.h}
{\xe \v soilwater.h\:setamov}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setamov (double {\i amovdly}[CENTMAXLYR], int {\i nlayer}, double {\i wfluxout}[MAXLYR], int {\i numlyrs}, int {\i lbnd}[CENTMAXLYR])}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setasmos\:soilwater.h}
{\xe \v soilwater.h\:setasmos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setasmos (double {\i asmos}[CENTMAXLYR], int * {\i nlayer}, double {\i swcinit}[MAXLYR], int * {\i numlyrs}, double {\i avh2o}[3], double {\i rwcf}[CENTMAXLYR])}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v showlyrs\:soilwater.h}
{\xe \v soilwater.h\:showlyrs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void showlyrs (double {\i swc}[MAXLYR], int {\i numlyrs})}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v svapor\:soilwater.h}
{\xe \v soilwater.h\:svapor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double svapor (double {\i atemp})}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tanfunc\:soilwater.h}
{\xe \v soilwater.h\:tanfunc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double tanfunc (double {\i z}, double {\i a}, double {\i b}, double {\i c}, double {\i d})}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trace_gas_model\:soilwater.h}
{\xe \v soilwater.h\:trace_gas_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void trace_gas_model (int * {\i jday}, double * {\i time}, double * {\i newminrl}, double * {\i ammonium}, double {\i nitrate}[], int * {\i texture}, double * {\i sand}, double * {\i silt}, double * {\i clay}, double * {\i afiel}, double * {\i bulkd}, double * {\i maxt}, double * {\i ppt}, double * {\i snow}, double * {\i avgwfps}, double * {\i stormf}, double * {\i basef}, double {\i frlechd}[], double {\i stream}[], double * {\i inorglch}, double * {\i critflow}, double {\i wfluxout}[], double * {\i newCO2}, double * {\i NOflux}, double * {\i Nn2oflux}, double * {\i Dn2oflux}, double * {\i Dn2flux}, double * {\i CH4}, int * {\i isdecid}, int * {\i isagri}, double * {\i grass_lai}, double * {\i tree_lai}, double * {\i NOabsorp_grass}, double * {\i NOabsorp_tree}, double * {\i nit_amt}, double * {\i nreduce}, double {\i dN2lyr}[], double {\i dN2Olyr}[], {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133     \{\par
134 \par
135       /* Local Variables */\par
136 \par
137       int    debug = 0;\par
138       int    ilyr;\par
139       int *soilclassification;\par
140 /*      double netmn_to_no3 = 0.20; */\par
141       double netmn_to_no3 = 0.0;\par
142       double turnovfrac = 0.02;\par
143       double newNH4;\par
144       double newNO3;\par
145       double nh4_to_no3;\par
146       double krainNO;\par
147       double potential_NOflux;\par
148       double dDO;\par
149       double stdbulkd;\par
150       double stdfieldc;\par
151       double NO_N2O_ratio;\par
152       double NH4_to_NO;\par
153       double npool_sum;\par
154       double canopy_reduction;\par
155       double NOabsorp;\par
156       double total_lai;\par
157 \par
158 //      extern SITEPAR_SPT sitepar;\par
159 \par
160       *Nn2oflux = 0.0;\par
161       *NOflux = 0.0;\par
162       *Dn2oflux = 0.0;\par
163       *Dn2flux = 0.0;\par
164 \par
165       /* Compute fraction of new mineralization that is converted to NH4 */\par
166       /* and NO3 */\par
167 \par
168       if (debug) \{\par
169         printf("newminrl = %6.4lf\\n", *newminrl);\par
170       \}\par
171 \par
172       if (*newminrl <= 0.0) \{\par
173 \par
174         /* Immobilization */\par
175         /* Distribute N loss proportionally between ammonium and nitrate   */\par
176         /* layers.  There is no check that these N pools won't go negative */\par
177         /* once immobilization is accounted for.  It is assumed that the   */\par
178         /* immobilization calculation by the decomp model is moderated by  */\par
179         /* the supply of minerl N.                                         */\par
180 \par
181         npool_sum = (*ammonium > 0.0) ? *ammonium : 0.0;\par
182         for (ilyr=0; ilyr < MAXLYR; ilyr ++) \{\par
183           npool_sum += (nitrate[ilyr] > 0.0) ? nitrate[ilyr] : 0.0;\par
184         \}\par
185         if (*ammonium > 0.0) \{\par
186           *ammonium += *newminrl * (*ammonium / npool_sum);\par
187         \}\par
188         for (ilyr=0; ilyr < MAXLYR; ilyr ++) \{\par
189           if (nitrate[ilyr] > 0.0) \{\par
190             nitrate[ilyr] += *newminrl * (nitrate[ilyr] / npool_sum);\par
191           \}\par
192         \}\par
193         newNH4 = 0.0;\par
194         newNO3 = 0.0;\par
195       \} else \{\par
196         /* Mineralization */\par
197         newNH4 = *newminrl * (1.0 - netmn_to_no3);\par
198         newNO3 = *newminrl * netmn_to_no3;\par
199       \}\par
200 \par
201       if (debug) \{\par
202         printf("newNH4 = %6.4lf\\n", newNH4);\par
203         printf("newNO3 = %6.4lf\\n", newNO3);\par
204       \}\par
205 \par
206       *ammonium += newNH4;\par
207 \par
208       /* Compute the amount of NH4 that is converted to NO3 due to */\par
209       /* nitrification */\par
210 \par
211      nitrify(ammonium, &nh4_to_no3, maxt, nreduce,sitepar,layers,soil);\par
212       *nit_amt = nh4_to_no3;\par
213 \par
214       if (debug) \{\par
215         printf("texture = %1d\\n", *texture);\par
216         printf("nh4_to_no3 = %6.4lf\\n", nh4_to_no3);\par
217         printf("maxt = %6.4lf\\n", *maxt);\par
218       \}\par
219 \par
220       /* Compute fraction of new NO3 that is converted to N2O and NO */\par
221 \par
222       krainNO = nox_pulse(ppt, snow);\par
223 \par
224       getsoilprop(sand, silt, clay, &stdbulkd, &stdfieldc, texture,&soilclassification);\par
225 \par
226       /* Use standard field capacity and bulk density according */\par
227       /* to the soil class in the texture triangle -mdh 10/26/99 */\par
228 /*      dDO = diffusiv(afiel(1), bulkd, *avgwfps) */\par
229       /* No, change back to soils.in field capacity and bulk density. */\par
230       /* -mdh 6/20/00 */\par
231 /*      dDO = diffusiv(&stdfieldc, &stdbulkd, avgwfps); */\par
232       dDO = diffusiv(afiel, bulkd, avgwfps);\par
233 \par
234       newNO3 += nh4_to_no3;\par
235 \par
236       if (newNO3 > 1.0E-30) \{\par
237         *Nn2oflux = newNO3 * turnovfrac * sitepar->N2Oadjust;\par
238         newNO3 -= *Nn2oflux; \par
239 \par
240         /* Another update to NO flux calculation -mdh 10/26/99 */\par
241 \par
242 /*        NO_N2O_ratio = 15.23 + (35.45*atan(0.676*PI*(10*dDO-1.86)))/PI; */\par
243         NO_N2O_ratio = 8.0 + (18.0*atan(0.75*PI*(10*dDO-1.86)))/PI;\par
244         /* If this is an agricultural system adjust the NO to N2O ratio */\par
245         /* cak - 01/28/03 */\par
246         if (*isagri) \{\par
247 /*          NO_N2O_ratio *= 0.2; */\par
248           NO_N2O_ratio *= 0.5;\par
249         \}\par
250         potential_NOflux = NO_N2O_ratio * *Nn2oflux * krainNO;\par
251 \par
252         if (potential_NOflux <= newNO3) \{\par
253           *NOflux = potential_NOflux;\par
254           newNO3 -= *NOflux;\par
255         \} else \{\par
256           /* take N out of ammonimum to get max NOflux possible */\par
257           NH4_to_NO = min(*ammonium, (potential_NOflux-newNO3));\par
258           *NOflux = newNO3 + NH4_to_NO;\par
259           *ammonium -= NH4_to_NO;\par
260           newNO3 = 0;\par
261         \}\par
262 \par
263         if (*NOflux < 1.0E-30) \{\par
264           *NOflux = 0.0;\par
265         \}\par
266 \par
267       \} else \{\par
268         NO_N2O_ratio = 0.0;\par
269       \}\par
270 \par
271       /* Compute the N2O flux (Dn2oflux) and N2 flux (Dn2flux) due to */\par
272       /* denitrification */\par
273 \par
274 denitrify(newCO2, &newNO3, nitrate, wfluxout, critflow, frlechd,\par
275                 stream, basef, stormf, inorglch, Dn2oflux, Dn2flux,\par
276                 stdfieldc, stdbulkd, dN2lyr, dN2Olyr, jday,sitepar,layers);\par
277 \par
278 \par
279       /* Now compute NOflux from denitrification (new calculation */\par
280       /* -mdh 6/1/00 */\par
281 /*      potential_NOflux = NO_N2O_ratio * *Dn2oflux * krainNO; */\par
282       /* For denitrification, krainNO is >= 1.0 -mdh 6/22/00 */\par
283 \par
284       potential_NOflux = NO_N2O_ratio * *Dn2oflux * min(1.0, krainNO);\par
285 \par
286       if (potential_NOflux <= *ammonium) \{\par
287         /* Take all N out of ammonimum pool */\par
288         *NOflux += potential_NOflux;\par
289         *ammonium -= potential_NOflux;\par
290       \} else \{\par
291         /* Take N out of available ammonium, then convert some Dn2oflux to */\par
292         /* NOflux */\par
293         *NOflux += *ammonium;\par
294         potential_NOflux -= *ammonium;\par
295         *ammonium = 0.0;\par
296         if (potential_NOflux <= *Dn2oflux) \{\par
297           *NOflux += potential_NOflux;\par
298           *Dn2oflux -= potential_NOflux;\par
299         \}\par
300       \}\par
301 \par
302       /* Compute the amount of the soil NO flux that is absorped by the canopy, cak - 09/23/03 */\par
303       total_lai = *grass_lai + *tree_lai;\par
304       if (total_lai > 0.0) \{\par
305         canopy_reduction = 0.0077 * pow(total_lai,2) + -0.13 * total_lai + 0.99;\par
306         /* We need to retain the soil flux value */\par
307 \par
308         /* This previous code did not maintain and N balance -Melannie 9/26/2011 */\par
309         /* NOsoil = *NOflux; */\par
310         /* *NOflux *= canopy_reduction; */\par
311         /* NOabsorp = NOsoil - *NOflux; */\par
312 \par
313         NOabsorp = *NOflux * (1 - canopy_reduction);\par
314         if (NOabsorp > 0.0)\par
315         \{\par
316             *NOabsorp_grass = NOabsorp * (*grass_lai / total_lai);\par
317             *NOabsorp_tree = NOabsorp * (*tree_lai / total_lai);\par
318             *NOflux -= NOabsorp;\par
319         \}\par
320 \par
321         /* NO absorped by canopy goes to crop storage and forest storage */\par
322         /* Reset NOflux using the retained value */\par
323         /* *NOflux = NOsoil; */\par
324       \}\par
325 \par
326       if (*NOflux < 1.0E-30) \{\par
327         *NOflux = 0.0;\par
328       \}\par
329       if (*Nn2oflux < 1.0E-30) \{\par
330         *Nn2oflux = 0.0;\par
331       \}\par
332       if (*Dn2oflux < 1.0E-30) \{\par
333         *Dn2oflux = 0.0;\par
334       \}\par
335       if (*Dn2flux < 1.0E-30) \{\par
336         *Dn2flux = 0.0;\par
337       \}\par
338       \par
339       /* Calculate methane oxidation */\par
340       methane_oxidation(CH4, isdecid, isagri,layers,soil);\par
341   //    wrtsoiln(time, jday,ammonium,nitrate);\par
342       return;\par
343     \}\par
}
}
{\xe \v wfps\:soilwater.h}
{\xe \v soilwater.h\:wfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void wfps ({\b LAYERPAR_SPT} {\i layers})}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51     \{\par
52       int ilyr;\par
53       double swcfrac;\par
54       double porespace;\par
55 \par
56       for(ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
57 \par
58         swcfrac = layers->swc[ilyr] / layers->width[ilyr];\par
59         porespace = 1.0 - layers->bulkd[ilyr] / PARTDENS;\par
60         layers->wfps[ilyr] = swcfrac/porespace;\par
61       \}\par
62 \par
63       return;\par
64     \}\par
}
}
{\xe \v wfunc_pulse\:soilwater.h}
{\xe \v soilwater.h\:wfunc_pulse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double wfunc_pulse (double * {\i ppt}, double * {\i snow})}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/swconst.h File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/swconst.h}
{\xe \v /home/dlebauer/dev/biocro/src/swconst.h}
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "swconst_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEC_PER_DAY}\~ 86400\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEC_PER_HOUR}\~ 3600\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOURS_PER_DAY}\~ 24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NDAY}\~ 366               /* dimension for daily arrays */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NMONTH}\~ 12              /* # of months in a year */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXLYR}\~ 200              /* Max # of soil layers (soil water model) */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CENTMAXLYR}\~ 10          /* Max # of century soil layers */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAXSTLYR}\~ 200           /* Max # of soil temperature layers */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PARTDENS}\~ 2.65          /* Particle Density (g/cm3) */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PI}\~ 3.14159265\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CONVLAI}\~ 80    /* biomass needed to produce an LAI of 1 (g/m**2) */\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FNSOIL}\~ "soils.in"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FNSITE}\~ "sitepar.in"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b max}(a, b)\~ (((a) > (b)) ? (a) : (b))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b min}(a, b)\~ (((a) < (b)) ? (a) : (b))\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CENTMAXLYR\:swconst.h}
{\xe \v swconst.h\:CENTMAXLYR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CENTMAXLYR\~ 10          /* Max # of century soil layers */}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CONVLAI\:swconst.h}
{\xe \v swconst.h\:CONVLAI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CONVLAI\~ 80    /* biomass needed to produce an LAI of 1 (g/m**2) */}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FNSITE\:swconst.h}
{\xe \v swconst.h\:FNSITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FNSITE\~ "sitepar.in"}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FNSOIL\:swconst.h}
{\xe \v swconst.h\:FNSOIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FNSOIL\~ "soils.in"}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v HOURS_PER_DAY\:swconst.h}
{\xe \v swconst.h\:HOURS_PER_DAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOURS_PER_DAY\~ 24}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max\:swconst.h}
{\xe \v swconst.h\:max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define max( a,  b)\~ (((a) > (b)) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXLYR\:swconst.h}
{\xe \v swconst.h\:MAXLYR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXLYR\~ 200              /* Max # of soil layers (soil water model) */}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAXSTLYR\:swconst.h}
{\xe \v swconst.h\:MAXSTLYR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAXSTLYR\~ 200           /* Max # of soil temperature layers */}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min\:swconst.h}
{\xe \v swconst.h\:min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define min( a,  b)\~ (((a) < (b)) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NDAY\:swconst.h}
{\xe \v swconst.h\:NDAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NDAY\~ 366               /* dimension for daily arrays */}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NMONTH\:swconst.h}
{\xe \v swconst.h\:NMONTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NMONTH\~ 12              /* # of months in a year */}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PARTDENS\:swconst.h}
{\xe \v swconst.h\:PARTDENS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PARTDENS\~ 2.65          /* Particle Density (g/cm3) */}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PI\:swconst.h}
{\xe \v swconst.h\:PI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PI\~ 3.14159265}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SEC_PER_DAY\:swconst.h}
{\xe \v swconst.h\:SEC_PER_DAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEC_PER_DAY\~ 86400}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SEC_PER_HOUR\:swconst.h}
{\xe \v swconst.h\:SEC_PER_HOUR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEC_PER_HOUR\~ 3600}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/tgmodel.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/tgmodel.c}
{\xe \v /home/dlebauer/dev/biocro/src/tgmodel.c}
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "soilwater.h"}\par
{\f2 #include "n2o_model.h"}\par
{\f2 #include "swconst.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for tgmodel.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "tgmodel_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b trace_gas_model} (int *jday, double *time, double *newminrl, double *ammonium, double nitrate[], int *texture, double *sand, double *silt, double *clay, double *afiel, double *bulkd, double *maxt, double *ppt, double *snow, double *avgwfps, double *stormf, double *basef, double frlechd[], double stream[], double *inorglch, double *critflow, double wfluxout[], double *newCO2, double *NOflux, double *Nn2oflux, double *Dn2oflux, double *Dn2flux, double *CH4, int *isdecid, int *isagri, double *grass_lai, double *tree_lai, double *NOabsorp_grass, double *NOabsorp_tree, double *nit_amt, double *nreduce, double dN2lyr[], double dN2Olyr[], {\b SITEPAR_SPT} sitepar, {\b LAYERPAR_SPT} layers, {\b SOIL_SPT} soil)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v trace_gas_model\:tgmodel.c}
{\xe \v tgmodel.c\:trace_gas_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void trace_gas_model (int * {\i jday}, double * {\i time}, double * {\i newminrl}, double * {\i ammonium}, double {\i nitrate}[], int * {\i texture}, double * {\i sand}, double * {\i silt}, double * {\i clay}, double * {\i afiel}, double * {\i bulkd}, double * {\i maxt}, double * {\i ppt}, double * {\i snow}, double * {\i avgwfps}, double * {\i stormf}, double * {\i basef}, double {\i frlechd}[], double {\i stream}[], double * {\i inorglch}, double * {\i critflow}, double {\i wfluxout}[], double * {\i newCO2}, double * {\i NOflux}, double * {\i Nn2oflux}, double * {\i Dn2oflux}, double * {\i Dn2flux}, double * {\i CH4}, int * {\i isdecid}, int * {\i isagri}, double * {\i grass_lai}, double * {\i tree_lai}, double * {\i NOabsorp_grass}, double * {\i NOabsorp_tree}, double * {\i nit_amt}, double * {\i nreduce}, double {\i dN2lyr}[], double {\i dN2Olyr}[], {\b SITEPAR_SPT} {\i sitepar}, {\b LAYERPAR_SPT} {\i layers}, {\b SOIL_SPT} {\i soil})}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133     \{\par
134 \par
135       /* Local Variables */\par
136 \par
137       int    debug = 0;\par
138       int    ilyr;\par
139       int *soilclassification;\par
140 /*      double netmn_to_no3 = 0.20; */\par
141       double netmn_to_no3 = 0.0;\par
142       double turnovfrac = 0.02;\par
143       double newNH4;\par
144       double newNO3;\par
145       double nh4_to_no3;\par
146       double krainNO;\par
147       double potential_NOflux;\par
148       double dDO;\par
149       double stdbulkd;\par
150       double stdfieldc;\par
151       double NO_N2O_ratio;\par
152       double NH4_to_NO;\par
153       double npool_sum;\par
154       double canopy_reduction;\par
155       double NOabsorp;\par
156       double total_lai;\par
157 \par
158 //      extern SITEPAR_SPT sitepar;\par
159 \par
160       *Nn2oflux = 0.0;\par
161       *NOflux = 0.0;\par
162       *Dn2oflux = 0.0;\par
163       *Dn2flux = 0.0;\par
164 \par
165       /* Compute fraction of new mineralization that is converted to NH4 */\par
166       /* and NO3 */\par
167 \par
168       if (debug) \{\par
169         printf("newminrl = %6.4lf\\n", *newminrl);\par
170       \}\par
171 \par
172       if (*newminrl <= 0.0) \{\par
173 \par
174         /* Immobilization */\par
175         /* Distribute N loss proportionally between ammonium and nitrate   */\par
176         /* layers.  There is no check that these N pools won't go negative */\par
177         /* once immobilization is accounted for.  It is assumed that the   */\par
178         /* immobilization calculation by the decomp model is moderated by  */\par
179         /* the supply of minerl N.                                         */\par
180 \par
181         npool_sum = (*ammonium > 0.0) ? *ammonium : 0.0;\par
182         for (ilyr=0; ilyr < MAXLYR; ilyr ++) \{\par
183           npool_sum += (nitrate[ilyr] > 0.0) ? nitrate[ilyr] : 0.0;\par
184         \}\par
185         if (*ammonium > 0.0) \{\par
186           *ammonium += *newminrl * (*ammonium / npool_sum);\par
187         \}\par
188         for (ilyr=0; ilyr < MAXLYR; ilyr ++) \{\par
189           if (nitrate[ilyr] > 0.0) \{\par
190             nitrate[ilyr] += *newminrl * (nitrate[ilyr] / npool_sum);\par
191           \}\par
192         \}\par
193         newNH4 = 0.0;\par
194         newNO3 = 0.0;\par
195       \} else \{\par
196         /* Mineralization */\par
197         newNH4 = *newminrl * (1.0 - netmn_to_no3);\par
198         newNO3 = *newminrl * netmn_to_no3;\par
199       \}\par
200 \par
201       if (debug) \{\par
202         printf("newNH4 = %6.4lf\\n", newNH4);\par
203         printf("newNO3 = %6.4lf\\n", newNO3);\par
204       \}\par
205 \par
206       *ammonium += newNH4;\par
207 \par
208       /* Compute the amount of NH4 that is converted to NO3 due to */\par
209       /* nitrification */\par
210 \par
211      nitrify(ammonium, &nh4_to_no3, maxt, nreduce,sitepar,layers,soil);\par
212       *nit_amt = nh4_to_no3;\par
213 \par
214       if (debug) \{\par
215         printf("texture = %1d\\n", *texture);\par
216         printf("nh4_to_no3 = %6.4lf\\n", nh4_to_no3);\par
217         printf("maxt = %6.4lf\\n", *maxt);\par
218       \}\par
219 \par
220       /* Compute fraction of new NO3 that is converted to N2O and NO */\par
221 \par
222       krainNO = nox_pulse(ppt, snow);\par
223 \par
224       getsoilprop(sand, silt, clay, &stdbulkd, &stdfieldc, texture,&soilclassification);\par
225 \par
226       /* Use standard field capacity and bulk density according */\par
227       /* to the soil class in the texture triangle -mdh 10/26/99 */\par
228 /*      dDO = diffusiv(afiel(1), bulkd, *avgwfps) */\par
229       /* No, change back to soils.in field capacity and bulk density. */\par
230       /* -mdh 6/20/00 */\par
231 /*      dDO = diffusiv(&stdfieldc, &stdbulkd, avgwfps); */\par
232       dDO = diffusiv(afiel, bulkd, avgwfps);\par
233 \par
234       newNO3 += nh4_to_no3;\par
235 \par
236       if (newNO3 > 1.0E-30) \{\par
237         *Nn2oflux = newNO3 * turnovfrac * sitepar->N2Oadjust;\par
238         newNO3 -= *Nn2oflux; \par
239 \par
240         /* Another update to NO flux calculation -mdh 10/26/99 */\par
241 \par
242 /*        NO_N2O_ratio = 15.23 + (35.45*atan(0.676*PI*(10*dDO-1.86)))/PI; */\par
243         NO_N2O_ratio = 8.0 + (18.0*atan(0.75*PI*(10*dDO-1.86)))/PI;\par
244         /* If this is an agricultural system adjust the NO to N2O ratio */\par
245         /* cak - 01/28/03 */\par
246         if (*isagri) \{\par
247 /*          NO_N2O_ratio *= 0.2; */\par
248           NO_N2O_ratio *= 0.5;\par
249         \}\par
250         potential_NOflux = NO_N2O_ratio * *Nn2oflux * krainNO;\par
251 \par
252         if (potential_NOflux <= newNO3) \{\par
253           *NOflux = potential_NOflux;\par
254           newNO3 -= *NOflux;\par
255         \} else \{\par
256           /* take N out of ammonimum to get max NOflux possible */\par
257           NH4_to_NO = min(*ammonium, (potential_NOflux-newNO3));\par
258           *NOflux = newNO3 + NH4_to_NO;\par
259           *ammonium -= NH4_to_NO;\par
260           newNO3 = 0;\par
261         \}\par
262 \par
263         if (*NOflux < 1.0E-30) \{\par
264           *NOflux = 0.0;\par
265         \}\par
266 \par
267       \} else \{\par
268         NO_N2O_ratio = 0.0;\par
269       \}\par
270 \par
271       /* Compute the N2O flux (Dn2oflux) and N2 flux (Dn2flux) due to */\par
272       /* denitrification */\par
273 \par
274 denitrify(newCO2, &newNO3, nitrate, wfluxout, critflow, frlechd,\par
275                 stream, basef, stormf, inorglch, Dn2oflux, Dn2flux,\par
276                 stdfieldc, stdbulkd, dN2lyr, dN2Olyr, jday,sitepar,layers);\par
277 \par
278 \par
279       /* Now compute NOflux from denitrification (new calculation */\par
280       /* -mdh 6/1/00 */\par
281 /*      potential_NOflux = NO_N2O_ratio * *Dn2oflux * krainNO; */\par
282       /* For denitrification, krainNO is >= 1.0 -mdh 6/22/00 */\par
283 \par
284       potential_NOflux = NO_N2O_ratio * *Dn2oflux * min(1.0, krainNO);\par
285 \par
286       if (potential_NOflux <= *ammonium) \{\par
287         /* Take all N out of ammonimum pool */\par
288         *NOflux += potential_NOflux;\par
289         *ammonium -= potential_NOflux;\par
290       \} else \{\par
291         /* Take N out of available ammonium, then convert some Dn2oflux to */\par
292         /* NOflux */\par
293         *NOflux += *ammonium;\par
294         potential_NOflux -= *ammonium;\par
295         *ammonium = 0.0;\par
296         if (potential_NOflux <= *Dn2oflux) \{\par
297           *NOflux += potential_NOflux;\par
298           *Dn2oflux -= potential_NOflux;\par
299         \}\par
300       \}\par
301 \par
302       /* Compute the amount of the soil NO flux that is absorped by the canopy, cak - 09/23/03 */\par
303       total_lai = *grass_lai + *tree_lai;\par
304       if (total_lai > 0.0) \{\par
305         canopy_reduction = 0.0077 * pow(total_lai,2) + -0.13 * total_lai + 0.99;\par
306         /* We need to retain the soil flux value */\par
307 \par
308         /* This previous code did not maintain and N balance -Melannie 9/26/2011 */\par
309         /* NOsoil = *NOflux; */\par
310         /* *NOflux *= canopy_reduction; */\par
311         /* NOabsorp = NOsoil - *NOflux; */\par
312 \par
313         NOabsorp = *NOflux * (1 - canopy_reduction);\par
314         if (NOabsorp > 0.0)\par
315         \{\par
316             *NOabsorp_grass = NOabsorp * (*grass_lai / total_lai);\par
317             *NOabsorp_tree = NOabsorp * (*tree_lai / total_lai);\par
318             *NOflux -= NOabsorp;\par
319         \}\par
320 \par
321         /* NO absorped by canopy goes to crop storage and forest storage */\par
322         /* Reset NOflux using the retained value */\par
323         /* *NOflux = NOsoil; */\par
324       \}\par
325 \par
326       if (*NOflux < 1.0E-30) \{\par
327         *NOflux = 0.0;\par
328       \}\par
329       if (*Nn2oflux < 1.0E-30) \{\par
330         *Nn2oflux = 0.0;\par
331       \}\par
332       if (*Dn2oflux < 1.0E-30) \{\par
333         *Dn2oflux = 0.0;\par
334       \}\par
335       if (*Dn2flux < 1.0E-30) \{\par
336         *Dn2flux = 0.0;\par
337       \}\par
338       \par
339       /* Calculate methane oxidation */\par
340       methane_oxidation(CH4, isdecid, isagri,layers,soil);\par
341   //    wrtsoiln(time, jday,ammonium,nitrate);\par
342       return;\par
343     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/tracegas.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/tracegas.c}
{\xe \v /home/dlebauer/dev/biocro/src/tracegas.c}
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/wfps.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/wfps.c}
{\xe \v /home/dlebauer/dev/biocro/src/wfps.c}
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "soilwater.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for wfps.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "wfps_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b wfps} ({\b LAYERPAR_SPT} layers)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v wfps\:wfps.c}
{\xe \v wfps.c\:wfps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void wfps ({\b LAYERPAR_SPT} {\i layers})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51     \{\par
52       int ilyr;\par
53       double swcfrac;\par
54       double porespace;\par
55 \par
56       for(ilyr=0; ilyr < layers->numlyrs; ilyr++) \{\par
57 \par
58         swcfrac = layers->swc[ilyr] / layers->width[ilyr];\par
59         porespace = 1.0 - layers->bulkd[ilyr] / PARTDENS;\par
60         layers->wfps[ilyr] = swcfrac/porespace;\par
61       \}\par
62 \par
63       return;\par
64     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/willowCent.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/willowCent.c}
{\xe \v /home/dlebauer/dev/biocro/src/willowCent.c}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c3photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxwillowGro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "crocent.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for willowCent.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "willow_cent_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b willowCent} (SEXP LAT, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP KD, SEXP CHILHF, SEXP NLAYERS, SEXP IPLANT, SEXP IRTL, SEXP SENCOEFS, SEXP TIMESTEP, SEXP VECSIZE, SEXP SPLEAF, SEXP SPD, SEXP DBPCOEFS, SEXP THERMALP, SEXP TBASE, SEXP VMAX, SEXP ALPHA, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP WS, SEXP SOILCOEFS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP WSFUN, SEXP CENTCOEFS, SEXP CENTTIMESTEP, SEXP CENTKS, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP JMAX, SEXP JMAXB1, SEXP O2, SEXP GROWTHRESP, SEXP STOMATAWS)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v willowCent\:willowCent.c}
{\xe \v willowCent.c\:willowCent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP willowCent (SEXP {\i LAT}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i NLAYERS}, SEXP {\i IPLANT}, SEXP {\i IRTL}, SEXP {\i SENCOEFS}, SEXP {\i TIMESTEP}, SEXP {\i VECSIZE}, SEXP {\i SPLEAF}, SEXP {\i SPD}, SEXP {\i DBPCOEFS}, SEXP {\i THERMALP}, SEXP {\i TBASE}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i WS}, SEXP {\i SOILCOEFS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i WSFUN}, SEXP {\i CENTCOEFS}, SEXP {\i CENTTIMESTEP}, SEXP {\i CENTKS}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i JMAX}, SEXP {\i JMAXB1}, SEXP {\i O2}, SEXP {\i GROWTHRESP}, SEXP {\i STOMATAWS})}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
/home/dlebauer/dev/biocro/src/willowGro.c File Reference\par \pard\plain 
{\tc\tcl2 \v /home/dlebauer/dev/biocro/src/willowGro.c}
{\xe \v /home/dlebauer/dev/biocro/src/willowGro.c}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <R.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <Rmath.h>}\par
{\f2 #include <Rinternals.h>}\par
{\f2 #include "c3photo.h"}\par
{\f2 #include "AuxBioCro.h"}\par
{\f2 #include "Century.h"}\par
{\f2 #include "BioCro.h"}\par
{\f2 #include "AuxwillowGro.h"}\par
{\f2 #include "AuxcaneGro.h"}\par
{\f2 #include "crocent.h"}\par
{\f2 #include "c3canopy.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for willowGro.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "willow_gro_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
SEXP {\b willowGro} (SEXP LAT, SEXP DOY, SEXP HR, SEXP SOLAR, SEXP TEMP, SEXP RH, SEXP WINDSPEED, SEXP PRECIP, SEXP KD, SEXP CHILHF, SEXP NLAYERS, SEXP IPLANT, SEXP IRTL, SEXP SENCOEFS, SEXP TIMESTEP, SEXP VECSIZE, SEXP SPLEAF, SEXP SPD, SEXP DBPCOEFS, SEXP THERMALP, SEXP TBASE, SEXP VMAX, SEXP ALPHA, SEXP THETA, SEXP BETA, SEXP RD, SEXP CATM, SEXP B0, SEXP B1, SEXP WS, SEXP SOILCOEFS, SEXP ILEAFN, SEXP KLN, SEXP VMAXB1, SEXP ALPHAB1, SEXP MRESP, SEXP SOILTYPE, SEXP WSFUN, SEXP CENTCOEFS, SEXP CENTTIMESTEP, SEXP CENTKS, SEXP SOILLAYERS, SEXP SOILDEPTHS, SEXP CWS, SEXP HYDRDIST, SEXP SECS, SEXP KPLN, SEXP LNB0, SEXP LNB1, SEXP LNFUN, SEXP UPPERTEMP, SEXP LOWERTEMP, SEXP JMAX, SEXP JMAXB1, SEXP O2, SEXP GROWTHRESP, SEXP STOMATAWS)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v willowGro\:willowGro.c}
{\xe \v willowGro.c\:willowGro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
SEXP willowGro (SEXP {\i LAT}, SEXP {\i DOY}, SEXP {\i HR}, SEXP {\i SOLAR}, SEXP {\i TEMP}, SEXP {\i RH}, SEXP {\i WINDSPEED}, SEXP {\i PRECIP}, SEXP {\i KD}, SEXP {\i CHILHF}, SEXP {\i NLAYERS}, SEXP {\i IPLANT}, SEXP {\i IRTL}, SEXP {\i SENCOEFS}, SEXP {\i TIMESTEP}, SEXP {\i VECSIZE}, SEXP {\i SPLEAF}, SEXP {\i SPD}, SEXP {\i DBPCOEFS}, SEXP {\i THERMALP}, SEXP {\i TBASE}, SEXP {\i VMAX}, SEXP {\i ALPHA}, SEXP {\i THETA}, SEXP {\i BETA}, SEXP {\i RD}, SEXP {\i CATM}, SEXP {\i B0}, SEXP {\i B1}, SEXP {\i WS}, SEXP {\i SOILCOEFS}, SEXP {\i ILEAFN}, SEXP {\i KLN}, SEXP {\i VMAXB1}, SEXP {\i ALPHAB1}, SEXP {\i MRESP}, SEXP {\i SOILTYPE}, SEXP {\i WSFUN}, SEXP {\i CENTCOEFS}, SEXP {\i CENTTIMESTEP}, SEXP {\i CENTKS}, SEXP {\i SOILLAYERS}, SEXP {\i SOILDEPTHS}, SEXP {\i CWS}, SEXP {\i HYDRDIST}, SEXP {\i SECS}, SEXP {\i KPLN}, SEXP {\i LNB0}, SEXP {\i LNB1}, SEXP {\i LNFUN}, SEXP {\i UPPERTEMP}, SEXP {\i LOWERTEMP}, SEXP {\i JMAX}, SEXP {\i JMAXB1}, SEXP {\i O2}, SEXP {\i GROWTHRESP}, SEXP {\i STOMATAWS})}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
.TH "/home/dlebauer/dev/biocro/src/Auxcropcent.c" 3 "Fri Apr 3 2015" "Version 0.92" "BioCro" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dlebauer/dev/biocro/src/Auxcropcent.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <R\&.h>\fP
.br
\fC#include <Rmath\&.h>\fP
.br
\fC#include <Rinternals\&.h>\fP
.br
\fC#include 'crocent\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBupdatecropcentpools\fP (struct \fBcropcentlayer\fP *CROPCENT)"
.br
.ti -1c
.RI "void \fBBiocroToCrocent\fP (double *stdedbc, double fallrate, double lignin, struct \fBminerals\fP *E, double isotoperatio, int surface, int woody, struct \fBInputToCropcent\fP *INCROCENT)"
.br
.ti -1c
.RI "void \fBUpdateCropcentPoolsFromBioCro\fP (struct \fBcropcentlayer\fP *CROPCENT, struct \fBInputToCropcent\fP *INCROPCENT)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void BiocroToCrocent (double *stdedbc, doublefallrate, doublelignin, struct \fBminerals\fP *E, doubleisotoperatio, intsurface, intwoody, struct \fBInputToCropcent\fP *INCROCENT)"

.PP
.nf
149 {
150   /***************************************************************
151   *   Purpose:
152   *   Purpose of this function is to take the daily output of BioCro
153   *   and create structure InputToCrocent that contains information
154   *   about characteristics of the litter and this structure can be used to
155   *   update Crocent pools
156   *   Note that we are not reducing standing biomass due to photodecomposition
157   *   we are only letting it fall based on fallrate to contribute to 
158   *   appropriate soilpools
159   *  
160   * 
161   *   Arguments
162   *   (1)  *stdedbc - This is a pointe to standing dead biomass\&. We are using
163   *         ponters here because we would like to update it after accouting for
164   *         reduction in fall rate
165   *   (2)  fallrate - This represents fraction of standing deadbiomasss
166   *         that will contribute to soil pools
167   *   (3)   lignin - This represents lignin content of the dead biomass
168   *   (4)   E representes CN,CP,CS, CK- represents nutrient:C ratio for the dead biomass
169   *   (5)   isotopratio - represents ratio of unlabled and labled C in 
170   *          the dead biomass
171   *   (6)   surface = 1 for surface input and 0 for below ground input 
172   *   (7)   woody =0 for non woody material and
173   *        woody =1 for branches
174   *        woody =2 for large wood
175   *        woody =3 for coarse roots
176   * 
177   *   We also need some environmental variables to evaluate photodegradation of
178   *   the standing biomass
179   * **********************************************************/
180       double temp;
181       if(fallrate>1\&.0) 
182       {
183         error("Fall rate is greather than 1\&.0");
184       }
185       
186       temp=(*stdedbc)*fallrate;  // Find how much litter goes to ground
187       (*stdedbc)=(*stdedbc)-temp; // update standing litter
188        
189        temp=temp*40; // unit conversion for Mg biomass/ha  to gram C/m2 for non woody
190       
191       INCROCENT->C\&.totalC =temp;
192       INCROCENT->C\&.unlablTOlabl = isotoperatio;
193       INCROCENT->E\&.CN= E->CN;
194       INCROCENT->E\&.CP= E->CP;
195       INCROCENT->E\&.CS= E->CS;
196       INCROCENT->E\&.CK= E->CK;
197       INCROCENT->lignin=lignin;
198       INCROCENT->surface=surface;
199       INCROCENT->woody=woody;
200       return;                                  
201 }
.fi
.SS "void updatecropcentpools (struct \fBcropcentlayer\fP *CROPCENT)"

.PP
.nf
8 {
9   double delN, delP, delS,delK;
10   double out, in;
11   
12   delN=0\&.0;
13   delP=0\&.0;
14   delS=0\&.0;
15   delK=0\&.0;
16   CROPCENT->ENV\&.newminN=0\&.0;
17   CROPCENT->ENV\&.newminP=0\&.0;
18   CROPCENT->ENV\&.newminS=0\&.0;
19   CROPCENT->ENV\&.newminK=0\&.0;
20   
21   // updating strucc1 flux [only source is self-negative outflow]
22   // step 1: chnage in mineral N of CropCENT layer due to flow from strucc1
23   out=(CROPCENT->strucc1\&.Flux\&.strucc1TOstrucc1\&.C\&.totalC)/(CROPCENT->strucc1\&.Flux\&.strucc1TOstrucc1\&.E\&.CN); // This is always negative
24   in=(CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.C\&.totalC)/(CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.E\&.CN)
25       +(CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.C\&.totalC)/(CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.E\&.CN)
26       +(CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.C\&.totalC)/(CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.E\&.CN); // This is always positive
27   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
28   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
29   CROPCENT->ENV\&.newminN+=delN;
30   // now update CN ratioi snot required as all outflow CE ratio is same as of source pool
31   // finally update C structure of the pool
32   updateCarbonStructure(&CROPCENT->strucc1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOstrucc1\&.C);
33   updateCarbonStructure(&CROPCENT->metabc1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.C);
34   updateMineralStructure(&CROPCENT->metabc1\&.C, &CROPCENT->metabc1\&.E, CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.E);
35   updateCarbonStructure(&CROPCENT->som1c1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.C);
36   updateMineralStructure(&CROPCENT->som1c1\&.C, &CROPCENT->som1c1\&.E, CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.E);
37   updateCarbonStructure(&CROPCENT->som2c1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.C);
38   updateMineralStructure(&CROPCENT->som2c1\&.C, &CROPCENT->som2c1\&.E, CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.C, CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.E);
39 
40   // updating strucc2 flux [ only source is self-negative outflow]
41   out=(CROPCENT->strucc2\&.Flux\&.strucc2TOstrucc2\&.C\&.totalC)/(CROPCENT->strucc2\&.Flux\&.strucc2TOstrucc2\&.E\&.CN); // This is always negative
42   in= (CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.C\&.totalC)/(CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.E\&.CN)
43       +(CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.C\&.totalC)/(CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.E\&.CN); // This is always positive
44   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
45   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
46   CROPCENT->ENV\&.newminN+=delN;
47   // now update CN ratio, which does not change because outflow CE is same as CE of pool\&. Only CE ratio of receiving flux changes
48   // finally update C structure of the pool
49   updateCarbonStructure(&CROPCENT->strucc2\&.C, CROPCENT->strucc2\&.Flux\&.strucc2TOstrucc2\&.C);
50   updateCarbonStructure(&CROPCENT->som1c2\&.C, CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.C);
51   updateMineralStructure(&CROPCENT->som1c2\&.C, &CROPCENT->som1c2\&.E, CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.C, CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.E);
52   updateCarbonStructure(&CROPCENT->som2c2\&.C, CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.C);
53   updateMineralStructure(&CROPCENT->som2c2\&.C, &CROPCENT->som2c2\&.E, CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.C, CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.E);
54   
55   // updating metabc1 flux [source is self -negative outflow and from strucc1]
56   out=(CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.C\&.totalC)/(CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.E\&.CN); 
57   in=(CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.C\&.totalC)/(CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.E\&.CN); 
58   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
59   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
60   CROPCENT->ENV\&.newminN+=delN;
61   updateCarbonStructure(&CROPCENT->metabc1\&.C, CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.C);
62   updateCarbonStructure(&CROPCENT->som1c1\&.C, CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.C);
63   updateMineralStructure(&CROPCENT->som1c1\&.C, &CROPCENT->som1c1\&.E, CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.C, CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.E);
64   
65   // updating metabc2 flux [source is self -negative outflow and from strucc1]
66   out=(CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.C\&.totalC)/(CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.E\&.CN); 
67   in=(CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.C\&.totalC)/(CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.E\&.CN); 
68   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
69   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
70   CROPCENT->ENV\&.newminN+=delN;
71   updateCarbonStructure(&CROPCENT->metabc2\&.C, CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.C);
72   updateCarbonStructure(&CROPCENT->som1c2\&.C, CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.C);
73   updateMineralStructure(&CROPCENT->som1c2\&.C, &CROPCENT->som1c2\&.E, CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.C, CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.E);
74   
75   // updating som1c1 Fluxes
76   out=(CROPCENT->som1c1\&.Flux\&.som1c1TOsom1c1\&.C\&.totalC)/(CROPCENT->som1c1\&.Flux\&.som1c1TOsom1c1\&.E\&.CN); 
77   in=(CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.C\&.totalC)/(CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.E\&.CN); 
78   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
79   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
80   CROPCENT->ENV\&.newminN+=delN;
81   updateCarbonStructure(&CROPCENT->som1c1\&.C, CROPCENT->som1c1\&.Flux\&.som1c1TOsom1c1\&.C);
82   updateCarbonStructure(&CROPCENT->som2c1\&.C, CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.C);
83   updateMineralStructure(&CROPCENT->som2c1\&.C, &CROPCENT->som2c1\&.E, CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.C, CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.E);
84   
85   
86   // updating som2c1 Fluxes
87   out=(CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c1\&.C\&.totalC)/(CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c1\&.E\&.CN); 
88   in=(CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.C\&.totalC)/(CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.E\&.CN)
89     +(CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.C\&.totalC)/(CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.E\&.CN); 
90   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
91   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
92   CROPCENT->ENV\&.newminN+=delN;
93   updateCarbonStructure(&CROPCENT->som2c1\&.C, CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c1\&.C);
94   updateCarbonStructure(&CROPCENT->som1c1\&.C, CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.C);
95   updateMineralStructure(&CROPCENT->som1c1\&.C, &CROPCENT->som1c1\&.E, CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.C, CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.E);
96   updateCarbonStructure(&CROPCENT->som2c2\&.C, CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.C);
97   updateMineralStructure(&CROPCENT->som2c2\&.C, &CROPCENT->som2c2\&.E, CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.C, CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.E);
98   
99   
100   // updating som1c2 Fluxes
101   out=(CROPCENT->som1c2\&.Flux\&.som1c2TOsom1c2\&.C\&.totalC)/(CROPCENT->som1c2\&.Flux\&.som1c2TOsom1c2\&.E\&.CN); 
102   in=(CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.C\&.totalC)/(CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.E\&.CN)
103     +(CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.C\&.totalC)/(CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.E\&.CN)
104     +(CROPCENT->som1c2\&.Flux\&.som1c2TOleachate\&.C\&.totalC)/(CROPCENT->som1c2\&.Flux\&.som1c2TOleachate\&.E\&.CN);
105   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
106   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
107   CROPCENT->ENV\&.newminN+=delN;
108   updateCarbonStructure(&CROPCENT->som1c2\&.C, CROPCENT->som1c2\&.Flux\&.som1c2TOsom1c2\&.C);
109   // remember here we need to modify CN ratio of the som1c2 pool because CN ratio of leachate loss is much larger
110   // This modified ratio can be obtained in th below function
111   updateCEafterleachate(&CROPCENT->som1c2);
112  
113   updateCarbonStructure(&CROPCENT->som2c2\&.C, CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.C);
114   updateMineralStructure(&CROPCENT->som2c2\&.C, &CROPCENT->som2c2\&.E, CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.C, CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.E);
115    
116   updateCarbonStructure(&CROPCENT->som3c\&.C, CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.C);
117   updateMineralStructure(&CROPCENT->som3c\&.C, &CROPCENT->som3c\&.E, CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.C, CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.E);
118   
119   
120   // updating som2c2 Fluxes
121   out=(CROPCENT->som2c2\&.Flux\&.som2c2TOsom2c2\&.C\&.totalC)/(CROPCENT->som2c2\&.Flux\&.som2c2TOsom2c2\&.E\&.CN); 
122   in=(CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.C\&.totalC)/(CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.E\&.CN)
123     +(CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.C\&.totalC)/(CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.E\&.CN); 
124   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
125   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
126   CROPCENT->ENV\&.newminN+=delN;
127   updateCarbonStructure(&CROPCENT->som2c2\&.C, CROPCENT->som2c2\&.Flux\&.som2c2TOsom2c2\&.C);
128   updateCarbonStructure(&CROPCENT->som1c2\&.C, CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.C);
129   updateMineralStructure(&CROPCENT->som1c2\&.C, &CROPCENT->som1c2\&.E, CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.C, CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.E);
130   updateCarbonStructure(&CROPCENT->som2c2\&.C, CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.C);
131   updateMineralStructure(&CROPCENT->som2c2\&.C, &CROPCENT->som2c2\&.E, CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.C, CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.E);
132  
133  // updating som3c Fluxes
134   out=(CROPCENT->som3c\&.Flux\&.som3cTOsom3c\&.C\&.totalC)/(CROPCENT->som3c\&.Flux\&.som3cTOsom3c\&.E\&.CN); 
135   in=(CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.C\&.totalC)/(CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.E\&.CN);
136    
137   delN=out+in; // if this is negative then out > in or mineralization is occurin otherwise immobilization
138   CROPCENT->ENV\&.minN = CROPCENT->ENV\&.minN-delN;
139   CROPCENT->ENV\&.newminN+=delN;
140   updateCarbonStructure(&CROPCENT->som3c\&.C, CROPCENT->som3c\&.Flux\&.som3cTOsom3c\&.C);
141   updateCarbonStructure(&CROPCENT->som1c2\&.C, CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.C);
142   updateMineralStructure(&CROPCENT->som1c2\&.C, &CROPCENT->som1c2\&.E, CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.C, CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.E);
143   
144   CROPCENT->ENV\&.newminN=(-1)*CROPCENT->ENV\&.newminN; // Because negative value represents mineralization and net mineralization is postiive for trace gas calculations
145   return;
146 }
.fi
.SS "void UpdateCropcentPoolsFromBioCro (struct \fBcropcentlayer\fP *CROPCENT, struct \fBInputToCropcent\fP *INCROPCENT)"

.SH "Author"
.PP 
Generated automatically by Doxygen for BioCro from the source code\&.

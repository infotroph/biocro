.TH "/home/dlebauer/dev/biocro/src/Assigncropcent.c" 3 "Fri Apr 3 2015" "Version 0.92" "BioCro" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dlebauer/dev/biocro/src/Assigncropcent.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include <R\&.h>\fP
.br
\fC#include <Rmath\&.h>\fP
.br
\fC#include <Rinternals\&.h>\fP
.br
\fC#include 'crocent\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBassignPools\fP (struct \fBcropcentlayer\fP *CROPCENT, double *sompoolsfromR)"
.br
.ti -1c
.RI "void \fBassignParms\fP (struct \fBcropcentlayer\fP *CROPCENT, double *somassignparmsfromR)"
.br
.ti -1c
.RI "void \fBCROPCENTTimescaling\fP (struct \fBcropcentlayer\fP *CROPCENT)"
.br
.ti -1c
.RI "void \fBassignENV\fP (struct \fBcropcentlayer\fP *CROPCENT, double *getsoiltexturefromR, double *getcropcentstatevarfromR, double *getbiocrotocropcentparmsfromR, double *geterosionparmsfromR, double *getc13parmsfromR, double *getleachingparmsfromR, double *getsymbnfixationparmsfromR)"
.br
.ti -1c
.RI "void \fBGetCropCentStateVar\fP (struct \fBcropcentEnvironment\fP *ENV, double *getcropcentstatevarfromR)"
.br
.ti -1c
.RI "void \fBassignFluxRatios\fP (struct \fBcropcentlayer\fP *CROPCENT)"
.br
.ti -1c
.RI "void \fBGetInFlowCERatio\fP (struct \fBflowrestriction\fP *INFLOWRESTRICT, struct \fBminerals\fP *output, struct \fBcropcentEnvironment\fP *ENV)"
.br
.ti -1c
.RI "void \fBreplaceMineralStruct\fP (struct \fBminerals\fP *FROM, struct \fBminerals\fP *TO)"
.br
.ti -1c
.RI "void \fBGetSymbNFixationParms\fP (struct \fBSymbNFixationParms\fP *temp, double *getsymbnfixationparmsfromR)"
.br
.ti -1c
.RI "void \fBGetLeachingParms\fP (struct \fBOrgLeachParms\fP *temp, double *getleachingparmsfromR)"
.br
.ti -1c
.RI "void \fBGetC13Parms\fP (struct \fBC13Parms\fP *temp, double *getc13parmsfromR)"
.br
.ti -1c
.RI "void \fBGetErosionParms\fP (struct \fBErosionParms\fP *temp, double *geterosionparmsfromR)"
.br
.ti -1c
.RI "void \fBGetSoilTexture\fP (struct \fBSoilTexture\fP *temp, double *getsoiltexturefromR)"
.br
.ti -1c
.RI "void \fBGetBioCroToCropcentParms\fP (struct \fBBioCroToCropcentParms\fP *temp, double *getbiocrotocropcentparmsfromR)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void assignENV (struct \fBcropcentlayer\fP *CROPCENT, double *getsoiltexturefromR, double *getcropcentstatevarfromR, double *getbiocrotocropcentparmsfromR, double *geterosionparmsfromR, double *getc13parmsfromR, double *getleachingparmsfromR, double *getsymbnfixationparmsfromR)"

.PP
.nf
436                                                                                                                                                               {
437  
438   GetBioCroToCropcentParms(&CROPCENT->BcroTOCentParms,getbiocrotocropcentparmsfromR);
439   GetSymbNFixationParms(&CROPCENT->ENV\&.NFIX,getsymbnfixationparmsfromR);
440   GetLeachingParms(&CROPCENT->ENV\&.ORGLECH,getleachingparmsfromR);
441   GetC13Parms(&CROPCENT->ENV\&.C13,getc13parmsfromR);
442   GetErosionParms(&CROPCENT->ENV\&.EROSION,geterosionparmsfromR);
443   GetSoilTexture(&CROPCENT->ENV\&.SOILTEX,getsoiltexturefromR);
444   GetCropCentStateVar(&CROPCENT->ENV,getcropcentstatevarfromR);
445   return;
446 }
.fi
.SS "void assignFluxRatios (struct \fBcropcentlayer\fP *CROPCENT)"

.PP
.nf
472 {
473   struct minerals *tmp;
474   // Updating unlabl and labl C ratio in each flux component based on  source
475   CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->strucc1\&.C\&.unlablTOlabl;
476   CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.C\&.unlablTOlabl = CROPCENT->strucc1\&.C\&.unlablTOlabl;
477   CROPCENT->strucc1\&.Flux\&.strucc1TOstrucc1\&.C\&.unlablTOlabl = CROPCENT->strucc1\&.C\&.unlablTOlabl;
478   CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.C\&.unlablTOlabl = CROPCENT->strucc1\&.C\&.unlablTOlabl;
479   replaceMineralStruct(&CROPCENT->strucc1\&.E,&CROPCENT->strucc1\&.Flux\&.strucc1TOstrucc1\&.E);
480   
481   CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.C\&.unlablTOlabl = CROPCENT->strucc2\&.C\&.unlablTOlabl;
482   CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.C\&.unlablTOlabl = CROPCENT->strucc2\&.C\&.unlablTOlabl;
483   CROPCENT->strucc2\&.Flux\&.strucc2TOstrucc2\&.C\&.unlablTOlabl = CROPCENT->strucc2\&.C\&.unlablTOlabl;
484    replaceMineralStruct(&CROPCENT->strucc2\&.E,&CROPCENT->strucc2\&.Flux\&.strucc2TOstrucc2\&.E);
485    
486 //    replaceMineralStruct(&CROPCENT->metabc1\&.E,&CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.E); this is repeated
487 //    replaceMineralStruct(&CROPCENT->metabc2\&.E,&CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.E); this is repeated
488     
489   CROPCENT->wood1\&.Flux\&.wood1TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->wood1\&.C\&.unlablTOlabl;
490   CROPCENT->wood1\&.Flux\&.wood1TOsom2c1\&.C\&.unlablTOlabl = CROPCENT->wood1\&.C\&.unlablTOlabl;
491   CROPCENT->wood1\&.Flux\&.wood1TOwood1\&.C\&.unlablTOlabl = CROPCENT->wood1\&.C\&.unlablTOlabl;
492   replaceMineralStruct(&CROPCENT->wood1\&.E,&CROPCENT->wood1\&.Flux\&.wood1TOwood1\&.E);
493   
494   CROPCENT->wood2\&.Flux\&.wood2TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->wood2\&.C\&.unlablTOlabl;
495   CROPCENT->wood2\&.Flux\&.wood2TOsom2c1\&.C\&.unlablTOlabl = CROPCENT->wood2\&.C\&.unlablTOlabl;
496   CROPCENT->wood2\&.Flux\&.wood2TOwood2\&.C\&.unlablTOlabl = CROPCENT->wood2\&.C\&.unlablTOlabl;
497   replaceMineralStruct(&CROPCENT->wood2\&.E,&CROPCENT->wood2\&.Flux\&.wood2TOwood2\&.E);
498 
499   
500   CROPCENT->wood3\&.Flux\&.wood3TOsom1c2\&.C\&.unlablTOlabl = CROPCENT->wood3\&.C\&.unlablTOlabl;
501   CROPCENT->wood3\&.Flux\&.wood3TOsom2c2\&.C\&.unlablTOlabl = CROPCENT->wood3\&.C\&.unlablTOlabl;
502   CROPCENT->wood3\&.Flux\&.wood3TOwood3\&.C\&.unlablTOlabl = CROPCENT->wood3\&.C\&.unlablTOlabl;
503   replaceMineralStruct(&CROPCENT->wood3\&.E,&CROPCENT->wood3\&.Flux\&.wood3TOwood3\&.E);
504   
505   CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->metabc1\&.C\&.unlablTOlabl;
506   CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.C\&.unlablTOlabl = CROPCENT->metabc1\&.C\&.unlablTOlabl;
507   replaceMineralStruct(&CROPCENT->metabc1\&.E,&CROPCENT->metabc1\&.Flux\&.metabc1TOmetabc1\&.E);
508   
509   
510   CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.C\&.unlablTOlabl = CROPCENT->metabc2\&.C\&.unlablTOlabl;
511   CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.C\&.unlablTOlabl = CROPCENT->metabc2\&.C\&.unlablTOlabl;
512   replaceMineralStruct(&CROPCENT->metabc2\&.E,&CROPCENT->metabc2\&.Flux\&.metabc2TOmetabc2\&.E);
513   
514   CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.C\&.unlablTOlabl = CROPCENT->som1c1\&.C\&.unlablTOlabl;
515   CROPCENT->som1c1\&.Flux\&.som1c1TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->som1c1\&.C\&.unlablTOlabl;
516   replaceMineralStruct(&CROPCENT->som1c1\&.E,&CROPCENT->som1c1\&.Flux\&.som1c1TOsom1c1\&.E);
517   
518   CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.C\&.unlablTOlabl = CROPCENT->som2c1\&.C\&.unlablTOlabl;
519   CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.C\&.unlablTOlabl = CROPCENT->som2c1\&.C\&.unlablTOlabl; // due to mixing
520   CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c1\&.C\&.unlablTOlabl = CROPCENT->som2c1\&.C\&.unlablTOlabl;
521   replaceMineralStruct(&CROPCENT->som2c1\&.E,&CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c1\&.E);
522   
523   CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.C\&.unlablTOlabl = CROPCENT->som1c2\&.C\&.unlablTOlabl;
524   CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.C\&.unlablTOlabl = CROPCENT->som1c2\&.C\&.unlablTOlabl;
525   CROPCENT->som1c2\&.Flux\&.som1c2TOleachate\&.C\&.unlablTOlabl = CROPCENT->som1c2\&.C\&.unlablTOlabl;
526   CROPCENT->som1c2\&.Flux\&.som1c2TOsom1c2\&.C\&.unlablTOlabl = CROPCENT->som1c2\&.C\&.unlablTOlabl;
527   replaceMineralStruct(&CROPCENT->som1c2\&.E,&CROPCENT->som1c2\&.Flux\&.som1c2TOsom1c2\&.E);
528    
529   CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.C\&.unlablTOlabl = CROPCENT->som2c2\&.C\&.unlablTOlabl;
530   CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.C\&.unlablTOlabl = CROPCENT->som2c2\&.C\&.unlablTOlabl;
531   CROPCENT->som2c2\&.Flux\&.som2c2TOsom2c2\&.C\&.unlablTOlabl = CROPCENT->som2c2\&.C\&.unlablTOlabl;
532   replaceMineralStruct(&CROPCENT->som2c2\&.E,&CROPCENT->som2c2\&.Flux\&.som2c2TOsom2c2\&.E);
533   
534   CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.C\&.unlablTOlabl = CROPCENT->som3c\&.C\&.unlablTOlabl;
535   CROPCENT->som3c\&.Flux\&.som3cTOsom3c\&.C\&.unlablTOlabl = CROPCENT->som3c\&.C\&.unlablTOlabl;
536   replaceMineralStruct(&CROPCENT->som3c\&.E,&CROPCENT->som3c\&.Flux\&.som3cTOsom3c\&.E);
537   
538   // updating CE ratio of each Flux based on Environmental condition and Restriction criteria
539   
540   // Cflow from strucc1 to metabc1 due to photodegradation
541   tmp=&CROPCENT->strucc1\&.E;
542   replaceMineralStruct(tmp,&CROPCENT->strucc1\&.Flux\&.strucc1TOmetabc1\&.E);
543   
544   
545   // Lets focus on all the fluxes to pool som1c1
546   GetInFlowCERatio(&CROPCENT->som1c1\&.INFLOW, tmp, &CROPCENT->ENV);
547   replaceMineralStruct(tmp,&CROPCENT->strucc1\&.Flux\&.strucc1TOsom1c1\&.E);
548   replaceMineralStruct(tmp,&CROPCENT->wood1\&.Flux\&.wood1TOsom1c1\&.E);
549   replaceMineralStruct(tmp,&CROPCENT->wood2\&.Flux\&.wood2TOsom1c1\&.E);
550   replaceMineralStruct(tmp,&CROPCENT->metabc1\&.Flux\&.metabc1TOsom1c1\&.E);
551   replaceMineralStruct(tmp,&CROPCENT->som2c1\&.Flux\&.som2c1TOsom1c1\&.E);
552    
553   // Get CE ratio of inflow to som2c1 pool and update all the fluxes E 
554   GetInFlowCERatio(&CROPCENT->som2c1\&.INFLOW, tmp, &CROPCENT->ENV);
555   replaceMineralStruct(tmp,&CROPCENT->strucc1\&.Flux\&.strucc1TOsom2c1\&.E);
556   replaceMineralStruct(tmp,&CROPCENT->wood1\&.Flux\&.wood1TOsom2c1\&.E);
557   replaceMineralStruct(tmp,&CROPCENT->wood2\&.Flux\&.wood2TOsom2c1\&.E);
558   replaceMineralStruct(tmp,&CROPCENT->som1c1\&.Flux\&.som1c1TOsom2c1\&.E);
559   
560   // Get CE ratio of inflow to som1c2 and update all the fluxes
561   GetInFlowCERatio(&CROPCENT->som1c2\&.INFLOW, tmp, &CROPCENT->ENV);
562   replaceMineralStruct(tmp,&CROPCENT->strucc2\&.Flux\&.strucc2TOsom1c2\&.E);
563   replaceMineralStruct(tmp,&CROPCENT->wood3\&.Flux\&.wood3TOsom1c2\&.E);
564   replaceMineralStruct(tmp,&CROPCENT->som2c2\&.Flux\&.som2c2TOsom1c2\&.E);
565   replaceMineralStruct(tmp,&CROPCENT->som3c\&.Flux\&.som3cTOsom1c2\&.E);
566   replaceMineralStruct(tmp,&CROPCENT->metabc2\&.Flux\&.metabc2TOsom1c2\&.E);
567   
568   // CE ratio of inflow to som2c2 and update all the fluxes
569   GetInFlowCERatio(&CROPCENT->som2c2\&.INFLOW, tmp, &CROPCENT->ENV);
570   replaceMineralStruct(tmp,&CROPCENT->strucc2\&.Flux\&.strucc2TOsom2c2\&.E);
571   replaceMineralStruct(tmp,&CROPCENT->wood3\&.Flux\&.wood3TOsom2c2\&.E);
572   replaceMineralStruct(tmp,&CROPCENT->som2c1\&.Flux\&.som2c1TOsom2c2\&.E); // due to mixing
573   replaceMineralStruct(tmp,&CROPCENT->som1c2\&.Flux\&.som1c2TOsom2c2\&.E); 
574   
575   // CE ratio of inflow to som3c and update all the fluxes
576   GetInFlowCERatio(&CROPCENT->som3c\&.INFLOW, tmp, &CROPCENT->ENV);
577   replaceMineralStruct(tmp,&CROPCENT->som2c2\&.Flux\&.som2c2TOsom3c\&.E); 
578   replaceMineralStruct(tmp,&CROPCENT->som1c2\&.Flux\&.som1c2TOsom3c\&.E); 
579 
580   return;
581 }
.fi
.SS "void assignParms (struct \fBcropcentlayer\fP *CROPCENT, double *somassignparmsfromR)"

.PP
.nf
90 {//Rprintf("%f, %f, %f \n", *somassignparmsfromR,*(somassignparmsfromR+1),*(somassignparmsfromR+2));
91   CROPCENT->strucc1\&.parms\&.k=3\&.9;
92   CROPCENT->strucc1\&.parms\&.timestep=1440\&.0;
93   CROPCENT->strucc1\&.parms\&.strmx=5000\&.0;
94   CROPCENT->strucc1\&.parms\&.pligst=3\&.0;
95   CROPCENT->strucc1\&.parms\&.bioabsorp=100\&.0;
96   CROPCENT->strucc1\&.parms\&.rsplig=0\&.3;
97   CROPCENT->strucc1\&.parms\&.ps1co2=0\&.45;
98   CROPCENT->strucc1\&.parms\&.pmetabco2=0\&.48;
99   CROPCENT->strucc1\&.parms\&.maxphoto=0\&.0;
100   CROPCENT->strucc1\&.TEff\&.teff1=15\&.4;
101   CROPCENT->strucc1\&.TEff\&.teff2=11\&.75;
102   CROPCENT->strucc1\&.TEff\&.teff3=29\&.7;
103   CROPCENT->strucc1\&.TEff\&.teff4=0\&.031;
104   CROPCENT->strucc1\&.SWEFF\&.a=1\&.0;
105   CROPCENT->strucc1\&.SWEFF\&.b=1\&.0;
106   CROPCENT->strucc1\&.SWEFF\&.c=30\&.0;
107   CROPCENT->strucc1\&.SWEFF\&.d=-9\&.0;
108   CROPCENT->strucc1\&.PHEFF\&.a=4\&.0;
109   CROPCENT->strucc1\&.PHEFF\&.b=0\&.5;
110   CROPCENT->strucc1\&.PHEFF\&.c=1\&.1;
111   CROPCENT->strucc1\&.PHEFF\&.d=0\&.7;
112  
113 
114   
115   
116   CROPCENT->strucc2\&.parms\&.k=4\&.9;
117   CROPCENT->strucc2\&.parms\&.timestep=1440\&.0;
118   CROPCENT->strucc2\&.parms\&.strmx=5000\&.0;
119   CROPCENT->strucc2\&.parms\&.pligst=3\&.0;
120   CROPCENT->strucc2\&.parms\&.rsplig=0\&.3;
121   CROPCENT->strucc2\&.parms\&.ps1co2=0\&.55;
122   CROPCENT->strucc2\&.TEff\&.teff1=15\&.4;
123   CROPCENT->strucc2\&.TEff\&.teff2=11\&.75;
124   CROPCENT->strucc2\&.TEff\&.teff3=29\&.7;
125   CROPCENT->strucc2\&.TEff\&.teff4=0\&.031;
126   CROPCENT->strucc2\&.SWEFF\&.a=1\&.0;
127   CROPCENT->strucc2\&.SWEFF\&.b=1\&.0;
128   CROPCENT->strucc2\&.SWEFF\&.c=30\&.0;
129   CROPCENT->strucc2\&.SWEFF\&.d=9\&.0;
130   CROPCENT->strucc2\&.PHEFF\&.a=4\&.0;
131   CROPCENT->strucc2\&.PHEFF\&.b=0\&.5;
132   CROPCENT->strucc2\&.PHEFF\&.c=1\&.1;
133   CROPCENT->strucc2\&.PHEFF\&.d=0\&.7;
134   CROPCENT->strucc2\&.ANEREFF\&.ANEREF1=1\&.5;
135   CROPCENT->strucc2\&.ANEREFF\&.ANEREF2=3\&.0;
136   CROPCENT->strucc2\&.ANEREFF\&.ANEREF3=0\&.3;
137   
138   
139   CROPCENT->metabc1\&.parms\&.k=14\&.8;
140   CROPCENT->metabc1\&.parms\&.timestep=1440\&.0;
141   CROPCENT->metabc1\&.parms\&.pmco2=0\&.55;
142   CROPCENT->metabc1\&.parms\&.a=1\&.0;
143   CROPCENT->metabc1\&.parms\&.b=0\&.2;
144   CROPCENT->metabc1\&.parms\&.x1=0\&.0;
145   CROPCENT->metabc1\&.parms\&.x2=30000\&.0;
146   CROPCENT->metabc1\&.TEff\&.teff1=15\&.4;
147   CROPCENT->metabc1\&.TEff\&.teff2=11\&.75;
148   CROPCENT->metabc1\&.TEff\&.teff3=29\&.7;
149   CROPCENT->metabc1\&.TEff\&.teff4=0\&.031;
150   CROPCENT->metabc1\&.SWEFF\&.a=1\&.0;
151   CROPCENT->metabc1\&.SWEFF\&.b=1\&.0;
152   CROPCENT->metabc1\&.SWEFF\&.c=30\&.0;
153   CROPCENT->metabc1\&.SWEFF\&.d=-9\&.0;
154   CROPCENT->metabc1\&.PHEFF\&.a=4\&.8;
155   CROPCENT->metabc1\&.PHEFF\&.b=0\&.5;
156   CROPCENT->metabc1\&.PHEFF\&.c=1\&.14;
157   CROPCENT->metabc1\&.PHEFF\&.d=0\&.7;
158   
159   
160   CROPCENT->metabc2\&.parms\&.k=18\&.5;
161   CROPCENT->metabc2\&.parms\&.timestep=1440\&.0;
162   CROPCENT->metabc2\&.parms\&.pmco2=0\&.55;
163   CROPCENT->metabc2\&.TEff\&.teff1=15\&.4;
164   CROPCENT->metabc2\&.TEff\&.teff2=11\&.75;
165   CROPCENT->metabc2\&.TEff\&.teff3=29\&.7;
166   CROPCENT->metabc2\&.TEff\&.teff4=0\&.031;
167   CROPCENT->metabc2\&.SWEFF\&.a=1\&.0;
168   CROPCENT->metabc2\&.SWEFF\&.b=1\&.0;
169   CROPCENT->metabc2\&.SWEFF\&.c=30\&.0;
170   CROPCENT->metabc2\&.SWEFF\&.d=9\&.0;
171   CROPCENT->metabc2\&.PHEFF\&.a=4\&.8;
172   CROPCENT->metabc2\&.PHEFF\&.b=0\&.5;
173   CROPCENT->metabc2\&.PHEFF\&.c=1\&.14;
174   CROPCENT->metabc2\&.PHEFF\&.d=0\&.7;
175   CROPCENT->metabc2\&.ANEREFF\&.ANEREF1=1\&.5;
176   CROPCENT->metabc2\&.ANEREFF\&.ANEREF2=3\&.0;
177   CROPCENT->metabc2\&.ANEREFF\&.ANEREF3=0\&.3;
178   
179   CROPCENT->wood1\&.parms\&.k=3\&.9;
180   CROPCENT->wood1\&.parms\&.timestep=1440\&.0;
181   CROPCENT->wood1\&.parms\&.pligst=3\&.0;
182   CROPCENT->wood1\&.parms\&.rsplig=0\&.3;
183   CROPCENT->wood1\&.parms\&.ps1co2=0\&.45;
184   CROPCENT->wood1\&.TEff\&.teff1=15\&.4;
185   CROPCENT->wood1\&.TEff\&.teff2=11\&.75;
186   CROPCENT->wood1\&.TEff\&.teff3=29\&.7;
187   CROPCENT->wood1\&.TEff\&.teff4=0\&.031;
188   CROPCENT->wood1\&.SWEFF\&.a=1\&.0;
189   CROPCENT->wood1\&.SWEFF\&.b=1\&.0;
190   CROPCENT->wood1\&.SWEFF\&.c=30\&.0;
191   CROPCENT->wood1\&.SWEFF\&.d=9\&.0;
192   CROPCENT->wood1\&.PHEFF\&.a=4\&.0;
193   CROPCENT->wood1\&.PHEFF\&.b=0\&.5;
194   CROPCENT->wood1\&.PHEFF\&.c=1\&.1;
195   CROPCENT->wood1\&.PHEFF\&.d=0\&.7;
196   
197   
198   CROPCENT->wood2\&.parms\&.k=3\&.9;
199   CROPCENT->wood2\&.parms\&.timestep=1440\&.0;
200   CROPCENT->wood2\&.parms\&.pligst=3\&.0;
201   CROPCENT->wood2\&.parms\&.rsplig=0\&.3;
202   CROPCENT->wood2\&.parms\&.ps1co2=0\&.45;
203   CROPCENT->wood2\&.TEff\&.teff1=15\&.4;
204   CROPCENT->wood2\&.TEff\&.teff2=11\&.75;
205   CROPCENT->wood2\&.TEff\&.teff3=29\&.7;
206   CROPCENT->wood2\&.TEff\&.teff4=0\&.031;
207   CROPCENT->wood2\&.SWEFF\&.a=1\&.0;
208   CROPCENT->wood2\&.SWEFF\&.b=1\&.0;
209   CROPCENT->wood2\&.SWEFF\&.c=30\&.0;
210   CROPCENT->wood2\&.SWEFF\&.d=-9\&.0;
211   CROPCENT->wood2\&.PHEFF\&.a=4\&.0;
212   CROPCENT->wood2\&.PHEFF\&.b=0\&.5;
213   CROPCENT->wood2\&.PHEFF\&.c=1\&.1;
214   CROPCENT->wood2\&.PHEFF\&.d=0\&.7;
215   
216   
217   CROPCENT->wood3\&.parms\&.k=4\&.9;
218   CROPCENT->wood3\&.parms\&.timestep=1440\&.0;
219   CROPCENT->wood3\&.parms\&.pligst=3\&.0;
220   CROPCENT->wood3\&.parms\&.rsplig=0\&.3;
221   CROPCENT->wood3\&.parms\&.ps1co2=0\&.55;
222   CROPCENT->wood3\&.TEff\&.teff1=15\&.4;
223   CROPCENT->wood3\&.TEff\&.teff2=11\&.75;
224   CROPCENT->wood3\&.TEff\&.teff3=29\&.7;
225   CROPCENT->wood3\&.TEff\&.teff4=0\&.031;
226   CROPCENT->wood3\&.SWEFF\&.a=1\&.0;
227   CROPCENT->wood3\&.SWEFF\&.b=1\&.0;
228   CROPCENT->wood3\&.SWEFF\&.c=30\&.0;
229   CROPCENT->wood3\&.SWEFF\&.d=-9\&.0;
230   CROPCENT->wood3\&.PHEFF\&.a=4\&.0;
231   CROPCENT->wood3\&.PHEFF\&.b=0\&.5;
232   CROPCENT->wood3\&.PHEFF\&.c=1\&.1;
233   CROPCENT->wood3\&.PHEFF\&.d=0\&.7;
234   CROPCENT->wood3\&.ANEREFF\&.ANEREF1=1\&.5;
235   CROPCENT->wood3\&.ANEREFF\&.ANEREF2=3\&.0;
236   CROPCENT->wood3\&.ANEREFF\&.ANEREF3=0\&.3;
237   
238   
239   CROPCENT->som1c1\&.parms\&.k=6\&.0;
240   CROPCENT->som1c1\&.parms\&.timestep=1440\&.0;
241   CROPCENT->som1c1\&.parms\&.p1co2a=0\&.6;
242   CROPCENT->som1c1\&.parms\&.p1co2b=0\&.0;
243   CROPCENT->som1c1\&.parms\&.a=1\&.0;
244   CROPCENT->som1c1\&.parms\&.b=5\&.0;
245   CROPCENT->som1c1\&.parms\&.x1=0\&.0;
246   CROPCENT->som1c1\&.parms\&.x2=30000\&.0;
247   CROPCENT->som1c1\&.TEff\&.teff1=15\&.4;
248   CROPCENT->som1c1\&.TEff\&.teff2=11\&.75;
249   CROPCENT->som1c1\&.TEff\&.teff3=29\&.7;
250   CROPCENT->som1c1\&.TEff\&.teff4=0\&.031;
251   CROPCENT->som1c1\&.SWEFF\&.a=1\&.0;
252   CROPCENT->som1c1\&.SWEFF\&.b=1\&.0;
253   CROPCENT->som1c1\&.SWEFF\&.c=30\&.0;
254   CROPCENT->som1c1\&.SWEFF\&.d=-9\&.0;
255   CROPCENT->som1c1\&.PHEFF\&.a=4\&.0;
256   CROPCENT->som1c1\&.PHEFF\&.b=0\&.5;
257   CROPCENT->som1c1\&.PHEFF\&.c=1\&.1;
258   CROPCENT->som1c1\&.PHEFF\&.d=0\&.7;
259   CROPCENT->som1c1\&.INFLOW\&.maxCN= 15\&.0;
260   CROPCENT->som1c1\&.INFLOW\&.minCN=  6\&.0; 
261   CROPCENT->som1c1\&.INFLOW\&.minN=  1\&.0; 
262   CROPCENT->som1c1\&.INFLOW\&.maxCP=  150\&.0; 
263   CROPCENT->som1c1\&.INFLOW\&.minCP=  30\&.0; 
264   CROPCENT->som1c1\&.INFLOW\&.minP=  2\&.0; 
265   CROPCENT->som1c1\&.INFLOW\&.maxCS=  200\&.0; 
266   CROPCENT->som1c1\&.INFLOW\&.minCS=  50\&.0; 
267   CROPCENT->som1c1\&.INFLOW\&.minS=  2\&.0; 
268   CROPCENT->som1c1\&.INFLOW\&.maxCK=  0\&.0; 
269   CROPCENT->som1c1\&.INFLOW\&.minCK=  0\&.0; 
270   CROPCENT->som1c1\&.INFLOW\&.minK=  0\&.0; 
271   
272 
273   
274   CROPCENT->som2c1\&.parms\&.k=0\&.2;
275   CROPCENT->som2c1\&.parms\&.timestep=1440\&.0;
276   CROPCENT->som2c1\&.parms\&.p2co2=0\&.55;
277   CROPCENT->som2c1\&.parms\&.a=1\&.0;
278   CROPCENT->som2c1\&.parms\&.b=5\&.0;
279   CROPCENT->som2c1\&.parms\&.x1=0\&.0;
280   CROPCENT->som2c1\&.parms\&.x2=30000\&.0;
281   CROPCENT->som2c1\&.parms\&.mix=0\&.5;
282   CROPCENT->som2c1\&.TEff\&.teff1=15\&.4;
283   CROPCENT->som2c1\&.TEff\&.teff2=11\&.75;
284   CROPCENT->som2c1\&.TEff\&.teff3=29\&.7;
285   CROPCENT->som2c1\&.TEff\&.teff4=0\&.031;
286   CROPCENT->som2c1\&.SWEFF\&.a=1\&.0;
287   CROPCENT->som2c1\&.SWEFF\&.b=1\&.0;
288   CROPCENT->som2c1\&.SWEFF\&.c=30\&.0;
289   CROPCENT->som2c1\&.SWEFF\&.d=-9\&.0;
290   CROPCENT->som2c1\&.PHEFF\&.a=4\&.0;
291   CROPCENT->som2c1\&.PHEFF\&.b=0\&.5;
292   CROPCENT->som2c1\&.PHEFF\&.c=1\&.1;
293   CROPCENT->som2c1\&.PHEFF\&.d=0\&.7;
294   CROPCENT->som2c1\&.INFLOW \&.maxCN= 20\&.0;
295   CROPCENT->som2c1\&.INFLOW \&.minCN=  12\&.0;
296   CROPCENT->som2c1\&.INFLOW \&.minN=  1\&.0;
297   CROPCENT->som2c1\&.INFLOW \&.maxCP=  300\&.0;
298   CROPCENT->som2c1\&.INFLOW \&.minCP=  100\&.0;
299   CROPCENT->som2c1\&.INFLOW \&.minP=  2\&.0;
300   CROPCENT->som2c1\&.INFLOW \&.maxCS=  400\&.0; 
301   CROPCENT->som2c1\&.INFLOW \&.minCS=  100\&.0; 
302   CROPCENT->som2c1\&.INFLOW \&.minS=  2\&.0; 
303   CROPCENT->som2c1\&.INFLOW \&.maxCK=  0\&.0; 
304   CROPCENT->som2c1\&.INFLOW \&.minCK=  0\&.0; 
305   CROPCENT->som2c1\&.INFLOW \&.minK=  0\&.0; 
306   
307   
308   
309  
310   
311   CROPCENT->som1c2\&.parms\&.k=7\&.3;
312   CROPCENT->som1c2\&.parms\&.timestep=1440\&.0;
313   CROPCENT->som1c2\&.parms\&.peftxa=0\&.25;
314   CROPCENT->som1c2\&.parms\&.peftxb=0\&.75;
315   CROPCENT->som1c2\&.parms\&.p1co2a=0\&.17;
316   CROPCENT->som1c2\&.parms\&.p1co2b=0\&.68;
317   CROPCENT->som1c2\&.parms\&.ps1s3[0]=0\&.003;
318   CROPCENT->som1c2\&.parms\&.ps1s3[1]=0\&.032;
319   CROPCENT->som1c2\&.parms\&.animpt=5\&.0;
320   CROPCENT->som1c2\&.TEff\&.teff1=15\&.4;
321   CROPCENT->som1c2\&.TEff\&.teff2=11\&.75;
322   CROPCENT->som1c2\&.TEff\&.teff3=29\&.7;
323   CROPCENT->som1c2\&.TEff\&.teff4=0\&.031;
324   CROPCENT->som1c2\&.SWEFF\&.a=1\&.0;
325   CROPCENT->som1c2\&.SWEFF\&.b=1\&.0;
326   CROPCENT->som1c2\&.SWEFF\&.c=30\&.0;
327   CROPCENT->som1c2\&.SWEFF\&.d=-9\&.0;
328   CROPCENT->som1c2\&.PHEFF\&.a=4\&.0;
329   CROPCENT->som1c2\&.PHEFF\&.b=0\&.5;
330   CROPCENT->som1c2\&.PHEFF\&.c=1\&.1;
331   CROPCENT->som1c2\&.PHEFF\&.d=0\&.7;
332   CROPCENT->som1c2\&.ANEREFF\&.ANEREF1=1\&.5;
333   CROPCENT->som1c2\&.ANEREFF\&.ANEREF2=3\&.0;
334   CROPCENT->som1c2\&.ANEREFF\&.ANEREF3=0\&.3;
335   CROPCENT->som1c2\&.INFLOW \&.maxCN= 14\&.0;
336   CROPCENT->som1c2\&.INFLOW \&.minCN=  3\&.0; 
337   CROPCENT->som1c2\&.INFLOW \&.minN=  2\&.0; 
338   CROPCENT->som1c2\&.INFLOW \&.maxCP=  150\&.0; 
339   CROPCENT->som1c2\&.INFLOW \&.minCP=  30\&.0; 
340   CROPCENT->som1c2\&.INFLOW \&.minP=  2\&.0; 
341   CROPCENT->som1c2\&.INFLOW \&.maxCS=  200\&.0; 
342   CROPCENT->som1c2\&.INFLOW \&.minCS=  50\&.0; 
343   CROPCENT->som1c2\&.INFLOW \&.minS=  2\&.0; 
344   CROPCENT->som1c2\&.INFLOW \&.maxCK=  0\&.0; 
345   CROPCENT->som1c2\&.INFLOW \&.minCK=  0\&.0; 
346   CROPCENT->som1c2\&.INFLOW \&.minK=  0\&.0; 
347   
348   
349    
350   CROPCENT->som2c2\&.parms\&.k=0\&.25;
351   CROPCENT->som2c2\&.parms\&.timestep=1440\&.0;
352   CROPCENT->som2c2\&.parms\&.p2co2=0\&.55;
353   CROPCENT->som2c2\&.parms\&.ps2s3[0]=0\&.003;
354   CROPCENT->som2c2\&.parms\&.ps2s3[1]=0\&.009;
355   CROPCENT->som2c2\&.parms\&.animpt=5\&.0;
356   CROPCENT->som2c2\&.TEff\&.teff1=15\&.4;
357   CROPCENT->som2c2\&.TEff\&.teff2=11\&.75;
358   CROPCENT->som2c2\&.TEff\&.teff3=29\&.7;
359   CROPCENT->som2c2\&.TEff\&.teff4=\&.031;
360   CROPCENT->som2c2\&.SWEFF\&.a=1\&.0;
361   CROPCENT->som2c2\&.SWEFF\&.b=1\&.0;
362   CROPCENT->som2c2\&.SWEFF\&.c=30\&.0;
363   CROPCENT->som2c2\&.SWEFF\&.d=-9\&.0;
364   CROPCENT->som2c2\&.PHEFF\&.a=4\&.0;
365   CROPCENT->som2c2\&.PHEFF\&.b=0\&.5;
366   CROPCENT->som2c2\&.PHEFF\&.c=1\&.1;
367   CROPCENT->som2c2\&.PHEFF\&.d=0\&.7;
368   CROPCENT->som2c2\&.ANEREFF\&.ANEREF1=1\&.5;
369   CROPCENT->som2c2\&.ANEREFF\&.ANEREF2=3\&.0;
370   CROPCENT->som2c2\&.ANEREFF\&.ANEREF3=0\&.3;
371   CROPCENT->som2c2\&.INFLOW \&.maxCN= 20\&.0;
372   CROPCENT->som2c2\&.INFLOW \&.minCN=  12\&.0; 
373   CROPCENT->som2c2\&.INFLOW \&.minN=  2\&.0; 
374   CROPCENT->som2c2\&.INFLOW \&.maxCP=  400\&.0; 
375   CROPCENT->som2c2\&.INFLOW \&.minCP=  100\&.0; 
376   CROPCENT->som2c2\&.INFLOW \&.minP=  2\&.0; 
377   CROPCENT->som2c2\&.INFLOW \&.maxCS=  400\&.0; 
378   CROPCENT->som2c2\&.INFLOW \&.minCS=  100\&.0; 
379   CROPCENT->som2c2\&.INFLOW \&.minS=  2\&.0; 
380   CROPCENT->som2c2\&.INFLOW \&.maxCK=  0\&.0; 
381   CROPCENT->som2c2\&.INFLOW \&.minCK=  0\&.0; 
382   CROPCENT->som2c2\&.INFLOW \&.minK=  0\&.0; 
383   
384   
385   
386   CROPCENT->som3c\&.parms\&.k=0\&.0025;
387   CROPCENT->som3c\&.parms\&.timestep=1440\&.0;
388   CROPCENT->som3c\&.parms\&.p3co2=0\&.55;
389   CROPCENT->som3c\&.TEff\&.teff1=15\&.4;
390   CROPCENT->som3c\&.TEff\&.teff2=11\&.75;
391   CROPCENT->som3c\&.TEff\&.teff3=29\&.7;
392   CROPCENT->som3c\&.TEff\&.teff4=0\&.031;
393   CROPCENT->som3c\&.SWEFF\&.a=1\&.0;
394   CROPCENT->som3c\&.SWEFF\&.b=1\&.0;
395   CROPCENT->som3c\&.SWEFF\&.c=30\&.0;
396   CROPCENT->som3c\&.SWEFF\&.d=-9\&.0;
397   CROPCENT->som3c\&.PHEFF\&.a=3\&.0;
398   CROPCENT->som3c\&.PHEFF\&.b=0\&.5;
399   CROPCENT->som3c\&.PHEFF\&.c=1\&.10;
400   CROPCENT->som3c\&.PHEFF\&.d=0\&.7;
401   CROPCENT->som3c\&.ANEREFF\&.ANEREF1=1\&.5;
402   CROPCENT->som3c\&.ANEREFF\&.ANEREF2=3\&.0;
403   CROPCENT->som3c\&.ANEREFF\&.ANEREF3=0\&.3;
404   CROPCENT->som3c\&.INFLOW \&.maxCN= 8\&.0;
405   CROPCENT->som3c\&.INFLOW \&.minCN=  6\&.0; 
406   CROPCENT->som3c\&.INFLOW \&.minN=  2\&.0; 
407   CROPCENT->som3c\&.INFLOW \&.maxCP=  200\&.0; 
408   CROPCENT->som3c\&.INFLOW \&.minCP=  50\&.0; 
409   CROPCENT->som3c\&.INFLOW \&.minP=  2\&.0; 
410   CROPCENT->som3c\&.INFLOW \&.maxCS=  200\&.0; 
411   CROPCENT->som3c\&.INFLOW \&.minCS=  50\&.0; 
412   CROPCENT->som3c\&.INFLOW \&.minS=  2\&.0; 
413   CROPCENT->som3c\&.INFLOW \&.maxCK=  0\&.0; 
414   CROPCENT->som3c\&.INFLOW \&.minCK=  0\&.0; 
415   CROPCENT->som3c\&.INFLOW \&.minK=  0\&.0; 
416   return;
417 }
.fi
.SS "void assignPools (struct \fBcropcentlayer\fP *CROPCENT, double *sompoolsfromR)"

.PP
.nf
7 {
8   CROPCENT->strucc1\&.C\&.totalC=*(sompoolsfromR+0);
9   CROPCENT->strucc1\&.C\&.unlablTOlabl=*(sompoolsfromR+1);
10   CROPCENT->strucc1\&.E\&.CN=*(sompoolsfromR+2);
11   CROPCENT->strucc1\&.E\&.CP=*(sompoolsfromR+3);
12   CROPCENT->strucc1\&.E\&.CS=*(sompoolsfromR+4);
13   CROPCENT->strucc1\&.E\&.CK=*(sompoolsfromR+5);
14   CROPCENT->strucc1\&.lignin=*(sompoolsfromR+6);  
15   CROPCENT->strucc2\&.C\&.totalC=*(sompoolsfromR+7);
16   CROPCENT->strucc2\&.C\&.unlablTOlabl=*(sompoolsfromR+8);
17   CROPCENT->strucc2\&.E\&.CN=*(sompoolsfromR+9);
18   CROPCENT->strucc2\&.E\&.CP=*(sompoolsfromR+10);
19   CROPCENT->strucc2\&.E\&.CS=*(sompoolsfromR+11);
20   CROPCENT->strucc2\&.E\&.CK=*(sompoolsfromR+12);
21   CROPCENT->strucc2\&.lignin=*(sompoolsfromR+13);  
22   CROPCENT->metabc1\&.C\&.totalC=*(sompoolsfromR+14);
23   CROPCENT->metabc1\&.C\&.unlablTOlabl=*(sompoolsfromR+15);
24   CROPCENT->metabc1\&.E\&.CN=*(sompoolsfromR+16);
25   CROPCENT->metabc1\&.E\&.CP=*(sompoolsfromR+17);
26   CROPCENT->metabc1\&.E\&.CS=*(sompoolsfromR+18);
27   CROPCENT->metabc1\&.E\&.CK=*(sompoolsfromR+19);  
28   CROPCENT->metabc2\&.C\&.totalC=*(sompoolsfromR+20);
29   CROPCENT->metabc2\&.C\&.unlablTOlabl=*(sompoolsfromR+21);
30   CROPCENT->metabc2\&.E\&.CN=*(sompoolsfromR+22);
31   CROPCENT->metabc2\&.E\&.CP=*(sompoolsfromR+23);
32   CROPCENT->metabc2\&.E\&.CS=*(sompoolsfromR+24);
33   CROPCENT->metabc2\&.E\&.CK=*(sompoolsfromR+25);  
34   CROPCENT->wood1\&.C\&.totalC=*(sompoolsfromR+26);
35   CROPCENT->wood1\&.C\&.unlablTOlabl=*(sompoolsfromR+27);
36   CROPCENT->wood1\&.E\&.CN=*(sompoolsfromR+28);
37   CROPCENT->wood1\&.E\&.CP=*(sompoolsfromR+29);
38   CROPCENT->wood1\&.E\&.CS=*(sompoolsfromR+30);
39   CROPCENT->wood1\&.E\&.CK=*(sompoolsfromR+31);
40   CROPCENT->wood1\&.lignin=*(sompoolsfromR+32);  
41   CROPCENT->wood2\&.C\&.totalC=*(sompoolsfromR+33);
42   CROPCENT->wood2\&.C\&.unlablTOlabl=*(sompoolsfromR+34);
43   CROPCENT->wood2\&.E\&.CN=*(sompoolsfromR+35);
44   CROPCENT->wood2\&.E\&.CP=*(sompoolsfromR+36);
45   CROPCENT->wood2\&.E\&.CS=*(sompoolsfromR+37);
46   CROPCENT->wood2\&.E\&.CK=*(sompoolsfromR+38);
47   CROPCENT->wood2\&.lignin=*(sompoolsfromR+39);  
48   CROPCENT->wood3\&.C\&.totalC=*(sompoolsfromR+40);
49   CROPCENT->wood3\&.C\&.unlablTOlabl=*(sompoolsfromR+41);
50   CROPCENT->wood3\&.E\&.CN=*(sompoolsfromR+42);
51   CROPCENT->wood3\&.E\&.CP=*(sompoolsfromR+43);
52   CROPCENT->wood3\&.E\&.CS=*(sompoolsfromR+44);
53   CROPCENT->wood3\&.E\&.CK=*(sompoolsfromR+45);
54   CROPCENT->wood3\&.lignin=*(sompoolsfromR+46);  
55   CROPCENT->som1c1\&.C\&.totalC=*(sompoolsfromR+47);
56   CROPCENT->som1c1\&.C\&.unlablTOlabl=*(sompoolsfromR+48);
57   CROPCENT->som1c1\&.E\&.CN=*(sompoolsfromR+49);
58   CROPCENT->som1c1\&.E\&.CP=*(sompoolsfromR+50);
59   CROPCENT->som1c1\&.E\&.CS=*(sompoolsfromR+51);
60   CROPCENT->som1c1\&.E\&.CK=*(sompoolsfromR+52);  
61   CROPCENT->som1c2\&.C\&.totalC=*(sompoolsfromR+53);
62   CROPCENT->som1c2\&.C\&.unlablTOlabl=*(sompoolsfromR+54);
63   CROPCENT->som1c2\&.E\&.CN=*(sompoolsfromR+55);
64   CROPCENT->som1c2\&.E\&.CP=*(sompoolsfromR+56);
65   CROPCENT->som1c2\&.E\&.CS=*(sompoolsfromR+57);
66   CROPCENT->som1c2\&.E\&.CK=*(sompoolsfromR+58);  
67   CROPCENT->som2c1\&.C\&.totalC=*(sompoolsfromR+59);
68   CROPCENT->som2c1\&.C\&.unlablTOlabl=*(sompoolsfromR+60);
69   CROPCENT->som2c1\&.E\&.CN=*(sompoolsfromR+61);
70   CROPCENT->som2c1\&.E\&.CP=*(sompoolsfromR+62);
71   CROPCENT->som2c1\&.E\&.CS=*(sompoolsfromR+63);
72   CROPCENT->som2c1\&.E\&.CK=*(sompoolsfromR+64);  
73   CROPCENT->som2c2\&.C\&.totalC=*(sompoolsfromR+65);
74   CROPCENT->som2c2\&.C\&.unlablTOlabl=*(sompoolsfromR+66);
75   CROPCENT->som2c2\&.E\&.CN=*(sompoolsfromR+67);
76   CROPCENT->som2c2\&.E\&.CP=*(sompoolsfromR+68);
77   CROPCENT->som2c2\&.E\&.CS=*(sompoolsfromR+69);
78   CROPCENT->som2c2\&.E\&.CK=*(sompoolsfromR+70); 
79   CROPCENT->som3c\&.C\&.totalC=*(sompoolsfromR+71);
80   CROPCENT->som3c\&.C\&.unlablTOlabl=*(sompoolsfromR+72);
81   CROPCENT->som3c\&.E\&.CN=*(sompoolsfromR+73);
82   CROPCENT->som3c\&.E\&.CP=*(sompoolsfromR+74);
83   CROPCENT->som3c\&.E\&.CS=*(sompoolsfromR+75);
84   CROPCENT->som3c\&.E\&.CK=*(sompoolsfromR+76);
85   return;
86 }
.fi
.SS "void CROPCENTTimescaling (struct \fBcropcentlayer\fP *CROPCENT)"

.PP
.nf
419                                                         {
420 CROPCENT->strucc1\&.parms\&.k= timescaling(CROPCENT->strucc1\&.parms\&.k,CROPCENT->strucc1\&.parms\&.timestep);
421 CROPCENT->strucc2\&.parms\&.k= timescaling(CROPCENT->strucc2\&.parms\&.k,CROPCENT->strucc2\&.parms\&.timestep);
422 CROPCENT->metabc1\&.parms\&.k= timescaling(CROPCENT->metabc1\&.parms\&.k,CROPCENT->metabc1\&.parms\&.timestep);
423 CROPCENT->metabc2\&.parms\&.k= timescaling(CROPCENT->metabc2\&.parms\&.k,CROPCENT->metabc2\&.parms\&.timestep);
424 CROPCENT->wood1\&.parms\&.k= timescaling(CROPCENT->wood1\&.parms\&.k,CROPCENT->wood1\&.parms\&.timestep);
425 CROPCENT->wood2\&.parms\&.k= timescaling(CROPCENT->wood2\&.parms\&.k,CROPCENT->wood2\&.parms\&.timestep);
426 CROPCENT->wood3\&.parms\&.k= timescaling(CROPCENT->wood3\&.parms\&.k,CROPCENT->wood3\&.parms\&.timestep);
427 CROPCENT->som1c1\&.parms\&.k= timescaling(CROPCENT->som1c1\&.parms\&.k,CROPCENT->som1c1\&.parms\&.timestep);
428 CROPCENT->som2c1\&.parms\&.k= timescaling(CROPCENT->som2c1\&.parms\&.k,CROPCENT->som2c1\&.parms\&.timestep);
429 CROPCENT->som1c2\&.parms\&.k= timescaling(CROPCENT->som1c2\&.parms\&.k,CROPCENT->som1c2\&.parms\&.timestep);
430 CROPCENT->som2c2\&.parms\&.k= timescaling(CROPCENT->som2c2\&.parms\&.k,CROPCENT->som2c2\&.parms\&.timestep);
431 CROPCENT->som3c\&.parms\&.k= timescaling(CROPCENT->som3c\&.parms\&.k,CROPCENT->som3c\&.parms\&.timestep);
432   return;
433 }
.fi
.SS "void GetBioCroToCropcentParms (struct \fBBioCroToCropcentParms\fP *temp, double *getbiocrotocropcentparmsfromR)"

.PP
.nf
674                                                                                                          {
675   
676   temp->structometaSLOPE=-0\&.013;
677   temp->structometaINTERCEP=0\&.85;
678   temp->surfacedamrN=0\&.0;
679   temp->surfacedamrP=0\&.0;
680   temp->surfacedamrS=0\&.01;
681   temp->surfacedamrK=0\&.0;
682   temp->soildamrN=0\&.02;
683   temp->soildamrP=0\&.02;
684   temp->soildamrS=0\&.04;
685   temp->soildamrK=0\&.0;
686   temp->mindamrN=15\&.0;
687   temp->mindamrP=150\&.0;
688   temp->mindamrS=150\&.0;
689   temp->mindamrK=0\&.0;
690   temp->pabres=100;
691   return;
692 }
.fi
.SS "void GetC13Parms (struct \fBC13Parms\fP *temp, double *getc13parmsfromR)"

.PP
.nf
645 { 
646   temp->DRESP=0\&.999; 
647   temp->DLIGDF=-4\&.0;
648   return;
649 }
.fi
.SS "void GetCropCentStateVar (struct \fBcropcentEnvironment\fP *ENV, double *getcropcentstatevarfromR)"

.PP
.nf
448                                                                                            {
449   
450   ENV->minN=1e-6;
451   ENV->minP=5\&.0;
452   ENV->minS=5\&.0;
453   ENV->minK=5\&.0;
454   ENV->surfaceTEMP=25\&.0;
455   ENV->soilTEMP=25\&.0;
456   ENV->surfaceRELWC=0\&.3;
457   ENV->soilRELWC=0\&.3;
458   ENV->leachedWATER=0\&.0;
459   ENV->PET=0\&.8;
460   ENV->AWC=0\&.8;
461   ENV->soilrad=100\&.0; // check unit for this variable
462   ENV->pH=7\&.0;
463   ENV->drainage=0\&.5;
464   /***************************/
465   if(ENV->minN <1e-6) ENV->minN=1e-6;
466   /*****************************/
467   return;
468 }
.fi
.SS "void GetErosionParms (struct \fBErosionParms\fP *temp, double *geterosionparmsfromR)"

.PP
.nf
651                                                                             {
652   
653   temp->LHZF[0]=0\&.2; 
654   temp->LHZF[1]=0\&.4;
655   temp->LHZF[2]=0\&.8;
656   temp->EDEPTH=0\&.2; 
657   temp->ENRICH=2\&.0;
658   return;
659 }
.fi
.SS "void GetInFlowCERatio (struct \fBflowrestriction\fP *INFLOWRESTRICT, struct \fBminerals\fP *output, struct \fBcropcentEnvironment\fP *ENV)"

.PP
.nf
583                                                                                                                        {
584   /****************************************
585    * Purpose:
586    * This function calculates CE ratio of the flow structure flow nased on cropcent environment and restriction critera
587    * Input
588    * cropcent Environment ENV
589    * flow restriction criteria input
590    * OUTPUT
591    * flow structure output
592    * **************************************/
593    double temp;
594 
595         if(ENV->minN <= 0\&.0) // when mineral N is too low in the crocent environment
596         {
597           output->CN=INFLOWRESTRICT->maxCN;
598         }
599         if((ENV->minN > 0\&.0)&&(ENV->minN < INFLOWRESTRICT->minN)) // when mineral N is sufficient but lower than required to obtain MINIMUM CN ratio of flow
600         {
601           temp=(1\&.0-ENV->minN)/INFLOWRESTRICT->minN;
602           output->CN=temp*(INFLOWRESTRICT->maxCN-INFLOWRESTRICT->minCN)+INFLOWRESTRICT->minCN;
603         }
604         if(ENV->minN >= INFLOWRESTRICT->minN)// when mineral N of crocent environment is greater than what is required for min CN ratio of INFLOWRESTRICT
605         {
606           output->CN=INFLOWRESTRICT->minCN;
607         }
608   return;
609 }
.fi
.SS "void GetLeachingParms (struct \fBOrgLeachParms\fP *temp, double *getleachingparmsfromR)"

.PP
.nf
632 {
633   temp->DailyThresholdFlow=1\&.5;
634   temp->OMLEACH[0]=0\&.03;
635   temp->OMLEACH[1]=0\&.12;
636   temp->OMLEACH[2]=1\&.90; // is this same as threshold value of daily flow?
637   temp->som1c2toleach\&.CN=2\&.0;
638   temp->som1c2toleach\&.CP=35\&.0;
639   temp->som1c2toleach\&.CS=2\&.0;
640   temp->som1c2toleach\&.CK=2\&.0;// This need to be verified
641   return;
642 }
.fi
.SS "void GetSoilTexture (struct \fBSoilTexture\fP *temp, double *getsoiltexturefromR)"

.PP
.nf
661                                                                            {
662 /**************************************************************************
663 //  I am chaning it back to constant value to avoid error now as ther eis not pointer passed from R for now
664   temp->sand=*getsoiltexturefromR;
665   temp->silt=*(getsoiltexturefromR+1);
666   temp->clay=*(getsoiltexturefromR+2);
667   *************************************************************************/
668   temp->sand=0\&.33;
669   temp->silt=0\&.33;
670   temp->clay=0\&.34;
671   return;
672 }
.fi
.SS "void GetSymbNFixationParms (struct \fBSymbNFixationParms\fP *temp, double *getsymbnfixationparmsfromR)"

.PP
.nf
621 {//Rprintf("%f, %f, %f \n", *getsymbnfixationparmsfromR,*(getsymbnfixationparmsfromR+1),*(getsymbnfixationparmsfromR+2));
622   temp->FXMCA=-0\&.125;
623   temp->FXMCB=0\&.005;
624   temp->FXMXS=0\&.35;
625   temp->FXNPB=7\&.0;
626   temp->NSNFIX=0;
627   temp->NTSPM=4\&.0;
628   return;
629 }
.fi
.SS "void replaceMineralStruct (struct \fBminerals\fP *FROM, struct \fBminerals\fP *TO)"

.PP
.nf
611 {
612   TO->CN=FROM->CN;
613   TO->CP=FROM->CP;
614   TO->CS=FROM->CS;
615   TO->CK=FROM->CK;
616   return;
617 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for BioCro from the source code\&.
